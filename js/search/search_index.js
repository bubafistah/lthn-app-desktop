var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddAddressBook.html",[0,0.284,1,3.843]],["body/interfaces/AddAddressBook.html",[0,0.396,1,6.529,2,1.389,3,0.069,4,0.078,5,0.078,6,6.544,7,0.457,8,0.715,9,4.344,10,1.668,11,4.465,12,4.344,13,1.296,14,0.585,15,0.007,16,0.078,17,5.22,18,6.544,19,0.005,20,0.005]],["title/components/AddComponent.html",[21,0.767,22,1.531]],["body/components/AddComponent.html",[3,0.041,4,0.046,5,0.046,7,0.27,8,0.503,13,0.747,14,0.381,15,0.007,16,0.046,19,0.004,20,0.004,21,1.078,22,2.361,23,1.9,24,1.335,25,1.335,26,1.335,27,3.865,28,1.521,29,2.638,30,1.086,31,3.18,32,2.887,33,2.474,34,3.153,35,1.863,36,5.611,37,6.605,38,1.212,39,2.832,40,7.247,41,3.263,42,6.605,43,1.503,44,1.397,45,5.611,46,1.794,47,1.576,48,4.522,49,3.865,50,3.865,51,1.191,52,2.19,53,3.865,54,1.548,55,2.553,56,0.307,57,3.153,58,0.449,59,0.387,60,3.865,61,5.611,62,6.605,63,2.952,64,1.692,65,5.611,66,4.285,67,1.284,68,1.938,69,1.938,70,1.259,71,2.503,72,1.335,73,1.097,74,1.335,75,1.259,76,1.335,77,1.235,78,1.335,79,1.259,80,2.46,81,1.335,82,1.259,83,1.335,84,1.235,85,1.863,86,1.938,87,1.259,88,1.335,89,1.259,90,1.938,91,1.259,92,2.818,93,1.335,94,1.259,95,1.335,96,1.259,97,1.235,98,1.335,99,1.259,100,1.335,101,1.259,102,1.335,103,1.235,104,1.19,105,1.335,106,1.259,107,1.335,108,1.259,109,1.335,110,1.309,111,1.168,112,1.335,113,1.235,114,1.335,115,1.235,116,1.335,117,1.727,118,1.938,119,1.235,120,1.335,121,1.259,122,1.335,123,1.235,124,1.335,125,1.259,126,1.259,127,1.335,128,1.235,129,1.335,130,1.235,131,1.335,132,1.235,133,1.335,134,1.235,135,0.91,136,1.309,137,1.235,138,1.309,139,1.335]],["title/interfaces/Address.html",[0,0.284,9,2.276]],["body/interfaces/Address.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,9,4.628,13,1.194,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,140,7.179]],["title/components/AppComponent.html",[21,0.767,75,1.531]],["body/components/AppComponent.html",[3,0.017,4,0.02,5,0.02,7,0.114,8,0.252,10,0.661,11,0.811,13,0.859,14,0.522,15,0.007,16,0.02,19,0.002,20,0.002,21,0.605,22,0.531,23,0.952,24,0.563,25,0.563,26,0.563,28,0.762,29,1.481,30,0.458,31,2.886,32,2.606,33,1.845,35,0.934,38,0.607,39,1.724,43,0.64,44,1.484,46,1.74,47,1.529,51,1.308,52,1.333,55,1.306,56,0.578,58,0.189,59,0.163,64,1.231,67,0.541,68,0.971,69,0.971,70,0.531,71,1.523,72,0.563,73,1.071,74,0.563,75,1.437,76,0.563,77,0.521,78,0.563,79,0.531,80,2.21,81,0.563,82,0.531,83,0.563,84,0.521,85,0.934,86,0.971,87,0.531,88,0.563,89,0.531,90,0.971,91,0.531,92,2.544,93,0.563,94,0.531,95,0.563,96,0.531,97,0.521,98,0.563,99,0.531,100,0.563,101,0.531,102,0.563,103,0.521,104,0.502,105,0.563,106,0.531,107,0.563,108,0.531,109,0.563,110,0.552,111,0.492,112,0.563,113,0.521,114,0.563,115,0.521,116,0.563,117,0.866,118,0.971,119,0.521,120,0.563,121,0.531,122,0.563,123,0.521,124,0.563,125,0.531,126,0.531,127,0.563,128,0.521,129,0.563,130,0.521,131,0.563,132,0.521,133,0.563,134,0.521,135,0.384,136,0.552,137,0.521,138,0.552,139,0.563,141,0.835,142,1.629,143,3.708,144,1.4,145,3.708,146,2.811,147,3.052,148,2.539,149,3.708,150,5.443,151,3.708,152,2.425,153,3.3,154,3.708,155,3.708,156,3.708,157,4.411,158,2.436,159,2.672,160,3.3,161,2.811,162,2.383,163,4.411,164,2.884,165,4.411,166,4.411,167,1.451,168,4.585,169,6.292,170,4.411,171,2.626,172,4.411,173,4.455,174,4.55,175,4.07,176,3.402,177,2.895,178,5.487,179,3.408,180,2.811,181,2.811,182,3.926,183,2.811,184,2.811,185,2.026,186,1.925,187,0.843,188,2.811,189,1.629,190,2.299,191,2.325,192,2.299,193,1.925,194,6.164,195,2.811,196,1.629,197,2.811,198,1.629,199,1.629,200,1.629,201,1.629,202,1.838,203,2.026,204,2.026,205,2.811,206,1.623,207,1.629,208,2.299,209,2.811,210,2.502,211,2.811,212,1.925,213,1.629,214,2.425,215,1.629,216,1.629,217,3.3,218,1.629,219,3.408,220,1.629,221,1.629,222,1.629,223,2.127,224,1.629,225,2.082,226,1.629,227,1.629,228,3.708,229,1.174,230,2.811,231,1.629,232,1.629,233,1.245,234,1.451,235,3.708,236,2.811,237,0.665,238,1.174,239,1.066,240,1.333,241,1.245,242,0.916,243,0.948,244,1.066,245,0.983,246,1.629,247,1.629,248,0.983,249,1.022,250,1.174,251,0.731,252,1.245,253,1.174,254,3.886,255,1.451,256,1.451,257,1.629,258,1.629,259,1.696,260,1.629,261,1.245,262,1.116,263,1.333,264,2.811,265,1.629,266,2.832,267,3.708,268,1.451,269,1.451,270,0.948,271,1.978,272,1.451,273,2.502,274,2.502,275,2.299,276,2.811,277,0.983,278,0.983,279,1.451,280,1.451,281,1.451,282,1.451,283,2.811,284,0.971,285,1.629,286,1.629,287,1.629,288,1.629,289,1.629,290,2.811,291,1.629,292,1.629,293,1.629,294,1.629,295,1.629,296,1.629,297,0.475,298,1.629,299,1.629,300,1.629,301,1.629,302,1.629,303,1.629,304,1.629,305,2.811,306,1.629,307,3.708,308,2.327,309,1.629,310,1.629,311,1.838,312,1.629,313,1.629,314,1.629,315,1.629,316,1.629,317,1.451,318,1.451,319,1.629,320,0.819,321,1.629,322,2.299,323,2.811,324,2.811,325,2.147,326,1.925,327,2.811,328,5.443,329,2.811,330,2.811,331,2.811,332,2.811,333,2.811,334,2.811,335,1.451,336,1.451,337,1.629,338,2.348,339,1.629,340,2.299,341,2.147,342,1.333,343,1.629,344,1.629,345,1.629,346,1.629,347,2.502,348,1.629,349,1.629,350,1.629,351,1.629,352,1.629,353,1.629,354,1.629,355,1.629,356,5.192,357,2.502,358,1.629,359,1.629,360,2.811,361,2.502,362,1.629,363,1.629,364,1.629,365,1.629,366,1.451,367,1.629,368,1.629,369,1.333,370,1.629,371,3.032,372,1.333,373,1.629,374,2.502,375,1.629,376,1.629,377,1.629,378,1.022,379,1.333,380,1.629,381,1.333,382,1.629,383,1.629,384,1.629,385,1.174,386,2.502,387,1.629,388,1.629]],["title/injectables/AppConfigService.html",[179,3.217,389,1.394]],["body/injectables/AppConfigService.html",[3,0.035,4,0.04,5,0.04,7,0.233,8,0.451,10,1.203,13,1.263,14,0.576,15,0.007,16,0.04,19,0.003,20,0.003,38,1.087,43,0.759,44,1.618,46,2.314,47,2.383,51,1.726,52,1.009,56,0.481,58,0.387,59,0.334,73,1.121,135,1.427,147,2.285,162,3.332,179,3.446,187,1.535,223,1.967,225,1.276,254,4.278,270,1.941,271,2.257,275,2.729,277,2.013,278,3.035,284,2.093,297,0.972,320,2.217,389,1.493,390,1.497,391,8.993,392,2.97,393,5.977,394,4.955,395,4.957,396,4.955,397,6.059,398,4.149,399,6.059,400,3.962,401,6.747,402,5.033,403,5.033,404,6.747,405,6.747,406,5.033,407,2.97,408,3.924,409,5.033,410,3.627,411,3.337,412,2.182,413,5.033,414,3.387,415,7.24,416,3.337,417,7.24,418,5.033,419,3.337,420,3.103,421,3.337,422,3.337,423,5.033,424,3.337,425,5.518,426,3.337,427,7.24,428,3.337,429,3.337,430,3.337,431,3.337,432,3.337,433,2.97,434,2.97,435,2.182,436,2.092,437,1.76,438,1.76,439,3.337,440,1.394,441,2.97,442,3.337,443,3.337,444,3.337,445,3.337,446,2.97,447,2.182,448,3.337,449,3.337,450,2.97,451,4.366,452,4.48,453,3.337,454,3.337,455,2.729,456,3.337,457,3.337,458,3.337,459,3.337,460,3.337,461,3.337,462,3.337,463,3.337,464,3.337,465,3.337,466,3.337,467,3.337,468,2.013,469,3.337,470,3.337]],["title/modules/AppModule.html",[471,1.76,472,3.589]],["body/modules/AppModule.html",[3,0.043,4,0.049,5,0.049,15,0.007,16,0.082,19,0.004,20,0.004,32,1.212,56,0.77,58,0.474,59,0.409,75,2.962,92,1.331,135,0.962,206,1.788,210,3.636,217,3.636,225,1.563,234,3.636,238,4.207,239,2.671,242,3.282,243,2.376,251,1.832,263,4.775,320,1.701,395,2.797,472,7.292,473,1.439,474,2.496,475,3.636,476,3.636,477,3.636,478,3.636,479,3.636,480,5.895,481,5.349,482,5.349,483,5.895,484,5.895,485,4.574,486,6.248,487,2.619,488,1.788,489,1.632,490,3.636,491,2.332,492,3.282,493,2.187,494,4.459,495,2.187,496,2.282,497,1.499,498,3.636,499,5.839,500,4.085,501,5.839,502,4.11,503,5.839,504,2.464,505,4.085,506,4.085,507,5.839,508,3.661,509,2.561,510,4.775,511,3.341,512,3.998,513,2.797,514,4.207,515,2.944,516,5.197,517,3.636,518,3.282,519,2.296,520,4.459,521,3.12,522,3.661,523,2.464,524,2.376,525,4.085,526,3.636,527,3.341,528,5.839,529,4.085,530,3.636,531,4.459,532,2.944,533,5.197,534,5.197,535,3.341,536,4.085,537,3.636,538,3.636,539,2.464,540,3.341,541,4.085,542,3.661,543,3.636,544,4.085,545,6.065,546,4.085,547,4.085,548,1.357,549,3.341,550,4.085,551,4.085,552,5.197,553,4.085,554,3.636,555,3.636,556,4.085,557,4.085,558,4.085,559,4.085,560,4.085,561,3.341,562,4.085]],["title/modules/AppRoutingModule.html",[471,1.76,480,3.386]],["body/modules/AppRoutingModule.html",[3,0.054,4,0.061,5,0.082,11,2.542,15,0.007,16,0.061,19,0.005,20,0.005,21,0.833,32,2.021,56,0.722,58,0.593,59,0.512,97,2.178,152,3.339,171,2.694,225,2.606,237,2.085,277,3.079,297,1.488,311,3.339,322,4.176,378,3.202,438,2.694,473,2.4,474,2.912,480,6.804,487,3.055,488,2.235,489,2.039,492,2.87,493,2.552,494,3.9,495,2.552,526,7.281,548,1.696,561,4.176,563,4.545,564,4.545,565,6.316,566,6.316,567,6.316,568,6.316,569,5.106,570,3.079,571,3.489,572,4.45,573,5.106,574,5.106,575,5.106,576,5.106,577,5.106,578,4.272,579,3.496,580,3.392,581,5.6,582,4.545,583,4.176,584,4.109,585,5.106,586,5.106,587,5.106,588,5.106,589,4.545,590,5.106,591,5.106,592,3.9,593,3.9,594,5.106,595,4.545,596,2.235,597,4.545,598,5.106,599,5.106,600,3.9]],["title/interfaces/AppState.html",[0,0.284,601,4.183]],["body/interfaces/AppState.html",[0,0.291,2,1.022,3,0.051,4,0.058,5,0.058,7,0.336,8,0.587,13,0.872,14,0.585,15,0.007,16,0.1,19,0.004,20,0.004,33,1.378,56,0.723,80,2.754,111,2.664,135,1.134,176,2.54,225,2.505,245,2.904,297,2.168,320,1.403,400,5.765,542,3.019,601,5.829,602,4.286,603,7.435,604,6.036,605,4.546,606,7.442,607,7.442,608,7.442,609,7.442,610,7.442,611,7.442,612,6.624,613,6.549,614,6.549,615,4.286,616,4.286,617,4.815,618,4.815,619,6.549,620,4.286,621,4.286,622,3.47,623,4.815,624,4.815,625,4.815,626,4.286,627,4.815,628,4.815,629,4.815,630,4.815,631,4.815,632,4.815,633,5.829,634,5.829,635,3.678,636,4.286,637,4.719,638,4.815,639,6.549,640,3.938,641,4.815,642,4.815,643,4.815,644,4.286,645,3.938,646,4.286,647,3.938,648,3.297,649,4.815,650,4.815,651,4.815]],["title/guards/AuthGuard.html",[578,2.946,652,4.183]],["body/guards/AuthGuard.html",[3,0.044,4,0.05,5,0.05,7,0.293,10,0.749,13,0.56,14,0.285,15,0.007,16,0.05,19,0.004,20,0.004,28,1.139,38,1.286,43,1.355,44,1.081,51,1.598,55,1.48,56,0.598,58,0.488,59,0.421,64,1.839,73,0.698,111,2.276,158,2.438,162,3.029,167,3.739,168,5.653,187,0.956,212,4.078,223,1.642,225,2.647,237,1.715,254,3.348,270,2.443,271,2.671,277,2.533,278,2.533,284,2.39,320,2.016,389,1.767,408,4.379,435,2.747,436,2.634,468,4.174,489,2.379,539,5.121,542,3.735,578,3.735,581,5.653,597,5.302,637,3.027,647,4.871,653,4.201,654,4.201,655,5.653,656,4.339,657,4.201,658,4.201,659,5.956,660,6.702,661,5.302,662,5.751,663,5.302,664,5.399,665,5.302,666,4.721,667,5.956,668,4.549,669,5.302,670,5.956,671,4.871,672,5.956,673,5.956,674,5.302,675,5.956,676,5.956,677,5.956,678,5.302,679,5.956,680,5.956,681,5.302,682,3.895,683,5.956,684,5.302,685,4.871,686,5.956,687,5.956,688,5.302,689,5.956,690,5.956,691,5.956,692,5.302,693,3.739,694,2.747,695,4.201,696,3.435,697,4.201,698,7.949,699,3.739,700,4.201,701,3.739,702,4.201,703,4.201,704,4.201,705,4.201,706,4.201]],["title/modules/AuthModule.html",[471,1.76,481,3.073]],["body/modules/AuthModule.html",[3,0.061,4,0.07,5,0.07,15,0.007,16,0.07,19,0.005,20,0.005,56,0.756,58,0.676,59,0.583,97,3.077,206,2.548,242,3.272,243,3.385,251,2.611,473,2.051,474,3.172,481,6.171,485,5.283,487,3.328,488,2.548,489,2.325,491,2.964,493,2.779,495,2.779,496,2.9,497,2.136,508,4.653,509,3.65,518,4.17,519,3.272,596,3.248,707,5.182,708,5.182,709,5.182,710,5.821,711,5.821,712,5.821,713,4.17,714,3.272,715,6.068,716,5.667,717,3.071,718,5.667,719,4.446,720,7.42]],["title/injectables/AuthService.html",[389,1.394,539,2.834]],["body/injectables/AuthService.html",[3,0.031,4,0.035,5,0.067,7,0.205,8,0.409,10,0.814,13,1.04,14,0.491,15,0.007,16,0.035,19,0.003,20,0.004,34,2.564,38,0.985,43,1.038,44,1.455,46,1.789,47,1.572,51,1.603,52,0.887,55,1.972,56,0.501,58,0.341,59,0.294,73,1.048,111,2.423,147,1.895,158,2.887,162,2.45,176,2.407,179,2.01,187,1.038,206,1.285,223,1.783,225,1.123,251,1.317,252,2.242,253,2.116,254,2.564,262,3.124,270,1.707,271,2.046,284,1.576,297,0.855,308,1.549,320,2.2,342,3.731,389,1.354,390,1.317,393,3.832,398,3.124,412,1.92,414,3.016,437,1.549,438,1.549,441,2.613,446,2.613,468,1.771,539,2.752,548,2.722,581,3.832,640,5.917,661,4.061,664,2.984,665,5.618,666,3.509,669,5.618,671,3.731,678,4.061,682,2.984,685,5.161,721,2.936,722,3.403,723,5.596,724,6.311,725,6.311,726,2.613,727,5.214,728,5.441,729,2.936,730,2.936,731,4.563,732,4.061,733,2.984,734,4.563,735,4.563,736,5.161,737,4.563,738,3.731,739,3.288,740,3.731,741,4.061,742,4.563,743,4.563,744,4.563,745,4.563,746,4.563,747,4.563,748,4.061,749,2.936,750,2.936,751,4.563,752,3.838,753,2.936,754,4.563,755,4.563,756,3.731,757,4.563,758,3.485,759,4.061,760,5.526,761,4.563,762,4.563,763,3.731,764,4.563,765,4.563,766,4.563,767,4.563,768,4.563,769,2.936,770,4.061,771,4.563,772,4.563,773,4.563,774,4.563,775,2.936,776,2.116,777,5.596,778,4.537,779,5.596,780,2.936,781,2.936,782,2.401,783,2.242,784,2.116,785,2.936,786,5.596,787,2.936,788,5.596,789,2.936,790,2.936,791,4.82,792,2.936,793,2.936,794,4.061,795,2.936,796,2.936,797,4.563,798,4.563,799,2.936,800,2.936,801,2.401,802,2.116,803,2.116,804,2.242,805,3.288,806,2.401,807,2.01,808,2.613,809,2.936,810,2.936,811,2.613,812,2.936,813,2.116,814,2.242,815,2.936,816,1.92,817,2.936,818,2.936,819,2.936,820,2.936,821,2.936,822,2.936,823,2.401,824,4.563,825,2.613]],["title/interfaces/Balance.html",[0,0.284,826,3.073]],["body/interfaces/Balance.html",[0,0.394,2,1.382,3,0.069,4,0.078,5,0.078,7,0.454,8,0.713,14,0.54,15,0.007,16,0.078,19,0.005,20,0.005,33,1.862,54,2.578,262,4.456,826,6.185,827,6.508,828,8.952,829,4.627,830,4.627,831,5.323,832,5.203,833,4.456,834,6.508,835,6.508,836,7.082,837,6.508,838,6.508,839,6.508,840,6.508,841,3.334,842,5.323,843,6.508,844,5.323]],["title/injectables/BaseChartConfigService.html",[389,1.394,845,3.843]],["body/injectables/BaseChartConfigService.html",[3,0.041,4,0.046,5,0.046,7,0.271,8,0.504,10,0.692,13,0.749,14,0.576,15,0.007,16,0.046,19,0.004,20,0.004,38,1.215,43,1.505,44,1.541,46,2.32,47,2.039,51,1.405,52,2,55,2.992,56,0.308,58,0.45,59,0.389,67,1.868,73,0.644,147,3.049,186,3.851,187,0.882,225,2.777,284,2.507,389,1.669,390,1.739,392,3.452,414,2.643,437,2.046,548,2.198,622,6.238,778,4.551,845,4.599,846,8.656,847,3.043,848,5.006,849,6.461,850,5.936,851,3.878,852,5.006,853,4.079,854,3.878,855,5.006,856,3.878,857,3.878,858,5.006,859,3.878,860,3.878,861,5.006,862,5.006,863,4.295,864,5.006,865,5.006,866,5.006,867,5.006,868,5.006,869,4.599,870,5.006,871,5.006,872,5.006,873,4.295,874,4.295,875,5.006,876,5.006,877,5.006,878,5.006,879,5.006,880,5.006,881,4.599,882,6.461,883,6.461,884,5.006,885,4.599,886,5.006,887,5.006,888,3.878,889,3.878,890,3.878,891,3.878,892,5.624]],["title/components/BlockDetailsComponent.html",[21,0.767,84,1.502]],["body/components/BlockDetailsComponent.html",[3,0.031,4,0.035,5,0.035,7,0.207,8,0.412,10,0.529,13,0.845,14,0.493,15,0.007,16,0.035,19,0.003,20,0.003,21,0.919,22,0.966,23,1.557,24,1.024,25,1.024,26,1.024,28,1.246,29,2.249,30,0.833,31,3.11,32,2.82,33,2.168,35,1.527,38,0.993,39,2.48,41,2.674,43,0.675,44,1.422,46,0.948,47,0.833,51,0.976,52,1.39,55,1.045,56,0.504,57,2.584,58,0.344,59,0.297,67,0.985,68,1.588,69,1.588,70,0.966,71,2.191,72,1.024,73,1.054,74,1.024,75,0.966,76,1.024,77,0.948,78,1.024,79,0.966,80,2.571,81,1.024,82,0.966,83,1.024,84,2.028,85,2.517,86,1.588,87,0.966,88,1.024,89,0.966,90,1.588,91,0.966,92,2.62,93,1.024,94,0.966,95,1.024,96,0.966,97,0.948,98,1.024,99,0.966,100,1.024,101,0.966,102,1.024,103,0.948,104,0.913,105,1.024,106,0.966,107,1.024,108,0.966,109,1.024,110,1.004,111,0.896,112,1.024,113,0.948,114,1.024,115,0.948,116,1.024,117,1.416,118,1.588,119,0.948,120,1.024,121,0.966,122,1.024,123,0.948,124,1.024,125,0.966,126,0.966,127,1.024,128,0.948,129,1.024,130,0.948,131,1.024,132,0.948,133,1.024,134,0.948,135,0.698,136,1.004,137,0.948,138,1.004,139,1.024,159,4.058,162,2.465,164,4.149,174,5.218,177,3.69,187,0.675,219,3.856,248,1.788,249,1.859,271,1.33,297,0.864,440,1.239,548,0.985,722,3.418,893,2.965,894,3.856,895,4.093,896,4.093,897,5.013,898,5.632,899,2.137,900,4.598,901,2.965,902,2.965,903,4.058,904,2.965,905,2.965,906,2.965,907,2.965,908,2.425,909,2.965,910,2.965,911,2.965,912,2.965,913,2.965,914,2.965,915,2.64,916,3.76,917,4.598,918,3.76,919,4.598,920,4.598,921,2.64,922,3.76,923,4.598,924,4.093,925,4.598,926,3.148,927,4.598,928,4.598,929,4.093,930,4.598,931,4.093,932,3.76,933,4.598,934,4.598,935,4.598,936,4.598,937,4.598,938,4.598,939,4.598,940,4.598,941,4.598,942,2.64]],["title/interfaces/BlockHeader.html",[0,0.284,903,3.386]],["body/interfaces/BlockHeader.html",[0,0.327,2,1.148,3,0.057,4,0.065,5,0.065,7,0.377,8,0.634,13,1.187,14,0.65,15,0.007,16,0.065,19,0.005,20,0.005,54,2.742,223,3.083,338,3.947,903,5.1,943,5.409,944,7.448,945,7.448,946,6.842,947,5.729,948,7.448,949,7.448,950,7.448,951,7.448,952,7.448,953,7.448,954,6.842,955,6.39]],["title/components/BlockLedgerComponent.html",[21,0.767,87,1.531]],["body/components/BlockLedgerComponent.html",[3,0.02,4,0.022,5,0.022,7,0.13,8,0.282,10,0.858,14,0.493,15,0.007,16,0.022,19,0.002,20,0.002,21,0.667,22,0.605,23,1.064,24,1.086,25,0.641,26,0.641,28,0.852,29,1.632,30,0.522,31,2.943,32,2.661,33,1.78,35,1.044,38,0.679,39,1.879,43,0.715,44,1.485,46,2.867,47,2.499,51,1.24,52,1.453,54,2.052,55,2.401,56,0.542,58,0.216,59,0.186,64,1.376,67,0.617,68,1.086,69,1.086,70,0.605,71,1.661,72,0.641,73,1.495,74,0.641,75,0.605,76,0.641,77,0.594,78,0.641,79,0.605,80,2.32,81,0.641,82,0.605,83,0.641,84,0.594,85,2.342,86,1.086,87,1.567,88,0.641,89,0.605,90,1.086,91,0.605,92,2.221,93,0.641,94,0.605,95,0.641,96,0.605,97,0.594,98,0.641,99,0.605,100,0.641,101,0.605,102,0.641,103,0.594,104,0.572,105,0.641,106,0.605,107,0.641,108,0.605,109,0.641,110,0.629,111,0.561,112,0.641,113,0.594,114,0.641,115,0.594,116,0.641,117,0.968,118,1.086,119,0.594,120,0.641,121,0.605,122,0.641,123,0.594,124,0.641,125,0.605,126,0.605,127,0.641,128,0.594,129,0.641,130,0.594,131,0.641,132,0.594,133,0.641,134,0.594,135,0.74,136,0.629,137,0.594,138,0.629,139,0.641,147,1.384,148,2.798,158,1.895,159,2.945,162,2.557,164,3.145,177,2.797,187,1.094,206,0.813,212,2.798,214,2.673,219,2.798,225,3.272,229,2.265,233,1.418,248,1.12,249,1.164,250,1.338,251,1.41,255,1.653,256,1.653,266,2.401,271,2.157,284,2.017,318,3.638,338,1.928,361,3.638,393,2.152,492,1.767,548,0.617,595,2.798,668,1.418,694,2.055,717,0.98,722,1.565,770,7.761,842,1.519,853,1.044,894,2.798,899,1.338,903,2.945,908,1.519,916,2.571,918,2.571,922,2.571,929,2.798,931,2.798,932,2.571,944,2.798,945,2.798,946,2.571,947,3.293,948,2.798,949,2.798,950,4.281,951,2.798,952,2.798,953,2.798,954,2.571,955,2.401,956,1.857,957,2.798,958,3.143,959,3.143,960,4.087,961,2.9,962,3.638,963,5.199,964,3.638,965,4.087,966,3.342,967,4.087,968,4.281,969,3.143,970,3.143,971,3.143,972,6.222,973,3.143,974,1.857,975,1.857,976,1.857,977,3.143,978,1.857,979,3.143,980,1.857,981,3.143,982,1.857,983,3.143,984,3.143,985,3.145,986,3.143,987,3.143,988,4.281,989,3.143,990,1.857,991,1.857,992,3.145,993,1.857,994,1.857,995,1.857,996,3.638,997,3.143,998,1.857,999,2.798,1000,2.571,1001,2.571,1002,2.571,1003,1.857,1004,1.857,1005,1.857,1006,3.143,1007,1.857,1008,1.857,1009,1.519,1010,1.271,1011,1.857,1012,1.857,1013,1.857,1014,1.857,1015,1.857,1016,1.857,1017,1.857,1018,1.857,1019,3.342,1020,1.653,1021,1.653,1022,3.638,1023,1.338,1024,2.401,1025,1.418,1026,1.653,1027,2.798,1028,1.653,1029,4.087,1030,1.857,1031,1.857,1032,1.857,1033,2.571,1034,3.143,1035,4.087,1036,2.571,1037,1.857,1038,1.857,1039,1.857,1040,1.857,1041,1.857,1042,1.857,1043,1.857,1044,1.857,1045,1.653,1046,1.857,1047,1.857,1048,1.857,1049,1.857,1050,1.857,1051,2.401,1052,3.933,1053,3.143,1054,2.401]],["title/components/BlockTransactionsComponent.html",[21,0.767,89,1.531]],["body/components/BlockTransactionsComponent.html",[3,0.041,4,0.046,5,0.046,7,0.269,14,0.261,15,0.007,16,0.046,19,0.004,20,0.004,21,1.076,22,1.255,23,1.896,24,1.33,25,1.33,26,1.33,30,1.082,31,3.179,32,2.887,33,2.367,35,1.859,41,3.255,44,0.699,56,0.306,57,3.146,58,0.447,59,0.386,67,1.28,68,1.933,69,1.933,70,1.255,71,2.499,72,1.33,73,1.095,74,1.33,75,1.255,76,1.33,77,1.231,78,1.33,79,1.255,80,2.645,81,1.33,82,1.255,83,1.33,84,1.231,85,2.816,86,1.933,87,1.255,88,1.33,89,2.358,90,1.933,91,1.255,92,2.816,93,1.33,94,1.255,95,1.33,96,1.255,97,1.231,98,1.33,99,1.255,100,1.33,101,1.255,102,1.33,103,1.231,104,1.186,105,1.33,106,1.255,107,1.33,108,1.255,109,1.33,110,1.305,111,1.164,112,1.33,113,1.231,114,1.33,115,1.231,116,1.33,117,1.723,118,1.933,119,1.231,120,1.33,121,1.255,122,1.33,123,1.231,124,1.33,125,1.255,126,1.255,127,1.33,128,1.231,129,1.33,130,1.231,131,1.33,132,1.231,133,1.33,134,1.231,135,0.907,136,1.305,137,1.231,138,1.305,139,1.33,147,1.305,174,5.142,897,5.869,916,5.918,921,3.429,924,4.982,926,3.833,942,3.429,954,4.578,1055,3.852,1056,5.778,1057,4.982,1058,3.852,1059,5.597,1060,5.597,1061,5.597,1062,5.597,1063,5.597,1064,3.852,1065,3.852,1066,5.597,1067,5.918,1068,3.852,1069,3.852]],["title/components/BlockchainComponent.html",[21,0.767,77,1.502]],["body/components/BlockchainComponent.html",[3,0.034,4,0.038,5,0.038,7,0.223,8,0.437,10,0.57,13,0.649,14,0.569,15,0.007,16,0.038,19,0.003,20,0.003,21,0.963,22,1.042,23,1.65,24,1.104,25,1.104,26,1.104,30,0.898,31,3.131,32,2.841,33,2.227,35,1.618,38,1.052,39,2.58,43,0.727,44,1.548,46,1.887,47,1.659,51,0.679,54,2.314,55,2.326,56,0.564,58,0.371,59,0.32,66,3.721,67,1.062,68,1.683,69,1.683,70,1.042,71,2.28,72,1.104,73,1.097,74,1.104,75,1.042,76,1.104,77,2.11,78,1.104,79,1.042,80,2.726,81,1.104,82,1.042,83,1.104,84,1.022,85,1.618,86,1.683,87,1.042,88,1.104,89,1.042,90,1.683,91,1.042,92,2.679,93,1.104,94,1.042,95,1.104,96,1.042,97,1.022,98,1.104,99,1.042,100,1.104,101,1.042,102,1.104,103,1.022,104,0.984,105,1.104,106,1.042,107,1.104,108,1.042,109,1.104,110,1.083,111,0.966,112,1.104,113,1.022,114,1.104,115,1.022,116,1.104,117,1.5,118,1.683,119,1.022,120,1.104,121,1.042,122,1.104,123,1.022,124,1.104,125,1.042,126,1.042,127,1.104,128,1.022,129,1.104,130,1.022,131,1.104,132,1.022,133,1.104,134,1.022,135,0.753,136,1.083,137,1.022,138,1.083,139,1.104,147,1.65,148,4.042,162,2.584,174,2.738,177,4.132,187,0.727,214,3.86,249,2.005,250,2.304,325,3.721,717,1.687,899,2.304,903,4.254,908,2.615,961,3.56,962,5.254,966,4.827,985,3.186,992,3.86,1033,4.827,1036,4.827,1054,3.721,1070,3.197,1071,4.872,1072,5.903,1073,5.903,1074,4.872,1075,3.197,1076,3.197,1077,3.197,1078,3.197,1079,3.197,1080,3.197,1081,4.317,1082,3.197,1083,3.197,1084,3.197,1085,2.091,1086,4.872,1087,3.197,1088,4.872,1089,4.337,1090,4.872,1091,3.721,1092,4.872,1093,4.337,1094,4.337,1095,4.872,1096,3.197,1097,3.186,1098,4.872,1099,3.985,1100,3.197]],["title/components/BlockchainConfigComponent.html",[21,0.767,79,1.531]],["body/components/BlockchainConfigComponent.html",[3,0.039,4,0.044,5,0.065,7,0.256,8,0.484,10,0.655,13,0.489,14,0.48,15,0.007,16,0.044,19,0.004,20,0.004,21,1.047,22,1.197,23,1.831,24,1.269,25,1.269,26,1.269,30,1.032,31,3.167,32,2.875,33,2.332,35,1.795,38,1.168,43,0.836,44,1.368,46,1.174,47,1.032,51,1.147,56,0.599,58,0.426,59,0.368,67,1.22,68,1.867,69,1.867,70,1.197,71,2.443,72,1.269,73,1.175,74,1.269,75,1.197,76,1.269,77,1.174,78,1.269,79,2.305,80,2.814,81,1.269,82,1.197,83,1.269,84,1.174,85,1.795,86,1.867,87,1.197,88,1.269,89,1.197,90,1.867,91,1.197,92,2.782,93,1.269,94,1.197,95,1.269,96,1.197,97,1.174,98,1.269,99,1.197,100,1.269,101,1.197,102,1.269,103,1.174,104,1.131,105,1.269,106,1.197,107,1.269,108,1.197,109,1.269,110,1.244,111,1.11,112,1.269,113,1.174,114,1.269,115,1.174,116,1.269,117,1.664,118,1.867,119,1.174,120,1.269,121,1.197,122,1.269,123,1.174,124,1.269,125,1.197,126,1.197,127,1.269,128,1.174,129,1.269,130,1.174,131,1.269,132,1.174,133,1.269,134,1.174,135,0.865,136,1.244,137,1.174,138,1.244,139,1.269,147,2.553,158,1.904,162,3.452,171,1.938,174,3.038,177,4.385,187,0.836,206,1.608,249,2.303,251,1.647,271,2.424,395,5.399,408,4.114,410,4.622,435,2.402,436,2.303,728,5.098,783,2.805,784,2.647,813,2.647,814,2.805,899,2.647,1085,2.402,1101,3.673,1102,5.406,1103,6.297,1104,5.403,1105,6.414,1106,5.406,1107,3.673,1108,3.673,1109,3.673,1110,3.673,1111,3.673,1112,3.673,1113,3.673,1114,5.406,1115,3.673,1116,3.004,1117,3.673,1118,3.673,1119,5.406]],["title/modules/BlockchainModule.html",[471,1.76,1120,3.386]],["body/modules/BlockchainModule.html",[3,0.045,4,0.051,5,0.051,15,0.006,16,0.051,19,0.004,20,0.004,56,0.777,58,0.496,59,0.429,77,2.931,79,2.706,82,2.706,84,2.655,87,2.706,89,2.706,206,1.872,237,1.746,242,3.39,243,2.487,251,2.705,473,1.507,474,2.579,482,5.431,485,4.83,487,2.705,488,1.872,489,1.708,491,2.409,492,2.404,493,2.259,495,2.259,496,2.357,497,1.569,508,3.782,509,2.681,512,4.13,513,2.928,514,4.347,515,3.082,516,5.369,517,3.807,518,3.39,519,2.404,520,4.607,521,3.266,522,3.782,523,2.579,524,2.487,531,4.607,532,3.082,533,5.369,535,3.497,571,3.089,596,2.64,713,3.39,714,2.404,715,4.933,716,4.607,717,2.256,718,4.607,719,3.266,1010,2.928,1120,6.952,1121,3.807,1122,3.807,1123,3.807,1124,3.807,1125,5.984,1126,4.276,1127,4.276,1128,4.276,1129,4.933,1130,3.782,1131,3.266,1132,4.347,1133,4.276,1134,6.032,1135,3.497,1136,5.369,1137,3.497,1138,3.807,1139,4.933,1140,3.497,1141,3.497,1142,6.032,1143,5.369,1144,6.032,1145,4.347,1146,5.369,1147,5.369,1148,6.032,1149,3.807,1150,4.276,1151,4.276,1152,4.276,1153,4.276]],["title/modules/BlockchainRoutingModule.html",[471,1.76,565,3.386]],["body/modules/BlockchainRoutingModule.html",[3,0.063,4,0.072,5,0.072,11,3.777,15,0.007,16,0.072,19,0.005,20,0.005,21,1.238,56,0.728,58,0.7,59,0.604,77,2.425,80,1.927,84,2.425,152,4.961,171,4.002,237,2.462,284,2.62,297,1.756,311,4.961,473,2.124,491,2.408,492,3.388,493,2.258,495,2.842,496,2.965,497,2.212,548,2.52,565,5.467,570,3.636,571,3.886,572,4.517,578,5.463,579,4.128,580,3.777,596,2.639,655,5.195,1149,5.366,1154,6.028,1155,6.028,1156,6.028,1157,7.587,1158,7.587,1159,7.587,1160,3.388]],["title/injectables/BlockchainService.html",[177,2.733,389,1.394]],["body/injectables/BlockchainService.html",[3,0.035,4,0.04,5,0.073,7,0.233,8,0.452,10,1.293,13,1.163,14,0.585,15,0.007,16,0.073,19,0.003,20,0.003,38,1.089,43,0.761,44,1.564,46,1.07,47,0.94,51,1.768,54,2.103,56,0.605,58,0.388,59,0.335,73,1.204,80,2.16,135,1.591,147,2.055,148,4.156,162,3.823,177,2.933,187,1.649,271,3.03,297,1.968,308,3.824,320,2.426,389,1.496,390,1.501,412,4.418,437,1.765,438,1.765,440,1.398,447,4.418,502,4.075,504,2.018,539,2.018,540,2.737,548,1.675,739,4.869,801,4.124,802,5.224,803,5.224,804,5.536,805,2.411,808,2.979,833,2.291,847,3.742,947,2.291,968,4.489,1019,2.737,1033,4.963,1036,5.928,1161,3.346,1162,5.043,1163,6.756,1164,6.756,1165,5.043,1166,6.756,1167,5.043,1168,6.756,1169,6.756,1170,2.411,1171,5.043,1172,3.162,1173,5.043,1174,6.069,1175,4.963,1176,3.346,1177,5.043,1178,3.346,1179,3.346,1180,6.756,1181,4.489,1182,5.043,1183,3.346,1184,5.043,1185,5.043,1186,3.346,1187,3.346,1188,5.043,1189,3.346,1190,5.043,1191,3.346,1192,3.346,1193,5.536,1194,2.979,1195,2.737,1196,5.16,1197,5.16,1198,3.346,1199,3.346,1200,6.014,1201,6.014,1202,6.756,1203,3.346,1204,3.346,1205,3.346,1206,3.346,1207,2.979,1208,2.979,1209,3.346,1210,5.043,1211,3.346,1212,3.346,1213,3.346,1214,3.346,1215,3.346,1216,3.346]],["title/components/BlockchainStatsComponent.html",[21,0.767,82,1.531]],["body/components/BlockchainStatsComponent.html",[3,0.031,4,0.036,5,0.036,7,0.207,8,0.412,10,0.529,14,0.383,15,0.007,16,0.036,19,0.003,20,0.003,21,0.92,22,0.967,23,1.559,24,1.025,25,1.025,26,1.025,30,0.834,31,3.11,32,2.82,33,2.169,35,1.529,43,0.675,44,1.023,54,1.27,56,0.448,58,0.345,59,0.298,67,0.986,68,1.59,69,1.59,70,0.967,71,2.193,72,1.025,73,1.055,74,1.025,75,0.967,76,1.025,77,0.949,78,1.025,79,0.967,80,2.676,81,1.025,82,2.069,83,1.025,84,0.949,85,1.529,86,1.59,87,0.967,88,1.025,89,0.967,90,1.59,91,0.967,92,2.621,93,1.025,94,0.967,95,1.025,96,0.967,97,0.949,98,1.025,99,0.967,100,1.025,101,0.967,102,1.025,103,0.949,104,0.914,105,1.025,106,0.967,107,1.025,108,0.967,109,1.025,110,1.005,111,0.897,112,1.025,113,0.949,114,1.025,115,0.949,116,1.025,117,1.417,118,1.59,119,0.949,120,1.025,121,0.967,122,1.025,123,0.949,124,1.025,125,0.967,126,0.967,127,1.025,128,0.949,129,1.025,130,0.949,131,1.025,132,0.949,133,1.025,134,0.949,135,0.699,136,1.005,137,0.949,138,1.005,139,1.025,147,1.559,148,3.859,174,5.403,177,3.996,187,0.675,214,3.686,249,1.862,250,2.14,899,2.14,918,3.764,922,3.764,932,3.764,1051,4.849,1085,1.942,1093,4.097,1094,4.097,1217,2.969,1218,4.097,1219,4.602,1220,4.602,1221,2.969,1222,4.602,1223,4.602,1224,4.602,1225,4.602,1226,4.602,1227,4.602,1228,3.515,1229,4.602,1230,4.602,1231,4.602,1232,4.602,1233,4.602,1234,4.602,1235,4.602,1236,4.602,1237,4.602,1238,4.602,1239,4.602,1240,4.602,1241,4.602,1242,4.602,1243,4.602,1244,4.602,1245,4.602,1246,4.602,1247,4.602,1248,4.602,1249,4.602,1250,4.602,1251,4.602,1252,4.602,1253,4.602]],["title/components/BootstateComponent.html",[21,0.767,91,1.531]],["body/components/BootstateComponent.html",[3,0.025,4,0.029,5,0.029,7,0.394,8,0.35,10,0.696,14,0.421,15,0.007,16,0.029,19,0.003,20,0.003,21,0.803,22,0.786,23,1.322,24,0.833,25,0.833,26,0.833,28,1.058,29,1.964,30,0.678,31,3.044,32,2.757,33,2.001,35,1.297,38,0.843,39,2.209,43,0.549,44,1.527,46,2.236,47,1.965,48,2.674,51,1.41,52,0.729,54,0.666,55,1.376,56,0.528,58,0.28,59,0.242,67,0.801,68,1.349,69,1.349,70,0.786,71,1.952,72,0.833,73,1.031,74,0.833,75,0.786,76,0.833,77,0.771,78,0.833,79,0.786,80,2.328,81,0.833,82,0.786,83,0.833,84,0.771,85,1.297,86,1.349,87,0.786,88,0.833,89,0.786,90,1.349,91,2.279,92,2.668,93,0.833,94,0.786,95,0.833,96,0.786,97,0.771,98,0.833,99,0.786,100,0.833,101,0.786,102,0.833,103,0.771,104,0.743,105,0.833,106,0.786,107,0.833,108,0.786,109,0.833,110,0.817,111,0.729,112,0.833,113,0.771,114,0.833,115,0.771,116,0.833,117,1.202,118,1.349,119,0.771,120,0.833,121,0.786,122,0.833,123,0.771,124,0.833,125,0.786,126,0.786,127,0.833,128,0.771,129,0.833,130,0.771,131,0.833,132,0.771,133,0.833,134,0.771,135,0.568,136,0.817,137,0.771,138,0.817,139,0.833,141,1.236,144,1.944,158,1.376,162,3.526,171,3.842,177,3.287,179,3.87,187,0.888,202,2.553,206,1.056,219,3.368,225,2.541,242,4.782,248,1.455,249,1.513,251,1.082,252,1.843,253,1.739,270,1.403,271,2.535,272,2.148,273,2.148,274,2.148,275,1.973,277,2.355,278,2.355,279,2.148,280,2.148,281,2.148,282,2.148,284,2.294,320,2.038,379,6.958,408,3.287,410,3.544,412,3.696,435,1.578,436,1.513,440,1.008,451,4.787,581,2.674,584,2.355,664,4.344,685,3.193,733,3.696,756,3.193,816,2.553,823,1.973,841,2,1009,1.973,1097,1.578,1254,2.413,1255,3.905,1256,4.918,1257,3.905,1258,4.918,1259,5.652,1260,4.918,1261,3.544,1262,7.523,1263,6.643,1264,4.918,1265,3.905,1266,4.918,1267,4.918,1268,4.918,1269,4.317,1270,2.413,1271,3.905,1272,3.905,1273,2.413,1274,2.413,1275,2.413,1276,2.413,1277,2.413,1278,2.413,1279,2.413,1280,2.413,1281,2.413,1282,3.905,1283,2.413,1284,2.413,1285,2.413,1286,3.193,1287,3.905,1288,3.905,1289,3.476,1290,3.905,1291,3.476,1292,3.476,1293,3.905,1294,3.476,1295,3.905,1296,2.413,1297,4.918,1298,2.413,1299,5.652,1300,2.413,1301,2.413,1302,2.413,1303,2.413,1304,2.413,1305,2.413,1306,2.413,1307,2.413,1308,2.413,1309,2.413,1310,2.413,1311,2.413,1312,3.905,1313,3.905,1314,5.652,1315,3.476,1316,3.905,1317,3.905,1318,5.652,1319,3.476,1320,3.905,1321,3.905,1322,3.905,1323,3.905,1324,3.905,1325,3.905,1326,3.905]],["title/interfaces/ChainGetInfo.html",[0,0.284,214,3.073]],["body/interfaces/ChainGetInfo.html",[0,0.302,2,1.061,3,0.053,4,0.06,5,0.06,7,0.349,8,0.602,13,1.16,14,0.654,15,0.007,16,0.06,19,0.005,20,0.005,54,2.755,104,2.497,214,4.392,223,2.964,338,3.825,946,6.632,1327,4.998,1328,8.109,1329,8.109,1330,8.109,1331,8.109,1332,8.109,1333,8.109,1334,8.109,1335,8.109,1336,8.109,1337,8.109,1338,8.109,1339,8.109,1340,8.109,1341,8.109]],["title/interfaces/ChartConfigInterface.html",[0,0.284,1342,3.843]],["body/interfaces/ChartConfigInterface.html",[0,0.368,2,1.293,3,0.064,4,0.073,5,0.073,7,0.425,8,0.684,10,1.086,13,1.224,14,0.646,15,0.007,16,0.073,19,0.005,20,0.005,38,1.649,44,1.386,51,1.621,52,2.308,54,2.302,73,1.012,187,1.386,414,3.493,548,2.991,847,4.021,850,7.152,853,5.165,1342,6.244,1343,8.341,1344,6.09,1345,6.797,1346,6.244,1347,6.09,1348,6.09]],["title/interfaces/ChartDifficulty.html",[0,0.284,1349,3.843]],["body/interfaces/ChartDifficulty.html",[0,0.475,2,1.352,3,0.067,4,0.076,5,0.076,7,0.444,8,0.703,13,1.238,14,0.533,15,0.007,16,0.102,19,0.005,20,0.005,28,1.726,54,2.167,59,0.638,548,2.607,847,3.61,1349,7.266,1350,6.369,1351,8.884,1352,6.786,1353,7.576,1354,6.96,1355,6.369]],["title/directives/ChartDirective.html",[70,1.531,137,1.502]],["body/directives/ChartDirective.html",[3,0.05,4,0.057,5,0.057,7,0.331,8,0.58,10,1.155,13,1.106,14,0.538,15,0.007,16,0.057,19,0.004,20,0.004,28,1.756,30,1.331,31,2.11,32,1.406,38,1.399,41,3.767,43,1.474,44,1.556,51,1.567,52,2.397,56,0.586,57,3.64,58,0.55,59,0.475,70,2.11,73,1.318,136,1.605,137,2.071,138,2.813,158,3.093,164,5.187,187,1.474,338,2.235,492,3.64,497,1.738,622,3.415,722,2.359,853,4.148,894,5.053,957,6.206,1261,4.668,1356,4.738,1357,6.035,1358,7.38,1359,6.477,1360,6.487,1361,4.738,1362,7.933,1363,7.38,1364,7.933,1365,6.569,1366,6.477,1367,6.477,1368,4.738,1369,6.477,1370,4.738,1371,4.738,1372,4.738,1373,3.619,1374,4.218,1375,4.218,1376,4.218,1377,4.218,1378,5.766,1379,4.738,1380,4.738,1381,7.933,1382,4.738,1383,4.738,1384,4.738,1385,4.738,1386,4.738,1387,6.477,1388,6.477,1389,4.738,1390,4.738,1391,4.738,1392,4.738,1393,4.738]],["title/modules/ChartModule.html",[471,1.76,1125,3.386]],["body/modules/ChartModule.html",[3,0.066,4,0.075,5,0.075,15,0.007,16,0.075,19,0.005,20,0.005,56,0.701,58,0.724,59,0.625,137,3.128,473,2.196,474,3.312,487,3.475,488,2.729,489,2.49,491,3.095,492,4.355,493,2.335,495,2.902,496,3.028,497,2.287,596,3.392,957,6.418,1125,6.883,1376,5.55,1394,5.55,1395,5.55,1396,5.55,1397,5.55,1398,6.234,1399,6.234]],["title/injectables/ChartService.html",[389,1.394,957,3.217]],["body/injectables/ChartService.html",[3,0.032,4,0.036,5,0.036,7,0.212,8,0.42,10,1.147,13,1.079,14,0.572,15,0.007,16,0.036,19,0.003,20,0.003,38,1.013,43,1.067,44,1.471,46,2.056,47,1.807,51,1.215,52,2.1,55,1.072,56,0.627,58,0.353,59,0.305,64,1.331,73,1.399,135,1.515,158,3.186,176,3.872,187,1.463,192,2.487,204,3.379,208,5.259,219,4.403,244,1.989,245,1.834,254,2.635,259,1.834,270,1.769,297,0.886,389,1.391,390,1.364,395,3.211,414,1.873,437,1.604,438,1.604,497,1.116,542,4.032,548,2.749,603,4.174,622,5.963,674,2.707,758,2.323,778,1.907,847,1.398,853,4.651,863,2.323,874,2.323,957,3.211,1025,2.323,1135,2.487,1261,2.192,1346,3.835,1352,2.323,1365,5.094,1373,2.323,1374,2.707,1375,2.707,1377,2.707,1378,4.174,1400,3.041,1401,5.722,1402,5.722,1403,5.722,1404,5.722,1405,4.689,1406,4.689,1407,4.689,1408,3.041,1409,6.255,1410,4.689,1411,4.689,1412,3.041,1413,4.689,1414,3.835,1415,4.689,1416,4.689,1417,4.689,1418,4.689,1419,4.689,1420,3.041,1421,4.689,1422,3.041,1423,4.174,1424,3.835,1425,4.689,1426,3.835,1427,4.689,1428,7.34,1429,4.689,1430,3.041,1431,5.094,1432,4.689,1433,3.581,1434,4.689,1435,3.041,1436,4.689,1437,4.174,1438,3.041,1439,3.041,1440,2.707,1441,2.707,1442,5.722,1443,2.707,1444,3.041,1445,3.041,1446,3.041,1447,3.041,1448,2.707,1449,3.041,1450,3.041,1451,3.041,1452,3.041,1453,3.041,1454,3.041,1455,2.707,1456,3.041,1457,4.689,1458,3.041,1459,2.707,1460,3.041,1461,3.041,1462,3.041,1463,4.689,1464,3.041,1465,4.689,1466,4.689,1467,3.041,1468,2.707,1469,3.041,1470,3.041,1471,3.041,1472,3.041,1473,3.041,1474,3.041,1475,3.041,1476,3.041,1477,3.041,1478,3.041,1479,3.041,1480,3.041,1481,3.041,1482,3.041,1483,3.041,1484,3.041,1485,3.041,1486,3.041,1487,4.174,1488,2.487,1489,3.041,1490,3.041,1491,3.041,1492,3.041,1493,3.041,1494,3.041,1495,1.655,1496,3.041,1497,3.041,1498,3.041,1499,3.041,1500,3.041]],["title/injectables/ChartsEffects.html",[389,1.394,1501,4.183]],["body/injectables/ChartsEffects.html",[3,0.034,4,0.039,5,0.039,7,0.225,8,0.44,10,0.576,14,0.333,15,0.007,16,0.039,19,0.003,20,0.003,43,1.116,44,1.295,46,2.12,47,1.864,56,0.668,58,0.375,59,0.324,73,0.536,135,1.156,158,2.647,176,4.121,187,0.734,202,3.209,241,2.465,244,2.111,245,1.947,248,5.154,320,2.079,389,1.456,390,1.448,393,4.065,502,4.001,504,1.947,637,2.326,807,4.542,847,2.256,853,1.814,1172,4.474,1197,3.748,1349,2.64,1352,3.748,1426,6.582,1433,5.066,1487,4.368,1488,4.013,1495,2.67,1501,4.368,1502,3.228,1503,7.135,1504,7.135,1505,6.633,1506,5.937,1507,2.465,1508,5.629,1509,3.228,1510,6.582,1511,6.388,1512,4.907,1513,7.805,1514,8.407,1515,5.739,1516,6.633,1517,4.907,1518,3.228,1519,4.907,1520,4.907,1521,3.228,1522,5.937,1523,6.633,1524,5.285,1525,4.907,1526,4.907,1527,4.907,1528,4.907,1529,4.907,1530,4.368,1531,4.368,1532,4.368,1533,4.907,1534,5.937,1535,4.907,1536,5.285,1537,5.425,1538,4.907,1539,2.599,1540,4.907,1541,4.907,1542,5.285,1543,5.285,1544,5.285,1545,4.907,1546,3.228,1547,4.907,1548,4.535,1549,3.228,1550,2.64,1551,2.21,1552,2.873,1553,2.64,1554,2.64,1555,3.228,1556,2.873,1557,3.228,1558,3.228,1559,3.228,1560,3.228]],["title/interfaces/ChartsState.html",[0,0.284,1561,4.183]],["body/interfaces/ChartsState.html",[0,0.363,2,1.273,3,0.063,4,0.072,5,0.072,7,0.418,8,0.678,10,1.349,14,0.407,15,0.007,16,0.104,19,0.005,20,0.005,56,0.658,135,1.413,225,2.294,245,3.617,297,2.413,320,1.747,542,3.761,548,1.992,637,6.267,1353,7.981,1433,7.181,1495,3.263,1508,4.322,1515,5.776,1542,5.339,1553,4.905,1556,5.339,1561,7.373,1562,5.339,1563,7.562,1564,8.283,1565,5.998,1566,5.998,1567,5.998,1568,5.998,1569,5.339,1570,5.998]],["title/components/ConsoleComponent.html",[21,0.767,94,1.531]],["body/components/ConsoleComponent.html",[3,0.03,4,0.034,5,0.034,7,0.201,8,0.403,10,0.802,13,0.956,14,0.46,15,0.007,16,0.034,19,0.003,20,0.003,21,0.903,22,0.939,23,1.523,24,0.995,25,0.995,26,0.995,28,1.219,29,2.209,30,0.81,31,3.101,32,2.812,33,2.146,35,1.494,38,0.971,39,2.442,41,2.616,43,0.656,44,1.447,46,1.438,47,1.264,51,1.438,52,2.17,55,1.015,56,0.439,57,2.528,58,0.335,59,0.289,67,0.957,68,1.553,69,1.553,70,0.939,71,2.158,72,0.995,73,1.126,74,0.995,75,0.939,76,0.995,77,0.921,78,0.995,79,0.939,80,2.166,81,0.995,82,0.939,83,0.995,84,0.921,85,1.494,86,1.553,87,0.939,88,0.995,89,0.939,90,1.553,91,0.939,92,2.598,93,0.995,94,2.036,95,0.995,96,0.939,97,0.921,98,0.995,99,0.939,100,0.995,101,0.939,102,0.995,103,0.921,104,0.887,105,0.995,106,0.939,107,0.995,108,0.939,109,0.995,110,0.976,111,0.871,112,0.995,113,0.921,114,0.995,115,0.921,116,0.995,117,1.385,118,1.553,119,0.921,120,0.995,121,0.939,122,0.995,123,0.921,124,0.995,125,0.939,126,0.939,127,0.995,128,0.921,129,0.995,130,0.921,131,0.995,132,0.921,133,0.995,134,0.921,135,0.679,136,0.976,137,0.921,138,0.976,139,0.995,141,1.476,144,2.239,147,1.873,158,2.201,164,4.086,187,1.023,225,1.72,229,2.077,233,2.201,266,2.201,297,1.611,320,0.84,326,4.278,340,4.523,341,2.201,381,3.678,393,3.08,440,1.204,763,2.357,894,3.787,1228,2.201,1357,4.523,1360,5.11,1571,2.882,1572,4.498,1573,4.498,1574,4.498,1575,4.498,1576,4.498,1577,5.531,1578,4.498,1579,5.531,1580,4.498,1581,6.248,1582,5.531,1583,2.882,1584,5.11,1585,5.531,1586,6.248,1587,4.498,1588,4.498,1589,4.498,1590,2.882,1591,2.882,1592,2.882,1593,2.882,1594,2.882,1595,2.882,1596,2.882,1597,2.882,1598,5.531,1599,4.498,1600,2.882,1601,2.882,1602,2.882,1603,2.201,1604,2.882,1605,2.882,1606,2.882,1607,6.776,1608,2.882,1609,2.882,1610,2.882,1611,2.882,1612,2.566,1613,2.882,1614,2.882,1615,2.882,1616,2.882,1617,2.882,1618,2.882,1619,2.882,1620,2.882,1621,2.882,1622,2.882,1623,2.882,1624,2.882,1625,2.882,1626,2.882,1627,2.882,1628,4.498,1629,2.882,1630,2.882,1631,2.882,1632,4.498,1633,2.882,1634,2.882,1635,2.882,1636,2.882,1637,2.882,1638,2.201,1639,2.882,1640,2.882,1641,2.882,1642,2.566,1643,2.882,1644,2.882,1645,2.882,1646,2.882,1647,4.004,1648,2.566,1649,5.531,1650,2.882,1651,2.882]],["title/modules/ConsoleModule.html",[471,1.76,482,3.073]],["body/modules/ConsoleModule.html",[3,0.061,4,0.069,5,0.069,15,0.007,16,0.069,19,0.005,20,0.005,56,0.749,58,0.672,59,0.581,94,3.134,123,2.9,206,2.536,251,2.598,326,3.966,473,2.041,474,3.162,482,6.166,487,3.318,488,2.536,489,2.314,491,2.955,493,2.17,495,2.771,496,2.891,497,2.125,518,4.157,519,3.256,522,4.638,523,3.494,524,3.369,596,3.238,713,4.157,714,3.256,1145,5.331,1603,4.424,1652,5.156,1653,5.156,1654,5.156,1655,5.792,1656,5.792,1657,7.397,1658,5.792]],["title/interfaces/CreateWallet.html",[0,0.284,1659,3.073]],["body/interfaces/CreateWallet.html",[0,0.494,2,1.081,3,0.054,4,0.061,5,0.061,7,0.355,8,0.609,10,1.213,12,2.468,13,1.271,14,0.52,15,0.007,16,0.102,17,3.332,19,0.005,20,0.005,34,2.864,54,2.35,55,2.397,56,0.608,135,1.2,191,5.339,223,3.194,225,1.949,259,3.073,284,1.76,297,1.484,320,1.484,414,2.035,420,4.361,605,2.688,752,3.915,829,4.454,830,4.454,832,3.332,841,2.61,961,3.073,1659,4.448,1660,3.891,1661,4.103,1662,3.489,1663,4.448,1664,3.891,1665,4.802,1666,3.489,1667,3.891,1668,4.902,1669,3.489,1670,3.672,1671,3.891,1672,3.489,1673,3.489,1674,3.073,1675,4.658,1676,3.672,1677,3.672,1678,3.332,1679,3.489,1680,3.489,1681,3.489,1682,3.489,1683,3.332,1684,3.332,1685,3.332,1686,3.489,1687,3.332,1688,3.489,1689,3.332,1690,3.489,1691,3.489,1692,4.454,1693,3.332,1694,3.489,1695,3.891,1696,3.891,1697,3.672,1698,3.489,1699,3.332,1700,3.073,1701,3.672]],["title/injectables/CryptService.html",[389,1.394,727,3.386]],["body/injectables/CryptService.html",[3,0.019,4,0.021,5,0.021,7,0.123,10,1.383,11,1.501,13,1.271,14,0.526,15,0.007,16,0.021,17,1.972,19,0.002,20,0.002,38,0.651,43,0.686,44,1.429,51,1.769,54,0.488,55,1.641,56,0.415,57,4.285,58,0.205,59,0.177,64,1.32,73,1.308,111,1.191,135,0.71,147,1.021,158,1.641,159,2.173,162,3.863,187,1.765,202,1.972,206,1.32,208,2.466,254,4.007,270,1.028,271,3.737,277,1.066,278,1.818,284,0.611,297,1.658,320,2.381,389,0.895,390,0.793,396,3.224,398,3.897,408,2.709,412,4.368,414,2.987,436,1.109,437,0.933,438,0.933,447,2.578,468,3.153,548,2.429,552,2.684,584,1.818,593,2.303,636,2.684,640,1.446,656,1.891,666,3.278,668,2.303,682,1.972,684,2.684,722,3.187,727,2.173,733,3.046,736,2.466,738,5.235,740,2.466,752,3.071,759,2.684,760,3.557,791,6.015,847,2.142,853,1.695,947,2.065,1024,2.303,1025,2.303,1081,1.972,1097,1.972,1103,4.146,1181,2.684,1286,2.466,1319,2.684,1459,2.684,1638,1.35,1665,1.891,1666,1.211,1687,1.156,1702,1.768,1703,3.015,1704,3.015,1705,3.015,1706,3.942,1707,3.015,1708,3.015,1709,3.015,1710,3.015,1711,3.015,1712,3.015,1713,3.015,1714,3.015,1715,3.015,1716,3.015,1717,2.466,1718,3.942,1719,1.768,1720,1.768,1721,3.015,1722,1.768,1723,3.942,1724,4.658,1725,3.015,1726,1.768,1727,3.015,1728,3.015,1729,3.015,1730,3.015,1731,3.015,1732,2.466,1733,6.401,1734,3.015,1735,3.015,1736,3.015,1737,2.466,1738,3.015,1739,3.015,1740,3.015,1741,3.015,1742,3.015,1743,3.015,1744,3.015,1745,3.015,1746,3.015,1747,3.015,1748,3.015,1749,3.015,1750,3.015,1751,3.015,1752,3.015,1753,1.768,1754,3.015,1755,3.015,1756,3.015,1757,2.684,1758,3.015,1759,3.015,1760,1.768,1761,1.768,1762,6.159,1763,3.015,1764,6.919,1765,1.768,1766,2.684,1767,2.466,1768,3.015,1769,3.015,1770,3.015,1771,3.942,1772,3.015,1773,3.015,1774,3.015,1775,3.015,1776,3.015,1777,3.015,1778,4.658,1779,3.015,1780,1.768,1781,7.129,1782,3.015,1783,1.768,1784,3.015,1785,3.015,1786,3.015,1787,3.015,1788,3.015,1789,3.015,1790,3.015,1791,3.015,1792,3.015,1793,3.015,1794,3.015,1795,3.224,1796,1.768,1797,3.015,1798,1.768,1799,2.303,1800,3.015,1801,3.015,1802,3.809,1803,3.015,1804,3.015,1805,3.015,1806,1.768,1807,3.015,1808,1.768,1809,3.015,1810,1.768,1811,3.015,1812,1.768,1813,3.015,1814,3.015,1815,3.015,1816,3.015,1817,3.015,1818,3.015,1819,1.768,1820,1.768,1821,1.768,1822,1.768,1823,1.768,1824,1.768,1825,1.768,1826,2.684,1827,1.574,1828,3.015,1829,1.768,1830,1.768,1831,1.768,1832,1.768,1833,1.768,1834,1.768,1835,1.768,1836,1.768,1837,1.768,1838,3.015,1839,1.768,1840,1.768,1841,1.768,1842,1.768,1843,1.446,1844,1.768,1845,1.768,1846,1.768,1847,1.768,1848,1.768,1849,1.768,1850,1.768,1851,1.768,1852,1.768,1853,1.768,1854,1.768,1855,1.768,1856,1.768,1857,3.015,1858,1.768,1859,1.768,1860,3.015,1861,1.768,1862,3.015,1863,3.015,1864,1.768,1865,3.015,1866,3.015,1867,3.015,1868,3.942,1869,1.768,1870,1.768,1871,1.768,1872,3.015,1873,1.768,1874,1.768,1875,3.015,1876,1.768,1877,1.768,1878,1.768,1879,1.768,1880,1.768,1881,1.768,1882,1.768,1883,1.768,1884,1.768,1885,1.768,1886,1.768,1887,1.768,1888,1.768,1889,1.768,1890,1.768,1891,1.768,1892,1.768]],["title/modules/DataModule.html",[471,1.76,483,3.386]],["body/modules/DataModule.html",[3,0.067,4,0.076,5,0.076,15,0.007,16,0.076,19,0.005,20,0.005,30,1.789,56,0.762,58,0.739,59,0.638,176,3.36,245,4.735,473,2.244,483,5.657,491,2.544,493,2.385,495,2.941,615,5.669,616,5.669,626,6.988,646,6.988,647,5.208,648,4.361,999,5.669,1551,4.361,1893,6.369,1894,6.369,1895,6.369,1896,6.369,1897,6.369,1898,6.369,1899,6.988,1900,6.369,1901,5.669,1902,6.369,1903,6.369,1904,6.369,1905,6.369,1906,6.369,1907,6.369,1908,6.369,1909,6.369,1910,6.369,1911,6.369]],["title/interfaces/Destination.html",[0,0.284,1661,2.834]],["body/interfaces/Destination.html",[0,0.406,2,1.425,3,0.071,4,0.08,5,0.08,7,0.468,8,0.726,9,4.486,13,1.205,14,0.55,15,0.007,16,0.08,19,0.006,20,0.006,54,2.403,147,2.273,829,3.903,830,3.903,1437,5.974,1661,5.455,1912,6.711,1913,6.056,1914,5.126,1915,5.974,1916,5.489]],["title/components/DetailsComponent.html",[21,0.767,96,1.531]],["body/components/DetailsComponent.html",[3,0.04,4,0.045,5,0.045,7,0.264,8,0.494,9,2.673,10,0.674,13,0.735,14,0.487,15,0.007,16,0.045,19,0.004,20,0.004,21,1.064,22,1.231,23,1.869,24,1.305,25,1.305,26,1.305,28,1.496,29,2.604,30,1.062,31,3.174,32,2.882,33,2.587,35,1.833,38,1.192,39,2.802,41,3.21,43,0.86,44,1.384,46,1.208,47,1.062,51,0.802,52,1.668,56,0.438,57,3.102,58,0.439,59,0.379,67,1.255,68,1.906,69,1.906,70,1.231,71,2.476,72,1.305,73,1.366,74,1.305,75,1.231,76,1.305,77,1.208,78,1.305,79,1.231,80,2.438,81,1.305,82,1.231,83,1.305,84,1.208,85,1.833,86,1.906,87,1.231,88,1.305,89,1.231,90,1.906,91,1.231,92,2.802,93,1.305,94,1.231,95,1.305,96,2.336,97,1.208,98,1.305,99,1.231,100,1.305,101,1.231,102,1.305,103,1.208,104,1.163,105,1.305,106,1.231,107,1.305,108,1.231,109,1.305,110,1.28,111,1.142,112,1.305,113,1.208,114,1.305,115,1.208,116,1.305,117,1.699,118,1.906,119,1.208,120,1.305,121,1.231,122,1.305,123,1.208,124,1.305,125,1.231,126,1.231,127,1.305,128,1.208,129,1.305,130,1.208,131,1.305,132,1.208,133,1.305,134,1.208,135,0.89,136,1.28,137,1.208,138,1.28,139,1.305,147,2.583,187,0.86,261,4.215,336,4.913,826,4.689,844,4.514,895,4.913,896,4.913,926,4.91,1085,2.471,1917,3.779,1918,2.587,1919,4.6,1920,5.519,1921,3.779,1922,3.779,1923,3.779,1924,2.587,1925,3.779,1926,3.779,1927,4.913,1928,3.779,1929,3.779,1930,3.779,1931,3.779]],["title/interfaces/DialogData.html",[0,0.284,1932,3.843]],["body/interfaces/DialogData.html",[0,0.378,2,1.327,3,0.066,4,0.075,5,0.075,7,0.436,8,0.695,13,1.232,14,0.527,15,0.007,16,0.093,19,0.005,20,0.005,21,1.266,31,2.037,32,1.855,35,2.076,43,1.422,52,1.889,56,0.617,58,0.726,59,0.627,73,1.466,92,2.037,103,1.998,104,1.925,147,2.628,203,6.082,548,2.076,1373,4.774,1932,6.902,1933,5.564,1934,5.564,1935,7.857,1936,5.564,1937,6.908,1938,4.774,1939,5.564,1940,5.564,1941,5.564,1942,5.564,1943,5.564]],["title/injectables/Effects.html",[389,1.394,648,3.217]],["body/injectables/Effects.html",[3,0.073,4,0.083,5,0.083,10,1.239,14,0.472,15,0.007,16,0.083,19,0.006,20,0.006,43,1.581,44,1.261,56,0.657,58,0.807,59,0.696,73,1.154,187,1.581,389,2.455,390,3.116,440,2.902,648,5.666,1507,5.306,1508,6.835,1551,4.757,1944,6.947,1945,6.947]],["title/injectables/Effects-1.html",[64,1.712,389,1.16,648,2.678]],["body/injectables/Effects-1.html",[3,0.076,4,0.086,5,0.086,15,0.006,16,0.086,19,0.006,20,0.006,43,2.044,44,1.311,56,0.574,58,0.838,59,0.724,389,2.513,390,3.239,648,5.798,1946,7.223,1947,7.223]],["title/pipes/EffortPipe.html",[1539,2.057,1948,3.589]],["body/pipes/EffortPipe.html",[3,0.066,4,0.075,5,0.075,10,1.115,13,0.833,14,0.424,15,0.007,16,0.075,19,0.005,20,0.005,28,1.695,30,1.756,38,1.35,43,1.422,44,1.135,47,2.181,51,1.327,55,2.974,56,0.497,58,0.726,59,0.627,73,1.402,187,1.422,223,3.298,284,2.68,297,2.261,317,5.564,320,1.821,341,4.774,1539,3.397,1642,5.564,1948,5.927,1949,3.635,1950,6.251,1951,7.761,1952,3.77,1953,6.347,1954,8.826,1955,6.251,1956,5.112,1957,4.681,1958,3.77,1959,6.251,1960,6.251,1961,5.564]],["title/pipes/EscapeHtmlPipe.html",[1539,2.057,1962,3.589]],["body/pipes/EscapeHtmlPipe.html",[3,0.07,4,0.079,5,0.079,10,1.18,15,0.007,16,0.079,19,0.006,20,0.006,28,1.794,30,1.859,38,1.429,44,1.201,51,1.405,56,0.639,58,0.768,59,0.663,73,1.438,187,1.505,238,4.769,239,4.327,284,2.286,308,3.491,320,1.928,440,2.764,1539,3.518,1949,3.849,1952,3.991,1957,4.847,1958,3.991,1962,6.139,1963,6.618,1964,8.037,1965,5.792,1966,6.618,1967,8.037,1968,6.618,1969,6.618]],["title/interfaces/FileSystemInterface.html",[0,0.284,1970,3.843]],["body/interfaces/FileSystemInterface.html",[0,0.236,2,0.827,3,0.041,4,0.047,5,0.047,7,0.272,10,1.436,11,4.008,13,1.133,14,0.612,15,0.007,16,0.047,19,0.004,20,0.004,38,1.219,44,1.461,47,2.044,51,1.805,52,2.199,73,1.337,185,6.494,187,1.831,193,3.864,223,2.843,254,5.111,320,2.345,378,4.562,420,4.847,548,2.824,580,4.624,583,7.369,593,4.311,656,3.539,664,3.691,739,4.067,1104,4.311,1289,5.024,1970,4.616,1971,8.303,1972,3.897,1973,4.067,1974,4.616,1975,4.616,1976,5.95,1977,5.644,1978,5.95,1979,3.897,1980,7.275,1981,5.644,1982,5.644,1983,6.954,1984,3.897,1985,5.644,1986,5.644,1987,3.897,1988,5.024,1989,5.644,1990,3.897,1991,7.275,1992,5.644,1993,3.897,1994,5.644,1995,3.897,1996,5.644]],["title/injectables/FileSystemService.html",[389,1.394,408,2.733]],["body/injectables/FileSystemService.html",[3,0.038,4,0.043,5,0.1,7,0.252,8,0.479,10,1.485,11,1.801,13,1.258,14,0.595,15,0.007,16,0.043,19,0.004,20,0.004,34,2.033,38,1.154,43,0.823,44,1.57,47,1.502,51,1.921,56,0.425,58,0.42,59,0.363,73,1.384,147,2.153,162,3.433,185,4.581,187,1.895,254,4.407,270,2.104,271,2.397,277,2.182,278,2.182,320,2.477,378,3.351,389,1.586,390,1.622,408,3.108,410,3.852,412,3.495,420,3.596,437,1.908,438,1.908,440,1.511,548,2.488,580,2.661,656,5.087,664,3.495,756,4.371,1448,3.22,1717,4.371,1799,4.082,1973,5.06,1974,4.371,1976,4.371,1978,5.742,1983,5.742,1997,7.81,1998,3.617,1999,4.758,2000,4.758,2001,5.345,2002,5.345,2003,5.345,2004,3.617,2005,5.742,2006,5.345,2007,5.345,2008,4.758,2009,3.617,2010,7.842,2011,5.345,2012,3.617,2013,5.345,2014,3.617,2015,5.345,2016,3.617,2017,4.758,2018,3.617,2019,5.345,2020,3.617,2021,5.345,2022,5.345,2023,3.617,2024,3.617,2025,3.617,2026,5.345,2027,5.659,2028,3.617,2029,3.617,2030,3.22,2031,3.617,2032,3.617,2033,3.617,2034,3.617,2035,3.617,2036,3.617,2037,3.617,2038,3.617]],["title/injectables/FileSystemWebService.html",[389,1.394,2005,3.843]],["body/injectables/FileSystemWebService.html",[3,0.035,4,0.04,5,0.04,7,0.232,8,0.449,10,1.482,13,0.668,14,0.535,15,0.007,16,0.04,19,0.003,20,0.003,28,0.901,38,1.083,43,0.756,44,1.537,46,1.062,47,0.934,51,1.724,52,1.826,56,0.48,58,0.386,59,0.333,73,1.381,135,1.702,147,3.217,162,3.934,185,6.201,187,1.891,223,1.961,271,3.241,297,2.105,308,3.812,320,2.214,378,3.146,389,1.488,390,1.49,394,4.942,412,4.726,420,4.257,425,4.103,437,1.753,440,1.388,447,4.403,502,4.06,504,2.004,548,2.236,580,3.927,656,2.084,664,3.281,739,4.852,802,2.395,803,5.208,804,5.52,847,3.895,1170,2.395,1172,3.146,1193,5.804,1196,5.142,1197,5.52,1200,6.433,1201,6.764,1970,4.103,1973,3.615,1974,4.103,1975,4.103,1976,4.103,1978,4.103,1983,4.942,1997,7.66,1999,4.466,2000,4.466,2005,4.103,2008,4.466,2017,4.466,2039,3.323,2040,5.017,2041,3.323,2042,5.017,2043,3.323,2044,5.017,2045,3.323,2046,5.017,2047,3.323,2048,3.323,2049,5.017,2050,3.323,2051,5.017,2052,3.323,2053,5.017,2054,3.323,2055,3.323,2056,3.323,2057,5.017,2058,3.323,2059,6.043,2060,3.323,2061,3.323,2062,3.323,2063,3.323,2064,3.323,2065,3.323,2066,3.323,2067,5.017,2068,3.323]],["title/pipes/FromCoinPipe.html",[1539,2.057,2069,3.589]],["body/pipes/FromCoinPipe.html",[3,0.07,4,0.079,5,0.079,10,1.18,14,0.449,15,0.007,16,0.079,19,0.006,20,0.006,28,1.794,30,1.859,38,1.429,44,1.201,51,1.405,54,2.389,56,0.526,58,0.768,59,0.663,73,1.438,187,1.505,284,2.286,308,4.566,320,1.928,1539,3.518,1949,3.849,1952,4.847,1957,4.847,1958,3.991,1965,4.769,2069,6.139,2070,6.618,2071,8.037,2072,6.618,2073,6.618,2074,5.891]],["title/interfaces/GetAddressBookOut.html",[0,0.284,2075,3.843]],["body/interfaces/GetAddressBookOut.html",[0,0.42,2,1.475,3,0.073,4,0.083,5,0.083,7,0.577,8,0.741,9,3.365,11,3.459,12,3.365,13,1.177,14,0.6,15,0.007,16,0.083,19,0.006,20,0.006,54,1.917,776,5.964,2075,6.768,2076,6.947,2077,8.145]],["title/interfaces/GetBulkPaymentsIn.html",[0,0.284,2078,3.843]],["body/interfaces/GetBulkPaymentsIn.html",[0,0.409,2,1.437,3,0.071,4,0.081,5,0.081,7,0.472,8,0.73,13,1.208,14,0.553,15,0.007,16,0.081,19,0.006,20,0.006,54,2.412,85,2.248,202,4.426,338,3.193,829,3.937,830,3.937,1286,5.536,2078,6.663,2079,6.769,2080,9.071,2081,9.071,2082,6.769,2083,5.536]],["title/interfaces/GetBulkPaymentsOut.html",[0,0.284,2084,3.843]],["body/interfaces/GetBulkPaymentsOut.html",[0,0.43,2,1.51,3,0.075,4,0.085,5,0.085,7,0.496,8,0.752,14,0.483,15,0.006,16,0.085,19,0.006,20,0.006,56,0.565,2083,7.542,2084,6.864,2085,7.114,2086,6.314,2087,6.333]],["title/interfaces/GetPaymentsIn.html",[0,0.284,2088,3.843]],["body/interfaces/GetPaymentsIn.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,12,4.48,13,1.194,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,2088,6.9,2089,7.179]],["title/interfaces/GetPaymentsOut.html",[0,0.284,2090,3.843]],["body/interfaces/GetPaymentsOut.html",[0,0.43,2,1.51,3,0.075,4,0.085,5,0.085,7,0.496,8,0.752,14,0.483,15,0.006,16,0.085,19,0.006,20,0.006,56,0.565,2083,7.542,2086,6.314,2087,6.333,2090,6.864,2091,7.114]],["title/interfaces/GetTransfersIn.html",[0,0.284,2092,3.217]],["body/interfaces/GetTransfersIn.html",[0,0.314,2,1.103,3,0.055,4,0.062,5,0.062,7,0.362,8,0.617,10,1.72,11,2.587,14,0.619,15,0.007,16,0.062,19,0.005,20,0.005,33,1.486,54,2.431,193,3.557,223,3.794,240,5.636,338,3.885,342,5.636,489,3.518,807,3.557,816,5.76,2092,4.719,2093,5.195,2094,6.776,2095,8.236,2096,8.236,2097,8.236,2098,6.728,2099,6.728,2100,6.892,2101,6.892]],["title/interfaces/GetTransfersOut.html",[0,0.284,2102,3.073]],["body/interfaces/GetTransfersOut.html",[0,0.371,2,1.303,3,0.065,4,0.073,5,0.073,7,0.428,8,0.687,10,1.711,14,0.595,15,0.007,16,0.073,19,0.005,20,0.005,56,0.61,223,3.528,489,3.503,816,5.735,1661,4.627,1662,4.202,2098,6.698,2099,6.698,2102,5.017,2103,6.138,2104,7.038,2105,6.138]],["title/pipes/HashLinkPipe.html",[1539,2.057,2106,3.589]],["body/pipes/HashLinkPipe.html",[3,0.069,4,0.078,5,0.078,10,1.164,13,1.146,14,0.443,15,0.007,16,0.078,19,0.005,20,0.005,28,1.769,30,1.834,38,1.41,43,1.485,44,1.185,46,2.086,47,1.834,51,1.385,54,2.199,56,0.519,58,0.758,59,0.654,73,1.429,187,1.485,284,2.254,320,1.901,1052,6.518,1539,3.489,1669,5.457,1949,3.796,1952,3.936,1957,4.806,1958,3.936,2106,6.087,2107,6.526,2108,7.969,2109,8.96,2110,6.526]],["title/pipes/HashRatePipe.html",[1132,3.386,1539,2.057]],["body/pipes/HashRatePipe.html",[3,0.06,4,0.068,5,0.068,10,1.011,13,1.134,14,0.385,15,0.007,16,0.068,19,0.005,20,0.005,28,1.536,30,1.592,38,1.224,43,1.289,44,1.029,46,1.812,47,1.592,51,1.203,54,2.226,55,3.001,56,0.45,58,0.658,59,0.568,73,1.34,187,1.289,223,3.152,278,3.418,284,2.519,297,1.651,308,4.759,320,2.125,455,4.635,1051,5.572,1081,3.706,1132,5.257,1228,5.572,1539,3.193,1826,5.045,1827,5.045,1916,4.635,1949,3.296,1952,3.418,1956,4.635,1957,4.4,1958,3.418,1961,5.045,1965,5.257,2111,5.668,2112,8.517,2113,5.668,2114,5.668,2115,5.668,2116,5.045,2117,7.295,2118,5.668]],["title/interceptors/HeaderInterceptor.html",[486,3.589,2119,4.699]],["body/interceptors/HeaderInterceptor.html",[3,0.065,4,0.073,5,0.073,7,0.428,10,1.095,14,0.417,15,0.007,16,0.073,19,0.005,20,0.005,28,1.664,38,1.657,44,1.114,51,1.303,56,0.697,58,0.713,59,0.615,73,1.02,187,1.396,248,3.702,320,2.235,389,2.277,486,5.86,504,3.702,539,3.702,540,5.019,1207,5.463,1208,5.463,1269,6.393,1424,6.846,2120,6.138,2121,6.138,2122,7.673,2123,7.673,2124,9.027,2125,8.769,2126,6.138,2127,7.673,2128,6.138,2129,6.138,2130,6.138,2131,6.138,2132,6.138,2133,6.138]],["title/interfaces/Height.html",[0,0.284,338,2.217]],["body/interfaces/Height.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,54,2.473,338,4.507,2134,7.179]],["title/interfaces/IncomingTransfersIn.html",[0,0.284,2135,3.843]],["body/interfaces/IncomingTransfersIn.html",[0,0.423,2,1.483,3,0.074,4,0.084,5,0.084,7,0.488,8,0.744,14,0.474,15,0.007,16,0.084,19,0.006,20,0.006,261,6.768,2135,6.792,2136,6.988,2137,9.168,2138,8.861]],["title/interfaces/IncomingTransfersOut.html",[0,0.284,2139,3.843]],["body/interfaces/IncomingTransfersOut.html",[0,0.366,2,1.283,3,0.064,4,0.072,5,0.072,7,0.422,8,0.681,13,1.162,14,0.61,15,0.007,16,0.072,19,0.005,20,0.005,54,2.622,223,3.408,259,3.645,682,3.952,829,4.834,830,4.834,947,4.138,1675,4.138,1685,5.703,1692,3.515,1732,6.214,1913,5.703,2094,4.355,2139,6.214,2140,6.044,2141,8.721,2142,7.132,2143,8.721,2144,6.044,2145,6.044,2146,6.044,2147,6.044,2148,6.044]],["title/interfaces/IntegratedAddress.html",[0,0.284,2149,3.843]],["body/interfaces/IntegratedAddress.html",[0,0.419,2,1.47,3,0.073,4,0.083,5,0.083,7,0.483,8,0.74,9,4.428,12,4.428,13,1.176,14,0.561,15,0.007,16,0.083,19,0.006,20,0.006,56,0.55,2149,6.756,2150,6.927,2151,9.141,2152,5.665]],["title/interfaces/LogEntry.html",[0,0.284,2153,3.843]],["body/interfaces/LogEntry.html",[0,0.496,2,1.453,3,0.072,4,0.082,5,0.082,7,0.478,8,0.735,13,1.273,14,0.557,15,0.007,16,0.098,19,0.006,20,0.006,604,4.688,2153,6.709,2154,6.095,2155,7.447,2156,8.106,2157,5.6]],["title/components/LoginComponent.html",[21,0.767,97,1.502]],["body/components/LoginComponent.html",[3,0.031,4,0.036,5,0.096,7,0.207,8,0.412,10,0.821,13,0.846,14,0.493,15,0.007,16,0.036,19,0.003,20,0.003,21,0.92,22,0.967,23,1.559,24,1.025,25,1.025,26,1.025,28,1.248,29,2.251,30,0.834,31,3.11,32,2.82,33,2.169,35,1.529,38,0.994,39,2.481,41,1.727,43,0.675,44,1.46,46,1.471,47,1.293,51,1.348,52,1.919,56,0.504,57,1.669,58,0.345,59,0.298,67,0.986,68,1.59,69,1.59,70,0.967,71,2.193,72,1.025,73,1.141,74,1.025,75,0.967,76,1.025,77,0.949,78,1.025,79,0.967,80,2.196,81,1.025,82,0.967,83,1.025,84,0.949,85,1.529,86,1.59,87,0.967,88,1.025,89,0.967,90,1.59,91,0.967,92,2.621,93,1.025,94,0.967,95,1.025,96,0.967,97,2.03,98,1.025,99,0.967,100,1.025,101,0.967,102,1.025,103,0.949,104,0.914,105,1.025,106,0.967,107,1.025,108,0.967,109,1.025,110,1.005,111,0.897,112,1.025,113,0.949,114,1.025,115,0.949,116,1.025,117,1.417,118,1.59,119,0.949,120,1.025,121,0.967,122,1.025,123,0.949,124,1.025,125,0.967,126,0.967,127,1.025,128,0.949,129,1.025,130,0.949,131,1.025,132,0.949,133,1.025,134,0.949,135,1.084,136,1.005,137,0.949,138,1.005,139,1.025,141,1.521,144,2.291,147,2.461,158,2.237,162,2.779,168,5.192,171,1.566,187,1.047,206,1.3,237,1.212,244,3.01,251,1.332,266,3.515,270,3.278,277,1.791,278,2.776,297,1.341,369,2.428,414,2.744,420,3.519,440,1.24,447,3.686,488,1.3,539,4.384,542,2.886,581,4.977,693,2.643,699,2.643,728,5.464,752,2.591,784,2.14,805,2.14,813,2.14,816,3.686,823,2.428,885,2.428,1495,3.738,1975,3.764,2158,2.969,2159,5.636,2160,4.602,2161,6.349,2162,4.602,2163,6.349,2164,2.969,2165,4.602,2166,2.969,2167,2.969,2168,4.602,2169,2.969,2170,2.969,2171,2.969,2172,2.969,2173,2.969,2174,2.969,2175,5.636,2176,2.969,2177,2.428,2178,2.643,2179,2.969,2180,2.643,2181,2.428,2182,4.602,2183,2.969,2184,2.969,2185,2.969,2186,2.969,2187,2.969,2188,2.969,2189,2.969,2190,2.969,2191,2.969,2192,2.969,2193,2.969,2194,2.969,2195,2.969,2196,2.969,2197,4.602,2198,4.602]],["title/components/LogsComponent.html",[21,0.767,99,1.531]],["body/components/LogsComponent.html",[3,0.046,4,0.052,5,0.052,7,0.303,15,0.006,16,0.052,19,0.004,20,0.004,21,1.151,22,1.416,23,2.066,24,1.501,25,1.501,26,1.501,28,1.654,29,2.816,30,1.221,31,3.206,32,2.913,33,2.453,35,2.027,38,1.318,39,2.988,43,1.604,44,1.107,51,0.923,52,1.844,56,0.345,58,0.505,59,0.436,67,1.444,68,2.107,69,2.107,70,1.416,71,2.64,72,1.501,73,1.171,74,1.501,75,1.416,76,1.501,77,1.39,78,1.501,79,1.416,80,2.574,81,1.501,82,1.416,83,1.501,84,1.39,85,2.027,86,2.107,87,1.416,88,1.501,89,1.416,90,2.107,91,1.416,92,2.968,93,1.501,94,1.416,95,1.501,96,1.416,97,1.39,98,1.501,99,2.491,100,1.501,101,1.416,102,1.501,103,1.39,104,1.338,105,1.501,106,1.416,107,1.501,108,1.416,109,1.501,110,1.472,111,1.314,112,1.501,113,1.39,114,1.501,115,1.39,116,1.501,117,1.879,118,2.107,119,1.39,120,1.501,121,1.416,122,1.501,123,1.39,124,1.501,125,1.416,126,1.416,127,1.501,128,1.39,129,1.501,130,1.39,131,1.501,132,1.39,133,1.501,134,1.39,135,1.024,136,1.472,137,1.39,138,1.472,139,1.501,141,2.227,144,3.038,604,4.178,2199,4.347,2200,7.05,2201,6.102,2202,4.347,2203,4.347]],["title/modules/LogsModule.html",[471,1.76,2204,3.386]],["body/modules/LogsModule.html",[3,0.066,4,0.075,5,0.075,15,0.007,16,0.075,19,0.005,20,0.005,21,1.017,56,0.701,58,0.724,59,0.625,99,3.177,237,2.546,297,1.816,473,2.196,474,3.312,487,3.475,488,2.729,489,2.49,491,3.095,493,2.335,495,2.902,496,3.028,497,2.287,571,3.968,572,4.587,580,3.104,596,3.392,604,4.269,1160,3.504,2204,6.755,2205,5.55,2206,5.55,2207,5.55,2208,6.234,2209,6.234]],["title/interfaces/LogsState.html",[0,0.284,2157,3.843]],["body/interfaces/LogsState.html",[0,0.502,2,1.483,3,0.074,4,0.084,5,0.084,7,0.488,8,0.744,13,1.247,14,0.474,15,0.007,16,0.099,19,0.006,20,0.006,604,6.277,2153,5.715,2154,6.221,2155,5.715,2156,6.221,2157,6.792]],["title/interfaces/MakeIntegratedAddressIn.html",[0,0.284,2210,3.843]],["body/interfaces/MakeIntegratedAddressIn.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,12,4.48,13,1.194,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,2210,6.9,2211,7.179]],["title/interfaces/MakeUriIn.html",[0,0.284,1663,3.073]],["body/interfaces/MakeUriIn.html",[0,0.356,2,1.248,3,0.062,4,0.07,5,0.07,7,0.41,8,0.669,9,4.536,10,1.699,12,4.182,13,1.284,14,0.605,15,0.007,16,0.07,19,0.005,20,0.005,54,2.265,56,0.467,73,0.977,722,2.927,1067,4.808,1663,4.883,1669,4.025,1670,4.236,1689,3.844,1767,4.808,1913,5.828,1915,5.233,1916,4.808,2086,5.113,2152,4.808,2212,5.879,2213,8.633,2214,8.633,2215,5.233,2216,5.879,2217,5.879,2218,5.879,2219,5.879]],["title/components/ModalComponent.html",[21,0.767,101,1.531]],["body/components/ModalComponent.html",[3,0.035,4,0.04,5,0.04,7,0.232,8,0.449,10,0.593,14,0.457,15,0.007,16,0.04,19,0.003,20,0.003,21,0.986,22,1.083,23,1.699,24,1.148,25,1.148,26,1.148,28,1.36,29,2.414,30,0.934,31,3.142,32,2.839,33,2.257,35,1.666,38,1.083,39,2.631,41,2.918,43,0.756,44,1.474,48,4.61,51,1.429,52,1.516,56,0.48,57,2.819,58,0.386,59,0.333,67,1.104,68,1.733,69,1.733,70,1.083,71,2.325,72,1.148,73,1.118,74,1.148,75,1.083,76,1.148,77,1.062,78,1.148,79,1.083,80,2.31,81,1.148,82,1.083,83,1.148,84,1.062,85,1.666,86,1.733,87,1.083,88,1.148,89,1.083,90,1.733,91,1.083,92,2.708,93,1.148,94,1.083,95,1.148,96,1.083,97,1.062,98,1.148,99,1.083,100,1.148,101,2.193,102,1.148,103,1.062,104,1.023,105,1.148,106,1.083,107,1.148,108,1.083,109,1.148,110,1.125,111,1.004,112,1.148,113,1.062,114,1.148,115,1.062,116,1.148,117,1.545,118,1.733,119,1.062,120,1.148,121,1.083,122,1.148,123,1.062,124,1.148,125,1.083,126,1.083,127,1.148,128,1.062,129,1.148,130,1.062,131,1.148,132,1.062,133,1.148,134,1.062,135,1.182,136,1.125,137,1.062,138,1.125,139,1.148,147,1.125,158,2.677,162,3.326,187,0.756,229,2.395,233,2.538,271,3.019,297,1.462,320,0.968,389,0.986,438,1.753,440,1.388,468,4.583,494,2.538,778,4.221,996,5.38,1054,5.142,1603,2.538,1988,4.466,2220,3.323,2221,5.017,2222,5.017,2223,6.043,2224,6.043,2225,6.732,2226,6.214,2227,3.323,2228,6.732,2229,5.017,2230,5.017,2231,3.323,2232,3.323,2233,3.323,2234,3.323,2235,3.323,2236,5.017,2237,3.323,2238,6.043,2239,3.323,2240,3.323,2241,3.323,2242,3.323,2243,3.323,2244,3.323,2245,3.323,2246,3.323,2247,5.017,2248,5.017,2249,3.323,2250,5.017,2251,5.017,2252,3.323,2253,5.017,2254,5.017,2255,5.017]],["title/interfaces/ModalConfig.html",[0,0.284,2226,3.843]],["body/interfaces/ModalConfig.html",[0,0.308,2,1.079,3,0.054,4,0.061,5,0.061,7,0.355,8,0.609,10,1.737,13,1.225,14,0.519,15,0.007,16,0.061,19,0.005,20,0.005,38,1.467,44,1.648,51,1.928,223,3.761,468,5.478,2226,5.555,2256,5.084,2257,8.165,2258,8.165,2259,8.165,2260,8.165,2261,8.165,2262,8.165,2263,8.165,2264,8.165,2265,8.165,2266,8.165,2267,8.165,2268,5.084,2269,5.084,2270,5.084,2271,5.084,2272,5.084,2273,5.084,2274,5.084,2275,5.084]],["title/modules/ModalModule.html",[471,1.76,2276,3.589]],["body/modules/ModalModule.html",[3,0.067,4,0.077,5,0.077,15,0.007,16,0.077,19,0.005,20,0.005,56,0.678,58,0.743,59,0.642,101,3.175,473,2.256,474,3.367,487,3.533,488,2.803,489,2.557,491,3.146,493,2.398,495,2.95,496,3.078,497,2.349,596,3.448,2276,7.2,2277,5.7,2278,5.7,2279,5.7,2280,6.403,2281,6.403]],["title/injectables/NetworkHashrateChart.html",[389,1.394,1409,3.843]],["body/injectables/NetworkHashrateChart.html",[3,0.03,4,0.075,5,0.035,7,0.386,8,0.403,10,0.803,13,0.833,14,0.541,15,0.007,16,0.035,19,0.003,20,0.003,28,0.782,38,0.972,44,1.48,46,2.296,47,2.108,51,1.327,52,1.673,55,3.05,56,0.497,58,0.335,59,0.289,64,1.971,67,1.495,73,0.748,147,3.014,171,2.375,186,3.082,187,1.024,225,2.969,253,2.08,284,2.817,320,1.312,371,4.527,372,3.682,374,2.569,386,6.035,389,1.336,390,1.294,414,2.211,437,1.522,524,1.678,542,1.809,548,2.709,622,2.08,694,1.887,758,2.204,778,2.823,845,6.67,847,2.07,848,4.007,849,5.566,850,5.113,852,2.569,853,3.514,855,2.569,858,4.007,861,2.569,862,2.569,863,3.438,864,4.007,865,2.569,866,2.569,867,2.569,868,2.569,869,2.36,870,2.569,871,2.569,872,2.569,873,2.204,874,4.228,875,2.569,876,4.927,877,2.569,878,4.007,879,2.569,880,4.007,881,4.527,882,5.566,883,4.927,884,4.927,885,5.113,886,4.007,887,4.007,985,2.944,1024,3.438,1045,2.569,1051,3.438,1081,4.907,1089,4.007,1091,3.438,1261,3.244,1342,3.682,1345,4.007,1346,3.682,1409,3.682,1433,3.438,1468,4.927,1553,2.36,1697,2.08,2282,6.253,2283,2.886,2284,4.502,2285,5.535,2286,5.535,2287,7.503,2288,2.886,2289,2.886,2290,2.886,2291,2.886,2292,4.502,2293,4.502,2294,5.535,2295,5.535,2296,2.886,2297,2.886,2298,4.502,2299,2.886,2300,4.502,2301,2.886,2302,2.886,2303,2.886,2304,2.886,2305,2.886,2306,2.886,2307,2.886,2308,2.886,2309,2.886,2310,2.886,2311,2.569,2312,4.007,2313,2.886,2314,2.886,2315,4.502,2316,2.569,2317,2.886,2318,2.886,2319,3.682,2320,4.502,2321,4.502,2322,4.502,2323,2.886,2324,2.886,2325,4.502,2326,4.502,2327,4.502,2328,4.502,2329,2.886,2330,4.502,2331,2.886,2332,2.886,2333,4.502,2334,2.886,2335,2.886,2336,2.569,2337,2.886,2338,2.886,2339,2.886,2340,2.886,2341,2.886,2342,2.886,2343,2.886,2344,2.886,2345,2.886,2346,2.886,2347,2.886,2348,2.886,2349,2.886,2350,2.886,2351,2.886,2352,2.886,2353,2.886,2354,2.886,2355,2.886]],["title/components/NoDaemonRunningDialog.html",[21,0.767,103,1.502]],["body/components/NoDaemonRunningDialog.html",[0,0.226,3,0.039,4,0.045,5,0.045,7,0.261,8,0.49,10,0.666,13,0.729,14,0.44,15,0.007,16,0.066,19,0.004,20,0.004,21,1.057,22,1.218,23,1.854,24,1.291,25,1.291,26,1.291,30,1.05,31,3.172,32,2.879,33,2.345,35,1.818,38,1.182,43,1.245,44,1.295,51,0.793,52,1.655,56,0.435,58,0.434,59,0.375,67,1.241,68,1.891,69,1.891,70,1.218,71,2.463,72,1.291,73,1.261,74,1.291,75,1.218,76,1.291,77,1.195,78,1.291,79,1.218,80,2.427,81,1.291,82,1.218,83,1.291,84,1.195,85,1.818,86,1.891,87,1.218,88,1.291,89,1.218,90,1.891,91,1.218,92,2.987,93,1.291,94,1.218,95,1.291,96,1.218,97,1.195,98,1.291,99,1.218,100,1.291,101,1.218,102,1.291,103,2.28,104,1.995,105,1.291,106,1.218,107,1.291,108,1.218,109,1.291,110,1.266,111,1.129,112,1.291,113,1.195,114,1.291,115,1.195,116,1.291,117,1.685,118,1.891,119,1.195,120,1.291,121,1.218,122,1.291,123,1.195,124,1.291,125,1.218,126,1.218,127,1.291,128,1.195,129,1.291,130,1.195,131,1.291,132,1.195,133,1.291,134,1.195,135,0.88,136,1.266,137,1.195,138,1.266,139,1.291,147,2.687,187,0.85,203,6.18,229,2.693,548,2.522,733,4.664,741,4.873,841,2.804,1292,4.873,1373,2.854,1766,4.873,1932,6.209,1933,6.759,1934,3.326,1935,3.326,1936,3.326,1937,6.759,1938,2.854,1939,4.873,1940,6.349,1941,4.873,1942,6.349,1943,3.326,2356,3.737,2357,3.737,2358,3.737,2359,3.737,2360,3.737,2361,5.474,2362,5.474,2363,4.873,2364,5.474,2365,5.474]],["title/components/OpenComponent.html",[21,0.767,106,1.531]],["body/components/OpenComponent.html",[3,0.032,4,0.037,5,0.037,7,0.214,8,0.423,10,0.842,13,1.055,14,0.538,15,0.007,16,0.037,19,0.003,20,0.003,21,0.939,22,1,23,1.599,24,1.06,25,1.06,26,1.06,28,1.28,29,2.298,30,0.862,31,3.119,32,2.83,33,2.621,35,1.568,38,1.02,39,2.525,41,2.746,43,0.698,44,1.393,46,0.981,47,0.862,48,3.233,51,1.222,52,0.928,56,0.457,57,2.654,58,0.356,59,0.308,67,1.019,68,1.631,69,1.631,70,1,71,2.232,72,1.06,73,1.423,74,1.06,75,1,76,1.06,77,0.981,78,1.06,79,1,80,2.23,81,1.06,82,1,83,1.06,84,0.981,85,1.568,86,1.631,87,1,88,1.06,89,1,90,1.631,91,1,92,2.647,93,1.06,94,1,95,1.06,96,1,97,0.981,98,1.06,99,1,100,1.06,101,1,102,1.06,103,0.981,104,0.945,105,1.06,106,2.105,107,1.06,108,1,109,1.06,110,1.039,111,0.928,112,1.06,113,0.981,114,1.06,115,0.981,116,1.06,117,1.454,118,1.631,119,0.981,120,1.06,121,1,122,1.06,123,0.981,124,1.06,125,1,126,1,127,1.06,128,0.981,129,1.06,130,0.981,131,1.06,132,0.981,133,1.06,134,0.981,135,0.723,136,1.039,137,0.981,138,1.039,139,1.06,147,2.751,158,1.081,162,2.519,171,2.491,174,3.632,178,7.384,187,1.074,206,1.343,251,1.376,268,2.732,269,2.732,271,1.376,297,0.894,308,1.619,378,2.961,440,1.282,468,1.851,600,2.344,605,4.048,656,2.961,728,5.53,733,2.007,752,2.646,783,2.344,784,2.212,805,2.212,813,2.212,814,2.344,1116,2.51,1269,2.344,1495,1.67,1548,2.344,1918,2.101,1919,3.897,1924,2.101,2366,3.069,2367,4.722,2368,6.784,2369,4.722,2370,4.722,2371,3.069,2372,3.069,2373,4.722,2374,3.069,2375,4.203,2376,4.722,2377,4.722,2378,4.203,2379,2.51,2380,3.069,2381,2.732,2382,2.732,2383,2.732,2384,2.51,2385,2.732,2386,2.732,2387,3.069,2388,2.212,2389,2.732,2390,2.732,2391,2.51,2392,4.706,2393,2.732,2394,4.722,2395,4.722,2396,4.722]],["title/interfaces/OpenWallet.html",[0,0.284,1700,2.834]],["body/interfaces/OpenWallet.html",[0,0.497,2,1.098,3,0.054,4,0.062,5,0.062,7,0.361,8,0.616,10,1.225,12,2.506,13,1.26,14,0.466,15,0.007,16,0.102,17,3.383,19,0.005,20,0.005,34,2.907,54,2.362,55,2.421,56,0.613,135,1.218,191,4.309,223,3.213,225,1.979,259,3.12,284,1.787,297,1.507,320,1.507,414,2.066,420,4.383,605,2.729,752,3.935,829,4.488,830,4.488,832,3.383,841,2.649,961,3.12,1659,3.383,1660,3.951,1661,4.144,1662,3.542,1663,4.494,1664,3.951,1665,4.838,1666,3.542,1667,3.951,1668,4.952,1669,3.542,1670,3.728,1671,3.951,1672,3.542,1673,3.542,1674,3.12,1675,4.705,1676,3.728,1677,3.728,1678,3.383,1679,3.542,1680,3.542,1681,3.542,1682,3.542,1683,3.383,1684,3.383,1685,3.383,1686,3.542,1687,3.383,1688,3.542,1689,3.383,1690,3.542,1691,3.542,1692,4.488,1693,3.383,1694,3.542,1695,3.951,1696,3.951,1697,3.728,1698,3.542,1699,3.383,1700,4.144,1701,3.728]],["title/classes/PaginatorOptions.html",[59,0.471,2397,3.386]],["body/classes/PaginatorOptions.html",[3,0.061,4,0.069,5,0.069,7,0.404,8,0.663,14,0.583,15,0.007,16,0.089,19,0.005,20,0.005,28,2.005,44,1.558,46,2.745,47,2.413,54,2.654,59,0.741,64,3.759,212,5.065,262,3.966,831,6.05,873,5.65,985,5.615,1000,7.022,1001,7.022,1002,7.022,2397,5.331,2398,4.424,2399,5.156,2400,6.665,2401,5.792,2402,6.585,2403,5.792,2404,6.585,2405,5.792,2406,5.792,2407,5.156]],["title/classes/PaginatorOptionsInterface.html",[59,0.471,2400,3.843]],["body/classes/PaginatorOptionsInterface.html",[3,0.064,4,0.073,5,0.073,7,0.423,8,0.682,14,0.592,15,0.007,16,0.091,19,0.005,20,0.005,28,1.643,44,1.584,54,2.67,59,0.763,64,3.332,212,5.211,262,4.149,831,6.224,873,5.813,985,5.708,1000,7.139,1001,7.139,1002,7.139,2397,4.366,2398,4.628,2399,5.394,2400,6.805,2402,5.394,2404,5.394,2407,5.394,2408,6.059,2409,6.059,2410,6.059,2411,6.059]],["title/interfaces/ParseUri.html",[0,0.284,1698,3.217]],["body/interfaces/ParseUri.html",[0,0.5,2,1.115,3,0.055,4,0.063,5,0.063,7,0.366,8,0.622,10,1.238,12,2.545,13,1.219,14,0.357,15,0.007,16,0.103,17,3.435,19,0.005,20,0.005,34,2.952,54,2.374,55,2.446,56,0.618,135,1.237,191,4.353,223,3.233,225,2.009,259,3.168,284,1.814,297,1.53,320,1.53,414,2.098,420,3.556,605,2.771,752,3.192,829,4.522,830,4.522,832,3.435,841,2.691,961,3.168,1659,3.435,1660,4.012,1661,4.187,1662,3.597,1663,5.409,1664,4.012,1665,4.875,1666,3.597,1667,4.012,1668,5.003,1669,3.597,1670,3.786,1671,4.012,1672,3.597,1673,3.597,1674,3.168,1675,4.753,1676,3.786,1677,3.786,1678,3.435,1679,3.597,1680,3.597,1681,3.597,1682,3.597,1683,3.435,1684,3.435,1685,3.435,1686,3.597,1687,3.435,1688,3.597,1689,3.435,1690,3.597,1691,3.597,1692,4.522,1693,3.435,1694,3.597,1695,4.012,1696,4.012,1697,3.786,1698,4.753,1699,5.409,1700,3.168,1701,3.786]],["title/interfaces/Payment.html",[0,0.284,2086,3.217]],["body/interfaces/Payment.html",[0,0.392,2,1.374,3,0.068,4,0.077,5,0.077,7,0.452,8,0.71,12,4.328,13,1.243,14,0.622,15,0.007,16,0.077,19,0.005,20,0.005,54,2.653,1683,5.843,1913,5.843,2086,5.429,2142,7.307,2412,6.473,2413,8.935]],["title/modules/PipesModule.html",[471,1.76,1130,2.946]],["body/modules/PipesModule.html",[3,0.049,4,0.056,5,0.056,15,0.007,16,0.056,19,0.004,20,0.004,56,0.628,58,0.546,59,0.471,473,1.656,474,2.754,487,2.889,488,2.058,489,1.878,491,2.573,493,1.761,495,2.413,496,2.518,497,1.725,596,2.82,1130,6.181,1132,6.715,1948,7.117,1962,7.117,2069,7.117,2106,7.117,2414,4.184,2415,4.184,2416,4.184,2417,7.117,2418,7.117,2419,7.117,2420,7.117,2421,4.701,2422,4.701,2423,4.701]],["title/interfaces/PluginDefinition.html",[0,0.284,2424,3.843]],["body/interfaces/PluginDefinition.html",[0,0.46,2,1.283,3,0.064,4,0.072,5,0.072,7,0.422,8,0.681,13,1.288,14,0.61,15,0.007,16,0.099,19,0.005,20,0.005,54,1.668,55,2.129,64,2.646,73,1.449,104,2.685,186,4.138,385,4.355,694,3.952,1097,3.952,2424,6.797,2425,4.943,2426,7.763,2427,7.763,2428,7.763,2429,7.132,2430,5.38,2431,5.38,2432,4.943,2433,4.943,2434,4.943,2435,4.943]],["title/interfaces/Plugins.html",[0,0.284,186,3.217]],["body/interfaces/Plugins.html",[0,0.476,2,1.355,3,0.067,4,0.076,5,0.076,7,0.445,8,0.705,13,1.185,14,0.534,15,0.007,16,0.102,19,0.005,20,0.005,54,2.352,55,2.25,64,2.795,73,1.061,104,1.966,186,5.384,385,4.602,694,4.176,1097,4.176,2424,7.273,2425,5.222,2426,5.684,2427,5.684,2428,5.684,2429,6.431,2430,7.916,2431,7.916,2432,5.222,2433,5.222,2434,5.222,2435,5.222]],["title/components/PostComponent.html",[21,0.767,108,1.531]],["body/components/PostComponent.html",[3,0.038,4,0.044,5,0.044,7,0.255,8,0.483,10,0.961,14,0.366,15,0.007,16,0.044,19,0.004,20,0.004,21,1.044,22,1.191,23,1.824,24,1.263,25,1.263,26,1.263,28,1.46,29,2.555,30,1.027,31,3.166,32,2.874,33,2.329,35,1.789,38,1.164,39,2.758,43,0.832,44,1.477,51,1.498,52,2.274,56,0.428,58,0.424,59,0.366,67,1.214,68,1.861,69,1.861,70,1.191,71,2.438,72,1.263,73,1.25,74,1.263,75,1.191,76,1.263,77,1.169,78,1.263,79,1.191,80,2.406,81,1.263,82,1.191,83,1.263,84,1.169,85,1.789,86,1.861,87,1.191,88,1.263,89,1.191,90,1.861,91,1.191,92,2.865,93,1.263,94,1.191,95,1.263,96,1.191,97,1.169,98,1.263,99,1.191,100,1.263,101,1.191,102,1.263,103,1.169,104,1.126,105,1.263,106,1.191,107,1.263,108,2.3,109,1.263,110,1.238,111,1.105,112,1.263,113,1.169,114,1.263,115,1.169,116,1.263,117,1.659,118,1.861,119,1.169,120,1.263,121,1.191,122,1.263,123,1.169,124,1.263,125,1.191,126,1.191,127,1.263,128,1.169,129,1.263,130,1.169,131,1.263,132,1.169,133,1.263,134,1.169,135,0.861,136,1.238,137,1.169,138,1.238,139,1.263,141,1.873,144,2.682,147,2.666,158,2.254,159,4.61,164,4.616,187,1.226,320,1.065,440,1.527,502,4.257,504,2.205,548,1.789,722,3.185,802,3.882,894,4.38,915,3.255,1170,2.635,1172,3.378,2436,3.656,2437,6.397,2438,5.387,2439,4.796,2440,7.058,2441,4.796,2442,5.387,2443,3.656,2444,4.796,2445,3.656,2446,3.255,2447,3.656,2448,3.656,2449,3.656,2450,3.656,2451,3.656,2452,3.656,2453,3.255,2454,5.387,2455,3.656,2456,3.656,2457,5.387]],["title/modules/PostModule.html",[471,1.76,2458,3.386]],["body/modules/PostModule.html",[3,0.065,4,0.073,5,0.073,15,0.007,16,0.073,19,0.005,20,0.005,56,0.75,58,0.713,59,0.615,108,3.158,473,2.162,474,3.28,487,3.441,488,2.687,489,2.451,491,3.065,493,2.299,495,2.874,496,2.999,497,2.252,512,5.254,513,4.202,518,4.312,519,3.45,531,5.86,532,4.423,596,3.359,713,4.312,714,3.45,1130,4.811,1131,4.688,2458,6.732,2459,5.463,2460,5.463,2461,5.463,2462,6.138,2463,6.138]],["title/modules/PostRoutingModule.html",[471,1.76,2464,3.843]],["body/modules/PostRoutingModule.html",[3,0.071,4,0.081,5,0.081,15,0.007,16,0.081,19,0.006,20,0.006,56,0.694,58,0.784,59,0.677,237,2.756,297,1.966,455,5.52,473,2.378,493,2.528,495,3.047,496,3.179,497,2.476,570,4.071,571,4.166,572,4.75,580,3.36,596,2.955,1160,3.793,2464,6.652,2465,6.75,2466,5.155,2467,6.75,2468,6.75]],["title/components/ProfileComponent.html",[21,0.767,110,1.591]],["body/components/ProfileComponent.html",[3,0.038,4,0.043,5,0.043,7,0.253,8,0.479,13,0.713,14,0.246,15,0.007,16,0.043,19,0.004,20,0.004,21,1.038,22,1.18,23,1.812,24,1.251,25,1.251,26,1.251,28,1.451,29,2.541,30,1.018,31,3.164,32,2.872,33,2.322,35,1.777,38,1.156,39,2.746,43,1.447,44,1.155,46,1.158,47,1.018,51,0.769,52,1.617,56,0.425,58,0.421,59,0.363,64,2.342,67,1.203,68,1.848,69,1.848,70,1.18,71,2.427,72,1.251,73,1.245,74,1.251,75,1.18,76,1.251,77,1.158,78,1.251,79,1.18,80,2.719,81,1.251,82,1.18,83,1.251,84,1.158,85,1.777,86,1.848,87,1.18,88,1.251,89,1.18,90,1.848,91,1.18,92,2.772,93,1.251,94,1.18,95,1.251,96,1.18,97,1.158,98,1.251,99,1.18,100,1.251,101,1.18,102,1.251,103,1.158,104,1.115,105,1.251,106,1.18,107,1.251,108,1.18,109,1.251,110,2.38,111,1.923,112,1.251,113,1.158,114,1.251,115,1.158,116,1.251,117,1.647,118,1.848,119,1.158,120,1.251,121,1.18,122,1.251,123,1.158,124,1.251,125,1.18,126,1.18,127,1.251,128,1.158,129,1.251,130,1.158,131,1.251,132,1.158,133,1.251,134,1.158,135,0.853,136,1.227,137,1.158,138,1.227,139,1.251,141,1.855,144,2.664,147,2.155,203,5.064,259,4.238,400,3.499,584,4.238,605,2.823,662,5.367,740,4.376,841,2.741,863,4.86,2469,3.623,2470,5.993,2471,6.362,2472,5.351,2473,6.362,2474,3.623,2475,3.623,2476,6.362,2477,5.351,2478,7.027,2479,6.362,2480,4.763,2481,5.351,2482,5.351,2483,3.623,2484,3.623,2485,3.623,2486,5.351,2487,5.351,2488,8.332,2489,6.255,2490,6.255]],["title/interfaces/ProfileState.html",[0,0.284,2491,3.843]],["body/interfaces/ProfileState.html",[0,0.355,2,1.245,3,0.062,4,0.07,5,0.07,7,0.409,8,0.668,13,1.283,14,0.618,15,0.007,16,0.07,19,0.005,20,0.005,73,1.239,176,3.094,381,4.796,414,2.978,548,2.476,561,4.796,605,4.698,688,5.22,738,4.796,847,3.966,1104,4.479,1802,4.796,2470,5.694,2491,6.097,2492,5.864,2493,8.626,2494,8.626,2495,8.626,2496,8.626,2497,7.455,2498,5.864,2499,5.864,2500,5.864,2501,5.864,2502,5.864,2503,5.864,2504,5.864,2505,5.864,2506,5.864,2507,4.479,2508,5.864]],["title/interfaces/QueryKeyIn.html",[0,0.284,2509,3.843]],["body/interfaces/QueryKeyIn.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,13,1.194,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,2509,6.9,2510,7.179,2511,9.249]],["title/interfaces/QueryKeyOut.html",[0,0.284,2512,3.843]],["body/interfaces/QueryKeyOut.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,13,1.194,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,414,3.694,2512,6.9,2513,7.179]],["title/pipes/RemoveTrailingZerosPipe.html",[1539,2.057,2417,3.589]],["body/pipes/RemoveTrailingZerosPipe.html",[3,0.065,4,0.073,5,0.073,10,1.095,15,0.007,16,0.073,19,0.005,20,0.005,28,1.664,30,1.724,38,1.326,43,1.396,44,1.114,47,2.464,51,1.303,55,2.162,56,0.488,58,0.713,59,0.615,64,3.952,73,1.391,187,1.396,225,2.935,320,2.235,1539,3.359,1949,3.57,1952,3.702,1953,6.275,1957,4.627,1958,4.627,2417,5.86,2514,6.138,2515,7.673,2516,6.138,2517,6.138,2518,7.673,2519,6.138,2520,7.673,2521,6.138,2522,6.138]],["title/components/RestoreComponent.html",[21,0.767,113,1.502]],["body/components/RestoreComponent.html",[3,0.032,4,0.037,5,0.037,7,0.214,8,0.423,9,2.289,10,1.027,14,0.321,15,0.007,16,0.037,19,0.003,20,0.003,21,0.94,22,1.001,23,1.601,24,1.061,25,1.061,26,1.061,28,1.281,29,2.3,30,0.863,31,3.12,32,2.83,33,2.574,35,1.57,38,1.021,39,2.527,43,0.699,44,1.174,51,1.003,52,1.741,56,0.514,58,0.357,59,0.308,63,3.61,67,1.021,68,1.632,69,1.632,70,1.001,71,2.233,72,1.061,73,1.074,74,1.061,75,1.001,76,1.061,77,0.982,78,1.061,79,1.001,80,2.231,81,1.061,82,1.001,83,1.061,84,0.982,85,1.57,86,1.632,87,1.001,88,1.061,89,1.001,90,1.632,91,1.001,92,2.648,93,1.061,94,1.001,95,1.061,96,1.001,97,0.982,98,1.061,99,1.001,100,1.061,101,1.001,102,1.061,103,0.982,104,0.946,105,1.061,106,1.001,107,1.061,108,1.001,109,1.061,110,1.041,111,0.929,112,1.061,113,2.067,114,1.061,115,0.982,116,1.061,117,1.455,118,1.632,119,0.982,120,1.061,121,1.001,122,1.061,123,0.982,124,1.061,125,1.001,126,1.001,127,1.061,128,0.982,129,1.061,130,0.982,131,1.061,132,0.982,133,1.061,134,0.982,135,1.989,136,1.041,137,0.982,138,1.041,139,1.061,174,5.151,187,1.31,338,2.23,414,2.583,420,2.421,440,1.284,717,1.621,752,3.389,992,5.02,1701,3.406,1918,2.104,1919,3.9,1924,2.104,1973,3.406,2523,3.073,2524,4.726,2525,5.759,2526,4.66,2527,4.726,2528,3.073,2529,3.073,2530,5.288,2531,2.513,2532,2.735,2533,3.073,2534,2.735,2535,4.207,2536,3.073,2537,4.207,2538,3.073,2539,2.735,2540,4.207,2541,4.207,2542,3.073,2543,3.073,2544,3.073,2545,3.073,2546,3.073,2547,3.073,2548,3.073,2549,3.073,2550,3.073,2551,3.073,2552,3.073,2553,4.726,2554,4.207,2555,4.207,2556,5.756,2557,3.865,2558,4.726,2559,4.726,2560,4.726,2561,4.726,2562,4.726,2563,3.865,2564,4.726]],["title/interfaces/RestoreWallet.html",[0,0.284,2526,3.386]],["body/interfaces/RestoreWallet.html",[0,0.289,2,1.014,3,0.05,4,0.057,5,0.089,7,0.333,8,0.583,9,4.164,10,1.638,11,2.378,13,1.266,14,0.597,15,0.007,16,0.057,17,5.205,19,0.004,20,0.004,33,2.598,54,2.045,55,2.294,63,5.66,73,1.082,85,2.163,135,1.534,158,2.804,193,3.271,223,2.896,225,3.045,262,4.459,338,3.072,414,3.179,420,4.077,451,4.693,752,3.952,807,3.271,833,4.459,844,5.326,1104,4.974,1684,4.259,1799,4.974,2526,4.693,2535,7.085,2537,7.085,2540,7.085,2541,7.085,2563,6.509,2565,4.777,2566,9.183,2567,6.513,2568,6.513,2569,6.513]],["title/components/RootComponent.html",[21,0.767,115,1.502]],["body/components/RootComponent.html",[3,0.037,4,0.043,5,0.043,7,0.248,8,0.472,14,0.505,15,0.007,16,0.043,19,0.004,20,0.004,21,1.026,22,1.157,23,1.786,24,1.227,25,1.227,26,1.227,30,0.998,31,3.159,32,2.867,33,2.307,35,1.751,38,1.139,43,1.431,44,1.464,46,1.686,47,1.482,51,0.754,52,1.074,56,0.282,58,0.412,59,0.356,67,1.18,68,1.821,69,1.821,70,1.157,71,2.404,72,1.227,73,1.045,74,1.227,75,1.157,76,1.227,77,1.135,78,1.227,79,1.157,80,2.377,81,1.227,82,1.157,83,1.227,84,1.135,85,1.751,86,1.821,87,1.157,88,1.227,89,1.157,90,1.821,91,1.157,92,2.847,93,1.227,94,1.157,95,1.227,96,1.157,97,1.135,98,1.227,99,1.157,100,1.227,101,1.157,102,1.227,103,1.135,104,1.094,105,1.227,106,1.157,107,1.227,108,1.157,109,1.227,110,1.203,111,1.074,112,1.227,113,1.135,114,1.227,115,2.225,116,1.227,117,1.624,118,1.821,119,1.135,120,1.227,121,1.157,122,1.227,123,1.135,124,1.227,125,1.157,126,1.157,127,1.227,128,1.135,129,1.227,130,1.135,131,1.227,132,1.135,133,1.227,134,1.135,135,0.837,136,1.203,137,1.135,138,1.203,139,1.227,147,3.079,176,2.782,223,3.044,284,1.821,385,3.8,438,2.782,584,3.18,600,4.804,681,4.694,748,5.599,760,4.028,1737,4.313,2099,4.028,2439,5.599,2570,3.552,2571,5.273,2572,6.289,2573,6.289,2574,6.96,2575,5.273,2576,3.552,2577,3.552,2578,3.552,2579,3.552,2580,3.552,2581,4.313,2582,5.273,2583,5.273,2584,5.273,2585,5.273,2586,5.273,2587,5.273,2588,5.273,2589,5.273,2590,5.273,2591,5.273,2592,5.273,2593,5.273,2594,5.273,2595,5.273,2596,5.273,2597,4.694,2598,5.273,2599,6.96,2600,4.694,2601,5.273,2602,5.273]],["title/modules/RootModule.html",[471,1.76,2603,3.386]],["body/modules/RootModule.html",[3,0.053,4,0.061,5,0.061,15,0.007,16,0.061,19,0.005,20,0.005,56,0.775,58,0.589,59,0.509,115,2.797,206,2.221,242,2.851,243,2.95,251,3.042,473,1.787,474,2.9,485,5.088,487,3.042,488,2.221,489,2.026,491,2.709,493,2.541,495,2.541,496,2.651,497,1.861,508,4.253,509,3.181,510,5.547,511,4.149,512,4.644,513,3.474,518,3.812,519,2.851,522,4.253,523,3.06,524,2.95,531,5.181,532,3.656,713,3.812,714,2.851,715,5.547,717,2.676,1010,3.474,1120,6.305,1129,5.547,1130,4.253,1131,3.875,1137,4.149,1143,6.038,2458,6.305,2603,6.933,2604,4.516,2605,4.516,2606,4.516,2607,6.305,2608,6.305,2609,5.073,2610,5.073,2611,5.547,2612,4.149,2613,6.783,2614,5.073,2615,5.073,2616,5.073,2617,5.073,2618,5.073]],["title/modules/RootRoutingModule.html",[471,1.76,566,3.386]],["body/modules/RootRoutingModule.html",[3,0.06,4,0.068,5,0.068,11,3.637,15,0.007,16,0.068,19,0.005,20,0.005,21,1.192,56,0.729,58,0.66,59,0.569,115,2.335,123,2.335,152,4.778,171,3.854,225,2.795,237,2.32,297,1.655,311,4.778,322,4.646,326,3.89,473,2.002,474,3.123,487,3.277,488,2.487,489,2.269,491,2.269,492,3.193,493,2.737,495,2.737,496,2.855,497,2.084,548,2.427,566,6.505,570,3.426,571,3.742,572,4.394,578,5.064,579,3.89,580,3.637,582,6.503,583,5.975,596,2.487,655,3.89,1160,3.193,2603,6.505,2619,5.681,2620,5.681,2621,5.681,2622,5.681,2623,5.681,2624,5.681,2625,5.681,2626,5.681,2627,5.681,2628,5.681,2629,5.681,2630,5.681]],["title/components/SettingsComponent.html",[21,0.767,117,1.447]],["body/components/SettingsComponent.html",[3,0.043,4,0.049,5,0.049,7,0.283,8,0.521,13,0.541,14,0.276,15,0.007,16,0.049,19,0.004,20,0.004,21,1.109,22,1.324,23,1.97,24,1.404,25,1.404,26,1.404,28,1.577,29,2.714,30,1.142,31,3.191,32,2.898,33,2.406,35,1.932,38,1.256,39,2.899,43,1.546,44,1.346,46,1.299,47,1.142,51,1.235,52,2.242,56,0.323,58,0.472,59,0.407,67,1.35,68,2.009,69,2.009,70,1.324,71,2.562,72,1.404,73,1.129,74,1.404,75,1.324,76,1.404,77,1.299,78,1.404,79,1.324,80,2.509,81,1.404,82,1.324,83,1.404,84,1.299,85,1.932,86,2.009,87,1.324,88,1.404,89,1.324,90,2.009,91,1.324,92,2.853,93,1.404,94,1.324,95,1.404,96,1.324,97,1.299,98,1.404,99,1.324,100,1.404,101,1.324,102,1.404,103,1.299,104,1.251,105,1.404,106,1.324,107,1.404,108,1.324,109,1.404,110,1.376,111,1.228,112,1.404,113,1.299,114,1.404,115,1.299,116,1.404,117,2.417,118,2.009,119,1.299,120,1.404,121,1.324,122,1.404,123,1.299,124,1.404,125,1.324,126,1.324,127,1.404,128,1.299,129,1.404,130,1.299,131,1.404,132,1.299,133,1.404,134,1.299,135,0.957,136,1.376,137,1.299,138,1.376,139,1.404,141,2.081,144,2.896,164,4.85,335,3.617,400,3.804,894,4.652,2631,4.064,2632,6.794,2633,5.178,2634,6.794,2635,5.817,2636,4.064,2637,4.064,2638,5.817,2639,5.817,2640,4.064,2641,4.064]],["title/components/SettingsComponent-1.html",[21,0.638,64,1.712,117,1.204]],["body/components/SettingsComponent-1.html",[3,0.044,4,0.051,5,0.051,7,0.295,15,0.006,16,0.051,19,0.004,20,0.004,21,1.133,22,1.376,23,2.025,24,1.459,25,1.459,26,1.459,28,1.621,29,2.772,30,1.187,31,3.2,32,2.907,33,2.528,35,1.986,38,1.291,39,2.95,43,1.579,44,1.085,51,0.896,52,1.807,56,0.336,58,0.49,59,0.423,64,1.849,66,4.566,67,1.403,68,2.065,69,2.065,70,1.376,71,2.607,72,1.459,73,1.153,74,1.459,75,1.376,76,1.459,77,1.35,78,1.459,79,1.376,80,2.546,81,1.459,82,1.376,83,1.459,84,1.35,85,1.986,86,2.065,87,1.376,88,1.459,89,1.376,90,2.065,91,1.376,92,2.952,93,1.459,94,1.376,95,1.459,96,1.376,97,1.35,98,1.459,99,1.376,100,1.459,101,1.376,102,1.459,103,1.35,104,1.3,105,1.459,106,1.376,107,1.459,108,1.376,109,1.459,110,1.43,111,1.276,112,1.459,113,1.35,114,1.459,115,1.35,116,1.459,117,2.452,118,2.065,119,1.35,120,1.459,121,1.376,122,1.459,123,1.35,124,1.459,125,1.376,126,1.376,127,1.459,128,1.35,129,1.459,130,1.35,131,1.459,132,1.35,133,1.459,134,1.35,135,0.995,136,1.43,137,1.35,138,1.43,139,1.459,325,4.566,400,4.935,605,3.154,847,2.749,1099,4.889,2633,5.322,2642,4.223,2643,4.223,2644,4.223,2645,5.322,2646,5.979,2647,4.223,2648,4.223]],["title/injectables/SettingsEffects.html",[389,1.394,2649,4.183]],["body/injectables/SettingsEffects.html",[3,0.06,4,0.068,5,0.068,7,0.394,8,0.653,10,1.008,13,1.133,14,0.547,15,0.007,16,0.068,19,0.005,20,0.005,43,1.286,44,1.322,46,1.807,47,1.589,56,0.676,58,0.656,59,0.567,73,0.939,158,1.992,160,7.172,174,4.529,175,6.959,187,1.286,190,5.957,191,5.336,192,5.957,241,4.319,242,3.178,243,3.288,284,2.516,320,2.122,389,2.161,390,2.536,440,2.362,1507,4.319,1508,6.497,1510,6.589,1511,5.957,1537,4.624,1550,4.624,1551,3.872,2649,6.483,2650,5.654,2651,5.654,2652,7.283,2653,6.483,2654,7.283,2655,5.654]],["title/modules/SettingsModule.html",[471,1.76,2656,3.589]],["body/modules/SettingsModule.html",[3,0.056,4,0.063,5,0.063,11,2.627,15,0.007,16,0.063,19,0.005,20,0.005,21,0.861,32,1.566,56,0.762,58,0.613,59,0.529,117,2.778,152,3.451,171,2.784,237,2.155,284,1.822,297,1.537,311,3.451,400,4.553,473,1.859,474,2.976,487,3.123,488,2.31,489,2.107,491,2.781,493,2.608,495,2.608,496,2.721,497,1.936,508,4.366,509,3.309,512,4.767,513,3.613,514,5.017,515,3.802,518,3.913,519,2.966,522,4.366,523,3.182,524,3.069,548,1.753,571,3.566,572,4.24,580,3.466,584,3.182,596,2.31,604,3.613,713,3.913,714,2.966,841,2.703,1139,5.694,1140,4.315,1141,4.315,1160,2.966,1218,4.697,2204,6.375,2466,4.03,2611,5.694,2612,4.315,2656,6.994,2657,4.697,2658,4.697,2659,5.276,2660,5.276,2661,5.694,2662,4.315,2663,5.276,2664,5.276,2665,5.276,2666,4.697,2667,5.276,2668,5.276]],["title/modules/SettingsRoutingModule.html",[471,1.76,592,3.589]],["body/modules/SettingsRoutingModule.html",[3,0.069,4,0.078,5,0.078,15,0.007,16,0.078,19,0.005,20,0.005,56,0.712,58,0.758,59,0.654,237,2.665,297,1.901,400,4.268,473,2.299,491,2.607,492,3.668,493,2.445,495,2.985,496,3.115,497,2.394,570,3.936,571,4.082,572,4.681,578,5.395,579,4.469,580,3.249,592,6.087,596,2.857,655,4.469,1160,3.668,2116,5.81,2466,4.985,2669,6.526,2670,6.526,2671,6.526]],["title/interfaces/SettingsState.html",[0,0.284,2672,4.183]],["body/interfaces/SettingsState.html",[0,0.354,2,1.242,3,0.062,4,0.07,5,0.07,7,0.408,8,0.667,13,1.212,14,0.635,15,0.007,16,0.07,19,0.005,20,0.005,191,5.58,206,3.258,223,3.839,985,3.825,1091,4.468,2336,5.207,2672,6.626,2673,5.85,2674,8.618,2675,8.618,2676,8.618,2677,8.618,2678,8.618,2679,8.618,2680,8.618,2681,5.85,2682,5.85]],["title/pipes/ShruggiePipe.html",[1539,2.057,2418,3.589]],["body/pipes/ShruggiePipe.html",[3,0.069,4,0.079,5,0.079,10,1.17,15,0.007,16,0.079,19,0.005,20,0.005,28,1.779,30,1.844,38,1.417,44,1.191,51,1.393,56,0.521,58,0.762,59,0.658,73,1.433,187,1.493,284,2.267,308,4.736,320,2.33,1081,4.292,1539,3.5,1949,3.817,1952,3.958,1957,4.823,1958,3.958,1965,5.762,2418,6.107,2683,6.563,2684,7.996,2685,6.563,2686,6.563]],["title/components/SpartaComponent.html",[21,0.767,119,1.502]],["body/components/SpartaComponent.html",[3,0.038,4,0.043,5,0.043,7,0.251,8,0.477,10,0.949,13,0.933,14,0.507,15,0.007,16,0.043,19,0.004,20,0.004,21,1.034,22,1.171,23,1.802,24,1.242,25,1.242,26,1.242,28,1.442,29,2.53,30,1.01,31,3.162,32,2.87,33,2.316,35,1.767,38,1.149,39,2.736,43,0.818,44,1.42,51,1.129,52,1.914,56,0.503,58,0.417,59,0.36,67,1.194,68,1.838,69,1.838,70,1.171,71,2.418,72,1.242,73,1.241,74,1.242,75,1.171,76,1.242,77,1.149,78,1.242,79,1.171,80,2.389,81,1.242,82,1.171,83,1.242,84,1.149,85,1.767,86,1.838,87,1.171,88,1.242,89,1.171,90,1.838,91,1.171,92,2.855,93,1.242,94,1.171,95,1.242,96,1.171,97,1.149,98,1.242,99,1.171,100,1.242,101,1.171,102,1.242,103,1.149,104,1.107,105,1.242,106,1.171,107,1.242,108,1.171,109,1.242,110,1.218,111,1.087,112,1.242,113,1.149,114,1.242,115,1.149,116,1.242,117,1.638,118,1.838,119,2.238,120,1.242,121,1.171,122,1.242,123,1.149,124,1.242,125,1.171,126,1.171,127,1.242,128,1.149,129,1.242,130,1.149,131,1.242,132,1.149,133,1.242,134,1.149,135,1.253,136,1.218,137,1.149,138,1.218,139,1.242,141,1.841,144,2.649,147,2.145,158,1.267,169,5.725,187,1.21,237,1.468,297,1.55,440,1.502,447,2.351,502,4.222,504,2.168,548,1.194,696,5.18,722,3.895,803,4.565,825,4.736,853,2.021,1170,2.591,1172,3.336,1193,2.746,1196,2.746,1638,2.746,2441,4.736,2444,4.736,2446,6.232,2687,3.595,2688,5.321,2689,6.334,2690,5.321,2691,6.334,2692,5.321,2693,3.595,2694,3.595,2695,3.595,2696,3.595,2697,3.2,2698,3.595,2699,3.595,2700,3.595,2701,3.595,2702,3.595,2703,3.595,2704,3.595,2705,3.595,2706,3.595,2707,3.595,2708,3.595,2709,5.321]],["title/modules/SpartaModule.html",[471,1.76,2607,3.386]],["body/modules/SpartaModule.html",[3,0.068,4,0.078,5,0.078,15,0.007,16,0.078,19,0.005,20,0.005,56,0.711,58,0.753,59,0.651,119,2.984,473,2.287,474,3.395,487,3.562,488,2.841,489,2.592,491,3.172,493,2.431,495,2.975,496,3.104,497,2.381,713,4.464,714,3.648,2607,6.727,2710,5.778,2711,5.778,2712,6.491,2713,6.491]],["title/modules/SpartaRoutingModule.html",[471,1.76,2714,3.843]],["body/modules/SpartaRoutingModule.html",[3,0.071,4,0.081,5,0.081,15,0.007,16,0.081,19,0.006,20,0.006,21,1.105,56,0.721,58,0.786,59,0.678,119,2.605,237,2.764,297,1.972,473,2.385,493,2.535,495,3.052,496,3.184,497,2.483,570,4.082,571,4.173,572,4.756,580,3.37,596,2.963,1160,3.804,2714,6.663,2715,6.769,2716,6.769,2717,6.769]],["title/interfaces/SplitIntegratedAddressOut.html",[0,0.284,2718,3.843]],["body/interfaces/SplitIntegratedAddressOut.html",[0,0.419,2,1.47,3,0.073,4,0.083,5,0.083,7,0.483,8,0.74,9,4.428,12,4.428,13,1.176,14,0.561,15,0.007,16,0.083,19,0.006,20,0.006,56,0.55,2152,5.665,2718,6.756,2719,6.927,2720,9.141]],["title/components/StatusComponent.html",[21,0.767,121,1.531]],["body/components/StatusComponent.html",[3,0.035,4,0.04,5,0.04,7,0.231,8,0.449,10,0.592,14,0.535,15,0.007,16,0.04,19,0.003,20,0.003,21,0.985,22,1.081,23,1.697,24,1.146,25,1.146,26,1.146,28,1.358,29,2.412,30,0.932,31,3.141,32,2.85,33,2.256,35,1.664,38,1.082,39,2.629,43,0.755,44,1.473,51,0.704,55,2.37,56,0.534,58,0.385,59,0.333,64,1.453,67,1.102,68,1.731,69,1.731,70,1.081,71,2.324,72,1.146,73,1.118,74,1.146,75,1.081,76,1.146,77,1.061,78,1.146,79,1.081,80,2.707,81,1.146,82,1.081,83,1.146,84,1.061,85,1.664,86,1.731,87,1.081,88,1.146,89,1.081,90,1.731,91,1.081,92,2.803,93,1.146,94,1.081,95,1.146,96,1.081,97,1.061,98,1.146,99,1.081,100,1.146,101,1.081,102,1.146,103,1.061,104,2.071,105,1.146,106,1.081,107,1.146,108,1.081,109,1.146,110,1.124,111,1.003,112,1.146,113,1.061,114,1.146,115,1.061,116,1.146,117,1.543,118,1.731,119,1.061,120,1.146,121,2.192,122,1.146,123,1.061,124,1.146,125,1.081,126,1.081,127,1.146,128,1.061,129,1.146,130,1.061,131,1.146,132,1.061,133,1.146,134,1.061,135,0.782,136,1.124,137,1.061,138,1.124,139,1.146,141,1.7,144,2.495,147,2.446,148,4.134,158,2.37,162,2.643,177,3.913,187,0.755,214,3.949,249,2.081,250,2.391,271,1.488,338,2.364,340,4.098,341,2.534,347,2.954,356,4.461,357,2.954,371,4.098,372,2.714,379,2.714,548,1.102,668,2.534,694,3.277,758,2.534,842,2.714,961,2.001,966,4.938,985,2.17,1019,4.098,1020,2.954,1021,2.954,1022,5.375,1023,2.391,1024,3.827,1025,2.534,1026,2.954,1027,2.954,1028,2.954,1085,2.17,1091,2.534,1261,2.391,1291,4.461,1938,2.534,2027,2.954,2311,2.954,2721,3.318,2722,6.038,2723,5.011,2724,6.728,2725,6.038,2726,6.038,2727,6.038,2728,3.318,2729,7.222,2730,5.011,2731,3.318,2732,3.318,2733,3.318,2734,3.318,2735,3.318,2736,3.318,2737,3.318,2738,5.011,2739,6.728,2740,6.728,2741,6.038,2742,3.318,2743,3.318]],["title/modules/StatusModule.html",[471,1.76,484,3.386]],["body/modules/StatusModule.html",[3,0.055,4,0.063,5,0.063,15,0.007,16,0.063,19,0.005,20,0.005,56,0.757,58,0.608,59,0.525,91,3.089,103,2.823,121,3.089,203,3.777,206,2.294,242,2.946,243,3.048,251,2.351,473,1.847,474,2.963,481,5.775,484,6.959,485,5.136,487,3.109,488,2.294,489,2.093,491,2.769,493,2.596,495,2.596,496,2.709,497,1.923,508,4.346,509,3.287,518,3.896,519,2.946,520,5.294,521,4.003,527,4.287,596,3.034,713,3.896,714,2.946,1145,4.995,1938,4.003,2744,4.666,2745,5.241,2746,4.666,2747,4.666,2748,5.241,2749,5.241,2750,6.932,2751,5.241,2752,5.241,2753,5.241,2754,6.932,2755,6.932]],["title/interfaces/StoreOut.html",[0,0.284,2756,3.843]],["body/interfaces/StoreOut.html",[0,0.451,2,1.581,3,0.078,4,0.089,5,0.089,15,0.006,16,0.089,19,0.006,20,0.006,2756,7.051,2757,7.45]],["title/interfaces/SweepAllIn.html",[0,0.284,2758,3.843]],["body/interfaces/SweepAllIn.html",[0,0.275,2,0.963,3,0.048,4,0.054,5,0.054,7,0.317,8,0.563,9,4.099,10,1.734,11,2.26,12,3.773,13,1.211,14,0.61,15,0.007,16,0.054,19,0.004,20,0.004,34,3.534,54,2.618,55,2.744,147,2.129,193,3.108,223,3.51,320,2.269,635,4.803,807,3.108,829,3.657,830,3.657,832,4.112,841,3.221,961,3.792,1056,4.531,1661,3.792,1665,3.943,1678,5.094,1679,4.305,1680,4.305,1681,4.305,1682,4.305,1683,5.094,1684,4.112,1685,4.112,1686,4.305,1687,4.112,1688,4.305,1689,4.112,1690,5.333,1691,4.305,1692,4.53,1694,4.305,2758,5.142,2759,4.539,2760,4.04,2761,7.789,2762,7.789,2763,7.789,2764,7.789,2765,7.789,2766,6.288]],["title/interfaces/SweepAllOut.html",[0,0.284,2767,3.843]],["body/interfaces/SweepAllOut.html",[0,0.412,2,1.445,3,0.072,4,0.081,5,0.081,7,0.475,8,0.732,13,1.291,14,0.595,15,0.007,16,0.081,19,0.006,20,0.006,2767,6.686,2768,6.808,2769,9.089,2770,7.433,2771,9.089]],["title/interfaces/SweepDustOut.html",[0,0.284,2772,4.183]],["body/interfaces/SweepDustOut.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,13,1.194,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,2770,7.564,2772,7.511,2773,7.179]],["title/interfaces/Task.html",[0,0.284,2774,3.843]],["body/interfaces/Task.html",[0,0.268,2,0.94,3,0.047,4,0.053,5,0.074,7,0.309,8,0.554,13,1.119,14,0.483,15,0.007,16,0.074,19,0.004,20,0.004,21,1.009,31,1.443,32,1.314,35,1.471,43,1.007,56,0.667,58,0.514,59,0.444,73,1.347,104,2.496,111,1.868,128,1.416,135,2.03,144,2.205,158,2.715,162,1.938,168,4.876,223,2.783,225,1.694,237,1.808,271,3.943,284,2.135,297,2.362,398,3.032,408,3.595,414,1.769,435,2.896,436,2.777,539,4.295,548,1.471,549,3.622,635,4.721,656,3.876,666,5.266,717,2.336,722,2.205,727,5.132,752,3.861,782,3.622,791,4.721,806,3.622,841,2.268,992,5.636,1414,3.622,1795,5.055,1843,3.622,2177,3.622,2181,3.622,2470,3.382,2507,3.382,2530,5.055,2774,6.303,2775,3.942,2776,7.216,2777,3.942,2778,3.942,2779,3.942,2780,3.942,2781,6.86,2782,3.942,2783,3.942,2784,3.942,2785,3.942,2786,3.622,2787,3.942,2788,6.339,2789,3.942,2790,5.502,2791,5.502,2792,3.942,2793,3.942,2794,3.942,2795,3.942,2796,6.86,2797,3.942,2798,3.942,2799,3.942,2800,3.942,2801,3.942,2802,3.942,2803,3.942,2804,3.942,2805,3.942,2806,3.942,2807,3.942,2808,3.942]],["title/components/TerminalComponent.html",[21,0.767,123,1.502]],["body/components/TerminalComponent.html",[3,0.045,4,0.052,5,0.052,7,0.301,15,0.007,16,0.052,19,0.004,20,0.004,21,1.145,22,1.403,23,2.053,24,1.488,25,1.488,26,1.488,28,1.644,29,2.802,30,1.21,31,3.204,32,2.911,33,2.447,35,2.014,38,1.309,39,2.976,43,1.596,44,1.1,51,0.914,52,1.832,56,0.342,58,0.5,59,0.432,67,1.431,68,2.094,69,2.094,70,1.403,71,2.63,72,1.488,73,1.166,74,1.488,75,1.403,76,1.488,77,1.377,78,1.488,79,1.403,80,2.565,81,1.488,82,1.403,83,1.488,84,1.377,85,2.014,86,2.094,87,1.403,88,1.488,89,1.403,90,2.094,91,1.403,92,2.963,93,1.488,94,1.403,95,1.488,96,1.403,97,1.377,98,1.488,99,1.403,100,1.488,101,1.403,102,1.488,103,1.377,104,1.326,105,1.488,106,1.403,107,1.488,108,1.403,109,1.488,110,1.459,111,1.302,112,1.488,113,1.377,114,1.488,115,1.377,116,1.488,117,1.867,118,2.094,119,1.377,120,1.488,121,1.403,122,1.488,123,2.434,124,1.488,125,1.403,126,1.403,127,1.488,128,1.377,129,1.488,130,1.377,131,1.488,132,1.377,133,1.488,134,1.377,135,1.015,136,1.459,137,1.377,138,1.459,139,1.488,141,2.206,144,3.018,326,4.151,2809,4.308,2810,7.016,2811,6.063,2812,4.308,2813,4.308]],["title/pipes/TimeAgoPipe.html",[1539,2.057,2419,3.589]],["body/pipes/TimeAgoPipe.html",[3,0.055,4,0.063,5,0.063,8,0.471,10,0.937,14,0.471,15,0.007,16,0.063,19,0.005,20,0.005,28,1.424,30,1.476,38,1.135,44,1.26,47,1.476,51,1.115,54,2.146,56,0.552,58,0.61,59,0.527,73,1.292,135,1.635,158,2.446,174,2.952,175,5.677,187,1.195,242,2.952,243,3.055,284,1.814,297,2.665,320,2.022,393,4.753,440,2.194,548,1.745,692,4.676,1228,5.302,1539,3.039,1949,3.055,1952,3.168,1953,5.677,1957,4.187,1958,3.168,2316,4.676,2419,5.302,2453,4.676,2814,5.253,2815,6.18,2816,5.253,2817,6.942,2818,5.253,2819,5.253,2820,5.253,2821,5.253,2822,5.253,2823,5.253,2824,5.253,2825,5.253,2826,5.253,2827,5.253,2828,5.253,2829,5.253,2830,5.253,2831,5.253,2832,5.253,2833,5.253,2834,6.942,2835,5.253,2836,5.253,2837,5.253,2838,5.253,2839,5.253,2840,6.942,2841,5.253,2842,5.253,2843,5.253,2844,5.253,2845,5.253,2846,5.253,2847,6.942,2848,5.253,2849,6.942,2850,5.253,2851,5.253,2852,5.253,2853,5.253]],["title/pipes/ToCoinPipe.html",[1539,2.057,2420,3.589]],["body/pipes/ToCoinPipe.html",[3,0.07,4,0.079,5,0.079,10,1.183,14,0.45,15,0.007,16,0.079,19,0.006,20,0.006,28,1.799,30,1.865,38,1.433,44,1.204,51,1.409,54,2.392,56,0.527,58,0.77,59,0.665,73,1.44,187,1.51,284,2.292,308,4.572,320,1.933,926,5.512,1539,3.524,1949,3.86,1952,4.855,1957,4.855,1958,4.002,1965,4.782,2420,6.149,2854,6.636,2855,6.636,2856,6.636]],["title/interfaces/Transactions.html",[0,0.284,1056,3.386]],["body/interfaces/Transactions.html",[0,0.398,2,1.397,3,0.069,4,0.079,5,0.079,7,0.459,8,0.718,10,1.67,13,1.284,14,0.61,15,0.007,16,0.079,19,0.005,20,0.005,104,2.766,1056,5.772,2857,6.581,2858,8.985,2859,8.985,2860,8.985]],["title/components/TransactionsComponent.html",[21,0.767,125,1.531]],["body/components/TransactionsComponent.html",[3,0.029,4,0.033,5,0.033,7,0.195,8,0.393,10,0.498,13,0.584,14,0.521,15,0.007,16,0.033,19,0.003,20,0.003,21,0.884,22,0.909,23,1.485,24,0.964,25,0.964,26,0.964,28,1.189,29,2.164,30,0.784,31,3.091,32,2.815,33,2.429,35,1.456,38,0.947,39,2.399,41,2.55,43,0.635,44,1.495,46,2.453,47,2.352,51,0.931,52,1.325,55,1.545,56,0.627,57,3.045,58,0.324,59,0.28,67,0.927,68,1.515,69,1.515,70,0.909,71,2.12,72,0.964,73,1.536,74,0.964,75,0.909,76,0.964,77,0.892,78,0.964,79,0.909,80,2.133,81,0.964,82,0.909,83,0.964,84,0.892,85,1.456,86,1.515,87,0.909,88,0.964,89,0.909,90,1.515,91,0.909,92,2.572,93,0.964,94,0.909,95,0.964,96,0.909,97,0.892,98,0.964,99,0.909,100,0.964,101,0.909,102,0.964,103,0.892,104,0.859,105,0.964,106,0.909,107,0.964,108,0.909,109,0.964,110,0.945,111,0.843,112,0.964,113,0.892,114,0.964,115,0.892,116,0.964,117,1.35,118,1.515,119,0.892,120,0.964,121,0.909,122,0.964,123,0.892,124,0.964,125,2,126,0.909,127,0.964,128,0.892,129,0.964,130,0.892,131,0.964,132,0.892,133,0.964,134,0.892,135,1.572,136,0.945,137,0.892,138,0.945,139,0.964,158,2.351,162,2.371,169,5.021,176,3.909,187,0.635,219,3.709,225,3.09,237,1.14,244,1.825,245,1.683,248,1.683,251,1.252,271,1.252,338,2.069,420,2.775,440,1.166,489,1.751,696,4.43,717,1.472,722,2.183,732,3.904,752,2.491,816,2.868,926,3.003,955,3.349,963,6.306,964,4.822,992,4.364,1010,1.911,1056,4.424,1057,3.904,1638,3.349,1674,2.645,1913,2.868,1914,3.349,1918,1.911,2086,3.003,2092,3.709,2098,3.349,2099,3.349,2102,3.542,2312,3.904,2375,3.904,2388,2.011,2391,2.282,2697,2.484,2815,3.904,2861,2.791,2862,5.417,2863,5.417,2864,6.139,2865,4.822,2866,4.424,2867,4.385,2868,2.791,2869,2.791,2870,2.791,2871,2.791,2872,2.791,2873,3.904,2874,3.586,2875,2.791,2876,2.791,2877,2.791,2878,2.791,2879,2.282,2880,1.911,2881,2.791,2882,2.791,2883,2.791,2884,2.791,2885,2.791,2886,4.385,2887,2.791,2888,2.791,2889,2.791,2890,2.791,2891,2.484,2892,2.791,2893,2.791,2894,2.791]],["title/interfaces/Transfer.html",[0,0.284,2104,3.386]],["body/interfaces/Transfer.html",[0,0.365,2,1.28,3,0.063,4,0.072,5,0.072,7,0.421,8,0.68,12,4.221,13,1.288,14,0.656,15,0.007,16,0.072,19,0.005,20,0.005,54,2.669,338,4.11,955,6.655,1674,5.255,1913,5.698,2104,5.467,2873,7.756,2874,7.126,2895,6.028]],["title/components/TransferComponent.html",[21,0.767,126,1.531]],["body/components/TransferComponent.html",[3,0.035,4,0.04,5,0.04,7,0.231,8,0.448,9,2.92,10,0.59,12,2.92,14,0.456,15,0.007,16,0.04,19,0.003,20,0.003,21,0.984,22,1.078,23,1.693,24,1.143,25,1.143,26,1.143,28,1.356,29,2.408,30,0.93,31,3.14,32,2.85,33,2.521,35,1.661,38,1.08,39,2.625,43,0.753,44,1.377,46,1.058,47,0.93,51,1.061,52,1.822,55,2.124,56,0.534,58,0.384,59,0.332,67,1.099,68,1.727,69,1.727,70,1.078,71,2.32,72,1.143,73,1.116,74,1.143,75,1.078,76,1.143,77,1.058,78,1.143,79,1.078,80,2.306,81,1.143,82,1.078,83,1.143,84,1.058,85,1.661,86,1.727,87,1.078,88,1.143,89,1.078,90,1.727,91,1.078,92,2.705,93,1.143,94,1.078,95,1.143,96,1.078,97,1.058,98,1.143,99,1.078,100,1.143,101,1.078,102,1.143,103,1.058,104,1.019,105,1.143,106,1.078,107,1.143,108,1.078,109,1.143,110,1.121,111,1,112,1.143,113,1.058,114,1.143,115,1.058,116,1.143,117,1.54,118,1.727,119,1.058,120,1.143,121,1.078,122,1.143,123,1.058,124,1.143,125,1.078,126,2.189,127,1.143,128,1.058,129,1.143,130,1.058,131,1.143,132,1.058,133,1.143,134,1.058,135,0.779,136,1.121,137,1.058,138,1.121,139,1.143,147,2.443,187,0.753,206,1.448,225,2.306,251,1.484,308,2.638,414,1.322,778,3.78,1023,2.385,1067,2.706,1085,2.164,1495,1.8,1673,4.127,1674,1.996,1678,3.942,1692,2.908,1693,3.942,1913,3.942,1914,3.819,1918,2.266,1919,4.351,1924,2.266,2074,2.946,2104,5.467,2368,6.92,2480,4.451,2563,2.706,2880,2.266,2896,3.309,2897,5.001,2898,5.98,2899,3.309,2900,3.309,2901,3.309,2902,5.001,2903,4.344,2904,6.028,2905,6.028,2906,3.309,2907,3.819,2908,3.309,2909,3.309,2910,5.001,2911,3.309,2912,3.309,2913,3.309,2914,5.001,2915,3.309,2916,3.309,2917,3.309,2918,3.309,2919,3.309,2920,3.309,2921,3.309,2922,3.309,2923,5.001,2924,5.001]],["title/interfaces/TransferIn.html",[0,0.284,2903,3.386]],["body/interfaces/TransferIn.html",[0,0.33,2,1.159,3,0.057,4,0.065,5,0.065,7,0.381,8,0.638,10,1.701,12,4.067,13,1.16,14,0.606,15,0.007,16,0.065,19,0.005,20,0.005,34,3.068,54,2.616,55,2.508,56,0.434,223,3.281,320,1.59,414,2.18,829,4.608,830,4.608,832,3.57,841,2.796,961,3.292,1661,5.064,1662,3.738,1665,3.423,1673,5.749,1674,5.064,1675,3.738,1676,3.934,1677,3.934,1678,5.491,1679,3.738,1680,3.738,1681,3.738,1682,3.738,1683,5.491,1684,3.57,1685,3.57,1686,3.738,1687,3.57,1688,3.738,1689,3.57,1690,3.738,1691,3.738,1692,4.141,1693,5.491,1694,3.738,2903,5.13,2925,5.459,2926,5.459]],["title/interfaces/TransferOut.html",[0,0.284,2907,3.589]],["body/interfaces/TransferOut.html",[0,0.388,2,1.363,3,0.068,4,0.077,5,0.077,7,0.448,8,0.707,13,1.279,14,0.58,15,0.007,16,0.077,19,0.005,20,0.005,47,1.804,54,2.357,225,2.456,414,2.564,947,4.396,1674,5.516,1692,4.589,1693,4.199,2142,7.286,2215,5.715,2907,6.026,2927,6.42,2928,8.909,2929,6.42,2930,6.42,2931,6.42,2932,6.42,2933,6.42,2934,6.42]],["title/interfaces/TransferSplitIn.html",[0,0.284,1672,3.217]],["body/interfaces/TransferSplitIn.html",[0,0.479,2,1.004,3,0.05,4,0.057,5,0.057,7,0.33,8,0.58,10,1.635,12,3.839,13,1.221,14,0.595,15,0.007,16,0.099,17,3.092,19,0.004,20,0.004,34,2.658,54,2.554,55,2.279,56,0.586,135,1.114,191,4.056,223,3.491,225,1.809,259,2.852,284,1.633,297,1.378,320,1.378,414,1.889,420,3.313,605,2.495,752,2.974,829,4.288,830,4.288,832,3.092,841,2.422,961,2.852,1659,3.092,1660,3.612,1661,4.78,1662,3.238,1663,4.23,1664,3.612,1665,4.623,1666,3.238,1667,3.612,1668,4.661,1669,3.238,1670,3.408,1671,3.612,1672,4.429,1673,5.427,1674,4.78,1675,4.429,1676,3.408,1677,3.408,1678,5.183,1679,3.238,1680,3.238,1681,3.238,1682,3.238,1683,5.183,1684,3.092,1685,3.092,1686,3.238,1687,3.092,1688,3.238,1689,3.092,1690,3.238,1691,3.238,1692,4.288,1693,5.183,1694,3.238,1695,6.054,1696,3.612,1697,3.408,1698,3.238,1699,3.092,1700,2.852,1701,3.408]],["title/interfaces/TransferSplitOut.html",[0,0.284,2935,3.843]],["body/interfaces/TransferSplitOut.html",[0,0.423,2,1.483,3,0.074,4,0.084,5,0.084,7,0.488,8,0.744,13,1.18,14,0.564,15,0.007,16,0.084,19,0.006,20,0.006,54,2.445,2770,7.498,2935,6.792,2936,6.988,2937,9.168]],["title/modules/TranslateModule.html",[471,1.76,485,2.733]],["body/modules/TranslateModule.html",[3,0.074,4,0.084,5,0.084,15,0.007,16,0.084,19,0.006,20,0.006,56,0.706,58,0.816,59,0.705,238,5.066,239,4.597,473,2.477,485,4.847,491,2.808,493,2.633,495,3.122,496,3.257,497,2.579,498,7.418,2938,7.03]],["title/interfaces/Uri.html",[0,0.284,1699,3.073]],["body/interfaces/Uri.html",[0,0.434,2,1.524,3,0.076,4,0.086,5,0.086,7,0.501,8,0.756,13,1.194,14,0.487,15,0.006,16,0.086,19,0.006,20,0.006,1699,6.248,2939,7.179]],["title/components/UserComponent.html",[21,0.767,128,1.502]],["body/components/UserComponent.html",[0,0.169,3,0.029,4,0.033,5,0.052,7,0.194,8,0.393,10,0.497,13,0.584,14,0.297,15,0.007,16,0.052,19,0.003,20,0.003,21,0.883,22,0.908,23,1.484,24,0.963,25,0.963,26,0.963,30,0.783,31,3.091,32,2.802,33,2.119,35,1.455,38,0.946,43,0.997,44,1.392,46,2.263,47,1.989,51,0.592,56,0.563,58,0.324,59,0.279,67,0.926,68,1.513,69,1.513,70,0.908,71,2.119,72,0.963,73,1.23,74,0.963,75,0.908,76,0.963,77,0.891,78,0.963,79,0.908,80,2.132,81,0.963,82,0.908,83,0.963,84,0.891,85,1.455,86,1.513,87,0.908,88,0.963,89,0.908,90,1.513,91,0.908,92,2.571,93,0.963,94,0.908,95,0.963,96,0.908,97,0.891,98,0.963,99,0.908,100,0.963,101,0.908,102,0.963,103,0.891,104,1.889,105,0.963,106,0.908,107,0.963,108,0.908,109,0.963,110,0.944,111,2.318,112,0.963,113,0.891,114,0.963,115,0.891,116,0.963,117,1.349,118,1.513,119,0.891,120,0.963,121,0.908,122,0.963,123,0.891,124,0.963,125,0.908,126,0.908,127,0.963,128,1.961,129,0.963,130,0.891,131,0.963,132,0.891,133,0.963,134,0.891,135,2.083,136,0.944,137,0.891,138,0.944,139,0.963,141,1.428,144,2.181,158,2.162,162,2.369,168,5.071,187,0.634,212,3,223,1.089,225,1.066,237,1.138,271,3.44,284,2.119,297,1.943,398,1.909,408,3.568,414,1.113,435,1.823,436,1.748,539,4.467,548,0.926,549,3.583,581,3,584,2.642,635,4.686,656,3.847,666,5.162,717,1.47,722,1.388,726,2.481,727,5.102,733,2.865,752,3.903,782,2.28,791,3.346,806,2.28,841,2.244,992,5.551,1414,2.28,1795,3.583,1799,3.346,1802,3.583,1843,2.28,2177,2.28,2181,2.28,2470,4.134,2507,2.129,2530,4.427,2557,3.583,2581,3.583,2774,5.79,2775,2.481,2776,4.818,2777,2.481,2778,3.9,2779,4.818,2780,4.818,2781,6.593,2782,4.818,2783,5.461,2784,2.481,2785,2.481,2786,2.28,2787,2.481,2788,4.818,2789,2.481,2790,3.9,2791,3.9,2792,2.481,2793,2.481,2794,2.481,2795,2.481,2796,5.461,2797,2.481,2798,2.481,2799,2.481,2800,2.481,2801,2.481,2802,2.481,2803,2.481,2804,2.481,2805,2.481,2806,2.481,2807,2.481,2808,2.481,2940,4.381,2941,2.787,2942,2.787,2943,2.787,2944,2.787,2945,2.787,2946,2.787,2947,4.381,2948,4.381,2949,4.381,2950,4.381]],["title/interfaces/UserMeta.html",[0,0.284,2951,3.589]],["body/interfaces/UserMeta.html",[0,0.524,2,1.409,3,0.07,4,0.079,5,0.079,7,0.463,8,0.721,13,1.25,14,0.45,15,0.007,16,0.104,19,0.006,20,0.006,56,0.527,173,5.069,666,4.161,682,4.34,722,4.008,847,3.051,2951,6.619,2952,5.427,2953,7.369,2954,5.802,2955,5.427,2956,5.069,2957,6.149]],["title/modules/UserModule.html",[471,1.76,2958,3.589]],["body/modules/UserModule.html",[3,0.054,4,0.061,5,0.061,11,2.537,15,0.007,16,0.061,19,0.005,20,0.005,21,0.831,32,2.018,56,0.772,58,0.591,59,0.511,111,2.314,128,2.859,135,1.804,152,3.332,171,2.688,206,2.23,237,2.081,251,2.285,284,1.76,297,1.484,311,3.332,473,1.795,474,2.908,481,5.728,487,3.051,488,2.23,489,2.035,491,2.717,493,2.548,495,2.548,496,2.658,497,1.869,508,4.265,509,3.195,510,5.563,511,4.167,514,4.902,515,3.672,518,3.823,519,2.864,522,4.265,523,3.073,524,2.963,527,4.167,548,1.692,571,2.61,572,4.167,580,2.537,584,4.103,713,3.823,714,2.864,716,5.196,717,2.688,718,5.196,719,3.891,1136,6.055,1137,4.167,1138,4.535,1139,5.563,1140,4.167,1141,4.167,1145,4.902,1147,6.055,1160,2.864,2661,5.563,2662,4.167,2666,4.535,2958,6.94,2959,4.535,2960,4.535,2961,5.095,2962,5.095,2963,6.803,2964,5.095,2965,5.095,2966,6.055,2967,4.535,2968,5.095]],["title/interfaces/UserOptions.html",[0,0.284,2954,3.386]],["body/interfaces/UserOptions.html",[0,0.423,2,1.483,3,0.074,4,0.084,5,0.084,7,0.488,8,0.744,14,0.474,15,0.007,16,0.099,19,0.006,20,0.006,64,3.059,752,3.213,2432,5.715,2954,5.985,2969,6.221,2970,9.168,2971,8.161,2972,6.221]],["title/modules/UserRoutingModule.html",[471,1.76,567,3.386]],["body/modules/UserRoutingModule.html",[3,0.07,4,0.08,5,0.08,15,0.007,16,0.08,19,0.006,20,0.006,56,0.691,58,0.777,59,0.671,111,2.023,237,2.733,297,1.95,473,2.358,491,2.673,493,2.507,495,3.031,496,3.162,497,2.455,567,5.831,570,4.036,571,4.145,572,4.733,580,3.332,596,2.929,1160,3.761,2466,5.111,2973,6.692,2974,6.692,2975,6.692]],["title/interfaces/UserState.html",[0,0.284,2957,3.589]],["body/interfaces/UserState.html",[0,0.511,2,1.33,3,0.066,4,0.075,5,0.075,7,0.437,8,0.696,13,1.263,14,0.6,15,0.007,16,0.101,19,0.005,20,0.005,56,0.498,173,6.748,666,5.54,682,4.099,722,4.522,847,4.062,2951,6.748,2952,5.126,2953,5.126,2954,6.367,2955,5.126,2956,4.787,2957,6.454]],["title/interfaces/UsersState.html",[0,0.284,2956,3.589]],["body/interfaces/UsersState.html",[0,0.523,2,1.401,3,0.069,4,0.079,5,0.079,7,0.46,8,0.719,13,1.198,14,0.587,15,0.007,16,0.103,19,0.006,20,0.006,56,0.524,173,5.04,666,4.138,682,5.882,722,3.994,776,5.782,847,3.034,2951,6.128,2952,5.397,2953,5.397,2954,5.782,2955,5.397,2956,6.128,2957,6.128]],["title/components/VpnComponent.html",[21,0.767,130,1.502]],["body/components/VpnComponent.html",[3,0.041,4,0.046,5,0.046,7,0.269,15,0.006,16,0.046,19,0.004,20,0.004,21,1.077,22,1.257,23,1.898,24,1.333,25,1.333,26,1.333,28,1.519,29,2.636,30,1.084,31,3.179,32,2.887,33,2.368,35,1.861,38,1.21,39,2.83,43,1.501,44,1.017,51,0.819,52,1.694,56,0.307,58,0.448,59,0.387,67,1.282,68,1.935,69,1.935,70,1.257,71,2.501,72,1.333,73,1.096,74,1.333,75,1.257,76,1.333,77,1.233,78,1.333,79,1.257,80,2.459,81,1.333,82,1.257,83,1.333,84,1.233,85,1.861,86,1.935,87,1.257,88,1.333,89,1.257,90,1.935,91,1.257,92,2.817,93,1.333,94,1.257,95,1.333,96,1.257,97,1.233,98,1.333,99,1.257,100,1.333,101,1.257,102,1.333,103,1.233,104,1.188,105,1.333,106,1.257,107,1.333,108,1.257,109,1.333,110,1.307,111,1.166,112,1.333,113,1.233,114,1.333,115,1.233,116,1.333,117,1.725,118,1.935,119,1.233,120,1.333,121,1.257,122,1.333,123,1.233,124,1.333,125,1.257,126,1.257,127,1.333,128,1.233,129,1.333,130,2.315,131,1.333,132,1.233,133,1.333,134,1.233,135,1.554,136,1.307,137,1.233,138,1.307,139,1.333,141,1.976,144,2.79,204,5.218,378,3.514,662,4.28,736,4.583,841,3.709,1455,4.988,1732,4.583,2490,4.988,2507,4.28,2600,6.446,2976,3.859,2977,6.446,2978,6.599,2979,5.604,2980,3.859,2981,3.859,2982,5.604,2983,4.988,2984,5.604,2985,5.604,2986,5.604,2987,8.023,2988,5.604,2989,5.604,2990,5.604,2991,5.604,2992,5.604,2993,5.604,2994,5.604,2995,5.604,2996,7.242,2997,7.242]],["title/modules/VpnModule.html",[471,1.76,2998,3.589]],["body/modules/VpnModule.html",[3,0.069,4,0.078,5,0.078,15,0.006,16,0.078,19,0.005,20,0.005,56,0.743,58,0.758,59,0.654,130,2.988,473,2.299,474,3.407,487,3.574,488,2.857,489,2.607,491,3.183,493,2.445,495,2.985,496,3.115,497,2.394,518,4.479,519,3.668,522,4.997,523,3.936,524,3.796,713,4.479,714,3.668,2998,7.139,2999,5.81,3000,5.81,3001,6.526,3002,5.81]],["title/modules/VpnRoutingModule.html",[471,1.76,3003,3.843]],["body/modules/VpnRoutingModule.html",[3,0.069,4,0.079,5,0.079,15,0.007,16,0.079,19,0.006,20,0.006,21,1.077,56,0.732,58,0.766,59,0.661,130,2.565,237,2.695,297,1.923,473,2.325,491,2.636,492,3.709,493,2.472,495,3.005,496,3.136,497,2.421,570,3.98,571,4.11,572,4.704,578,5.421,579,4.518,580,3.285,596,2.889,655,4.518,1160,3.709,2977,5.874,3002,5.874,3003,6.562,3004,6.599]],["title/components/WalletComponent.html",[21,0.767,132,1.502]],["body/components/WalletComponent.html",[3,0.03,4,0.034,5,0.034,7,0.198,8,0.398,10,0.792,13,0.993,14,0.506,15,0.007,16,0.034,19,0.003,20,0.003,21,0.893,22,0.923,23,1.503,24,0.979,25,0.979,26,0.979,28,1.203,29,2.185,30,0.796,31,3.096,32,2.807,33,2.64,34,2.495,35,1.474,38,0.959,39,2.42,43,0.645,44,1.4,46,1.419,47,1.247,51,1.161,52,1.871,56,0.435,58,0.329,59,0.284,66,3.39,67,0.941,68,1.533,69,1.533,70,0.923,71,2.138,72,0.979,73,1.396,74,0.979,75,0.923,76,0.979,77,0.906,78,0.979,79,0.923,80,2.149,81,0.979,82,0.923,83,0.979,84,0.906,85,1.474,86,1.533,87,0.923,88,0.979,89,0.923,90,1.533,91,0.923,92,2.694,93,0.979,94,0.923,95,0.979,96,0.923,97,0.906,98,0.979,99,0.923,100,0.979,101,0.923,102,0.979,103,0.906,104,0.873,105,0.979,106,0.923,107,0.979,108,0.923,109,0.979,110,0.96,111,0.857,112,0.979,113,0.906,114,0.979,115,0.906,116,0.979,117,1.367,118,1.533,119,0.906,120,0.979,121,0.923,122,0.979,123,0.906,124,0.979,125,0.923,126,0.923,127,0.979,128,0.906,129,0.979,130,0.906,131,0.979,132,1.979,133,0.979,134,0.906,135,0.668,136,0.96,137,0.906,138,0.96,139,0.979,141,1.452,144,2.21,147,3.004,158,0.998,171,2.342,187,1.01,206,1.241,244,2.903,251,1.271,259,2.677,297,0.826,308,1.495,325,3.39,548,0.941,584,2.677,593,3.39,600,2.165,605,2.886,728,5.371,733,3.578,752,2.516,760,3.39,783,2.165,784,2.042,805,2.042,813,2.042,814,2.165,826,4.049,926,3.039,1023,2.042,1052,3.63,1054,4.729,1085,1.853,1099,3.63,1116,2.318,1269,2.165,1357,4.474,1360,5.063,1495,1.542,1548,2.165,1700,2.677,1918,1.94,1919,4.054,1924,1.94,1927,3.951,2368,6.636,2379,2.318,2381,2.523,2382,2.523,2383,2.523,2384,2.318,2385,2.523,2386,2.523,2388,2.042,2389,2.523,2390,2.523,2392,4.474,2393,2.523,2645,3.951,3005,2.834,3006,5.471,3007,4.439,3008,4.439,3009,2.834,3010,2.834,3011,4.439,3012,2.834,3013,4.439,3014,2.834,3015,2.834,3016,2.834,3017,2.834,3018,2.834,3019,2.834,3020,2.834,3021,2.834,3022,2.523,3023,4.439,3024,4.439,3025,4.439,3026,4.439,3027,4.439,3028,3.951,3029,4.439,3030,4.439,3031,4.439,3032,4.439]],["title/injectables/WalletEffects.html",[389,1.394,3033,4.183]],["body/injectables/WalletEffects.html",[3,0.033,4,0.038,5,0.038,7,0.219,8,0.431,9,3.602,10,0.56,13,0.871,14,0.396,15,0.007,16,0.038,19,0.003,20,0.003,33,2.214,43,0.715,44,1.35,46,2.254,47,1.981,48,3.292,56,0.675,58,0.365,59,0.315,73,0.522,158,2.62,176,4.082,187,0.715,190,3.932,225,3.193,240,3.932,241,2.4,244,2.055,245,1.895,248,1.895,284,2.568,320,2.432,389,1.427,390,1.409,420,2.463,440,1.313,489,1.92,502,3.945,504,1.895,752,3.008,811,5.823,816,3.144,826,4.61,833,2.151,1009,3.932,1172,3.662,1194,2.797,1195,2.57,1352,3.672,1426,5.766,1488,3.932,1507,2.4,1508,5.358,1510,6.69,1511,6.527,1515,3.672,1524,2.797,1530,4.28,1531,4.28,1532,4.28,1536,2.797,1537,4.776,1539,3.255,1543,4.28,1544,4.28,1550,2.57,1551,2.151,1552,2.797,1700,3.522,1919,3.945,1924,2.151,2092,3.999,2094,3.465,2098,3.672,2102,3.819,2653,4.28,2880,2.151,3033,4.28,3034,3.142,3035,5.84,3036,5.84,3037,5.84,3038,5.84,3039,4.808,3040,4.808,3041,4.808,3042,4.808,3043,4.808,3044,3.142,3045,4.808,3046,7.436,3047,4.808,3048,3.142,3049,4.808,3050,4.808,3051,3.142,3052,4.808,3053,4.808,3054,7.05,3055,4.808,3056,5.84,3057,6.542,3058,4.808,3059,6.542,3060,6.542,3061,4.808,3062,6.542,3063,4.808,3064,4.808,3065,4.808,3066,4.808,3067,4.808,3068,4.808,3069,3.142,3070,3.142,3071,3.142,3072,3.142,3073,3.142]],["title/modules/WalletModule.html",[471,1.76,2608,3.386]],["body/modules/WalletModule.html",[3,0.045,4,0.051,5,0.051,15,0.007,16,0.051,19,0.004,20,0.004,22,2.709,56,0.777,58,0.498,59,0.43,96,2.709,106,2.709,113,2.658,117,2.56,125,2.709,126,2.709,132,2.658,134,2.658,206,1.879,237,1.753,242,2.412,243,2.496,251,2.712,473,1.512,474,2.585,482,5.437,485,4.835,487,2.712,488,1.879,489,1.714,491,2.415,493,2.265,495,2.265,496,2.363,497,1.575,508,3.792,509,2.691,512,4.141,513,2.939,514,4.358,515,3.093,518,3.399,519,2.412,520,4.619,521,3.278,522,3.792,523,2.589,524,2.496,534,5.383,535,3.51,571,3.097,596,1.879,713,3.399,714,2.412,716,4.619,717,2.264,718,4.619,719,3.278,1010,2.939,1129,4.946,1130,3.792,1131,3.278,1145,4.358,1146,5.383,2608,7.001,2611,4.946,2612,3.51,2661,4.946,2662,3.51,2966,5.383,2967,3.821,3074,3.821,3075,4.292,3076,3.821,3077,4.292,3078,4.292,3079,6.047,3080,4.292,3081,3.821,3082,3.821,3083,4.292,3084,3.821,3085,3.821,3086,6.047,3087,6.047,3088,4.292,3089,4.292,3090,4.292,3091,4.292]],["title/components/WalletNewComponent.html",[21,0.767,134,1.502]],["body/components/WalletNewComponent.html",[3,0.034,4,0.039,5,0.039,7,0.226,8,0.441,10,0.578,14,0.451,15,0.007,16,0.039,19,0.003,20,0.003,21,0.971,22,1.056,23,1.667,24,1.119,25,1.119,26,1.119,28,1.334,29,2.377,30,0.911,31,3.135,32,2.844,33,2.655,35,1.635,38,1.063,39,2.598,43,0.737,44,1.366,51,1.045,52,1.799,56,0.598,58,0.376,59,0.325,67,1.076,68,1.7,69,1.7,70,1.056,71,2.296,72,1.119,73,1.104,74,1.119,75,1.056,76,1.119,77,1.036,78,1.119,79,1.056,80,2.285,81,1.119,82,1.056,83,1.119,84,1.036,85,1.635,86,1.7,87,1.056,88,1.119,89,1.056,90,1.7,91,1.056,92,2.689,93,1.119,94,1.056,95,1.119,96,1.056,97,1.036,98,1.119,99,1.056,100,1.119,101,1.056,102,1.119,103,1.036,104,0.998,105,1.119,106,1.056,107,1.119,108,1.056,109,1.119,110,1.098,111,0.98,112,1.119,113,1.036,114,1.119,115,1.036,116,1.119,117,1.516,118,1.7,119,1.036,120,1.119,121,1.056,122,1.119,123,1.036,124,1.119,125,1.056,126,1.056,127,1.119,128,1.036,129,1.119,130,1.036,131,1.119,132,1.036,133,1.119,134,2.125,135,1.773,136,1.098,137,1.036,138,1.098,139,1.119,158,1.734,168,5.356,174,4.73,187,0.737,191,2.032,237,1.324,420,1.66,440,1.354,717,1.71,752,3.706,992,5.504,1659,4.347,1919,4.009,1973,3.547,2178,2.885,2180,2.885,2531,2.651,2532,2.885,2534,2.885,2539,5.298,2554,4.382,2555,4.382,2556,5.917,2557,4.026,2786,4.026,2866,4.79,2879,2.651,3092,7.822,3093,3.241,3094,4.923,3095,5.952,3096,3.241,3097,4.923,3098,4.923,3099,3.241,3100,3.241,3101,3.241,3102,3.241,3103,3.241,3104,3.241,3105,3.241,3106,3.241,3107,3.241,3108,3.241,3109,3.241,3110,3.241,3111,3.241,3112,3.241,3113,3.241,3114,4.923,3115,4.923]],["title/modules/WalletRoutingModule.html",[471,1.76,568,3.386]],["body/modules/WalletRoutingModule.html",[3,0.055,4,0.062,5,0.062,11,4.264,15,0.007,16,0.062,19,0.005,20,0.005,21,1.398,33,1.483,56,0.725,58,0.602,59,0.52,113,2.469,117,2.119,132,2.2,134,2.2,152,5.6,171,4.518,237,2.117,284,2.958,297,1.51,311,5.6,473,1.826,491,2.071,492,2.914,493,1.942,495,2.578,496,2.689,497,1.902,548,2.844,568,4.959,570,3.127,571,3.525,572,4.203,578,5.632,579,3.55,580,4.264,596,2.269,655,5.864,1160,2.914,3081,4.615,3082,4.615,3084,4.615,3085,4.615,3116,5.184,3117,5.184,3118,5.184,3119,5.184,3120,5.184,3121,5.184,3122,5.184,3123,5.184,3124,5.184,3125,5.184,3126,5.184,3127,5.184,3128,5.184,3129,5.184,3130,5.184,3131,5.184,3132,5.184,3133,5.184,3134,5.184,3135,5.184,3136,5.184]],["title/injectables/WalletRpcService.html",[389,1.394,2866,3.386]],["body/injectables/WalletRpcService.html",[1,4.991,3,0.019,4,0.021,5,0.021,7,0.277,8,0.272,9,1.922,10,1.489,13,0.762,14,0.594,15,0.007,16,0.021,19,0.002,20,0.002,33,1.636,38,0.656,43,0.406,44,1.596,46,0.57,47,0.501,51,1.994,54,1.293,56,0.454,58,0.207,59,0.179,73,1.387,80,0.971,135,0.42,158,1.398,176,2.472,179,1.222,187,1.899,193,2.717,202,1.987,204,2.19,252,1.363,253,1.286,254,4.693,284,0.616,297,0.885,308,0.941,320,2.536,338,1.872,389,0.902,390,0.8,425,2.485,437,0.941,438,0.941,440,0.745,447,1.167,450,3.532,451,2.86,452,3.532,468,5.758,502,2.826,504,1.076,722,1.513,739,1.286,776,4.121,801,2.485,802,2.86,803,1.286,804,1.363,826,2.595,833,1.222,836,2.705,847,1.397,881,7.756,1170,1.286,1172,1.905,1175,3.245,1193,2.321,1195,1.459,1196,1.363,1197,1.363,1659,3.991,1663,3.437,1672,3.598,1692,1.767,1698,2.08,1699,3.437,1700,3.681,1914,4.368,1956,1.459,2075,1.459,2077,2.705,2078,4.298,2084,1.459,2088,4.298,2090,1.459,2092,3.598,2102,1.167,2104,3.787,2135,4.298,2139,1.459,2149,4.298,2210,4.298,2509,4.298,2512,1.459,2526,4.398,2718,1.459,2756,1.459,2758,4.298,2760,2.705,2767,1.459,2866,2.19,2874,2.485,2903,3.787,2907,1.363,2935,1.459,3137,1.784,3138,3.038,3139,4.685,3140,3.038,3141,4.171,3142,3.038,3143,4.685,3144,3.038,3145,3.038,3146,3.038,3147,3.968,3148,3.968,3149,3.038,3150,3.038,3151,3.968,3152,4.171,3153,4.685,3154,4.685,3155,3.038,3156,3.038,3157,3.038,3158,1.784,3159,3.038,3160,1.784,3161,3.038,3162,1.784,3163,1.784,3164,3.038,3165,3.038,3166,1.784,3167,1.784,3168,3.038,3169,3.038,3170,1.784,3171,1.784,3172,3.038,3173,1.784,3174,3.038,3175,1.784,3176,3.038,3177,3.038,3178,1.784,3179,1.784,3180,1.784,3181,1.784,3182,1.784,3183,3.038,3184,1.784,3185,3.038,3186,1.784,3187,3.038,3188,5.255,3189,1.784,3190,3.038,3191,1.784,3192,3.038,3193,1.784,3194,3.038,3195,1.784,3196,1.784,3197,1.784,3198,1.784,3199,2.705,3200,1.784,3201,1.784,3202,3.038,3203,1.784,3204,1.784,3205,3.038,3206,1.784,3207,3.038,3208,1.784,3209,3.038,3210,1.784,3211,1.784,3212,1.784,3213,1.784,3214,1.784,3215,1.784,3216,1.784,3217,1.784,3218,1.784,3219,1.784,3220,1.784,3221,1.784,3222,1.784,3223,1.784,3224,1.784,3225,1.784,3226,1.784,3227,1.784,3228,1.784,3229,1.784,3230,1.784,3231,1.784,3232,1.784,3233,1.784,3234,1.784,3235,1.784,3236,1.784,3237,1.784,3238,1.784,3239,1.784,3240,1.784,3241,1.784]],["title/injectables/WalletService.html",[389,1.394,1919,2.834]],["body/injectables/WalletService.html",[3,0.033,4,0.038,5,0.07,7,0.22,8,0.432,9,3.421,10,1.26,13,1.032,14,0.567,15,0.007,16,0.038,19,0.003,20,0.003,33,2.431,34,1.773,38,1.042,43,0.718,44,1.615,46,1.871,47,1.645,48,3.302,51,1.919,52,1.458,55,1.699,56,0.521,58,0.366,59,0.483,63,3.683,73,1.173,135,0.743,147,1.983,158,2.31,185,3.475,187,1.607,202,3.154,204,3.475,254,3.29,271,2.163,320,2.386,378,3.024,389,1.431,390,1.415,407,2.808,408,3.813,410,3.475,435,2.063,436,1.978,437,1.664,438,1.664,440,1.318,468,3.954,548,1.048,605,4.216,660,4.293,701,2.808,826,5.356,833,4.008,1023,3.475,1081,4.87,1423,4.293,1700,4.673,1919,2.909,2092,4.489,2378,5.835,2379,3.944,2391,2.58,2526,5.584,2865,4.293,2866,4.724,2879,2.58,2880,2.16,2891,2.808,2898,4.293,2903,4.724,3141,5.835,3152,5.835,3199,6.287,3242,3.155,3243,5.854,3244,6.555,3245,6.555,3246,6.555,3247,4.823,3248,6.555,3249,4.823,3250,3.155,3251,3.155,3252,3.155,3253,3.155,3254,4.823,3255,3.155,3256,4.823,3257,3.155,3258,4.823,3259,3.155,3260,4.823,3261,3.155,3262,3.155,3263,3.155,3264,4.823,3265,3.155,3266,3.155,3267,3.155,3268,3.155,3269,3.155,3270,3.155,3271,3.155,3272,3.155,3273,3.155,3274,3.155,3275,3.155,3276,3.155,3277,3.155,3278,3.155,3279,4.823,3280,3.155,3281,3.155,3282,4.823,3283,3.155,3284,3.155,3285,3.155,3286,3.155,3287,3.155,3288,3.155,3289,3.155,3290,3.155,3291,3.155,3292,3.155,3293,3.155,3294,3.155]],["title/classes/WalletState.html",[59,0.471,3295,3.843]],["body/classes/WalletState.html",[0,0.426,3,0.057,4,0.064,5,0.064,7,0.375,8,0.631,13,1.207,14,0.534,15,0.007,16,0.1,19,0.005,20,0.005,28,2.131,33,2.479,44,1.427,46,2.513,47,2.209,54,2.17,56,0.56,59,0.706,73,1.17,135,1.265,338,3.324,414,2.146,605,4.402,778,3.369,847,3.239,853,3.019,1354,5.762,1495,2.923,2094,3.871,2102,4.607,2319,4.393,2388,3.871,2397,5.665,2398,4.103,2880,3.678,3295,5.762,3296,4.782,3297,6.429,3298,7.428,3299,7.428,3300,5.372,3301,5.372,3302,5.372,3303,4.782,3304,6.271,3305,6.271,3306,4.782,3307,4.782]],["title/interfaces/WalletsState.html",[0,0.284,3297,3.843]],["body/interfaces/WalletsState.html",[0,0.434,2,1.172,3,0.058,4,0.066,5,0.066,7,0.385,8,0.643,13,1.256,14,0.593,15,0.007,16,0.101,19,0.005,20,0.005,28,1.945,33,2.501,54,2.199,56,0.57,59,0.719,73,1.192,135,1.301,338,3.384,414,2.206,605,4.611,776,5.169,778,3.463,847,3.298,1354,5.866,1495,3.005,2094,3.98,2102,4.691,2319,4.516,2388,3.98,2397,5.741,2880,3.781,3295,4.516,3296,4.916,3297,6.516,3298,7.781,3299,7.781,3303,4.916,3304,6.385,3305,6.385,3306,4.916,3307,4.916]],["title/injectables/WebStorageService.html",[389,1.394,645,3.843]],["body/injectables/WebStorageService.html",[3,0.039,4,0.045,5,0.045,7,0.26,8,0.489,10,1.352,13,1.236,14,0.538,15,0.007,16,0.045,19,0.004,20,0.004,28,1.01,32,1.105,38,1.18,44,1.581,46,2.067,47,2.301,51,1.738,52,1.651,54,1.785,55,2.278,56,0.296,58,0.432,59,0.373,73,1.26,92,1.214,158,3.178,176,2.881,187,1.725,254,3.07,270,3.761,277,3.9,278,3.294,297,1.884,320,2.447,366,5.756,389,1.621,390,1.671,394,5.289,414,3.422,437,1.965,438,1.965,548,1.237,644,3.316,645,4.467,671,5.824,807,4.876,853,4.454,1081,5.603,1495,3.519,1668,4.66,1717,4.467,2155,3.046,3308,8.83,3309,3.725,3310,6.467,3311,7.122,3312,5.462,3313,5.462,3314,5.462,3315,3.725,3316,3.725,3317,5.462,3318,5.462,3319,5.462,3320,3.725,3321,5.462,3322,3.725,3323,3.725,3324,3.725,3325,5.462,3326,3.725,3327,5.462,3328,3.725,3329,5.462,3330,3.725,3331,3.725,3332,3.725,3333,3.725,3334,3.725,3335,7.122,3336,3.725,3337,5.462,3338,5.462,3339,3.725,3340,3.725,3341,3.725,3342,3.725,3343,3.725,3344,3.725,3345,3.725,3346,3.725,3347,3.725,3348,3.725,3349,3.725,3350,3.725,3351,3.316,3352,3.725,3353,3.725,3354,3.725,3355,3.725,3356,3.725,3357,3.725,3358,3.725]],["title/injectables/WebsocketService.html",[389,1.394,1584,3.843]],["body/injectables/WebsocketService.html",[3,0.052,4,0.06,5,0.06,7,0.348,8,0.601,10,0.889,13,1.009,14,0.455,15,0.007,16,0.08,19,0.005,20,0.005,38,1.448,43,1.724,44,1.58,51,1.72,52,2.027,56,0.602,58,0.579,59,0.5,73,0.829,147,2.948,158,2.669,187,1.135,297,1.954,320,1.954,389,1.99,390,2.237,437,2.631,438,2.631,451,3.594,794,6.744,874,3.809,1495,2.714,1548,3.809,1584,5.484,1762,4.44,1767,4.079,2030,4.44,2384,4.079,2392,4.079,3022,4.44,3359,4.988,3360,7.576,3361,8.102,3362,8.102,3363,8.102,3364,6.706,3365,6.706,3366,4.988,3367,4.988,3368,8.454,3369,4.988,3370,6.706,3371,4.988,3372,7.576,3373,6.706,3374,4.988,3375,4.988,3376,7.576,3377,4.988,3378,4.988,3379,4.988,3380,4.988,3381,4.988,3382,4.988,3383,4.988,3384,4.988,3385,7.576,3386,4.988,3387,4.988,3388,4.988,3389,4.988,3390,4.988,3391,4.988,3392,4.988]],["title/dependencies.html",[474,2.419,3393,3.481]],["body/dependencies.html",[15,0.007,19,0.004,20,0.004,58,0.545,176,3.873,182,4.176,206,2.054,237,1.916,238,3.381,239,3.068,242,4.126,243,2.728,245,2.829,248,2.829,251,2.885,263,3.837,326,3.212,395,3.212,396,3.837,398,3.212,433,4.176,434,4.176,474,2.006,497,1.721,523,2.829,524,2.728,530,4.176,532,4.636,537,4.176,538,4.176,620,4.176,621,5.727,717,2.475,869,3.837,1010,3.212,1135,6.46,1175,3.837,1431,4.176,1440,4.176,1441,4.176,1443,4.176,1551,3.212,1603,4.913,1647,4.176,1648,4.176,1665,2.942,1666,5.027,1899,4.176,1901,4.176,3351,4.176,3394,4.691,3395,9.045,3396,9.045,3397,4.691,3398,4.691,3399,4.691,3400,4.691,3401,4.691,3402,4.691,3403,4.691,3404,8.755,3405,4.691,3406,4.691,3407,4.691,3408,4.691,3409,4.691,3410,4.691,3411,4.691,3412,4.691,3413,4.691,3414,4.691,3415,4.691,3416,4.691,3417,4.691,3418,4.691,3419,4.691,3420,4.691,3421,6.433,3422,4.691,3423,4.691,3424,4.691,3425,4.691,3426,4.691,3427,6.433,3428,4.691,3429,4.691,3430,4.691,3431,4.691,3432,4.691,3433,4.691,3434,4.691,3435,6.433,3436,4.691,3437,4.691,3438,4.691,3439,4.691,3440,4.691,3441,4.691,3442,4.691,3443,4.691,3444,4.691,3445,4.691,3446,4.691,3447,4.691,3448,4.691,3449,4.691,3450,4.691,3451,4.691,3452,4.691,3453,4.691,3454,4.691]],["title/miscellaneous/enumerations.html",[3455,2.678,3456,5.037]],["body/miscellaneous/enumerations.html",[3,0.072,7,0.475,15,0.006,19,0.006,20,0.006,47,2.554,64,3.579,369,5.567,385,4.906,694,4.452,752,3.13,1097,4.452,1424,5.567,1495,3.704,1513,6.06,1554,6.686,2425,5.567,2429,6.686,2433,5.567,2434,5.567,2435,5.567,2969,6.06,2971,7.278,2972,6.06,3455,4.661,3456,6.06,3457,6.808,3458,6.808,3459,6.06,3460,6.06,3461,6.06,3462,6.808,3463,6.808]],["title/miscellaneous/functions.html",[3455,2.678,3464,5.037]],["body/miscellaneous/functions.html",[7,0.341,10,1.673,14,0.546,15,0.007,19,0.005,20,0.005,51,1.406,73,1.558,187,2.134,490,4.357,494,5.732,502,3.994,543,4.357,545,6.68,554,5.895,602,4.357,612,6.68,633,5.895,634,8.559,637,6.489,663,4.357,1172,3.069,1294,4.357,1515,7.368,1554,5.415,1562,4.357,1569,8.016,2491,5.415,2531,5.415,3455,3.352,3459,4.357,3460,4.357,3461,4.357,3464,4.357,3465,4.895,3466,6.622,3467,4.895,3468,4.895,3469,8.853,3470,4.895,3471,6.622,3472,4.895,3473,4.895,3474,4.895,3475,4.895,3476,4.895,3477,4.895,3478,4.895,3479,4.895,3480,4.895,3481,4.895,3482,4.895,3483,4.895,3484,4.895,3485,4.895,3486,4.895,3487,6.622,3488,4.895,3489,4.895,3490,4.895]],["title/index.html",[7,0.273,3028,3.481,3491,3.911]],["body/index.html",[0,0.383,15,0.005,19,0.005,20,0.005,153,5.639,239,4.142,395,4.337,555,7.558,589,7.558,662,6.959,664,4.142,763,5.18,847,3.598,1612,8.261,1737,5.18,2363,7.894,2489,5.639,2581,5.18,2597,5.639,3492,6.334,3493,8.49,3494,6.334,3495,6.334,3496,6.334,3497,6.334,3498,6.334,3499,6.334,3500,8.49,3501,6.334,3502,6.334,3503,6.334,3504,6.334,3505,6.334,3506,9.501,3507,8.49,3508,6.334,3509,6.334,3510,6.334,3511,6.334,3512,6.334]],["title/modules.html",[473,2.269]],["body/modules.html",[15,0.005,19,0.005,20,0.005,239,6.381,261,7.123,472,4.169,473,1.923,480,3.934,481,3.57,482,3.57,483,3.934,484,3.934,485,3.175,565,3.934,566,3.934,567,3.934,568,3.934,592,4.169,1120,3.934,1125,3.934,1130,3.423,1315,8.686,2204,3.934,2276,4.169,2458,3.934,2464,4.464,2603,3.934,2607,3.934,2608,3.934,2656,4.169,2714,4.464,2958,4.169,2983,8.822,2998,4.169,3003,4.464,3513,9.758,3514,9.326]],["title/overview.html",[3515,5.733]],["body/overview.html",[2,0.561,15,0.007,19,0.003,20,0.003,22,1.703,23,0.894,64,1.838,70,0.861,75,2.363,77,2.319,79,1.703,82,1.703,84,1.671,87,1.703,89,1.703,91,2.363,94,2.363,96,1.703,97,2.319,99,2.363,101,2.363,103,1.671,106,1.703,108,2.363,113,1.671,115,1.671,117,1.833,119,1.671,121,2.363,123,1.671,125,1.703,126,1.703,128,1.671,130,1.671,132,1.671,134,1.671,137,2.479,390,1.185,472,6.788,473,0.931,474,1.795,475,2.351,476,2.351,477,2.351,478,2.351,479,2.351,480,5.846,481,5.197,482,5.197,483,3.766,484,6.188,485,4.378,486,3.991,487,1.883,488,1.156,489,1.055,563,2.351,564,2.351,565,3.766,566,4.682,567,3.766,568,3.766,652,2.351,707,2.351,708,2.351,709,2.351,957,4.077,1097,1.727,1120,6.521,1121,2.351,1122,2.351,1123,2.351,1124,2.351,1125,5.425,1130,5.837,1132,5.227,1394,2.351,1395,2.351,1396,2.351,1397,2.351,1652,2.351,1653,2.351,1654,2.351,1948,5.54,1949,1.536,1962,5.54,2069,5.54,2106,5.54,2204,4.985,2205,2.351,2206,2.351,2207,2.351,2276,4.963,2277,2.351,2278,2.351,2279,2.351,2398,2.017,2414,2.351,2415,2.351,2416,2.351,2417,5.54,2418,5.54,2419,5.54,2420,5.54,2458,4.985,2459,2.351,2460,2.351,2461,2.351,2603,6.188,2604,2.351,2605,2.351,2606,2.351,2607,4.682,2608,6.613,2656,5.284,2657,2.351,2658,2.351,2710,2.351,2711,2.351,2744,2.351,2746,2.351,2747,2.351,2958,5.284,2959,2.351,2960,2.351,2998,4.548,2999,2.351,3000,2.351,3074,2.351,3076,2.351,3515,2.351,3516,2.641,3517,2.641,3518,2.641,3519,2.641,3520,2.641]],["title/properties.html",[8,0.507,3393,3.481]],["body/properties.html",[8,0.682,15,0.006,19,0.006,20,0.006,988,6.781,3521,7.618]],["title/miscellaneous/typealiases.html",[3455,2.678,3522,5.659]],["body/miscellaneous/typealiases.html",[7,0.512,14,0.498,15,0.006,19,0.006,20,0.006,542,4.599,1757,8.048,3455,5.022,3523,7.335,3524,8.544,3525,9.041,3526,8.544,3527,7.335]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":55,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BootstateComponent.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["0\">{{error",{"_index":2197,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.0.2",{"_index":3521,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":2334,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["0.1.2",{"_index":3426,"title":{},"body":{"dependencies.html":{}}}],["0.1.9",{"_index":3403,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3454,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":3412,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":879,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["0.5.33",{"_index":3431,"title":{},"body":{"dependencies.html":{}}}],["0.6.2",{"_index":3452,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":3411,"title":{},"body":{"dependencies.html":{}}}],["0000000000000000000000000000000000000000000000000000000000000000",{"_index":18,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["1",{"_index":64,"title":{"injectables/Effects-1.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":3416,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3428,"title":{},"body":{"dependencies.html":{}}}],["1.1.12",{"_index":3447,"title":{},"body":{"dependencies.html":{}}}],["1.25.0",{"_index":3442,"title":{},"body":{"dependencies.html":{}}}],["1.5.9",{"_index":3419,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":3433,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2319,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["100",{"_index":341,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"components/StatusComponent.html":{}}}],["1000",{"_index":1228,"title":{},"body":{"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"pipes/HashRatePipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["10000",{"_index":3306,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["100000000",{"_index":2074,"title":{},"body":{"pipes/FromCoinPipe.html":{},"components/TransferComponent.html":{}}}],["100000000).tofixed((8",{"_index":2856,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["100vh",{"_index":339,"title":{},"body":{"components/AppComponent.html":{}}}],["11.1.1",{"_index":3424,"title":{},"body":{"dependencies.html":{}}}],["11px",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["12.0.0",{"_index":3399,"title":{},"body":{"dependencies.html":{}}}],["12.0.1",{"_index":3437,"title":{},"body":{"dependencies.html":{}}}],["12.5.1",{"_index":3404,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":2355,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["127.0.0.1:36911",{"_index":559,"title":{},"body":{"modules/AppModule.html":{}}}],["12px",{"_index":1092,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["13",{"_index":1633,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["130",{"_index":354,"title":{},"body":{"components/AppComponent.html":{}}}],["14.0.0",{"_index":3406,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2402,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["151",{"_index":355,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":1669,"title":{},"body":{"interfaces/CreateWallet.html":{},"pipes/HashLinkPipe.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["181",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["19",{"_index":3518,"title":{},"body":{"overview.html":{}}}],["1c9ea3",{"_index":2346,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["2",{"_index":694,"title":{},"body":{"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/StatusComponent.html":{},"miscellaneous/enumerations.html":{}}}],["2.1.0",{"_index":3443,"title":{},"body":{"dependencies.html":{}}}],["2.29.2",{"_index":3429,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":3446,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3449,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":3408,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":3112,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["24",{"_index":2845,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["242",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["242628",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":999,"title":{},"body":{"components/BlockLedgerComponent.html":{},"modules/DataModule.html":{}}}],["255",{"_index":2333,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["256",{"_index":1847,"title":{},"body":{"injectables/CryptService.html":{}}}],["25vh",{"_index":1385,"title":{},"body":{"directives/ChartDirective.html":{}}}],["27",{"_index":3516,"title":{},"body":{"overview.html":{}}}],["27.5.1",{"_index":3422,"title":{},"body":{"dependencies.html":{}}}],["2px",{"_index":375,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1097,"title":{},"body":{"components/BlockchainComponent.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.6.0",{"_index":3415,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2404,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["30.416",{"_index":2848,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["30000",{"_index":1355,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["30vh",{"_index":359,"title":{},"body":{"components/AppComponent.html":{}}}],["31",{"_index":3517,"title":{},"body":{"overview.html":{}}}],["32",{"_index":1687,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["365",{"_index":2850,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["36963",{"_index":3213,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["39.2.0",{"_index":3409,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1024,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["4.1.1",{"_index":3420,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{}}}],["404",{"_index":286,"title":{},"body":{"components/AppComponent.html":{}}}],["4096",{"_index":1852,"title":{},"body":{"injectables/CryptService.html":{}}}],["48px",{"_index":2741,"title":{},"body":{"components/StatusComponent.html":{}}}],["5",{"_index":2904,"title":{},"body":{"components/TransferComponent.html":{}}}],["5.0.0",{"_index":3435,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":3402,"title":{},"body":{"dependencies.html":{}}}],["5.58.2",{"_index":3418,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2345,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["545",{"_index":2852,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["54px",{"_index":344,"title":{},"body":{"components/AppComponent.html":{}}}],["57",{"_index":3520,"title":{},"body":{"overview.html":{}}}],["58px",{"_index":376,"title":{},"body":{"components/AppComponent.html":{}}}],["6.0.2",{"_index":3438,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":3414,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":3434,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":3444,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2840,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["64",{"_index":1670,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["64px",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":1828,"title":{},"body":{"injectables/CryptService.html":{}}}],["7.0.0",{"_index":3407,"title":{},"body":{"dependencies.html":{}}}],["74px",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":1638,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["8.0.0",{"_index":3440,"title":{},"body":{"dependencies.html":{}}}],["838488",{"_index":388,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":3519,"title":{},"body":{"overview.html":{}}}],["_(ツ)_",{"_index":2686,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["above",{"_index":3025,"title":{},"body":{"components/WalletComponent.html":{}}}],["absolute",{"_index":2742,"title":{},"body":{"components/StatusComponent.html":{}}}],["access",{"_index":661,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["access_token",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessibility",{"_index":2681,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["accessors",{"_index":1717,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/WebStorageService.html":{}}}],["account_balance_wallet",{"_index":325,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["accounts",{"_index":1770,"title":{},"body":{"injectables/CryptService.html":{}}}],["action",{"_index":1515,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/WalletEffects.html":{},"miscellaneous/functions.html":{}}}],["actionreducer",{"_index":612,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":613,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":1508,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/Effects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["actionsblocklist",{"_index":1908,"title":{},"body":{"modules/DataModule.html":{}}}],["activatedroute",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["activatedroute.firstchild",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/RootComponent.html":{},"miscellaneous/enumerations.html":{}}}],["acts",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":139,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["adapter",{"_index":1441,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["add",{"_index":34,"title":{},"body":{"components/AddComponent.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/FileSystemService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["add'},{'name",{"_index":74,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["add.component.html",{"_index":36,"title":{},"body":{"components/AddComponent.html":{}}}],["add_box",{"_index":65,"title":{},"body":{"components/AddComponent.html":{}}}],["addaddressbook",{"_index":1,"title":{"interfaces/AddAddressBook.html":{}},"body":{"interfaces/AddAddressBook.html":{},"injectables/WalletRpcService.html":{}}}],["addaddressbook(x",{"_index":3157,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["addcomponent",{"_index":22,"title":{"components/AddComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["adding",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["addon",{"_index":3450,"title":{},"body":{"dependencies.html":{}}}],["addoptions",{"_index":848,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["addoptions(overrides",{"_index":852,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["address",{"_index":9,"title":{"interfaces/Address.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["adds",{"_index":598,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adduser",{"_index":2783,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["adjust",{"_index":3486,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adjustments",{"_index":1418,"title":{},"body":{"injectables/ChartService.html":{}}}],["aftercontentinit",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["afterviewinit",{"_index":1357,"title":{},"body":{"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["again",{"_index":2182,"title":{},"body":{"components/LoginComponent.html":{}}}],["alertservice",{"_index":2368,"title":{},"body":{"components/OpenComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{}}}],["alertstyles",{"_index":2908,"title":{},"body":{"components/TransferComponent.html":{}}}],["alertstyles.danger",{"_index":2921,"title":{},"body":{"components/TransferComponent.html":{}}}],["alertstyles.info",{"_index":2916,"title":{},"body":{"components/TransferComponent.html":{}}}],["algorithm",{"_index":1697,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["alias",{"_index":2493,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["aliases",{"_index":3523,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["allcolumns",{"_index":960,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["allow",{"_index":1746,"title":{},"body":{"injectables/CryptService.html":{}}}],["alloweddomains",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["alpha(0.2",{"_index":1464,"title":{},"body":{"injectables/ChartService.html":{}}}],["already",{"_index":2555,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["alt_blocks_count",{"_index":1328,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["always",{"_index":1731,"title":{},"body":{"injectables/CryptService.html":{}}}],["amber",{"_index":1021,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["amfromunix",{"_index":931,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["amount",{"_index":1913,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{}}}],["amtimeago",{"_index":1229,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["angular",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":3394,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3397,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":497,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"interceptors/HeaderInterceptor.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["angular/compiler",{"_index":3398,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":523,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":717,"title":{},"body":{"modules/AuthModule.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/RestoreComponent.html":{},"modules/RootModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3401,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":519,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/card",{"_index":714,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/checkbox",{"_index":2967,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/core",{"_index":2964,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/dialog",{"_index":1938,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{}}}],["angular/material/divider",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/expansion",{"_index":3080,"title":{},"body":{"modules/WalletModule.html":{}}}],["angular/material/form",{"_index":1140,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/input",{"_index":719,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/list",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/menu",{"_index":517,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["angular/material/progress",{"_index":1137,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/select",{"_index":2662,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/sidenav",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":2612,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/toolbar",{"_index":515,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/tooltip",{"_index":521,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["angular/platform",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SpartaComponent.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["animal",{"_index":1935,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["animation",{"_index":865,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animationduration",{"_index":867,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animations",{"_index":869,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"dependencies.html":{}}}],["any):string|null",{"_index":3350,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["anything",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":2030,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebsocketService.html":{}}}],["api_url",{"_index":452,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/WalletRpcService.html":{}}}],["apiurl",{"_index":394,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["app",{"_index":92,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WebStorageService.html":{}}}],["app'},{'name",{"_index":76,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["app.boot.download",{"_index":1290,"title":{},"body":{"components/BootstateComponent.html":{}}}],["app.boot.folder",{"_index":1288,"title":{},"body":{"components/BootstateComponent.html":{}}}],["app.boot.server",{"_index":1287,"title":{},"body":{"components/BootstateComponent.html":{}}}],["app.boot.start",{"_index":1293,"title":{},"body":{"components/BootstateComponent.html":{}}}],["app.component",{"_index":525,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":145,"title":{},"body":{"components/AppComponent.html":{}}}],["app.lthn.chain.desc.no_transactions",{"_index":1059,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["app.lthn.chain.table.th.depth",{"_index":986,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.table.th.reward",{"_index":984,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.title",{"_index":1086,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["app.lthn.chain.words.alt_blocks_count",{"_index":1250,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.block_size",{"_index":934,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.block_size_limit",{"_index":1252,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.chain_stat",{"_index":1222,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.chain_stat_value",{"_index":1223,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.cumulative_difficulty",{"_index":1237,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.depth",{"_index":927,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.difficulty",{"_index":932,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.grey_peerlist_size",{"_index":1234,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.hash",{"_index":916,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{}}}],["app.lthn.chain.words.height",{"_index":922,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.incoming_connections_count",{"_index":1239,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.miner_transaction",{"_index":1060,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["app.lthn.chain.words.miner_tx",{"_index":920,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.nonce",{"_index":939,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.orphan_status",{"_index":983,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.words.outgoing_connections_count",{"_index":1246,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.reward",{"_index":924,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{}}}],["app.lthn.chain.words.start_time",{"_index":1226,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.status",{"_index":1224,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.target",{"_index":1248,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.target_height",{"_index":1230,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.testnet",{"_index":1244,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.timestamp",{"_index":929,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.words.top_height",{"_index":1231,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.tx_count",{"_index":918,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.tx_pool_size",{"_index":1242,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.unlock_time",{"_index":1062,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["app.lthn.chain.words.valid",{"_index":917,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.version",{"_index":936,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.white_peerlist_size",{"_index":1232,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.wallet.button.create",{"_index":3115,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.button.restore",{"_index":2564,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.button.unlock",{"_index":2396,"title":{},"body":{"components/OpenComponent.html":{}}}],["app.lthn.wallet.label.address",{"_index":2558,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.autosave",{"_index":2562,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.filename",{"_index":2554,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.label.restore",{"_index":2561,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.spend",{"_index":2559,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.view",{"_index":2560,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.wallet",{"_index":2556,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.titles.new",{"_index":3114,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.titles.restore",{"_index":2553,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.titles.unlock",{"_index":2394,"title":{},"body":{"components/OpenComponent.html":{}}}],["app_config",{"_index":615,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["app_config.production",{"_index":647,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/DataModule.html":{}}}],["appcomponent",{"_index":75,"title":{"components/AppComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["appconfigservice",{"_index":179,"title":{"injectables/AppConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"injectables/WalletRpcService.html":{}}}],["appconfigservice.apiurl",{"_index":449,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.get('lethean",{"_index":450,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/WalletRpcService.html":{}}}],["appconfigservice.config.get(section",{"_index":466,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.parse(data",{"_index":454,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.set(section",{"_index":467,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.stringify",{"_index":470,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.serverpublickey",{"_index":446,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{}}}],["appfilesystem",{"_index":2007,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["application",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ProfileState.html":{}}}],["application/json",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["applies",{"_index":1416,"title":{},"body":{"injectables/ChartService.html":{}}}],["appmodule",{"_index":472,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":480,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":601,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{}}}],["arg",{"_index":3188,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["armored",{"_index":1857,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredkey",{"_index":1868,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredmessage",{"_index":1881,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoured",{"_index":1723,"title":{},"body":{"injectables/CryptService.html":{}}}],["around",{"_index":2588,"title":{},"body":{"components/RootComponent.html":{}}}],["array",{"_index":1286,"title":{},"body":{"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{}}}],["async",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["atob(dat",{"_index":2063,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["atob(state",{"_index":641,"title":{},"body":{"interfaces/AppState.html":{}}}],["atomic",{"_index":1915,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/MakeUriIn.html":{}}}],["attach",{"_index":1582,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["attach_file",{"_index":2198,"title":{},"body":{"components/LoginComponent.html":{}}}],["attached",{"_index":2501,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["auth",{"_index":685,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BootstateComponent.html":{}}}],["auth.service",{"_index":693,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":2777,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auth/login",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/angular",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["authenticated",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":578,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["authmodule",{"_index":481,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["authneeded",{"_index":1258,"title":{},"body":{"components/BootstateComponent.html":{}}}],["authorization",{"_index":1207,"title":{},"body":{"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{}}}],["authservice",{"_index":539,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["authservice.token",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice.token.access_token",{"_index":1208,"title":{},"body":{"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{}}}],["authservice.token[\"access_token",{"_index":546,"title":{},"body":{"modules/AppModule.html":{}}}],["authservice.token['access_token",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice.token['access_token']?.length",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice.token['refresh_token",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["auto",{"_index":381,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/ProfileState.html":{}}}],["automatically",{"_index":1676,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["autosave_current",{"_index":2537,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["available",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"interfaces/IncomingTransfersIn.html":{},"modules.html":{}}}],["avatar",{"_index":2494,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["await",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["aware",{"_index":1735,"title":{},"body":{"injectables/CryptService.html":{}}}],["away",{"_index":2807,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["axios",{"_index":3351,"title":{},"body":{"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["axios.post(`${this.apiurl}/${cmd",{"_index":3353,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["b",{"_index":1642,"title":{},"body":{"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["backend",{"_index":3311,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd",{"_index":3315,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd:string",{"_index":3349,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["background",{"_index":347,"title":{},"body":{"components/AppComponent.html":{},"components/StatusComponent.html":{}}}],["backgroundcolor",{"_index":2294,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["backup",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["balance",{"_index":826,"title":{"interfaces/Balance.html":{}},"body":{"interfaces/Balance.html":{},"components/DetailsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["balance:any",{"_index":1925,"title":{},"body":{"components/DetailsComponent.html":{}}}],["bar",{"_index":1138,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/UserModule.html":{}}}],["basechartconfigservice",{"_index":845,"title":{"injectables/BaseChartConfigService.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:12",{"_index":2303,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:121",{"_index":2290,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:16",{"_index":2297,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:17",{"_index":2302,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:18",{"_index":2296,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:31",{"_index":2288,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:61",{"_index":2291,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["before",{"_index":1684,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["below",{"_index":3027,"title":{},"body":{"components/WalletComponent.html":{}}}],["below_amount",{"_index":2761,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["benefit",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["beta.2",{"_index":3436,"title":{},"body":{"dependencies.html":{}}}],["beta.35",{"_index":3400,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1450,"title":{},"body":{"injectables/ChartService.html":{}}}],["big.js",{"_index":3413,"title":{},"body":{"dependencies.html":{}}}],["bigger",{"_index":1784,"title":{},"body":{"injectables/CryptService.html":{}}}],["biggercontentfont",{"_index":2674,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["binaries",{"_index":1322,"title":{},"body":{"components/BootstateComponent.html":{}}}],["binary",{"_index":1859,"title":{},"body":{"injectables/CryptService.html":{}}}],["black",{"_index":1959,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["blank",{"_index":2934,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["bleeding",{"_index":2582,"title":{},"body":{"components/RootComponent.html":{}}}],["block",{"_index":85,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/GetBulkPaymentsIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["block.block_size",{"_index":935,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.depth",{"_index":928,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.difficulty",{"_index":933,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.height",{"_index":923,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.major_version",{"_index":937,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.minor_version",{"_index":938,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.nonce",{"_index":940,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.num_txes",{"_index":919,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.reward",{"_index":925,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.timestamp",{"_index":930,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block_height",{"_index":2413,"title":{},"body":{"interfaces/Payment.html":{}}}],["block_id",{"_index":1184,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["block_size",{"_index":944,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["block_size_limit",{"_index":1329,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["blockchain",{"_index":841,"title":{},"body":{"interfaces/Balance.html":{},"components/BootstateComponent.html":{},"interfaces/CreateWallet.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["blockchain.component.html",{"_index":1071,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchaincomponent",{"_index":77,"title":{"components/BlockchainComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockchainconfigcomponent",{"_index":79,"title":{"components/BlockchainConfigComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockchainmodule",{"_index":1120,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainroutingmodule",{"_index":565,"title":{"modules/BlockchainRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainservice",{"_index":177,"title":{"injectables/BlockchainService.html":{}},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/StatusComponent.html":{}}}],["blockchainstatscomponent",{"_index":82,"title":{"components/BlockchainStatsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockdata",{"_index":897,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{}}}],["blockdata['miner_tx']['unlock_time",{"_index":1065,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["blockdata['miner_tx']['vout'][0]['amount",{"_index":1064,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["blockdata['miner_tx']['vout'][0]['target']['key",{"_index":921,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{}}}],["blockdata[\\'miner_tx\\'][\\'unlock_time",{"_index":1069,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["blockdata[\\'miner_tx\\'][\\'vout\\'][0][\\'amount",{"_index":1068,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["blockdata[\\'miner_tx\\'][\\'vout\\'][0][\\'target\\'][\\'key",{"_index":942,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{}}}],["blockdetailscomponent",{"_index":84,"title":{"components/BlockDetailsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockheader",{"_index":903,"title":{"interfaces/BlockHeader.html":{}},"body":{"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{}}}],["blockid",{"_index":898,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockledgercomponent",{"_index":87,"title":{"components/BlockLedgerComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blocks",{"_index":961,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["blocksearch",{"_index":962,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{}}}],["blocktransactionscomponent",{"_index":89,"title":{"components/BlockTransactionsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["body",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["boolean",{"_index":223,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SettingsState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{}}}],["bootstate",{"_index":1255,"title":{},"body":{"components/BootstateComponent.html":{}}}],["bootstate'},{'name",{"_index":93,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["bootstate.component.html",{"_index":1257,"title":{},"body":{"components/BootstateComponent.html":{}}}],["bootstate.component.scss",{"_index":1256,"title":{},"body":{"components/BootstateComponent.html":{}}}],["bootstate/bootstate.component",{"_index":2753,"title":{},"body":{"modules/StatusModule.html":{}}}],["bootstatecomponent",{"_index":91,"title":{"components/BootstateComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["bootstrap",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModalComponent.html":{},"miscellaneous/functions.html":{}}}],["bootstrap/ng",{"_index":2239,"title":{},"body":{"components/ModalComponent.html":{}}}],["border",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["bordercolor",{"_index":2295,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["borderwidth",{"_index":878,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["bottom",{"_index":2311,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["bounds",{"_index":2323,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["brain",{"_index":1775,"title":{},"body":{"injectables/CryptService.html":{}}}],["bring",{"_index":2585,"title":{},"body":{"components/RootComponent.html":{}}}],["browse",{"_index":2983,"title":{},"body":{"components/VpnComponent.html":{},"modules.html":{}}}],["browser",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":500,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":499,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":498,"title":{},"body":{"modules/AppModule.html":{},"modules/TranslateModule.html":{}}}],["browsermodule.withservertransition({appid",{"_index":547,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(data",{"_index":2065,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["btoa(res.tostring",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["btoa(state",{"_index":638,"title":{},"body":{"interfaces/AppState.html":{}}}],["build",{"_index":3500,"title":{},"body":{"index.html":{}}}],["builddocumentation",{"_index":3510,"title":{},"body":{"index.html":{}}}],["building",{"_index":2947,"title":{},"body":{"components/UserComponent.html":{}}}],["buildtype",{"_index":1072,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["buttonmodule",{"_index":1142,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["bypassed",{"_index":686,"title":{},"body":{"guards/AuthGuard.html":{}}}],["byte/64",{"_index":1688,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["calc(99vh",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["calculated",{"_index":1677,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["call",{"_index":3318,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["callback",{"_index":883,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["callbacks",{"_index":887,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["called",{"_index":3385,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["canactivate",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["cant",{"_index":689,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canvas",{"_index":1651,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["capital",{"_index":2481,"title":{},"body":{"components/ProfileComponent.html":{}}}],["card",{"_index":357,"title":{},"body":{"components/AppComponent.html":{},"components/StatusComponent.html":{}}}],["cardmodule",{"_index":3086,"title":{},"body":{"modules/WalletModule.html":{}}}],["caretsize",{"_index":2338,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["catch",{"_index":277,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"injectables/WebStorageService.html":{}}}],["catch((e",{"_index":2183,"title":{},"body":{"components/LoginComponent.html":{}}}],["catch((err",{"_index":2390,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["catch(e",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror",{"_index":1552,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["catcherror((error",{"_index":1543,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["center",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["cert",{"_index":442,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["chain",{"_index":80,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{}}}],["chain'},{'name",{"_index":78,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["chain.chainstate",{"_index":606,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain.reducer",{"_index":632,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain/block/:id",{"_index":1156,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["chaingetinfo",{"_index":214,"title":{"interfaces/ChainGetInfo.html":{}},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/StatusComponent.html":{}}}],["chaininfo",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/StatusComponent.html":{}}}],["chainrpc",{"_index":1162,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chainrpc(method",{"_index":1173,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chance",{"_index":1879,"title":{},"body":{"injectables/CryptService.html":{}}}],["change",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/SettingsEffects.html":{}}}],["changed",{"_index":2174,"title":{},"body":{"components/LoginComponent.html":{}}}],["changedetection",{"_index":1572,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy",{"_index":1601,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1573,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectorref",{"_index":1586,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changelanguage",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{}}}],["changelanguage(lang",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["changestream",{"_index":1580,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel",{"_index":1591,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel:string",{"_index":1618,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["channel",{"_index":1593,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["character",{"_index":1689,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["charged",{"_index":2929,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["charset=utf",{"_index":2704,"title":{},"body":{"components/SpartaComponent.html":{}}}],["chart",{"_index":622,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BaseChartConfigService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chart(`lthn",{"_index":1476,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.chartseffects",{"_index":649,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.chartsstate",{"_index":607,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.directive",{"_index":1399,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.js",{"_index":1431,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chart.reducer",{"_index":628,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.register(...registerables",{"_index":1456,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.service",{"_index":1376,"title":{},"body":{"directives/ChartDirective.html":{},"modules/ChartModule.html":{}}}],["chartconfiginterface",{"_index":1342,"title":{"interfaces/ChartConfigInterface.html":{}},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartdata",{"_index":1401,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartdifficulty",{"_index":1349,"title":{"interfaces/ChartDifficulty.html":{}},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartsEffects.html":{}}}],["chartdifficultyreducer",{"_index":1566,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultyreducer(state",{"_index":1570,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultystate",{"_index":1353,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{}}}],["chartdirective",{"_index":137,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["chartelement",{"_index":1358,"title":{},"body":{"directives/ChartDirective.html":{}}}],["chartinstances",{"_index":1402,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartjs",{"_index":1440,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chartmeta",{"_index":1403,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartmodule",{"_index":1125,"title":{"modules/ChartModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules.html":{},"overview.html":{}}}],["chartnetworkdifficulty",{"_index":1547,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultyloadrequested",{"_index":1523,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystartpolling",{"_index":1503,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystoppolling",{"_index":1504,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["charts",{"_index":603,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ChartService.html":{}}}],["charts/network",{"_index":1446,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartsactions",{"_index":1553,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultyloadfailure",{"_index":1545,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadrequested",{"_index":1517,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadsuccess",{"_index":1542,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["chartsactions.chartnetworkdifficultystartpolling",{"_index":2298,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultystoppedpolling",{"_index":1520,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultystoppolling",{"_index":2300,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartseffects",{"_index":1501,"title":{"injectables/ChartsEffects.html":{}},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty",{"_index":1535,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty$.next(true",{"_index":1516,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartservice",{"_index":957,"title":{"injectables/ChartService.html":{}},"body":{"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"overview.html":{}}}],["chartsstate",{"_index":1561,"title":{"interfaces/ChartsState.html":{}},"body":{"interfaces/ChartsState.html":{}}}],["chartsubscriptions",{"_index":1404,"title":{},"body":{"injectables/ChartService.html":{}}}],["check",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"index.html":{}}}],["checkdownloaded",{"_index":1265,"title":{},"body":{"components/BootstateComponent.html":{}}}],["checkdownloaded(that",{"_index":1272,"title":{},"body":{"components/BootstateComponent.html":{}}}],["checkdownloads",{"_index":1266,"title":{},"body":{"components/BootstateComponent.html":{}}}],["checkfolderstructure",{"_index":1267,"title":{},"body":{"components/BootstateComponent.html":{}}}],["checking",{"_index":1318,"title":{},"body":{"components/BootstateComponent.html":{}}}],["checks",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkserveralive",{"_index":1268,"title":{},"body":{"components/BootstateComponent.html":{}}}],["class",{"_index":59,"title":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["classes",{"_index":2398,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"overview.html":{}}}],["clear",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/WebStorageService.html":{}}}],["cli",{"_index":1612,"title":{},"body":{"components/ConsoleComponent.html":{},"index.html":{}}}],["close",{"_index":1054,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["closebuttonlabel",{"_index":2257,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["closeconnection",{"_index":3361,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closed",{"_index":3391,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closeonoutsideclick",{"_index":1044,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["closewallet",{"_index":3244,"title":{},"body":{"injectables/WalletService.html":{}}}],["cloud",{"_index":1291,"title":{},"body":{"components/BootstateComponent.html":{},"components/StatusComponent.html":{}}}],["cloud_download",{"_index":66,"title":{},"body":{"components/AddComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cloud_off",{"_index":2738,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_upload",{"_index":1099,"title":{},"body":{"components/BlockchainComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cluster_appmodule",{"_index":475,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":478,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":476,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":477,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":479,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":563,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":564,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":707,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":709,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":708,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":710,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_blockchainmodule",{"_index":1121,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_declarations",{"_index":1122,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_exports",{"_index":1123,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":1124,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_chartmodule",{"_index":1394,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_chartdirective_providers",{"_index":1396,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_declarations",{"_index":1395,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_exports",{"_index":1397,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_consolemodule",{"_index":1652,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_declarations",{"_index":1653,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_exports",{"_index":1654,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":2205,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_declarations",{"_index":2206,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":2207,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_modalmodule",{"_index":2277,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":2278,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":2279,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":2414,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":2416,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":2415,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":2459,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_declarations",{"_index":2460,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_exports",{"_index":2461,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_rootmodule",{"_index":2604,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_declarations",{"_index":2606,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_imports",{"_index":2605,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootroutingmodule",{"_index":2619,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_rootroutingmodule_imports",{"_index":2620,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_settingsmodule",{"_index":2657,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2658,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2659,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_spartamodule",{"_index":2710,"title":{},"body":{"modules/SpartaModule.html":{},"overview.html":{}}}],["cluster_spartamodule_declarations",{"_index":2711,"title":{},"body":{"modules/SpartaModule.html":{},"overview.html":{}}}],["cluster_statusmodule",{"_index":2744,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_declarations",{"_index":2746,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":2747,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_imports",{"_index":2745,"title":{},"body":{"modules/StatusModule.html":{}}}],["cluster_usermodule",{"_index":2959,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2960,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2961,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_vpnmodule",{"_index":2999,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_vpnmodule_declarations",{"_index":3000,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":3074,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_declarations",{"_index":3076,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_imports",{"_index":3075,"title":{},"body":{"modules/WalletModule.html":{}}}],["cmd",{"_index":3319,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["code",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{},"components/RootComponent.html":{}}}],["codeeditormodule",{"_index":1143,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{}}}],["codemirror",{"_index":3417,"title":{},"body":{"dependencies.html":{}}}],["codemirror/mode/properties/properties.js",{"_index":1110,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["col",{"_index":1016,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["col.default",{"_index":1014,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["color",{"_index":386,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["colorlib",{"_index":1442,"title":{},"body":{"injectables/ChartService.html":{}}}],["colors",{"_index":863,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/ProfileComponent.html":{}}}],["colour",{"_index":1417,"title":{},"body":{"injectables/ChartService.html":{}}}],["columnmode",{"_index":963,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/TransactionsComponent.html":{}}}],["columns",{"_index":964,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/TransactionsComponent.html":{}}}],["command",{"_index":1579,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["commonmodule",{"_index":496,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["community",{"_index":2600,"title":{},"body":{"components/RootComponent.html":{},"components/VpnComponent.html":{}}}],["compileroptions",{"_index":3524,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["completed",{"_index":2776,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["component",{"_index":21,"title":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainRoutingModule.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{}}}],["component_template",{"_index":72,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["components",{"_index":23,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["components/transfer/transfer.component",{"_index":3091,"title":{},"body":{"modules/WalletModule.html":{}}}],["conf/app.ini",{"_index":462,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config",{"_index":395,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"components/BlockchainConfigComponent.html":{},"injectables/ChartService.html":{},"dependencies.html":{},"index.html":{}}}],["config'},{'name",{"_index":81,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["config.component.html",{"_index":1102,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["config.helper.ts",{"_index":3525,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["config.interface",{"_index":2307,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.interface.ts",{"_index":1344,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:7",{"_index":1348,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:9",{"_index":1347,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.service",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["config.service.ts",{"_index":392,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:12",{"_index":888,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:13",{"_index":426,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:14",{"_index":431,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:15",{"_index":432,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:16",{"_index":428,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:17",{"_index":430,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:18",{"_index":429,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:19",{"_index":409,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:25",{"_index":411,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:36",{"_index":419,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:49",{"_index":421,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:50",{"_index":851,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:57",{"_index":857,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:59",{"_index":856,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:61",{"_index":854,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:7",{"_index":860,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:76",{"_index":416,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:8",{"_index":889,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:86",{"_index":424,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:9",{"_index":859,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:94",{"_index":422,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configfile\":\"letheand.conf",{"_index":1199,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["configiniparser",{"_index":427,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configiniparser('\\r\\n",{"_index":456,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configiniparser.errors.errorduplicatesectionerror",{"_index":464,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configs",{"_index":1453,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurations",{"_index":1436,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurefn",{"_index":3526,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["configureoptions",{"_index":849,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["configures",{"_index":184,"title":{},"body":{"components/AppComponent.html":{}}}],["confirm",{"_index":2557,"title":{},"body":{"components/RestoreComponent.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["connect",{"_index":3362,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connection",{"_index":3390,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["considered",{"_index":842,"title":{},"body":{"interfaces/Balance.html":{},"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["console",{"_index":1576,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console'},{'name",{"_index":95,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["console.component",{"_index":1656,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["console.component.html",{"_index":1578,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.component.scss",{"_index":1577,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.error('duplicated",{"_index":465,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["console.error(err",{"_index":2391,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["console.error(err)).then",{"_index":3019,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.error(err)).then((data",{"_index":2912,"title":{},"body":{"components/TransferComponent.html":{}}}],["console.error(error",{"_index":1544,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["console.log('cleaning",{"_index":2805,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('complete",{"_index":3389,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('creating",{"_index":2790,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('d",{"_index":2700,"title":{},"body":{"components/SpartaComponent.html":{}}}],["console.log('daemons",{"_index":1309,"title":{},"body":{"components/BootstateComponent.html":{}}}],["console.log('detail",{"_index":1049,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["console.log('done",{"_index":2806,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('getitem",{"_index":3342,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('http",{"_index":3358,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('keyboard",{"_index":1623,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log('keys",{"_index":2793,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('loaded",{"_index":1112,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["console.log('message",{"_index":3383,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('prompt",{"_index":2393,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["console.log('saving",{"_index":2795,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('setitem",{"_index":3344,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('settingscomponent",{"_index":2639,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log('toggled",{"_index":1046,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["console.log(`cmd:letheand:${this.command.join",{"_index":1634,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(`load",{"_index":448,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["console.log(dat",{"_index":1202,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["console.log(data",{"_index":1023,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["console.log(dirname",{"_index":2060,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log(e",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"components/LoginComponent.html":{}}}],["console.log(err",{"_index":3022,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":1496,"title":{},"body":{"injectables/ChartService.html":{}}}],["console.log(filename",{"_index":2061,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log(name",{"_index":3017,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.log(payload",{"_index":3066,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["console.log(privatekey.getuserids",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(res",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(signatures",{"_index":1876,"title":{},"body":{"injectables/CryptService.html":{}}}],["console.log(this.command.join",{"_index":1645,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(this.rows",{"_index":2892,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["consolecomponent",{"_index":94,"title":{"components/ConsoleComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["consolemodule",{"_index":482,"title":{"modules/ConsoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["const",{"_index":297,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SpartaComponent.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["construction",{"_index":1696,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["constructor(actions",{"_index":1507,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/Effects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["constructor(app",{"_index":1270,"title":{},"body":{"components/BootstateComponent.html":{}}}],["constructor(appfilesystem",{"_index":2004,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["constructor(authservice",{"_index":2164,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(chain",{"_index":899,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["constructor(cryptservice",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["constructor(dialog",{"_index":2728,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(dialogref",{"_index":2356,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["constructor(filesystem",{"_index":1719,"title":{},"body":{"injectables/CryptService.html":{}}}],["constructor(fs",{"_index":407,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/WalletService.html":{}}}],["constructor(http",{"_index":1170,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["constructor(modalservice",{"_index":2227,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(name",{"_index":3307,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["constructor(private",{"_index":440,"title":{},"body":{"injectables/AppConfigService.html":{},"components/BlockDetailsComponent.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"injectables/Effects.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"components/SpartaComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["constructor(public",{"_index":1085,"title":{},"body":{"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/DetailsComponent.html":{},"components/StatusComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(renderer",{"_index":1361,"title":{},"body":{"directives/ChartDirective.html":{}}}],["constructor(router",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["constructor(store",{"_index":1408,"title":{},"body":{"injectables/ChartService.html":{}}}],["constructor(wallet",{"_index":1918,"title":{},"body":{"components/DetailsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(walletrpc",{"_index":3096,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["constructor(ws",{"_index":1583,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["container",{"_index":337,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashRatePipe.html":{},"components/OpenComponent.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{}}}],["content.tofixed(2",{"_index":2117,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["contents",{"_index":1985,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["context",{"_index":1045,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["conversion",{"_index":1730,"title":{},"body":{"injectables/CryptService.html":{}}}],["converted",{"_index":1816,"title":{},"body":{"injectables/CryptService.html":{}}}],["cost",{"_index":2997,"title":{},"body":{"components/VpnComponent.html":{}}}],["count",{"_index":3310,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["create",{"_index":1799,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"interfaces/RestoreWallet.html":{},"components/UserComponent.html":{}}}],["createchart",{"_index":1405,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchart(name",{"_index":1411,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchartelement",{"_index":1359,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createchartelement(name",{"_index":1369,"title":{},"body":{"directives/ChartDirective.html":{}}}],["created",{"_index":2794,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createeffect",{"_index":1510,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["createopenpgp",{"_index":1703,"title":{},"body":{"injectables/CryptService.html":{}}}],["createopenpgp(username",{"_index":1721,"title":{},"body":{"injectables/CryptService.html":{}}}],["createreducer",{"_index":1563,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["creates",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["createsalt",{"_index":1704,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(input",{"_index":1725,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(username",{"_index":2804,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createsaltv2",{"_index":1705,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsaltv2(input",{"_index":1752,"title":{},"body":{"injectables/CryptService.html":{}}}],["createwallet",{"_index":1659,"title":{"interfaces/CreateWallet.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{}}}],["createwallet(x",{"_index":3159,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["creation",{"_index":2949,"title":{},"body":{"components/UserComponent.html":{}}}],["crypto",{"_index":396,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/CryptService.html":{},"dependencies.html":{}}}],["crypto.lib.wordarray.random(128",{"_index":1844,"title":{},"body":{"injectables/CryptService.html":{}}}],["crypto.pbkdf2(input",{"_index":1845,"title":{},"body":{"injectables/CryptService.html":{}}}],["cryptservice",{"_index":727,"title":{"injectables/CryptService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["cryptservice.sha256salty(username",{"_index":1778,"title":{},"body":{"injectables/CryptService.html":{}}}],["cumulative_difficulty",{"_index":1330,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["current",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/RestoreWallet.html":{}}}],["currentflag",{"_index":149,"title":{},"body":{"components/AppComponent.html":{}}}],["currentlanguage",{"_index":150,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":1748,"title":{},"body":{"injectables/CryptService.html":{}}}],["d",{"_index":2316,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"pipes/TimeAgoPipe.html":{}}}],["d.gettime",{"_index":2837,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["daemon",{"_index":203,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/ProfileComponent.html":{},"modules/StatusModule.html":{}}}],["daemon'},{'name",{"_index":105,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["daemon/wallet/json_rpc",{"_index":3209,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["daltonism",{"_index":2675,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["darkmode",{"_index":2676,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["dashboard",{"_index":322,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["dat",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/WalletService.html":{}}}],["dat.endswith('.keys",{"_index":3287,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.endswith('.txt",{"_index":3288,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.length",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dat.map((file",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dat.result",{"_index":2067,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["data",{"_index":548,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/PostComponent.html":{},"interfaces/ProfileState.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["data).catch((err",{"_index":3280,"title":{},"body":{"injectables/WalletService.html":{}}}],["data.address",{"_index":3283,"title":{},"body":{"injectables/WalletService.html":{}}}],["data.data",{"_index":3355,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["data.description",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["data.fee",{"_index":2917,"title":{},"body":{"components/TransferComponent.html":{}}}],["data.heading",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["data.length",{"_index":3285,"title":{},"body":{"injectables/WalletService.html":{}}}],["data.map((n",{"_index":2352,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["data.robots",{"_index":310,"title":{},"body":{"components/AppComponent.html":{}}}],["data.tx_hash",{"_index":2918,"title":{},"body":{"components/TransferComponent.html":{}}}],["data.tx_key",{"_index":2919,"title":{},"body":{"components/TransferComponent.html":{}}}],["data/data.module",{"_index":505,"title":{},"body":{"modules/AppModule.html":{}}}],["data/debug.rxjs",{"_index":1555,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["data/interface/pagination",{"_index":3303,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["data['block_header",{"_index":912,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["data['error']['message",{"_index":2922,"title":{},"body":{"components/TransferComponent.html":{}}}],["data['in",{"_index":2887,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data['out",{"_index":2888,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data[0",{"_index":1610,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["database",{"_index":2508,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["datamap",{"_index":1345,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamap(data",{"_index":1346,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamodule",{"_index":483,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["dataset",{"_index":2292,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dataset.backgroundcolor",{"_index":1462,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.bordercolor",{"_index":1466,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.yaxisid",{"_index":1473,"title":{},"body":{"injectables/ChartService.html":{}}}],["datasets",{"_index":858,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datastore",{"_index":1425,"title":{},"body":{"injectables/ChartService.html":{}}}],["datatable",{"_index":1010,"title":{},"body":{"components/BlockLedgerComponent.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["dataupdates",{"_index":3363,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["date",{"_index":2833,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["date(value",{"_index":2832,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["day",{"_index":2315,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["days",{"_index":2843,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["dd",{"_index":2709,"title":{},"body":{"components/SpartaComponent.html":{}}}],["dealing",{"_index":3269,"title":{},"body":{"injectables/WalletService.html":{}}}],["debug",{"_index":1513,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["debug(rxjslogginglevel.debug",{"_index":1541,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["decimation",{"_index":2341,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["declarations",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["decorator",{"_index":2112,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["decorators",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{}}}],["decrypt",{"_index":640,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["decrypted",{"_index":1872,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryption",{"_index":688,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ProfileState.html":{}}}],["decryptionkey",{"_index":2953,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["decryptionkeys",{"_index":1875,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgp",{"_index":1706,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgp(message",{"_index":1760,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle",{"_index":1707,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle(id",{"_index":1763,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptprivatekey",{"_index":1708,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptprivatekey(encryptionkey",{"_index":1779,"title":{},"body":{"injectables/CryptService.html":{}}}],["deep",{"_index":839,"title":{},"body":{"interfaces/Balance.html":{}}}],["default",{"_index":46,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["defaultlanguage",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":17,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/TransferSplitIn.html":{}}}],["defaultvalue",{"_index":415,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["delete",{"_index":3345,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["deleteaddressbook",{"_index":3138,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["deleteaddressbook(x",{"_index":3161,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dependencies",{"_index":474,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2988,"title":{},"body":{"components/VpnComponent.html":{}}}],["deprecated",{"_index":439,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["deps",{"_index":555,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["depth",{"_index":945,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["describes",{"_index":1776,"title":{},"body":{"injectables/CryptService.html":{}}}],["describing",{"_index":2219,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"modules/UserModule.html":{},"modules/WalletRoutingModule.html":{}}}],["description_short",{"_index":2426,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["desktop",{"_index":2581,"title":{},"body":{"components/RootComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["dest.amount",{"_index":2910,"title":{},"body":{"components/TransferComponent.html":{}}}],["destination",{"_index":1661,"title":{"interfaces/Destination.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destinations",{"_index":1673,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destroy",{"_index":2641,"title":{},"body":{"components/SettingsComponent.html":{}}}],["destroysubscriptions",{"_index":1406,"title":{},"body":{"injectables/ChartService.html":{}}}],["destroysubscriptions(name",{"_index":1419,"title":{},"body":{"injectables/ChartService.html":{}}}],["details",{"_index":895,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details'},{'name",{"_index":86,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["details.component.html",{"_index":896,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["detailscomponent",{"_index":96,"title":{"components/DetailsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["dev",{"_index":3501,"title":{},"body":{"index.html":{}}}],["dev:setup",{"_index":3508,"title":{},"body":{"index.html":{}}}],["develop",{"_index":691,"title":{},"body":{"guards/AuthGuard.html":{}}}],["development",{"_index":2590,"title":{},"body":{"components/RootComponent.html":{}}}],["devices",{"_index":1788,"title":{},"body":{"injectables/CryptService.html":{}}}],["devproduction",{"_index":3509,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1896,"title":{},"body":{"modules/DataModule.html":{}}}],["di",{"_index":1452,"title":{},"body":{"injectables/ChartService.html":{}}}],["dialog",{"_index":2724,"title":{},"body":{"components/StatusComponent.html":{}}}],["dialog/no",{"_index":2751,"title":{},"body":{"modules/StatusModule.html":{}}}],["dialogdata",{"_index":1932,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dialogref",{"_index":1940,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dictionaries",{"_index":2477,"title":{},"body":{"components/ProfileComponent.html":{}}}],["diff",{"_index":1351,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["difficulty",{"_index":946,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChainGetInfo.html":{}}}],["dir",{"_index":1980,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["direction",{"_index":1041,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["directive",{"_index":70,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["directives",{"_index":136,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["directory",{"_index":2010,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["dirname",{"_index":1983,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["disableclosebutton",{"_index":2260,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disabled",{"_index":2433,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["disabledismissbutton",{"_index":2261,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disablerpclogin",{"_index":3214,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dismiss",{"_index":2225,"title":{},"body":{"components/ModalComponent.html":{}}}],["dismissbuttonlabel",{"_index":2258,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["dispatch",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["display",{"_index":885,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["displaycolors",{"_index":2340,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["displayformats",{"_index":2314,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dkey",{"_index":2495,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["dns",{"_index":2602,"title":{},"body":{"components/RootComponent.html":{}}}],["do_not_relay",{"_index":2762,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["doc",{"_index":3511,"title":{},"body":{"index.html":{}}}],["doc:serve",{"_index":3512,"title":{},"body":{"index.html":{}}}],["dom",{"_index":25,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["domsanitizer",{"_index":1967,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["done",{"_index":1053,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["download",{"_index":1292,"title":{},"body":{"components/BootstateComponent.html":{},"components/NoDaemonRunningDialog.html":{}}}],["downloaddaemons",{"_index":1163,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["downloaded",{"_index":1259,"title":{},"body":{"components/BootstateComponent.html":{}}}],["downloading",{"_index":1321,"title":{},"body":{"components/BootstateComponent.html":{}}}],["downloadingcli",{"_index":2572,"title":{},"body":{"components/RootComponent.html":{}}}],["downloadneeded",{"_index":1260,"title":{},"body":{"components/BootstateComponent.html":{}}}],["drawborder",{"_index":2327,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["drawerdirection",{"_index":1012,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["drawerdirection.left",{"_index":1042,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["drawerservice",{"_index":972,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["dropdown",{"_index":3024,"title":{},"body":{"components/WalletComponent.html":{}}}],["duration",{"_index":868,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["during",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["e",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"injectables/WebStorageService.html":{}}}],["e.domevent",{"_index":1627,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.domevent.keycode",{"_index":1624,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.key",{"_index":1625,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.name",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{}}}],["e.status",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{}}}],["e.target.result.tostring",{"_index":2190,"title":{},"body":{"components/LoginComponent.html":{}}}],["e2e2e2",{"_index":864,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["each",{"_index":1437,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Destination.html":{}}}],["easier",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["ecc",{"_index":1850,"title":{},"body":{"injectables/CryptService.html":{}}}],["edge",{"_index":2583,"title":{},"body":{"components/RootComponent.html":{}}}],["edges",{"_index":2589,"title":{},"body":{"components/RootComponent.html":{}}}],["editor",{"_index":1759,"title":{},"body":{"injectables/CryptService.html":{}}}],["edittmpl",{"_index":965,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["effects",{"_index":648,"title":{"injectables/Effects.html":{},"injectables/Effects-1.html":{}},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{}}}],["effectsmodule",{"_index":1897,"title":{},"body":{"modules/DataModule.html":{}}}],["effectsmodule.forroot([...effects",{"_index":1909,"title":{},"body":{"modules/DataModule.html":{}}}],["effort",{"_index":1951,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["effortpipe",{"_index":1948,"title":{"pipes/EffortPipe.html":{}},"body":{"pipes/EffortPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["ekey",{"_index":2496,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["elementref",{"_index":1364,"title":{},"body":{"directives/ChartDirective.html":{}}}],["elements",{"_index":873,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["elmref",{"_index":1363,"title":{},"body":{"directives/ChartDirective.html":{}}}],["empty",{"_index":678,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["en",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["enable",{"_index":2364,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["enabled",{"_index":2342,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["enabledblocking",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encapsulation",{"_index":1574,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["encoded",{"_index":2766,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["encrypt",{"_index":636,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CryptService.html":{}}}],["encrypted",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/ProfileState.html":{}}}],["encryption",{"_index":1802,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryptionkey",{"_index":1781,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkey.length",{"_index":1862,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkeys",{"_index":1866,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle",{"_index":1709,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle(id",{"_index":1782,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpublic",{"_index":1710,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpublic(data",{"_index":1794,"title":{},"body":{"injectables/CryptService.html":{}}}],["end_height",{"_index":1036,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{}}}],["engineering",{"_index":2487,"title":{},"body":{"components/ProfileComponent.html":{}}}],["english",{"_index":3109,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["enough",{"_index":840,"title":{},"body":{"interfaces/Balance.html":{}}}],["enter",{"_index":2383,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["entity",{"_index":1903,"title":{},"body":{"modules/DataModule.html":{}}}],["entityconfig",{"_index":1902,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule",{"_index":1900,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule.forroot(entityconfig",{"_index":1911,"title":{},"body":{"modules/DataModule.html":{}}}],["entries",{"_index":2077,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["entropy",{"_index":1756,"title":{},"body":{"injectables/CryptService.html":{}}}],["enum",{"_index":2432,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/UserOptions.html":{}}}],["enumerations",{"_index":3456,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":616,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["err",{"_index":2392,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["error",{"_index":1495,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["error(`chart",{"_index":1460,"title":{},"body":{"injectables/ChartService.html":{}}}],["error(`failed",{"_index":1863,"title":{},"body":{"injectables/CryptService.html":{}}}],["escapehtmlpipe",{"_index":1962,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["etc",{"_index":2503,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["ev",{"_index":1626,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.altkey",{"_index":1629,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.ctrlkey",{"_index":1630,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.keycode",{"_index":1632,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.metakey",{"_index":1631,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["even",{"_index":1790,"title":{},"body":{"injectables/CryptService.html":{}}}],["event",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{}}}],["event.target.files[0",{"_index":2184,"title":{},"body":{"components/LoginComponent.html":{}}}],["everything",{"_index":1323,"title":{},"body":{"components/BootstateComponent.html":{}}}],["exactly",{"_index":2994,"title":{},"body":{"components/VpnComponent.html":{}}}],["exists",{"_index":1973,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["exists(pathname",{"_index":2008,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["exists(type",{"_index":1977,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["exitnode",{"_index":2989,"title":{},"body":{"components/VpnComponent.html":{}}}],["expand",{"_index":1047,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["exportchain",{"_index":1164,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["exports",{"_index":596,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["expose",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["exsist",{"_index":683,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exsists",{"_index":1981,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["extends",{"_index":2284,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["extra",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["fail",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{}}}],["failed",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{}}}],["fairhash",{"_index":2594,"title":{},"body":{"components/RootComponent.html":{}}}],["false",{"_index":284,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"modules/BlockchainRoutingModule.html":{},"components/BootstateComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/WalletEffects.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{}}}],["family",{"_index":1089,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["fastpool",{"_index":2595,"title":{},"body":{"components/RootComponent.html":{}}}],["favourites",{"_index":2986,"title":{},"body":{"components/VpnComponent.html":{}}}],["feature",{"_index":2365,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["fee",{"_index":1674,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["fee_list",{"_index":2937,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["feedback",{"_index":1789,"title":{},"body":{"injectables/CryptService.html":{}}}],["fetch(`http://127.0.0.1:36911/daemon/chain/${url",{"_index":1206,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["fetch(appconfigservice.apiurl",{"_index":441,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{}}}],["fetchedhtml",{"_index":2691,"title":{},"body":{"components/SpartaComponent.html":{}}}],["fetchserverpublickey",{"_index":401,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["field",{"_index":1141,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["file.endswith('.lthn')).includes(true",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file.name",{"_index":2186,"title":{},"body":{"components/LoginComponent.html":{}}}],["filename",{"_index":420,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/CreateWallet.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{}}}],["filereader",{"_index":2188,"title":{},"body":{"components/LoginComponent.html":{}}}],["files",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"injectables/FileSystemService.html":{}}}],["filesystem",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/OpenComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["filesystem/file",{"_index":1822,"title":{},"body":{"injectables/CryptService.html":{}}}],["filesysteminterface",{"_index":1970,"title":{"interfaces/FileSystemInterface.html":{}},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["filesystemservice",{"_index":408,"title":{"injectables/FileSystemService.html":{}},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"components/BlockchainConfigComponent.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["filesystemwebservice",{"_index":2005,"title":{"injectables/FileSystemWebService.html":{}},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["fill",{"_index":2293,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["filter",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GetTransfersIn.html":{},"injectables/WalletEffects.html":{}}}],["filter_by_height",{"_index":2095,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["filterednavigationtree",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["find",{"_index":1449,"title":{},"body":{"injectables/ChartService.html":{}}}],["fired",{"_index":2192,"title":{},"body":{"components/LoginComponent.html":{}}}],["first",{"_index":680,"title":{},"body":{"guards/AuthGuard.html":{}}}],["flexmodule",{"_index":522,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["folder",{"_index":1289,"title":{},"body":{"components/BootstateComponent.html":{},"interfaces/FileSystemInterface.html":{}}}],["follow,index",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":1091,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{},"components/StatusComponent.html":{}}}],["format",{"_index":1181,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{}}}],["formcontrol",{"_index":992,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["formcontrol('0",{"_index":2536,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(false",{"_index":2543,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(true",{"_index":2538,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formgroup",{"_index":2530,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["forms",{"_index":3026,"title":{},"body":{"components/WalletComponent.html":{}}}],["formsmodule",{"_index":715,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{}}}],["framework",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["friendly",{"_index":2497,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["fromcoin",{"_index":2071,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["fromcoinpipe",{"_index":2069,"title":{"pipes/FromCoinPipe.html":{}},"body":{"pipes/FromCoinPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["fs",{"_index":410,"title":{},"body":{"injectables/AppConfigService.html":{},"components/BlockchainConfigComponent.html":{},"components/BootstateComponent.html":{},"injectables/FileSystemService.html":{},"injectables/WalletService.html":{}}}],["full",{"_index":583,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"modules/RootRoutingModule.html":{}}}],["function",{"_index":542,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2361,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["functions",{"_index":3464,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funds",{"_index":836,"title":{},"body":{"interfaces/Balance.html":{},"injectables/WalletRpcService.html":{}}}],["g",{"_index":1961,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{}}}],["general",{"_index":2638,"title":{},"body":{"components/SettingsComponent.html":{}}}],["generated",{"_index":2498,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["generatekey",{"_index":1711,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatekey(input",{"_index":1797,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatepaymentid",{"_index":1667,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["generating",{"_index":2568,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["generator",{"_index":2485,"title":{},"body":{"components/ProfileComponent.html":{}}}],["get_tx_hex",{"_index":2763,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["get_tx_key",{"_index":1693,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["get_tx_keys",{"_index":2764,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["getactiveaddress",{"_index":3245,"title":{},"body":{"injectables/WalletService.html":{}}}],["getaddress",{"_index":3139,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook",{"_index":3140,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook(x",{"_index":3165,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbookout",{"_index":2075,"title":{"interfaces/GetAddressBookOut.html":{}},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["getauthstatus",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getbalance",{"_index":3141,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["getblock",{"_index":1165,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getblock(block_id",{"_index":1182,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getblocks",{"_index":968,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/BlockchainService.html":{}}}],["getblocks(start_height",{"_index":1185,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getbulkpayments",{"_index":3142,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpayments(x",{"_index":3169,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsin",{"_index":2078,"title":{"interfaces/GetBulkPaymentsIn.html":{}},"body":{"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsout",{"_index":2084,"title":{"interfaces/GetBulkPaymentsOut.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["getchild",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(activatedroute",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["getconfig",{"_index":402,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getconfig(section",{"_index":413,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getfilesystem",{"_index":2024,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["getheight",{"_index":3143,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getid",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["getinfo",{"_index":1166,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getitem",{"_index":3312,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getitem(key",{"_index":3321,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getkeymap",{"_index":1820,"title":{},"body":{"injectables/CryptService.html":{}}}],["getlatestposts",{"_index":2440,"title":{},"body":{"components/PostComponent.html":{}}}],["getlength",{"_index":3333,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getpayments",{"_index":3144,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpayments(x",{"_index":3172,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpaymentsin",{"_index":2088,"title":{"interfaces/GetPaymentsIn.html":{}},"body":{"interfaces/GetPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getpaymentsout",{"_index":2090,"title":{"interfaces/GetPaymentsOut.html":{}},"body":{"interfaces/GetPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["gets",{"_index":1423,"title":{},"body":{"injectables/ChartService.html":{},"injectables/WalletService.html":{}}}],["getsub",{"_index":1581,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["getting",{"_index":3491,"title":{"index.html":{}},"body":{}}],["gettransactions",{"_index":1167,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["gettransactions(txshashes",{"_index":1188,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["gettransferbytxid",{"_index":3145,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransferbytxid(x",{"_index":3174,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers",{"_index":3146,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers(x",{"_index":3177,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfersin",{"_index":2092,"title":{"interfaces/GetTransfersIn.html":{}},"body":{"interfaces/GetTransfersIn.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["gettransfersout",{"_index":2102,"title":{"interfaces/GetTransfersOut.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["getuser",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["getwalletlist",{"_index":3246,"title":{},"body":{"injectables/WalletService.html":{}}}],["git_repo",{"_index":2427,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["github",{"_index":1737,"title":{},"body":{"injectables/CryptService.html":{},"components/RootComponent.html":{},"index.html":{}}}],["give",{"_index":1025,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"components/StatusComponent.html":{}}}],["global",{"_index":2682,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["global_index",{"_index":2141,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["globalfontsize",{"_index":2677,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["go",{"_index":2808,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["golang",{"_index":3496,"title":{},"body":{"index.html":{}}}],["good",{"_index":1739,"title":{},"body":{"injectables/CryptService.html":{}}}],["gradient(circle",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":3514,"title":{},"body":{"modules.html":{}}}],["grey_peerlist_size",{"_index":1331,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["gridlines",{"_index":2325,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["group",{"_index":2155,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"injectables/WebStorageService.html":{}}}],["guard",{"_index":652,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handles",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happen",{"_index":690,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happens",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["hascli",{"_index":2573,"title":{},"body":{"components/RootComponent.html":{}}}],["hash",{"_index":947,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/TransferOut.html":{}}}],["hashlink",{"_index":1052,"title":{},"body":{"components/BlockLedgerComponent.html":{},"pipes/HashLinkPipe.html":{},"components/WalletComponent.html":{}}}],["hashlinkpipe",{"_index":2106,"title":{"pipes/HashLinkPipe.html":{}},"body":{"pipes/HashLinkPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashrate",{"_index":1051,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart",{"_index":1447,"title":{},"body":{"injectables/ChartService.html":{}}}],["hashrate.chart.ts",{"_index":2283,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:12",{"_index":2299,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:132",{"_index":2289,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:14",{"_index":2301,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashratepipe",{"_index":1132,"title":{"pipes/HashRatePipe.html":{}},"body":{"modules/BlockchainModule.html":{},"pipes/HashRatePipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashvault",{"_index":2593,"title":{},"body":{"components/RootComponent.html":{}}}],["headerinterceptor",{"_index":486,"title":{"interceptors/HeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HeaderInterceptor.html":{},"overview.html":{}}}],["headers",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["heading",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletRoutingModule.html":{}}}],["healthy",{"_index":1026,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["height",{"_index":338,"title":{"interfaces/Height.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChainGetInfo.html":{},"directives/ChartDirective.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Height.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["height:40vh",{"_index":1389,"title":{},"body":{"directives/ChartDirective.html":{}}}],["helper",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["helps",{"_index":2990,"title":{},"body":{"components/VpnComponent.html":{}}}],["here",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/VpnComponent.html":{}}}],["hex",{"_index":1690,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["hexadecimal",{"_index":2217,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["hidden",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["hideclosebutton",{"_index":2262,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidedismissbutton",{"_index":2263,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidenavigation",{"_index":2678,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highcontrasttext",{"_index":2679,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["hold",{"_index":2924,"title":{},"body":{"components/TransferComponent.html":{}}}],["holds",{"_index":1428,"title":{},"body":{"injectables/ChartService.html":{}}}],["host",{"_index":335,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["hours",{"_index":2841,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["hover",{"_index":866,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hovering",{"_index":870,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hsm/encrypted",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["html.dark",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":1172,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["http://127.0.0.1:36911",{"_index":425,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["http://127.0.0.1:36911')}/daemon/wallet/rpc",{"_index":3215,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["http://127.0.0.1:36911/daemon/chain/export",{"_index":1204,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["http://127.0.0.1:36911/daemon/chain/import",{"_index":1205,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["http://127.0.0.1:36911/daemon/chain/start",{"_index":1198,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["http://127.0.0.1:36911/object",{"_index":3329,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["http://127.0.0.1:36911/update/cli",{"_index":1203,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["http_interceptors",{"_index":501,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":502,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":503,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":279,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{}}}],["httpevent",{"_index":2128,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httphandler",{"_index":2125,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httpheaders",{"_index":1193,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["httpheaders().set('content",{"_index":2702,"title":{},"body":{"components/SpartaComponent.html":{}}}],["httpinterceptor",{"_index":2127,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httploaderfactory",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":543,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httprequest",{"_index":2124,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httprequest.clone",{"_index":2131,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1538,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["https://github.com/letheanvpn/desktop/issues/new",{"_index":1317,"title":{},"body":{"components/BootstateComponent.html":{}}}],["icon",{"_index":379,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{},"components/StatusComponent.html":{}}}],["iconmodule",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["id",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{}}}],["id's",{"_index":2500,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["idea",{"_index":1740,"title":{},"body":{"injectables/CryptService.html":{}}}],["identifiable",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["identify",{"_index":1691,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["ids",{"_index":1855,"title":{},"body":{"injectables/CryptService.html":{}}}],["if(!isauthenticated",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(authservice.token.access_token",{"_index":2129,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["if(await",{"_index":1297,"title":{},"body":{"components/BootstateComponent.html":{}}}],["if(data",{"_index":2885,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["if(data.fee",{"_index":2913,"title":{},"body":{"components/TransferComponent.html":{}}}],["if(data.status",{"_index":3111,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["if(data[0",{"_index":1611,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(e.status",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["if(ret",{"_index":3340,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["if(this.app.getconfig('daemon",{"_index":274,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{}}}],["if(this.attach",{"_index":1609,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(this.checkdownloaded(this",{"_index":1303,"title":{},"body":{"components/BootstateComponent.html":{}}}],["if(this.terminal.keyeventinput",{"_index":1621,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ignore",{"_index":1488,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["ignored",{"_index":1675,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["im",{"_index":1734,"title":{},"body":{"injectables/CryptService.html":{}}}],["image",{"_index":2499,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["img",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":3270,"title":{},"body":{"injectables/WalletService.html":{}}}],["implements",{"_index":28,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/IntegratedAddress.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["import('./logs/logs.module').then((m",{"_index":2667,"title":{},"body":{"modules/SettingsModule.html":{}}}],["import('./settings.module').then",{"_index":2670,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["import('./user.module').then((m",{"_index":2974,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["import('src/app/modules/content/post/post.module').then((m",{"_index":2467,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["important",{"_index":1649,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["importchain",{"_index":1168,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["imports",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["inactivitythreshold",{"_index":3304,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["included",{"_index":1066,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["including",{"_index":2021,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["incoming",{"_index":2147,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["incoming_connections_count",{"_index":1332,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["incomingtransfers",{"_index":3147,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfers(x",{"_index":3179,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfersin",{"_index":2135,"title":{"interfaces/IncomingTransfersIn.html":{}},"body":{"interfaces/IncomingTransfersIn.html":{},"injectables/WalletRpcService.html":{}}}],["incomingtransfersout",{"_index":2139,"title":{"interfaces/IncomingTransfersOut.html":{}},"body":{"interfaces/IncomingTransfersOut.html":{},"injectables/WalletRpcService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["info.alt_blocks_count",{"_index":1251,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.block_size_limit",{"_index":1253,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.cumulative_difficulty",{"_index":1238,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.difficulty",{"_index":1236,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.grey_peerlist_size",{"_index":1235,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.height",{"_index":1093,"title":{},"body":{"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["info.height/info.target_height",{"_index":1095,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["info.incoming_connections_count",{"_index":1240,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.outgoing_connections_count",{"_index":1247,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.start_time",{"_index":1227,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.status",{"_index":1225,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.target",{"_index":1249,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.target_height",{"_index":1094,"title":{},"body":{"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["info.testnet",{"_index":1245,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.tx_count",{"_index":1241,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.tx_pool_size",{"_index":1243,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.white_peerlist_size",{"_index":1233,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["inherit",{"_index":2743,"title":{},"body":{"components/StatusComponent.html":{}}}],["inherited",{"_index":2287,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ini",{"_index":433,"title":{},"body":{"injectables/AppConfigService.html":{},"dependencies.html":{}}}],["init",{"_index":2640,"title":{},"body":{"components/SettingsComponent.html":{}}}],["initialnavigation",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":1564,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["inject",{"_index":1373,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(mat_dialog_data",{"_index":1941,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(platform_id",{"_index":1377,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["injectable",{"_index":389,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interceptors/HeaderInterceptor.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["injectable({providedin",{"_index":2241,"title":{},"body":{"components/ModalComponent.html":{}}}],["injectables",{"_index":390,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/AddComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["input.length",{"_index":1835,"title":{},"body":{"injectables/CryptService.html":{}}}],["input[i",{"_index":1839,"title":{},"body":{"injectables/CryptService.html":{}}}],["inputchanged",{"_index":2161,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputmodule",{"_index":720,"title":{},"body":{"modules/AuthModule.html":{}}}],["inputs",{"_index":41,"title":{},"body":{"components/AddComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["install",{"_index":2363,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"index.html":{}}}],["installation",{"_index":1314,"title":{},"body":{"components/BootstateComponent.html":{}}}],["instance",{"_index":1415,"title":{},"body":{"injectables/ChartService.html":{}}}],["instanceof",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["instances",{"_index":1432,"title":{},"body":{"injectables/ChartService.html":{}}}],["int",{"_index":830,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["integer",{"_index":2215,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/TransferOut.html":{}}}],["integrated_address",{"_index":2151,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["integratedaddress",{"_index":2149,"title":{"interfaces/IntegratedAddress.html":{}},"body":{"interfaces/IntegratedAddress.html":{},"injectables/WalletRpcService.html":{}}}],["integration",{"_index":3497,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1769,"title":{},"body":{"injectables/CryptService.html":{}}}],["interacts",{"_index":3494,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":2122,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["intercept(httprequest",{"_index":2123,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["interceptor",{"_index":2119,"title":{"interceptors/HeaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":2120,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"index.html":{}}}],["interface/file",{"_index":2055,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{},"overview.html":{}}}],["interfaces/difficulty.state",{"_index":1556,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["interfaces/user.options",{"_index":2955,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["internal",{"_index":2145,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["intersect",{"_index":2337,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["interval",{"_index":1009,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BootstateComponent.html":{},"injectables/WalletEffects.html":{}}}],["interval(2000).subscribe",{"_index":1302,"title":{},"body":{"components/BootstateComponent.html":{}}}],["interval(5000).subscribe(async",{"_index":1032,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["isauthenticated",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isdir",{"_index":1999,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["isdir(filename",{"_index":2042,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["isdir(pathname",{"_index":2011,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["isfile",{"_index":2000,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["isfile(filename",{"_index":2044,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["isfile(pathname",{"_index":2013,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["isn't",{"_index":260,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser",{"_index":1375,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":1378,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformserver",{"_index":1444,"title":{},"body":{"injectables/ChartService.html":{}}}],["isplatformserver(this.platformid",{"_index":1493,"title":{},"body":{"injectables/ChartService.html":{}}}],["ispollingactivestats",{"_index":3035,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["issue",{"_index":1738,"title":{},"body":{"injectables/CryptService.html":{}}}],["issues",{"_index":1736,"title":{},"body":{"injectables/CryptService.html":{}}}],["it'll",{"_index":1786,"title":{},"body":{"injectables/CryptService.html":{}}}],["item",{"_index":871,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["items",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"injectables/WebStorageService.html":{}}}],["itself",{"_index":1815,"title":{},"body":{"injectables/CryptService.html":{}}}],["jest",{"_index":3421,"title":{},"body":{"dependencies.html":{}}}],["js",{"_index":1666,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["json",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["json.parse(await",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(dat",{"_index":2059,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["json.parse(data['json",{"_index":914,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["json.parse(ret",{"_index":3341,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["json.stringify",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["json.stringify(rpcbody('get_transfers')({in",{"_index":3063,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody('getbalance",{"_index":3058,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody(method)(params",{"_index":1209,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["json_rpc",{"_index":1177,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["jsontreemodule",{"_index":1144,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["jszmq",{"_index":3425,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":538,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["jwtmodule",{"_index":536,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":556,"title":{},"body":{"modules/AppModule.html":{}}}],["k",{"_index":2115,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["keep",{"_index":2984,"title":{},"body":{"components/VpnComponent.html":{}}}],["keephtml",{"_index":1964,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["kept",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":414,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["key(key",{"_index":3323,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key(key:number",{"_index":3336,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key_type",{"_index":2511,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["keymap",{"_index":1718,"title":{},"body":{"injectables/CryptService.html":{}}}],["keys",{"_index":635,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["keysize",{"_index":1846,"title":{},"body":{"injectables/CryptService.html":{}}}],["kind",{"_index":3388,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["know",{"_index":3264,"title":{},"body":{"injectables/WalletService.html":{}}}],["knowledge",{"_index":1741,"title":{},"body":{"injectables/CryptService.html":{}}}],["known",{"_index":2378,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletService.html":{}}}],["known_wallets",{"_index":3298,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["kurkle/color",{"_index":1443,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["l",{"_index":1824,"title":{},"body":{"injectables/CryptService.html":{}}}],["l337",{"_index":1729,"title":{},"body":{"injectables/CryptService.html":{}}}],["label",{"_index":1468,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["label}}:{{model.value",{"_index":941,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["lang",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.de",{"_index":333,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.en",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.es",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.fr",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.ru",{"_index":330,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.zh",{"_index":331,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletNewComponent.html":{}}}],["last",{"_index":595,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BlockLedgerComponent.html":{}}}],["last_update_check",{"_index":2430,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["later",{"_index":1751,"title":{},"body":{"injectables/CryptService.html":{}}}],["layout",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"injectables/NetworkHashrateChart.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":599,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leave",{"_index":1877,"title":{},"body":{"injectables/CryptService.html":{}}}],["ledger",{"_index":958,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["ledger'},{'name",{"_index":88,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["ledger.component.html",{"_index":959,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["left",{"_index":372,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["legacy",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["length",{"_index":1668,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WebStorageService.html":{}}}],["less",{"_index":1742,"title":{},"body":{"injectables/CryptService.html":{}}}],["lethean",{"_index":584,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"modules/SettingsModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{}}}],["lethean/users",{"_index":677,"title":{},"body":{"guards/AuthGuard.html":{}}}],["letheand",{"_index":1589,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["level",{"_index":3487,"title":{},"body":{"miscellaneous/functions.html":{}}}],["levels",{"_index":3462,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighter",{"_index":1754,"title":{},"body":{"injectables/CryptService.html":{}}}],["line",{"_index":876,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["linewidth",{"_index":2326,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["lingual",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":378,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/OpenComponent.html":{},"components/VpnComponent.html":{},"injectables/WalletService.html":{}}}],["list(dirname",{"_index":2046,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["list(type",{"_index":1982,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["listfiles",{"_index":2001,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["listfiles(dirname",{"_index":2015,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["lists",{"_index":2377,"title":{},"body":{"components/OpenComponent.html":{}}}],["lite",{"_index":1728,"title":{},"body":{"injectables/CryptService.html":{}}}],["literal",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"interfaces/WalletsState.html":{}}}],["live",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":1103,"title":{},"body":{"components/BlockchainConfigComponent.html":{},"injectables/CryptService.html":{}}}],["loadchildren",{"_index":2466,"title":{},"body":{"modules/PostRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["loadconfig",{"_index":403,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loadconfig(filename",{"_index":418,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loaded",{"_index":600,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OpenComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["loaded_keys",{"_index":2431,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["loaded_wallet",{"_index":3299,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["loader",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["loadingservice",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/OpenComponent.html":{}}}],["loadpost",{"_index":2441,"title":{},"body":{"components/PostComponent.html":{},"components/SpartaComponent.html":{}}}],["loadpost(slug",{"_index":2444,"title":{},"body":{"components/PostComponent.html":{},"components/SpartaComponent.html":{}}}],["loadrequestedchartdifficulty",{"_index":1505,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["loads",{"_index":1413,"title":{},"body":{"injectables/ChartService.html":{}}}],["loadtransactions",{"_index":2864,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["loadtransfers",{"_index":3247,"title":{},"body":{"injectables/WalletService.html":{}}}],["loadtransfers(opts",{"_index":3254,"title":{},"body":{"injectables/WalletService.html":{}}}],["local",{"_index":2507,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["localhost:36911",{"_index":558,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":621,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":619,"title":{},"body":{"interfaces/AppState.html":{}}}],["localstoragesyncreducer",{"_index":633,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["localstoragesyncreducer(reducer",{"_index":3473,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lock",{"_index":1686,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["locked",{"_index":3030,"title":{},"body":{"components/WalletComponent.html":{}}}],["log",{"_index":2156,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logentry",{"_index":2153,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logged",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/WalletService.html":{}}}],["logging",{"_index":3461,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":581,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login'},{'name",{"_index":98,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["login(key",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component",{"_index":712,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":2160,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":2159,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":97,"title":{"components/LoginComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["loginmethod",{"_index":2970,"title":{},"body":{"interfaces/UserOptions.html":{}}}],["loginmethods",{"_index":2971,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["logo",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["logonly",{"_index":1907,"title":{},"body":{"modules/DataModule.html":{}}}],["logout",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["logs",{"_index":604,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/LogEntry.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"modules/SettingsModule.html":{}}}],["logs'},{'name",{"_index":100,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["logs.component",{"_index":2209,"title":{},"body":{"modules/LogsModule.html":{}}}],["logs.component.html",{"_index":2201,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":2200,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.logsstate",{"_index":608,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs.reducer",{"_index":630,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs/logs.module",{"_index":2663,"title":{},"body":{"modules/SettingsModule.html":{}}}],["logscomponent",{"_index":99,"title":{"components/LogsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["logsmodule",{"_index":2204,"title":{"modules/LogsModule.html":{}},"body":{"modules/LogsModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsstate",{"_index":2157,"title":{"interfaces/LogsState.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["longer",{"_index":1785,"title":{},"body":{"injectables/CryptService.html":{}}}],["looking",{"_index":2082,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["looks",{"_index":1324,"title":{},"body":{"components/BootstateComponent.html":{}}}],["lthn",{"_index":32,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WebStorageService.html":{}}}],["lthnchart",{"_index":138,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["lts",{"_index":3396,"title":{},"body":{"dependencies.html":{}}}],["lttb",{"_index":2343,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["m",{"_index":2116,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/SettingsRoutingModule.html":{}}}],["m.logsmodule",{"_index":2668,"title":{},"body":{"modules/SettingsModule.html":{}}}],["m.postmodule",{"_index":2468,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["m.settingsmodule",{"_index":2671,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["m.usermodule",{"_index":2975,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["made",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{}}}],["maintainaspectratio",{"_index":861,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["major",{"_index":987,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["major_version",{"_index":948,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["make",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"components/WalletComponent.html":{}}}],["makedefault",{"_index":404,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["makeintegratedaddress",{"_index":3148,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddress(x",{"_index":3181,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddressin",{"_index":2210,"title":{"interfaces/MakeIntegratedAddressIn.html":{}},"body":{"interfaces/MakeIntegratedAddressIn.html":{},"injectables/WalletRpcService.html":{}}}],["makes",{"_index":2991,"title":{},"body":{"components/VpnComponent.html":{}}}],["makeuri",{"_index":3149,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuri(x",{"_index":3183,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuriin",{"_index":1663,"title":{"interfaces/MakeUriIn.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["making",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":2645,"title":{},"body":{"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["map",{"_index":1426,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["map((payload",{"_index":3065,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["map((res",{"_index":3059,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["margin",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["markdown",{"_index":1758,"title":{},"body":{"injectables/CryptService.html":{}}}],["marketplace",{"_index":2982,"title":{},"body":{"components/VpnComponent.html":{}}}],["mat",{"_index":356,"title":{},"body":{"components/AppComponent.html":{},"components/StatusComponent.html":{}}}],["mat_dialog_data",{"_index":1936,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matbuttonmodule",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["matcardmodule",{"_index":713,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["match",{"_index":1469,"title":{},"body":{"injectables/ChartService.html":{}}}],["matcheckboxmodule",{"_index":2966,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":2729,"title":{},"body":{"components/StatusComponent.html":{}}}],["matdialogmodule",{"_index":2750,"title":{},"body":{"modules/StatusModule.html":{}}}],["matdialogref",{"_index":1937,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matdividermodule",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["matexpansionmodule",{"_index":3079,"title":{},"body":{"modules/WalletModule.html":{}}}],["matformfieldmodule",{"_index":1139,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["math.abs((now.gettime",{"_index":2836,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.floor(n.diff",{"_index":2354,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["math.max(0",{"_index":1039,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["math.round",{"_index":2835,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(days",{"_index":2847,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(hours",{"_index":2844,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(minutes",{"_index":2842,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(seconds",{"_index":2839,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["maticonmodule",{"_index":508,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matinputmodule",{"_index":718,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matlistmodule",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["matmenumodule",{"_index":516,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["matoptionmodule",{"_index":2963,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":1136,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/UserModule.html":{}}}],["matprogressspinnermodule",{"_index":2613,"title":{},"body":{"modules/RootModule.html":{}}}],["matselectmodule",{"_index":2661,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matsidenav",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":507,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":2611,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["mattoolbarmodule",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["mattooltipmodule",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["max",{"_index":2101,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["max_height",{"_index":2096,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["maxage",{"_index":1906,"title":{},"body":{"modules/DataModule.html":{}}}],["maxlength",{"_index":2109,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["maxrotation",{"_index":2324,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["maybe",{"_index":1745,"title":{},"body":{"injectables/CryptService.html":{}}}],["means",{"_index":1681,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["member",{"_index":2992,"title":{},"body":{"components/VpnComponent.html":{}}}],["menu",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["menu.text.blockchain",{"_index":324,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.settings",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["merge",{"_index":3054,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["message",{"_index":1762,"title":{},"body":{"injectables/CryptService.html":{},"injectables/WebsocketService.html":{}}}],["meta",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["metadata",{"_index":30,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["metareducer",{"_index":614,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":646,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["metaservice",{"_index":172,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["mid",{"_index":1960,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["min",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/GetTransfersIn.html":{}}}],["min_block_height",{"_index":2080,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["min_height",{"_index":2097,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["mine",{"_index":2646,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["miner",{"_index":1063,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["mining",{"_index":2591,"title":{},"body":{"components/RootComponent.html":{}}}],["minor",{"_index":989,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["minor_version",{"_index":949,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["minutes",{"_index":2838,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["mirror",{"_index":2331,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["miscellaneous",{"_index":3455,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missed_tx",{"_index":2858,"title":{},"body":{"interfaces/Transactions.html":{}}}],["mix",{"_index":1680,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixin",{"_index":1678,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixing",{"_index":1682,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mkdir",{"_index":1974,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(dirname",{"_index":2017,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(type",{"_index":1986,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["mmm",{"_index":2317,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["modal",{"_index":2221,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":102,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["modal.component.html",{"_index":2222,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":101,"title":{"components/ModalComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["modalconfig",{"_index":2226,"title":{"interfaces/ModalConfig.html":{}},"body":{"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{}}}],["modalconfig.closebuttonlabel",{"_index":2255,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.dismissbuttonlabel",{"_index":2254,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.modaltitle",{"_index":2253,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":2223,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalmodule",{"_index":2276,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"modules.html":{},"overview.html":{}}}],["modalref",{"_index":2224,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalservice",{"_index":2230,"title":{},"body":{"components/ModalComponent.html":{}}}],["modaltitle",{"_index":2259,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["mode",{"_index":2336,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["module",{"_index":471,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}},"body":{}}],["module/auth/auth.interceptor",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth/auth.module",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{}}}],["module/auth/auth.service",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{}}}],["module/auth/login.component",{"_index":574,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/auth/route.guard",{"_index":579,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/chain/blockchain",{"_index":575,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/chain/blockchain.component",{"_index":1155,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["module/chain/blockchain.module",{"_index":2616,"title":{},"body":{"modules/RootModule.html":{}}}],["module/chain/blockchain.service",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/StatusComponent.html":{}}}],["module/chain/components/block/details.component",{"_index":1149,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{}}}],["module/chain/components/block/ledger.component",{"_index":1150,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chain/components/block/transactions.component",{"_index":1153,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chain/components/config.component",{"_index":1152,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chain/components/stats.component",{"_index":1151,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chain/interfaces/props/get_info",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/StatusComponent.html":{}}}],["module/chain/interfaces/types/blockheader",{"_index":908,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{}}}],["module/chart/base",{"_index":2305,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart",{"_index":2306,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart.module",{"_index":1128,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chart/chart.service",{"_index":1008,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["module/chart/data/actions",{"_index":2304,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/console/console.module",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/WalletModule.html":{}}}],["module/console/terminal.component",{"_index":2624,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/content/post/post.module",{"_index":2617,"title":{},"body":{"modules/RootModule.html":{}}}],["module/content/sparta/sparta.component",{"_index":2716,"title":{},"body":{"modules/SpartaRoutingModule.html":{}}}],["module/content/sparta/sparta.module",{"_index":2618,"title":{},"body":{"modules/RootModule.html":{}}}],["module/root",{"_index":573,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/root.component",{"_index":2622,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/root.module",{"_index":2623,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/settings/data",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["module/status/status.module",{"_index":506,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user/user",{"_index":577,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/wallet/components/add.component",{"_index":3089,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/details.component",{"_index":3088,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/open.component",{"_index":3090,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/restore.component",{"_index":3085,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/wallet/components/settings.component",{"_index":3084,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/wallet/components/transactions.component",{"_index":3083,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/wallet",{"_index":3081,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/wallet/data",{"_index":2882,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["module/wallet/interfaces",{"_index":2880,"title":{},"body":{"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["module/wallet/interfaces/requests/restorewallet",{"_index":3211,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["module/wallet/wallet",{"_index":576,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/wallet/wallet.component",{"_index":3117,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["module/wallet/wallet.module",{"_index":2615,"title":{},"body":{"modules/RootModule.html":{}}}],["module/wallet/wallet.service",{"_index":1924,"title":{},"body":{"components/DetailsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["modules",{"_index":473,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/chain/data",{"_index":625,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/chart/data",{"_index":623,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/settings/data",{"_index":617,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/user/data/user",{"_index":618,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/wallet/data",{"_index":624,"title":{},"body":{"interfaces/AppState.html":{}}}],["moment",{"_index":1135,"title":{},"body":{"modules/BlockchainModule.html":{},"injectables/ChartService.html":{},"dependencies.html":{}}}],["momentmodule",{"_index":1134,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["monero",{"_index":832,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["monospace",{"_index":1090,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["months",{"_index":2846,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["more",{"_index":1467,"title":{},"body":{"injectables/ChartService.html":{}}}],["mostly",{"_index":2144,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["mousetrap",{"_index":3432,"title":{},"body":{"dependencies.html":{}}}],["msg",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebsocketService.html":{}}}],["multi",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["multiple",{"_index":1771,"title":{},"body":{"injectables/CryptService.html":{}}}],["n.ts",{"_index":2353,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["name]).catch((err",{"_index":3021,"title":{},"body":{"components/WalletComponent.html":{}}}],["namelist",{"_index":3476,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator",{"_index":2531,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{},"miscellaneous/functions.html":{}}}],["namenottakenvalidator(namelist",{"_index":3475,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator(this.wallet.walletlist",{"_index":2534,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["names",{"_index":2478,"title":{},"body":{"components/ProfileComponent.html":{}}}],["nav",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["navexpanded",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1087,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["nbsp;&nbsp",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["nearest",{"_index":2335,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["need",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionsComponent.html":{}}}],["network",{"_index":2993,"title":{},"body":{"components/VpnComponent.html":{}}}],["network/chart/difficulty",{"_index":1540,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["networkdifficulty",{"_index":1433,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["networkerror",{"_index":3357,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["networkhashratechart",{"_index":1409,"title":{"injectables/NetworkHashrateChart.html":{}},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["new",{"_index":135,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["new.component",{"_index":3082,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["new.component.html",{"_index":3094,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts",{"_index":3093,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:15",{"_index":3102,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:16",{"_index":3101,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:17",{"_index":3097,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:20",{"_index":3100,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:26",{"_index":3099,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new_algorithm",{"_index":1695,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["next",{"_index":1269,"title":{},"body":{"components/BootstateComponent.html":{},"interceptors/HeaderInterceptor.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["next.handle",{"_index":2130,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["next.handle(httprequest",{"_index":2133,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["ng",{"_index":1603,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{}}}],["ngaftercontentinit",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["ngafterviewinit",{"_index":1360,"title":{},"body":{"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["ngbmodal",{"_index":2228,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodalref",{"_index":2238,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngmodule",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["ngondestroy",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/PostComponent.html":{},"components/SettingsComponent.html":{}}}],["ngoninit",{"_index":39,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["ngrx",{"_index":620,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/component",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"dependencies.html":{}}}],["ngrx/data",{"_index":1901,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1551,"title":{},"body":{"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":3405,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":1899,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"modules/DataModule.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngterminal",{"_index":1598,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ngterminalmodule",{"_index":1657,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["ngx",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"components/BootstateComponent.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"modules/StatusModule.html":{},"pipes/TimeAgoPipe.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["ngxdatatablemodule",{"_index":1129,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{}}}],["ngxuimodule",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"modules/WalletModule.html":{}}}],["nodaemonrunningdialog",{"_index":103,"title":{"components/NoDaemonRunningDialog.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["nodes",{"_index":2490,"title":{},"body":{"components/ProfileComponent.html":{},"components/VpnComponent.html":{}}}],["nofollow,noindex",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["nonce",{"_index":950,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["none",{"_index":369,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["normalize.css",{"_index":3439,"title":{},"body":{"dependencies.html":{}}}],["normalized",{"_index":862,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["note",{"_index":2873,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["nothing",{"_index":1878,"title":{},"body":{"injectables/CryptService.html":{}}}],["notificationservice",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationstyletype",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationstyletype.error",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["notificationstyletype.success",{"_index":1116,"title":{},"body":{"components/BlockchainConfigComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationtype",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationtype.html",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notify",{"_index":1105,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["now",{"_index":692,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/TimeAgoPipe.html":{}}}],["npm",{"_index":3506,"title":{},"body":{"index.html":{}}}],["null",{"_index":1081,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"pipes/ShruggiePipe.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["num_txes",{"_index":951,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["number",{"_index":54,"title":{},"body":{"components/AddComponent.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["number):number",{"_index":2073,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["number.isnan(seconds",{"_index":2851,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["number:'1.0",{"_index":2893,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["number:\\'1.0",{"_index":2894,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["o",{"_index":1823,"title":{},"body":{"injectables/CryptService.html":{}}}],["object",{"_index":853,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/SpartaComponent.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["object.values(data).flat",{"_index":2891,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["observable",{"_index":1424,"title":{},"body":{"injectables/ChartService.html":{},"interceptors/HeaderInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["observables",{"_index":1429,"title":{},"body":{"injectables/ChartService.html":{}}}],["of(chartsactions.chartnetworkdifficultyloadfailure({error",{"_index":1560,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["of(walletactions.walletfailure({error",{"_index":3068,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["offline",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["offsetgridlines",{"_index":2329,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["oftype",{"_index":1550,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["oftype('[settings",{"_index":2652,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype('[wallet",{"_index":3040,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultyloadrequested",{"_index":1522,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystartpolling",{"_index":1512,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystoppolling",{"_index":1519,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(walletactions.walletloaddata",{"_index":3052,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstartpolling",{"_index":3045,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstoppolling",{"_index":3049,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["ok",{"_index":1325,"title":{},"body":{"components/BootstateComponent.html":{}}}],["omit",{"_index":2569,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["on(chartsactions.chartnetworkdifficultyloadfailure",{"_index":1568,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["onclose",{"_index":2264,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["ondestroy",{"_index":894,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/PostComponent.html":{},"components/SettingsComponent.html":{}}}],["ondetailtoggle",{"_index":969,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["ondetailtoggle(event",{"_index":977,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["ondismiss",{"_index":2265,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["one",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{}}}],["onfileselected",{"_index":2162,"title":{},"body":{"components/LoginComponent.html":{}}}],["onfileselected(event",{"_index":2168,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":29,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["online",{"_index":397,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["onnoclick",{"_index":1942,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["open",{"_index":48,"title":{},"body":{"components/AddComponent.html":{},"components/BootstateComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["open'},{'name",{"_index":107,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["open.component.html",{"_index":2367,"title":{},"body":{"components/OpenComponent.html":{}}}],["opencomponent",{"_index":106,"title":{"components/OpenComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["opendrawer",{"_index":970,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["opendrawer(id",{"_index":979,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["opened",{"_index":3164,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openedwallet",{"_index":3243,"title":{},"body":{"injectables/WalletService.html":{}}}],["openned",{"_index":3168,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openpgp",{"_index":398,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["openpgp.createcleartextmessage",{"_index":1885,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.createmessage",{"_index":1865,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.decrypt",{"_index":1874,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.decrypt(options).then((result",{"_index":1891,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.decryptkey",{"_index":1883,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.encrypt",{"_index":1864,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.encrypt(options",{"_index":1889,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.generatekey",{"_index":1848,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.readkey",{"_index":1867,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.readmessage",{"_index":1880,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.readprivatekey",{"_index":1882,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.sign(options",{"_index":1887,"title":{},"body":{"injectables/CryptService.html":{}}}],["openwallet",{"_index":1700,"title":{"interfaces/OpenWallet.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["openwallet(name",{"_index":3011,"title":{},"body":{"components/WalletComponent.html":{}}}],["openwallet(req",{"_index":3256,"title":{},"body":{"injectables/WalletService.html":{}}}],["openwallet(x",{"_index":3185,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["option",{"_index":1528,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":847,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"index.html":{}}}],["options.pollinginterval).pipe",{"_index":1533,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["opts",{"_index":2865,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["orchestrates",{"_index":3268,"title":{},"body":{"injectables/WalletService.html":{}}}],["orphan_status",{"_index":952,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["other(method",{"_index":3187,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["otherwise",{"_index":2933,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["out",{"_index":489,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["outdated",{"_index":2435,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["outgoing_connections_count",{"_index":1333,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["outpouts",{"_index":1679,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["output",{"_index":1858,"title":{},"body":{"injectables/CryptService.html":{}}}],["outputs",{"_index":2926,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["overflow",{"_index":345,"title":{},"body":{"components/AppComponent.html":{}}}],["overrides",{"_index":855,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["overview",{"_index":3515,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":455,"title":{},"body":{"injectables/AppConfigService.html":{},"pipes/HashRatePipe.html":{},"modules/PostRoutingModule.html":{}}}],["p.addsection('daemon",{"_index":457,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.addsection('lethean",{"_index":459,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.set('daemon",{"_index":458,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.set('lethean",{"_index":460,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.stringify('\\r\\n",{"_index":463,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["package",{"_index":3393,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":371,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["page",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/UserComponent.html":{}}}],["pagenumber",{"_index":1002,"title":{},"body":{"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pages",{"_index":2407,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pagination",{"_index":3305,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptions",{"_index":2397,"title":{"classes/PaginatorOptions.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptionsinterface",{"_index":2400,"title":{"classes/PaginatorOptionsInterface.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["panel",{"_index":2666,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["param",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["parameters",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1174,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["parseint(value",{"_index":2519,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["parser",{"_index":434,"title":{},"body":{"injectables/AppConfigService.html":{},"dependencies.html":{}}}],["parseuri",{"_index":1698,"title":{"interfaces/ParseUri.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["parseuri(x",{"_index":3190,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["parsing",{"_index":2309,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["partial",{"_index":3527,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pass",{"_index":1854,"title":{},"body":{"injectables/CryptService.html":{}}}],["passphrase",{"_index":1764,"title":{},"body":{"injectables/CryptService.html":{}}}],["password",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"interfaces/UserOptions.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["password_confirm",{"_index":2539,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["passwordless",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordrepeat",{"_index":2781,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["path",{"_index":580,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["path(filename",{"_index":2049,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["path(type",{"_index":1989,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["pathmatch",{"_index":582,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["pathname",{"_index":1978,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["pay",{"_index":2596,"title":{},"body":{"components/RootComponent.html":{}}}],["payload",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartsEffects.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WebStorageService.html":{}}}],["payload}).then((data",{"_index":3354,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["payment",{"_index":2086,"title":{"interfaces/Payment.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{}}}],["payment_id",{"_index":12,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["payment_ids",{"_index":2081,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["payments",{"_index":2083,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["pbkdf2",{"_index":1801,"title":{},"body":{"injectables/CryptService.html":{}}}],["peer",{"_index":3507,"title":{},"body":{"index.html":{}}}],["pending",{"_index":2098,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{}}}],["people",{"_index":1747,"title":{},"body":{"injectables/CryptService.html":{}}}],["percent:'1.2",{"_index":1096,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["percent:\\'1.2",{"_index":1100,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["perform",{"_index":679,"title":{},"body":{"guards/AuthGuard.html":{}}}],["performs",{"_index":3317,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["persist",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["person_add",{"_index":2486,"title":{},"body":{"components/ProfileComponent.html":{}}}],["personality",{"_index":1772,"title":{},"body":{"injectables/CryptService.html":{}}}],["pi4",{"_index":1792,"title":{},"body":{"injectables/CryptService.html":{}}}],["pipe",{"_index":1539,"title":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}},"body":{"injectables/ChartsEffects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletEffects.html":{}}}],["pipe(filter((event",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["pipe/crypto/fromcoin.pipe",{"_index":2423,"title":{},"body":{"modules/PipesModule.html":{}}}],["pipe/crypto/hashrate.pipe",{"_index":1133,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["pipe/index",{"_index":2422,"title":{},"body":{"modules/PipesModule.html":{}}}],["pipe/pipes.module",{"_index":1131,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{}}}],["pipes",{"_index":1949,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["pipesmodule",{"_index":1130,"title":{"modules/PipesModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1957,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["placeholder",{"_index":639,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1374,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["platformid",{"_index":1365,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["please",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["plugin/../modules/wallet/interfaces",{"_index":3210,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["plugindefinition",{"_index":2424,"title":{"interfaces/PluginDefinition.html":{}},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["plugins",{"_index":186,"title":{"interfaces/Plugins.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["pluginstatus",{"_index":2429,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["point",{"_index":874,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WebsocketService.html":{}}}],["polling",{"_index":1531,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["pollinginterval",{"_index":1354,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["pollingstartaction",{"_index":2285,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollingstopaction",{"_index":2286,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollinguntil",{"_index":1506,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["polyfill",{"_index":3427,"title":{},"body":{"dependencies.html":{}}}],["pool",{"_index":2099,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{}}}],["pools",{"_index":2592,"title":{},"body":{"components/RootComponent.html":{}}}],["poolstatsstate",{"_index":1565,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["position",{"_index":1261,"title":{},"body":{"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["post",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"injectables/WalletRpcService.html":{}}}],["post'},{'name",{"_index":109,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["post(`${this.apiurl}/dir",{"_index":2068,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/file",{"_index":2066,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/list",{"_index":2058,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/read",{"_index":2062,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post.component.html",{"_index":2438,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.scss",{"_index":2437,"title":{},"body":{"components/PostComponent.html":{}}}],["post.title",{"_index":2457,"title":{},"body":{"components/PostComponent.html":{}}}],["postcomponent",{"_index":108,"title":{"components/PostComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["postmodule",{"_index":2458,"title":{"modules/PostModule.html":{}},"body":{"modules/PostModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["postroutingmodule",{"_index":2464,"title":{"modules/PostRoutingModule.html":{}},"body":{"modules/PostRoutingModule.html":{},"modules.html":{}}}],["posts",{"_index":2439,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["posts:any",{"_index":2450,"title":{},"body":{"components/PostComponent.html":{}}}],["prefrences",{"_index":2502,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["preset",{"_index":3423,"title":{},"body":{"dependencies.html":{}}}],["press",{"_index":2923,"title":{},"body":{"components/TransferComponent.html":{}}}],["prev_hash",{"_index":953,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["previous",{"_index":3023,"title":{},"body":{"components/WalletComponent.html":{}}}],["primary",{"_index":2567,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["printable",{"_index":1628,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["priority",{"_index":2765,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["prismjs",{"_index":3441,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/SettingsEffects.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["privatekey",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pro",{"_index":2321,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["processingform",{"_index":2782,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile",{"_index":2470,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile'},{'name",{"_index":112,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["profile.component.html",{"_index":2472,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":2471,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":110,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["profiles",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{}}}],["profilestate",{"_index":2491,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"miscellaneous/functions.html":{}}}],["progressspinnermodule",{"_index":2754,"title":{},"body":{"modules/StatusModule.html":{}}}],["project",{"_index":2597,"title":{},"body":{"components/RootComponent.html":{},"index.html":{}}}],["promise",{"_index":468,"title":{},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"components/OpenComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["promise(resolve",{"_index":2242,"title":{},"body":{"components/ModalComponent.html":{}}}],["prop",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"properties.html":{}}}],["protected",{"_index":1319,"title":{},"body":{"components/BootstateComponent.html":{},"injectables/CryptService.html":{}}}],["protects",{"_index":1856,"title":{},"body":{"injectables/CryptService.html":{}}}],["provide",{"_index":552,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{}}}],["provided",{"_index":1427,"title":{},"body":{"injectables/ChartService.html":{}}}],["providedin",{"_index":437,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["provider",{"_index":2987,"title":{},"body":{"components/VpnComponent.html":{}}}],["providers",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockLedgerComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["public",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["publically",{"_index":2931,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["publickey",{"_index":1795,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pure",{"_index":1958,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["purposes",{"_index":1803,"title":{},"body":{"injectables/CryptService.html":{}}}],["pwa",{"_index":3492,"title":{},"body":{"index.html":{}}}],["quasi",{"_index":1755,"title":{},"body":{"injectables/CryptService.html":{}}}],["querykey",{"_index":3150,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykey(x",{"_index":3192,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykeyin",{"_index":2509,"title":{"interfaces/QueryKeyIn.html":{}},"body":{"interfaces/QueryKeyIn.html":{},"injectables/WalletRpcService.html":{}}}],["querykeyout",{"_index":2512,"title":{"interfaces/QueryKeyOut.html":{}},"body":{"interfaces/QueryKeyOut.html":{},"injectables/WalletRpcService.html":{}}}],["quick",{"_index":1791,"title":{},"body":{"injectables/CryptService.html":{}}}],["r",{"_index":317,"title":{},"body":{"components/AppComponent.html":{},"pipes/EffortPipe.html":{}}}],["radial",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":875,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["random",{"_index":1665,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["random.hex(false)(random.nativemath",{"_index":1671,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["randomalias",{"_index":2473,"title":{},"body":{"components/ProfileComponent.html":{}}}],["raw",{"_index":1180,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["reactivecomponentmodule",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{}}}],["reactiveformsmodule",{"_index":716,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["read",{"_index":1975,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{}}}],["read(filename",{"_index":2051,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["read(type",{"_index":1992,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["reader",{"_index":2187,"title":{},"body":{"components/LoginComponent.html":{}}}],["reader.addeventlistener('error",{"_index":2194,"title":{},"body":{"components/LoginComponent.html":{}}}],["reader.addeventlistener('load",{"_index":2189,"title":{},"body":{"components/LoginComponent.html":{}}}],["reader.readastext(file",{"_index":2196,"title":{},"body":{"components/LoginComponent.html":{}}}],["readfile",{"_index":2002,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readfile(filename",{"_index":2019,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["reading",{"_index":2193,"title":{},"body":{"components/LoginComponent.html":{}}}],["readkey",{"_index":1712,"title":{},"body":{"injectables/CryptService.html":{}}}],["readkey(encryptionkey",{"_index":1805,"title":{},"body":{"injectables/CryptService.html":{}}}],["readme_list",{"_index":2428,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["readmessage",{"_index":1713,"title":{},"body":{"injectables/CryptService.html":{}}}],["readmessage(encrypted",{"_index":1807,"title":{},"body":{"injectables/CryptService.html":{}}}],["readonly",{"_index":1262,"title":{},"body":{"components/BootstateComponent.html":{}}}],["readprivatekey",{"_index":1714,"title":{},"body":{"injectables/CryptService.html":{}}}],["readprivatekey(encryptionkey",{"_index":1809,"title":{},"body":{"injectables/CryptService.html":{}}}],["reason",{"_index":1767,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"injectables/WebsocketService.html":{}}}],["receive",{"_index":2216,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["received",{"_index":3384,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["recenttxs",{"_index":1073,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["recipient",{"_index":2218,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recipient_name",{"_index":2213,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recover",{"_index":1313,"title":{},"body":{"components/BootstateComponent.html":{}}}],["redirected",{"_index":2948,"title":{},"body":{"components/UserComponent.html":{}}}],["redirectto",{"_index":585,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducer",{"_index":634,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1569,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":626,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["ref",{"_index":1585,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["reference",{"_index":3498,"title":{},"body":{"index.html":{}}}],["refresh_token",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["region",{"_index":2996,"title":{},"body":{"components/VpnComponent.html":{}}}],["registerables",{"_index":1439,"title":{},"body":{"injectables/ChartService.html":{}}}],["rehydrate",{"_index":642,"title":{},"body":{"interfaces/AppState.html":{}}}],["relative",{"_index":1388,"title":{},"body":{"directives/ChartDirective.html":{}}}],["relativelinkresolution",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remote",{"_index":2489,"title":{},"body":{"components/ProfileComponent.html":{},"index.html":{}}}],["removeitem",{"_index":3313,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeitem(key",{"_index":3325,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeonundefined",{"_index":643,"title":{},"body":{"interfaces/AppState.html":{}}}],["removetrailingzero",{"_index":2515,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["removetrailingzerospipe",{"_index":2417,"title":{"pipes/RemoveTrailingZerosPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"overview.html":{}}}],["renderer",{"_index":1367,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderer2",{"_index":1362,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderwebview",{"_index":2574,"title":{},"body":{"components/RootComponent.html":{}}}],["replace('o",{"_index":1829,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/a/gi",{"_index":1832,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/e/gi",{"_index":1831,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/l/gi",{"_index":1830,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/s/gi",{"_index":1833,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/t/gi",{"_index":1834,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducable",{"_index":1817,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducible",{"_index":1743,"title":{},"body":{"injectables/CryptService.html":{}}}],["req",{"_index":3199,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["req.address",{"_index":3042,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["req.filename",{"_index":3275,"title":{},"body":{"injectables/WalletService.html":{}}}],["req.password",{"_index":3043,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["request",{"_index":193,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["request(this.url)('add_address_book",{"_index":3236,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('create_wallet",{"_index":3239,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('delete_address_book",{"_index":3237,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('generate_from_keys",{"_index":3240,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_address_book",{"_index":3235,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_bulk_payments",{"_index":3225,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_payments",{"_index":3224,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfer_by_txid",{"_index":3227,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfers",{"_index":3226,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getaddress",{"_index":3217,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getbalance",{"_index":3216,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getheight",{"_index":3218,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('incoming_transfers",{"_index":3228,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_integrated_address",{"_index":3230,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_uri",{"_index":3233,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('open_wallet",{"_index":3238,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('parse_uri",{"_index":3234,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('query_key",{"_index":3229,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('split_integrated_address",{"_index":3231,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('stop_wallet",{"_index":3232,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('store",{"_index":3223,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_all",{"_index":3222,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_dust",{"_index":3221,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer",{"_index":3219,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer_split",{"_index":3220,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)(method",{"_index":3241,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["requested",{"_index":1991,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["requestoptions",{"_index":2705,"title":{},"body":{"components/SpartaComponent.html":{}}}],["requestoptions).subscribe((data",{"_index":2707,"title":{},"body":{"components/SpartaComponent.html":{}}}],["require('axios').default",{"_index":3352,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["required",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["requires",{"_index":1766,"title":{},"body":{"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["res",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.json",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{}}}],["res.result",{"_index":1211,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["res['result",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WalletEffects.html":{}}}],["reset",{"_index":488,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["resolve",{"_index":2246,"title":{},"body":{"components/ModalComponent.html":{}}}],["response",{"_index":1487,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{}}}],["response.text",{"_index":444,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["responsetype",{"_index":1196,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["responsiveanimationduration",{"_index":872,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["restore",{"_index":63,"title":{},"body":{"components/AddComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletService.html":{}}}],["restore'},{'name",{"_index":114,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["restore.component.html",{"_index":2524,"title":{},"body":{"components/RestoreComponent.html":{}}}],["restore_height",{"_index":2535,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["restorecomponent",{"_index":113,"title":{"components/RestoreComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["restorewallet",{"_index":2526,"title":{"interfaces/RestoreWallet.html":{}},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["restorewallet(req",{"_index":3258,"title":{},"body":{"injectables/WalletService.html":{}}}],["restorewallet(x",{"_index":3194,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["restorewalletform",{"_index":2525,"title":{},"body":{"components/RestoreComponent.html":{}}}],["result",{"_index":1988,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"components/ModalComponent.html":{}}}],["result.data",{"_index":1892,"title":{},"body":{"injectables/CryptService.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["ret",{"_index":3338,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["ret.data",{"_index":3356,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["return",{"_index":320,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["revocationcertificate",{"_index":2791,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["reward",{"_index":954,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{}}}],["rgba(21",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":2332,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(255,255,255,0.5",{"_index":2339,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(8",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["rgbstring",{"_index":1465,"title":{},"body":{"injectables/ChartService.html":{}}}],["rick's",{"_index":2647,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["rick\\'s",{"_index":2648,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["right",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["robots",{"_index":311,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletRoutingModule.html":{}}}],["root",{"_index":438,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["root.component",{"_index":2610,"title":{},"body":{"modules/RootModule.html":{}}}],["root.component.html",{"_index":2571,"title":{},"body":{"components/RootComponent.html":{}}}],["rootcomponent",{"_index":115,"title":{"components/RootComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["rootmodule",{"_index":2603,"title":{"modules/RootModule.html":{}},"body":{"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rootroutingmodule",{"_index":566,"title":{"modules/RootRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rough",{"_index":2587,"title":{},"body":{"components/RootComponent.html":{}}}],["route",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{},"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["router",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["routermodule",{"_index":571,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1160,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":586,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":572,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routing",{"_index":597,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["routing.module",{"_index":526,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":570,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["row",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["rows",{"_index":2862,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rpc",{"_index":833,"title":{},"body":{"interfaces/Balance.html":{},"injectables/BlockchainService.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["rpcbindport",{"_index":3212,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["rpcbody",{"_index":1194,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletEffects.html":{}}}],["rsa",{"_index":1849,"title":{},"body":{"injectables/CryptService.html":{}}}],["rsabits",{"_index":1851,"title":{},"body":{"injectables/CryptService.html":{}}}],["rt",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["rt.data.subscribe((data",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":2680,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["run",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfileComponent.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["running.component",{"_index":2752,"title":{},"body":{"modules/StatusModule.html":{}}}],["running.component.html",{"_index":1939,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts",{"_index":1934,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:13",{"_index":2357,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:15",{"_index":2360,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:16",{"_index":2359,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:19",{"_index":2358,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["runtime",{"_index":1294,"title":{},"body":{"components/BootstateComponent.html":{},"miscellaneous/functions.html":{}}}],["rxjs",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BootstateComponent.html":{},"injectables/ChartsEffects.html":{},"interceptors/HeaderInterceptor.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["rxjs/websocket",{"_index":3373,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rxjslogginglevel",{"_index":1554,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rxjslogginglevel.debug",{"_index":1527,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["rxjslogginglevel.info",{"_index":1514,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["s",{"_index":1825,"title":{},"body":{"injectables/CryptService.html":{}}}],["s.unsubscribe",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["safe",{"_index":843,"title":{},"body":{"interfaces/Balance.html":{}}}],["salt",{"_index":1733,"title":{},"body":{"injectables/CryptService.html":{}}}],["salt.join",{"_index":1840,"title":{},"body":{"injectables/CryptService.html":{}}}],["salt.push(input[i",{"_index":1837,"title":{},"body":{"injectables/CryptService.html":{}}}],["salt:string",{"_index":1836,"title":{},"body":{"injectables/CryptService.html":{}}}],["salted",{"_index":1800,"title":{},"body":{"injectables/CryptService.html":{}}}],["salter",{"_index":1749,"title":{},"body":{"injectables/CryptService.html":{}}}],["salts",{"_index":1744,"title":{},"body":{"injectables/CryptService.html":{}}}],["same",{"_index":1732,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"components/VpnComponent.html":{}}}],["samples",{"_index":2344,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sanitizer",{"_index":1968,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["sans",{"_index":2320,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["save",{"_index":1104,"title":{},"body":{"components/BlockchainConfigComponent.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/ProfileState.html":{},"interfaces/RestoreWallet.html":{}}}],["saveconfig",{"_index":405,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["saved",{"_index":1117,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["scales",{"_index":880,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["screen",{"_index":1650,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["searchable",{"_index":2932,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["searchvalue",{"_index":156,"title":{},"body":{"components/AppComponent.html":{}}}],["seconds",{"_index":2834,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["section",{"_index":417,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["sectionmodule",{"_index":1145,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["seed",{"_index":1701,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/TransferSplitIn.html":{}}}],["select",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["select(selectchartdata(this.chartmeta[name].key",{"_index":1483,"title":{},"body":{"injectables/ChartService.html":{}}}],["select(selectchartoptions('networkdifficulty",{"_index":1526,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectchartdata",{"_index":1445,"title":{},"body":{"injectables/ChartService.html":{}}}],["selectchartoptions",{"_index":1557,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selecthashrateminersoptions",{"_index":1529,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectlanguage",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmodule",{"_index":3087,"title":{},"body":{"modules/WalletModule.html":{}}}],["selector",{"_index":31,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["selectors",{"_index":1558,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectwallettransactions",{"_index":2881,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["send",{"_index":1914,"title":{},"body":{"interfaces/Destination.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"injectables/WalletRpcService.html":{}}}],["sending",{"_index":1694,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["sendmessage",{"_index":3364,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmessage(msg",{"_index":3370,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendtransfer",{"_index":2898,"title":{},"body":{"components/TransferComponent.html":{},"injectables/WalletService.html":{}}}],["sendtransfer(opts",{"_index":3260,"title":{},"body":{"injectables/WalletService.html":{}}}],["sent",{"_index":2915,"title":{},"body":{"components/TransferComponent.html":{}}}],["separator",{"_index":2482,"title":{},"body":{"components/ProfileComponent.html":{}}}],["serialize",{"_index":3451,"title":{},"body":{"dependencies.html":{}}}],["server",{"_index":451,"title":{},"body":{"injectables/AppConfigService.html":{},"components/BootstateComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WebsocketService.html":{}}}],["serverpublickey",{"_index":399,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["service",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["service/app",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"injectables/WalletRpcService.html":{}}}],["service/crypt.service",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["service/filesystem/file",{"_index":435,"title":{},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"components/BlockchainConfigComponent.html":{},"components/BootstateComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["service/json",{"_index":1195,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["service/ui/modal/modal.component",{"_index":2281,"title":{},"body":{"modules/ModalModule.html":{}}}],["service/ui/modal/modalconfig",{"_index":2240,"title":{},"body":{"components/ModalComponent.html":{}}}],["service/wallet.rpc.service",{"_index":2879,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletService.html":{}}}],["service/websocket.service",{"_index":1604,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["services",{"_index":1455,"title":{},"body":{"injectables/ChartService.html":{},"components/VpnComponent.html":{}}}],["session",{"_index":834,"title":{},"body":{"interfaces/Balance.html":{}}}],["sessionstorage.getitem('access_token",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.getitem('refresh_token",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('access_token",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('refresh_token",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"injectables/CryptService.html":{},"components/StatusComponent.html":{}}}],["setconfig",{"_index":406,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["setconfig(section",{"_index":423,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["setheaders",{"_index":2132,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["setinterval",{"_index":1606,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["setitem",{"_index":3314,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setitem(key",{"_index":3327,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setrxjslogginglevel",{"_index":3471,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(0",{"_index":3489,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(4",{"_index":3488,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(level",{"_index":3485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settargettabindex",{"_index":40,"title":{},"body":{"components/AddComponent.html":{}}}],["setting",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["setting_tab",{"_index":2634,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings",{"_index":400,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["settings'},{'name",{"_index":118,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["settings.component",{"_index":2664,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.html",{"_index":2633,"title":{},"body":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}}}],["settings.component.scss",{"_index":2632,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.reducer",{"_index":627,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingseffects",{"_index":650,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingsstate",{"_index":609,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingscomponent",{"_index":117,"title":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["settingseffects",{"_index":2649,"title":{"injectables/SettingsEffects.html":{}},"body":{"injectables/SettingsEffects.html":{}}}],["settingsmodule",{"_index":2656,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":592,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{}}}],["settingsstate",{"_index":2672,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/SettingsState.html":{}}}],["setup",{"_index":288,"title":{},"body":{"components/AppComponent.html":{}}}],["setupcallbacks",{"_index":850,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["setupdatasubscription",{"_index":1407,"title":{},"body":{"injectables/ChartService.html":{}}}],["setupdatasubscription(name",{"_index":1421,"title":{},"body":{"injectables/ChartService.html":{}}}],["several",{"_index":2146,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["sha256",{"_index":1813,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256(input",{"_index":1841,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty",{"_index":1715,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty(input",{"_index":1811,"title":{},"body":{"injectables/CryptService.html":{}}}],["share",{"_index":2148,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["shared",{"_index":2506,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["shell/bootstrap",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["shouldclose",{"_index":2266,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shoulddismiss",{"_index":2267,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shrug",{"_index":2684,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["shruggiepipe",{"_index":2418,"title":{"pipes/ShruggiePipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ShruggiePipe.html":{},"overview.html":{}}}],["sidenav",{"_index":157,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":1716,"title":{},"body":{"injectables/CryptService.html":{}}}],["sign(data",{"_index":1818,"title":{},"body":{"injectables/CryptService.html":{}}}],["signals",{"_index":3387,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["signatures",{"_index":1873,"title":{},"body":{"injectables/CryptService.html":{}}}],["signingkeys",{"_index":1886,"title":{},"body":{"injectables/CryptService.html":{}}}],["simply",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":985,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/SettingsState.html":{},"components/StatusComponent.html":{}}}],["slow",{"_index":1787,"title":{},"body":{"injectables/CryptService.html":{}}}],["slug",{"_index":2446,"title":{},"body":{"components/PostComponent.html":{},"components/SpartaComponent.html":{}}}],["socket",{"_index":3360,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["software",{"_index":2362,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["something",{"_index":1750,"title":{},"body":{"injectables/CryptService.html":{}}}],["soon",{"_index":2950,"title":{},"body":{"components/UserComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["spangaps",{"_index":2310,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sparta",{"_index":2688,"title":{},"body":{"components/SpartaComponent.html":{}}}],["sparta'},{'name",{"_index":120,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["sparta.component",{"_index":2713,"title":{},"body":{"modules/SpartaModule.html":{}}}],["sparta.component.html",{"_index":2690,"title":{},"body":{"components/SpartaComponent.html":{}}}],["sparta.component.scss",{"_index":2689,"title":{},"body":{"components/SpartaComponent.html":{}}}],["sparta/:slug/:id",{"_index":2717,"title":{},"body":{"modules/SpartaRoutingModule.html":{}}}],["spartacomponent",{"_index":119,"title":{"components/SpartaComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["spartamodule",{"_index":2607,"title":{"modules/SpartaModule.html":{}},"body":{"modules/RootModule.html":{},"modules/SpartaModule.html":{},"modules.html":{},"overview.html":{}}}],["spartaroutingmodule",{"_index":2714,"title":{"modules/SpartaRoutingModule.html":{}},"body":{"modules/SpartaRoutingModule.html":{},"modules.html":{}}}],["spend",{"_index":844,"title":{},"body":{"interfaces/Balance.html":{},"components/DetailsComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spendkey",{"_index":2540,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spent",{"_index":1685,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["spinner",{"_index":2614,"title":{},"body":{"modules/RootModule.html":{}}}],["split",{"_index":1774,"title":{},"body":{"injectables/CryptService.html":{}}}],["splitintegratedaddress",{"_index":3151,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddress(x",{"_index":3196,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddressout",{"_index":2718,"title":{"interfaces/SplitIntegratedAddressOut.html":{}},"body":{"interfaces/SplitIntegratedAddressOut.html":{},"injectables/WalletRpcService.html":{}}}],["sponsor",{"_index":3504,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":3466,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug.rxjs.ts",{"_index":3459,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":3467,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3465,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducer.ts",{"_index":3469,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../settings.reducer.ts",{"_index":3470,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../state.ts",{"_index":3458,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.options.ts",{"_index":3457,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":3468,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":569,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:126",{"_index":189,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:134",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:177",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:194",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":224,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":222,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":216,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":218,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":227,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:58",{"_index":213,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:65",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:69",{"_index":200,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:88",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":490,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/data/data.module.ts",{"_index":1893,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/debug.rxjs.ts",{"_index":3460,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/data/interface/pagination.ts",{"_index":2399,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:10",{"_index":2408,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:14",{"_index":2403,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:15",{"_index":2405,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:16",{"_index":2406,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:17",{"_index":2401,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:4",{"_index":2409,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:6",{"_index":2410,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:8",{"_index":2411,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/logs/reducer.ts",{"_index":3478,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/logs/state.ts",{"_index":2154,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["src/app/data/plugins/reducer.ts",{"_index":3479,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/plugins/state.ts",{"_index":2425,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/reducers/index.ts",{"_index":602,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["src/app/interfaces/file",{"_index":1971,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["src/app/modules/auth/auth.interceptor.ts",{"_index":2121,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["src/app/modules/auth/auth.interceptor.ts:8",{"_index":2126,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":711,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.service.ts",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:10",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:104",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:108",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:11",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:112",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:12",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:15",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:35",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:58",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/login.component.ts",{"_index":2158,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:12",{"_index":2173,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:13",{"_index":2171,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:14",{"_index":2172,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:15",{"_index":2165,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:21",{"_index":2166,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:26",{"_index":2170,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:48",{"_index":2167,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:52",{"_index":2169,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/route.guard.ts",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:35",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:7",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/chain/blockchain",{"_index":1154,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["src/app/modules/chain/blockchain.component",{"_index":1127,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/modules/chain/blockchain.component.ts",{"_index":1070,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:13",{"_index":1076,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:14",{"_index":1080,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:16",{"_index":1082,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:17",{"_index":1078,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:18",{"_index":1084,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:19",{"_index":1077,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:20",{"_index":1083,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:21",{"_index":1074,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:23",{"_index":1079,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:29",{"_index":1075,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.module.ts",{"_index":1126,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/modules/chain/blockchain.service.ts",{"_index":1161,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:10",{"_index":1171,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:101",{"_index":1187,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:105",{"_index":1189,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:111",{"_index":1183,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:116",{"_index":1186,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:14",{"_index":1192,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:31",{"_index":1178,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:50",{"_index":1179,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:71",{"_index":1191,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:88",{"_index":1176,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/components/block/details.component.ts",{"_index":893,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:12",{"_index":906,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:13",{"_index":907,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:14",{"_index":904,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:15",{"_index":905,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:16",{"_index":900,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:22",{"_index":902,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:34",{"_index":901,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts",{"_index":956,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:101",{"_index":980,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:111",{"_index":982,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:116",{"_index":978,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:18",{"_index":995,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:20",{"_index":1003,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:27",{"_index":990,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:42",{"_index":994,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:43",{"_index":991,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:44",{"_index":993,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:45",{"_index":1007,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:46",{"_index":998,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:47",{"_index":1005,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:49",{"_index":1004,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:50",{"_index":973,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:67",{"_index":976,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:90",{"_index":974,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:98",{"_index":975,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/transactions.component.ts",{"_index":1055,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["src/app/modules/chain/components/block/transactions.component.ts:10",{"_index":1058,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts",{"_index":1101,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:12",{"_index":1106,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:14",{"_index":1109,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:18",{"_index":1108,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:27",{"_index":1107,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/stats.component.ts",{"_index":1217,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["src/app/modules/chain/components/stats.component.ts:12",{"_index":1220,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["src/app/modules/chain/components/stats.component.ts:14",{"_index":1221,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["src/app/modules/chain/data/reducer.ts",{"_index":3480,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/chain/interfaces/props/get_info.ts",{"_index":1327,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["src/app/modules/chain/interfaces/props/transactions.ts",{"_index":2857,"title":{},"body":{"interfaces/Transactions.html":{}}}],["src/app/modules/chain/interfaces/types/blockheader.ts",{"_index":943,"title":{},"body":{"interfaces/BlockHeader.html":{}}}],["src/app/modules/chart/base",{"_index":846,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["src/app/modules/chart/chart",{"_index":1343,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["src/app/modules/chart/chart.directive.ts",{"_index":1356,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:10",{"_index":1368,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:11",{"_index":1366,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:21",{"_index":1371,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:28",{"_index":1370,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:46",{"_index":1372,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.module.ts",{"_index":1398,"title":{},"body":{"modules/ChartModule.html":{}}}],["src/app/modules/chart/chart.service.ts",{"_index":1400,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:126",{"_index":1420,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:19",{"_index":1430,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:20",{"_index":1438,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:26",{"_index":1435,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:34",{"_index":1410,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:54",{"_index":1412,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:98",{"_index":1422,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/charts/network",{"_index":2282,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["src/app/modules/chart/data/effects.ts",{"_index":1502,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:100",{"_index":1518,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:113",{"_index":1521,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:125",{"_index":1509,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:14",{"_index":1549,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:39",{"_index":1546,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/interfaces/difficulty.state.ts",{"_index":1350,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["src/app/modules/chart/data/reducer.ts",{"_index":1562,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["src/app/modules/console/console.component.ts",{"_index":1571,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:15",{"_index":1600,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:17",{"_index":1590,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:18",{"_index":1587,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:28",{"_index":1597,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:48",{"_index":1594,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:52",{"_index":1592,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:57",{"_index":1595,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:91",{"_index":1596,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.module.ts",{"_index":1655,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/modules/console/terminal.component",{"_index":1658,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/modules/console/terminal.component.ts",{"_index":2809,"title":{},"body":{"components/TerminalComponent.html":{}}}],["src/app/modules/console/terminal.component.ts:12",{"_index":2813,"title":{},"body":{"components/TerminalComponent.html":{}}}],["src/app/modules/console/terminal.component.ts:8",{"_index":2812,"title":{},"body":{"components/TerminalComponent.html":{}}}],["src/app/modules/content/post/post",{"_index":2465,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["src/app/modules/content/post/post.component",{"_index":2463,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/modules/content/post/post.component.ts",{"_index":2436,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:10",{"_index":2449,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:11",{"_index":2442,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:15",{"_index":2448,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:22",{"_index":2443,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:26",{"_index":2445,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:32",{"_index":2447,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.module.ts",{"_index":2462,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/modules/content/sparta/sparta",{"_index":2715,"title":{},"body":{"modules/SpartaRoutingModule.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts",{"_index":2687,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:11",{"_index":2695,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:12",{"_index":2696,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:13",{"_index":2692,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:16",{"_index":2694,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:24",{"_index":2693,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.module.ts",{"_index":2712,"title":{},"body":{"modules/SpartaModule.html":{}}}],["src/app/modules/root",{"_index":2621,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["src/app/modules/root.component.ts",{"_index":2570,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:10",{"_index":2579,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:11",{"_index":2577,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:12",{"_index":2575,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:16",{"_index":2576,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:7",{"_index":2580,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:9",{"_index":2578,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.module.ts",{"_index":2609,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/settings/data/settings.effects.ts",{"_index":2650,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:17",{"_index":2651,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:8",{"_index":2655,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.reducer.ts",{"_index":3481,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/settings/data/settingsstate.ts",{"_index":2673,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/modules/settings/logs/logs.component.ts",{"_index":2199,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:11",{"_index":2203,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:8",{"_index":2202,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.module.ts",{"_index":2208,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/app/modules/settings/settings",{"_index":2669,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":2631,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:13",{"_index":2637,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:17",{"_index":2636,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:9",{"_index":2635,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2660,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts",{"_index":1254,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:118",{"_index":1274,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:14",{"_index":1285,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:146",{"_index":1273,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:15",{"_index":1296,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:21",{"_index":1281,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:22",{"_index":1284,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:23",{"_index":1283,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:25",{"_index":1279,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:26",{"_index":1280,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:27",{"_index":1271,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:31",{"_index":1278,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:75",{"_index":1277,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:81",{"_index":1276,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/bootstate/bootstate.component.ts:90",{"_index":1275,"title":{},"body":{"components/BootstateComponent.html":{}}}],["src/app/modules/status/dialog/no",{"_index":1933,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["src/app/modules/status/status.component.ts",{"_index":2721,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:12",{"_index":2734,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:13",{"_index":2736,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:14",{"_index":2735,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:15",{"_index":2733,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:16",{"_index":2730,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:18",{"_index":2732,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:20",{"_index":2731,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.module.ts",{"_index":2748,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/app/modules/user/data/profile/effects.ts",{"_index":1944,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/effects.ts:5",{"_index":1945,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/reducer.ts",{"_index":3483,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/profile/state.ts",{"_index":2492,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["src/app/modules/user/data/user/effects.ts",{"_index":1946,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/effects.ts:4",{"_index":1947,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/interfaces/user.options.ts",{"_index":2969,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/user/data/user/reducer.ts",{"_index":3484,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/user/state.ts",{"_index":2952,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["src/app/modules/user/profile.component.ts",{"_index":2469,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:10",{"_index":2483,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:14",{"_index":2474,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:18",{"_index":2475,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/user",{"_index":2973,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/modules/user/user.component.ts",{"_index":2775,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:20",{"_index":2944,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:26",{"_index":2945,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:32",{"_index":2946,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:33",{"_index":2942,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:34",{"_index":2943,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:35",{"_index":2940,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:45",{"_index":2941,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":2962,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/modules/vpn/vpn",{"_index":3004,"title":{},"body":{"modules/VpnRoutingModule.html":{}}}],["src/app/modules/vpn/vpn.component",{"_index":3002,"title":{},"body":{"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{}}}],["src/app/modules/vpn/vpn.component.ts",{"_index":2976,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/modules/vpn/vpn.component.ts:11",{"_index":2981,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/modules/vpn/vpn.component.ts:8",{"_index":2980,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/modules/vpn/vpn.module.ts",{"_index":3001,"title":{},"body":{"modules/VpnModule.html":{}}}],["src/app/modules/wallet/components/add.component.ts",{"_index":27,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:13",{"_index":50,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:17",{"_index":53,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:8",{"_index":49,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:9",{"_index":45,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts",{"_index":1917,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:10",{"_index":1920,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:11",{"_index":1923,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:16",{"_index":1922,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:9",{"_index":1921,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts",{"_index":2366,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:11",{"_index":2371,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:18",{"_index":2370,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:21",{"_index":2376,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:28",{"_index":2372,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:37",{"_index":2374,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts",{"_index":2523,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts:12",{"_index":2527,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts:17",{"_index":2528,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts:31",{"_index":2529,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/settings.component.ts",{"_index":2642,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/modules/wallet/components/settings.component.ts:10",{"_index":2644,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/modules/wallet/components/settings.component.ts:7",{"_index":2643,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts",{"_index":2861,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:17",{"_index":2868,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:18",{"_index":2869,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:26",{"_index":2876,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:27",{"_index":2877,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:29",{"_index":2878,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:33",{"_index":2875,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:37",{"_index":2872,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:38",{"_index":2867,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:43",{"_index":2871,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:52",{"_index":2870,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts",{"_index":2896,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:12",{"_index":2906,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:23",{"_index":2899,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:25",{"_index":2902,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:27",{"_index":2900,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:30",{"_index":2901,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/wallet",{"_index":3092,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["src/app/modules/wallet/data/actions",{"_index":3071,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts",{"_index":3034,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:102",{"_index":3039,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:15",{"_index":3044,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:30",{"_index":3069,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:85",{"_index":3048,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:93",{"_index":3051,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/reducer.ts",{"_index":3482,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/wallet/data/selectors",{"_index":3073,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/state.ts",{"_index":3296,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["src/app/modules/wallet/data/state.ts:12",{"_index":3301,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/modules/wallet/data/state.ts:13",{"_index":3300,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/modules/wallet/data/state.ts:14",{"_index":3302,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/modules/wallet/interfaces/dto/getaddressbookout.ts",{"_index":2076,"title":{},"body":{"interfaces/GetAddressBookOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/getbulkpaymentsin.ts",{"_index":2079,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/getbulkpaymentsout.ts",{"_index":2085,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/getpaymentsin.ts",{"_index":2089,"title":{},"body":{"interfaces/GetPaymentsIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/getpaymentsout.ts",{"_index":2091,"title":{},"body":{"interfaces/GetPaymentsOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/gettransfersin.ts",{"_index":2093,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/gettransfersout.ts",{"_index":2103,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/incomingtransfersin.ts",{"_index":2136,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/incomingtransfersout.ts",{"_index":2140,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/makeintegratedaddressin.ts",{"_index":2211,"title":{},"body":{"interfaces/MakeIntegratedAddressIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/makeuriin",{"_index":1664,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/makeuriin.ts",{"_index":2212,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/querykeyin.ts",{"_index":2510,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/querykeyout.ts",{"_index":2513,"title":{},"body":{"interfaces/QueryKeyOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/splitintegratedaddressout.ts",{"_index":2719,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/storeout.ts",{"_index":2757,"title":{},"body":{"interfaces/StoreOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/sweepallin.ts",{"_index":2759,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/sweepallout.ts",{"_index":2768,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/sweepdustout.ts",{"_index":2773,"title":{},"body":{"interfaces/SweepDustOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/transferin.ts",{"_index":2925,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/transferout.ts",{"_index":2927,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/transfersplitout.ts",{"_index":2936,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["src/app/modules/wallet/interfaces/requests/restorewallet.ts",{"_index":2565,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["src/app/modules/wallet/interfaces/types/addaddressbook.ts",{"_index":6,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["src/app/modules/wallet/interfaces/types/address",{"_index":2152,"title":{},"body":{"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"interfaces/SplitIntegratedAddressOut.html":{}}}],["src/app/modules/wallet/interfaces/types/address.ts",{"_index":140,"title":{},"body":{"interfaces/Address.html":{}}}],["src/app/modules/wallet/interfaces/types/balance.ts",{"_index":827,"title":{},"body":{"interfaces/Balance.html":{}}}],["src/app/modules/wallet/interfaces/types/destination",{"_index":1662,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/modules/wallet/interfaces/types/destination.ts",{"_index":1912,"title":{},"body":{"interfaces/Destination.html":{}}}],["src/app/modules/wallet/interfaces/types/height.ts",{"_index":2134,"title":{},"body":{"interfaces/Height.html":{}}}],["src/app/modules/wallet/interfaces/types/integratedaddress.ts",{"_index":2150,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["src/app/modules/wallet/interfaces/types/payment",{"_index":2087,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["src/app/modules/wallet/interfaces/types/payment.ts",{"_index":2412,"title":{},"body":{"interfaces/Payment.html":{}}}],["src/app/modules/wallet/interfaces/types/transfer",{"_index":2105,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["src/app/modules/wallet/interfaces/types/transfer.ts",{"_index":2895,"title":{},"body":{"interfaces/Transfer.html":{}}}],["src/app/modules/wallet/interfaces/types/uri.ts",{"_index":2939,"title":{},"body":{"interfaces/Uri.html":{}}}],["src/app/modules/wallet/interfaces/wallet.ts",{"_index":1660,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/modules/wallet/validators",{"_index":2532,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["src/app/modules/wallet/validators.ts",{"_index":3474,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/wallet/wallet",{"_index":3116,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["src/app/modules/wallet/wallet.component",{"_index":3078,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/modules/wallet/wallet.component.ts",{"_index":3005,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:12",{"_index":3014,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:13",{"_index":3008,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:14",{"_index":3013,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:17",{"_index":3009,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:21",{"_index":3010,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:26",{"_index":3012,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.module.ts",{"_index":3077,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/modules/wallet/wallet.service",{"_index":3103,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["src/app/modules/wallet/wallet.service.ts",{"_index":3242,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:103",{"_index":3255,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:107",{"_index":3250,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:113",{"_index":3261,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:13",{"_index":3267,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:15",{"_index":3266,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:16",{"_index":3265,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:17",{"_index":3249,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:27",{"_index":3262,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:39",{"_index":3259,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:49",{"_index":3257,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:63",{"_index":3252,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:70",{"_index":3251,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:76",{"_index":3253,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:96",{"_index":3263,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/pipes/content/html.pipe.ts",{"_index":1963,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/html.pipe.ts:8",{"_index":1966,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts",{"_index":2683,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts:5",{"_index":2685,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts",{"_index":1950,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts:7",{"_index":1955,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/fromcoin.pipe.ts",{"_index":2070,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["src/app/pipes/crypto/fromcoin.pipe.ts:7",{"_index":2072,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts",{"_index":2107,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts:7",{"_index":2110,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts",{"_index":2111,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts:7",{"_index":2113,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts",{"_index":2854,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts:7",{"_index":2855,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts",{"_index":2814,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:28",{"_index":2816,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:9",{"_index":2818,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts",{"_index":2514,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts:7",{"_index":2516,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":2421,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/app",{"_index":391,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/app/services/crypt.service.ts",{"_index":1702,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:10",{"_index":1720,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:103",{"_index":1722,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:124",{"_index":1783,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:153",{"_index":1765,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:16",{"_index":1821,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:183",{"_index":1808,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:189",{"_index":1810,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:194",{"_index":1806,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:200",{"_index":1780,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:207",{"_index":1819,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:216",{"_index":1796,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:231",{"_index":1761,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:37",{"_index":1726,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:56",{"_index":1753,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:76",{"_index":1812,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:88",{"_index":1798,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/filesystem/file",{"_index":1997,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["src/app/services/i18n/translate/translate.module.ts",{"_index":2938,"title":{},"body":{"modules/TranslateModule.html":{}}}],["src/app/services/ui/modal/modal.component.ts",{"_index":2220,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:12",{"_index":2231,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:14",{"_index":2237,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:15",{"_index":2229,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:19",{"_index":2234,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:21",{"_index":2235,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:28",{"_index":2232,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:35",{"_index":2233,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.module.ts",{"_index":2280,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/services/ui/modal/modalconfig.ts",{"_index":2256,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:10",{"_index":2272,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:12",{"_index":2273,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:14",{"_index":2268,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:16",{"_index":2269,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:18",{"_index":2270,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:20",{"_index":2271,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:6",{"_index":2274,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:8",{"_index":2275,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/wallet.rpc.service.ts",{"_index":3137,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:105",{"_index":3201,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:114",{"_index":3173,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:123",{"_index":3170,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:13",{"_index":3156,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:132",{"_index":3178,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:142",{"_index":3175,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:151",{"_index":3180,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:162",{"_index":3193,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:171",{"_index":3182,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:182",{"_index":3197,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:192",{"_index":3200,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:201",{"_index":3184,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:21",{"_index":3198,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:210",{"_index":3191,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:219",{"_index":3166,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:228",{"_index":3158,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:237",{"_index":3162,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:246",{"_index":3186,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:255",{"_index":3160,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:264",{"_index":3195,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:274",{"_index":3189,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:43",{"_index":3167,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:52",{"_index":3163,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:61",{"_index":3171,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:71",{"_index":3206,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:80",{"_index":3208,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:88",{"_index":3204,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:97",{"_index":3203,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/web",{"_index":3308,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["src/app/services/websocket.service.ts",{"_index":3359,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:11",{"_index":3365,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:15",{"_index":3367,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:22",{"_index":3369,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:26",{"_index":3366,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:30",{"_index":3371,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/main.ts",{"_index":3472,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ssh_pem",{"_index":2972,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["ssl",{"_index":2601,"title":{},"body":{"components/RootComponent.html":{}}}],["standard_address",{"_index":2720,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["start",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["start_height",{"_index":1033,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{}}}],["start_on_boot",{"_index":275,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"components/BootstateComponent.html":{}}}],["start_time",{"_index":1334,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["startchain",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["startdaemon",{"_index":1169,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["started",{"_index":3028,"title":{"index.html":{}},"body":{"components/WalletComponent.html":{}}}],["starting",{"_index":1326,"title":{},"body":{"components/BootstateComponent.html":{}}}],["startpollingwallet",{"_index":3036,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["starts",{"_index":181,"title":{},"body":{"components/AppComponent.html":{}}}],["startwalletservice",{"_index":3152,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["starwars",{"_index":2479,"title":{},"body":{"components/ProfileComponent.html":{}}}],["state",{"_index":637,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["state.networkdifficulty",{"_index":1567,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["static",{"_index":393,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["stats",{"_index":1218,"title":{},"body":{"components/BlockchainStatsComponent.html":{},"modules/SettingsModule.html":{}}}],["stats'},{'name",{"_index":83,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["stats.component.html",{"_index":1219,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["status",{"_index":104,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["status'},{'name",{"_index":122,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["status.component",{"_index":2749,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.component.html",{"_index":2723,"title":{},"body":{"components/StatusComponent.html":{}}}],["status.component.scss",{"_index":2722,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_annon",{"_index":2725,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_daemon",{"_index":966,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/StatusComponent.html":{}}}],["status_private",{"_index":2726,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_secure",{"_index":2727,"title":{},"body":{"components/StatusComponent.html":{}}}],["statuscomponent",{"_index":121,"title":{"components/StatusComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["statusmodule",{"_index":484,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["steppermodule",{"_index":2755,"title":{},"body":{"modules/StatusModule.html":{}}}],["stepperposition",{"_index":1263,"title":{},"body":{"components/BootstateComponent.html":{}}}],["stepperposition.top",{"_index":1282,"title":{},"body":{"components/BootstateComponent.html":{}}}],["steps",{"_index":1264,"title":{},"body":{"components/BootstateComponent.html":{}}}],["stoppollingwallet",{"_index":3037,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["stopwallet",{"_index":3153,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["storage",{"_index":644,"title":{},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["storage.service.ts",{"_index":3309,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:10",{"_index":3330,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:12",{"_index":3334,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:16",{"_index":3324,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:20",{"_index":3322,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:32",{"_index":3328,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:43",{"_index":3326,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:49",{"_index":3320,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:63",{"_index":3316,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:8",{"_index":3332,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:9",{"_index":3331,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["store",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"interfaces/ProfileState.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["stored",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["storedevtoolsmodule",{"_index":1895,"title":{},"body":{"modules/DataModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":1905,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule",{"_index":1894,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule.forroot(reducers",{"_index":1904,"title":{},"body":{"modules/DataModule.html":{}}}],["storeout",{"_index":2756,"title":{"interfaces/StoreOut.html":{}},"body":{"interfaces/StoreOut.html":{},"injectables/WalletRpcService.html":{}}}],["storerouterconnectingmodule",{"_index":1898,"title":{},"body":{"modules/DataModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":1910,"title":{},"body":{"modules/DataModule.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetPaymentsIn.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["style",{"_index":2480,"title":{},"body":{"components/ProfileComponent.html":{},"components/TransferComponent.html":{}}}],["style=\"font",{"_index":1088,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["styles",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["styletype",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["styleurls",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["sub",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"injectables/CryptService.html":{},"components/PostComponent.html":{}}}],["subject",{"_index":1548,"title":{},"body":{"injectables/ChartsEffects.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["subject.subscribe",{"_index":2384,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["submit",{"_index":2163,"title":{},"body":{"components/LoginComponent.html":{}}}],["subs",{"_index":2863,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["subscribe",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((data",{"_index":2453,"title":{},"body":{"components/PostComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["subscription",{"_index":219,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BootstateComponent.html":{},"injectables/ChartService.html":{},"components/TransactionsComponent.html":{}}}],["subscriptions",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["sufficiently",{"_index":838,"title":{},"body":{"interfaces/Balance.html":{}}}],["supplied",{"_index":1724,"title":{},"body":{"injectables/CryptService.html":{}}}],["support",{"_index":1315,"title":{},"body":{"components/BootstateComponent.html":{},"modules.html":{}}}],["sure",{"_index":594,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["svg",{"_index":3513,"title":{},"body":{"modules.html":{}}}],["sweepall",{"_index":2760,"title":{},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepall(x",{"_index":3202,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepallin",{"_index":2758,"title":{"interfaces/SweepAllIn.html":{}},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepallout",{"_index":2767,"title":{"interfaces/SweepAllOut.html":{}},"body":{"interfaces/SweepAllOut.html":{},"injectables/WalletRpcService.html":{}}}],["sweepdust",{"_index":3154,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepdustout",{"_index":2772,"title":{"interfaces/SweepDustOut.html":{}},"body":{"interfaces/SweepDustOut.html":{}}}],["swimlane/ngx",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BootstateComponent.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"modules/RootModule.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["switchmap",{"_index":1537,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap(([action",{"_index":1530,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap((req",{"_index":2653,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["sync",{"_index":549,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["synchronized",{"_index":1098,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["syndrome",{"_index":1773,"title":{},"body":{"injectables/CryptService.html":{}}}],["system",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletService.html":{}}}],["system.interface",{"_index":2056,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["system.interface.ts",{"_index":1972,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:16",{"_index":1993,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:25",{"_index":1995,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:33",{"_index":1984,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:41",{"_index":1987,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:49",{"_index":1979,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:8",{"_index":1990,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.service",{"_index":436,"title":{},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"components/BlockchainConfigComponent.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["system.service.ts",{"_index":1998,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:17",{"_index":2025,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:27",{"_index":2016,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:41",{"_index":2020,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:51",{"_index":2023,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:61",{"_index":2018,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:71",{"_index":2009,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:75",{"_index":2014,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:78",{"_index":2012,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:8",{"_index":2006,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["t",{"_index":1827,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["table",{"_index":967,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["tabsmodule",{"_index":1146,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/WalletModule.html":{}}}],["take",{"_index":684,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{}}}],["takes",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["takeuntil",{"_index":1534,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["takewhile",{"_index":3056,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["talks",{"_index":1020,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["target",{"_index":1335,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["target_height",{"_index":1336,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["targetaddform",{"_index":42,"title":{},"body":{"components/AddComponent.html":{}}}],["targettabindex",{"_index":37,"title":{},"body":{"components/AddComponent.html":{}}}],["task",{"_index":2774,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["technologies",{"_index":2584,"title":{},"body":{"components/RootComponent.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["templateref",{"_index":996,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/ModalComponent.html":{}}}],["templates",{"_index":3499,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":35,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["tension",{"_index":877,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["terminal",{"_index":326,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"modules/RootRoutingModule.html":{},"components/TerminalComponent.html":{},"dependencies.html":{}}}],["terminal'},{'name",{"_index":124,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["terminal.component.html",{"_index":2811,"title":{},"body":{"components/TerminalComponent.html":{}}}],["terminal.component.scss",{"_index":2810,"title":{},"body":{"components/TerminalComponent.html":{}}}],["terminalcomponent",{"_index":123,"title":{"components/TerminalComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["test",{"_index":1757,"title":{},"body":{"injectables/CryptService.html":{},"miscellaneous/typealiases.html":{}}}],["testnet",{"_index":1337,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["text",{"_index":447,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["text/plain",{"_index":2703,"title":{},"body":{"components/SpartaComponent.html":{}}}],["that.fs.listfiles('cli",{"_index":1311,"title":{},"body":{"components/BootstateComponent.html":{}}}],["that.key",{"_index":2191,"title":{},"body":{"components/LoginComponent.html":{}}}],["that.notificationservice.create",{"_index":2195,"title":{},"body":{"components/LoginComponent.html":{}}}],["that.ref.markforcheck",{"_index":1615,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["that.ws.sendmessage(`cmd:${this.attach}:${this.command.join",{"_index":1635,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["theme",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["themselves",{"_index":1454,"title":{},"body":{"injectables/ChartService.html":{}}}],["then((dat",{"_index":1201,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{}}}],["then((data",{"_index":3110,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["then((res",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(async",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(res",{"_index":1210,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["then(response",{"_index":443,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["then(text",{"_index":445,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.actions$.pipe",{"_index":1511,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["this.addoptions",{"_index":2308,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.address",{"_index":3282,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.alertservice.alert({title",{"_index":2914,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.alertservice.prompt",{"_index":2382,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.allcolumns.foreach((col",{"_index":1013,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.apiurl",{"_index":2057,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.apiurl}/write",{"_index":2064,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.app.fetchserverpublickey",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{}}}],["this.app.loadconfig('conf/app.ini",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"components/BootstateComponent.html":{}}}],["this.app.makedefault",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["this.app.online",{"_index":1307,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.appfilesystem",{"_index":2031,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.authneeded",{"_index":1310,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.authservice.getauthstatus",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(privatekey",{"_index":2177,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.authservice.login(this.key",{"_index":2179,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend('clear",{"_index":3348,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('get",{"_index":3339,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('remove",{"_index":3346,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('set",{"_index":3343,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.balance",{"_index":3279,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.block",{"_index":911,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.blockdata",{"_index":913,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.blocks",{"_index":1037,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.blocksearch",{"_index":1017,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.blockui.stop",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["this.chain.chaininfo",{"_index":2737,"title":{},"body":{"components/StatusComponent.html":{}}}],["this.chain.getblock(this.id",{"_index":910,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.chain.getblocks(math.max(0",{"_index":1038,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.chain.getinfo",{"_index":318,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["this.chain.startdaemon",{"_index":1306,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.chain.startdaemon().then",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["this.chaininfo",{"_index":1019,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/BlockchainService.html":{},"components/StatusComponent.html":{}}}],["this.chaininfo.height",{"_index":1027,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["this.chaininfo.target_height",{"_index":1028,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["this.chainrpc('get_info",{"_index":1212,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('getblock",{"_index":1215,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('getblockheadersrange",{"_index":1216,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('gettransactions",{"_index":1213,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.changestream(`daemon:${this.attach",{"_index":1616,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.chartdata$[name",{"_index":1481,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartdata$[name].subscribe",{"_index":1486,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartelement",{"_index":1381,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartinstances[name",{"_index":1500,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets.map((item",{"_index":1489,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets[i].data",{"_index":1490,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].destroy",{"_index":1499,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].update",{"_index":1492,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartmeta[name].datamap(response",{"_index":1491,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartservice.createchart(this.lthnchart",{"_index":1380,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartservice.destroysubscriptions(this.lthnchart",{"_index":1393,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartsubscriptions[name",{"_index":1485,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartsubscriptions[name].unsubscribe",{"_index":1498,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.checkdownloads",{"_index":1305,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.checkfolderstructure",{"_index":1300,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.checkserveralive",{"_index":1298,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.columns.push",{"_index":1015,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.command",{"_index":1636,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.pop",{"_index":1639,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.push(e.key",{"_index":1643,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.config",{"_index":1114,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.configureoptions",{"_index":890,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.connect().asobservable",{"_index":3379,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connect().complete",{"_index":3380,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.count",{"_index":3335,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.createchartelement(this.lthnchart",{"_index":1379,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.createsalt(input",{"_index":1842,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.cryptservice",{"_index":2803,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.createopenpgp(usernamehash",{"_index":2792,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.decryptpgp(atob(res['result",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.decryptprivatekey(key",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.encryptpgpsingle",{"_index":2801,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.encryptpublic(await",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.generatekey",{"_index":2802,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sha256salty(username",{"_index":2789,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sign(`{\"id\":\"${privatekey.getuserids()[0",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentlanguage",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["this.decryptprivatekey",{"_index":1870,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.destroysubscriptions(name",{"_index":1494,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.dialogref.close",{"_index":1943,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["this.downloaded",{"_index":1301,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.downloaded.unsubscribe",{"_index":1304,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.drawerservice.create",{"_index":1040,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.edittmpl",{"_index":1043,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.elmref.nativeelement",{"_index":1387,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.error",{"_index":2175,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fetchedhtml",{"_index":2708,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.filename",{"_index":2185,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filesystem.exists(pathname",{"_index":2036,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.isdir(pathname",{"_index":2038,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.isfile(pathname",{"_index":2037,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.list(dirname",{"_index":2032,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.listfiles('users').then(async",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.filesystem.mkdir(dirname",{"_index":2035,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.read(filename",{"_index":2033,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.readfile",{"_index":1860,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.filesystem.write(filename",{"_index":2034,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.writefile",{"_index":2796,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.fs.listfiles('/wallets').then((data",{"_index":3284,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.fs.readfile('conf/letheand.conf",{"_index":1118,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.fs.readfile(filename).then((data",{"_index":453,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.fs.writefile",{"_index":461,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.fs.writefile('conf/app.ini",{"_index":469,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.fs.writefile('conf/letheand.conf",{"_index":1113,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.getactiveaddress",{"_index":3277,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getauthstatus",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbalance",{"_index":3276,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getblocks",{"_index":1030,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.getchild(activatedroute.firstchild",{"_index":321,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getchild(this.activatedroute",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getlatestposts",{"_index":2452,"title":{},"body":{"components/PostComponent.html":{}}}],["this.getwalletlist",{"_index":3291,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.heading",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http",{"_index":1197,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["this.http.get(\"https://sparta.lt.hn/latest.json",{"_index":2455,"title":{},"body":{"components/PostComponent.html":{}}}],["this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1559,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.http.get(`https://sparta.lt.hn/${slug}/${id}.json`).subscribe((data",{"_index":2456,"title":{},"body":{"components/PostComponent.html":{}}}],["this.http.get(`https://sparta.lt.hn/t/${slug}/${id",{"_index":2706,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc",{"_index":3057,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.id",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{},"components/SpartaComponent.html":{}}}],["this.id.length",{"_index":909,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.index",{"_index":1308,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.ispollingactivestats",{"_index":3046,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.items",{"_index":3347,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.items[key",{"_index":3337,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.key",{"_index":2176,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.keymap[i",{"_index":1838,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.load().then",{"_index":1111,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.loadingservice.complete",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"components/OpenComponent.html":{}}}],["this.loadingservice.start",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"components/OpenComponent.html":{}}}],["this.loadpost(this.slug",{"_index":2701,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.loadtransactions().catch((err",{"_index":2889,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.metaservice.removetag('name=\\'description",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.updatetag",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalconfig.onclose",{"_index":2248,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.ondismiss",{"_index":2251,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shouldclose",{"_index":2247,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shoulddismiss",{"_index":2250,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref",{"_index":2243,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.close(result",{"_index":2249,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.dismiss(result",{"_index":2252,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.result.then(resolve",{"_index":2245,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.open(this.modalcontent",{"_index":2244,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.name",{"_index":2388,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["this.networkhashratechart",{"_index":1434,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.next",{"_index":1299,"title":{},"body":{"components/BootstateComponent.html":{}}}],["this.notificationservice.create",{"_index":2389,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.notificationservice.create({type",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notify.create",{"_index":1115,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.offline",{"_index":283,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openedwallet",{"_index":3274,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.options",{"_index":892,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.options.plugins.tooltip.callbacks",{"_index":2350,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.options.scales.y.ticks.callback",{"_index":2347,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.page.pagenumber",{"_index":1034,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.page.size",{"_index":1035,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.page.totalelements",{"_index":1029,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.password",{"_index":2180,"title":{},"body":{"components/LoginComponent.html":{},"components/WalletNewComponent.html":{}}}],["this.password.value",{"_index":2786,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["this.password_confirm",{"_index":3105,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.password_confirm.value",{"_index":3106,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.passwordrepeat.value",{"_index":2787,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.posts",{"_index":2454,"title":{},"body":{"components/PostComponent.html":{}}}],["this.processingform",{"_index":2784,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.readkey(publickey",{"_index":1888,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.readmessage(encrypted",{"_index":1871,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.readmessage(message",{"_index":1890,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.readprivatekey",{"_index":1884,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.ref.detach",{"_index":1605,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.detectchanges",{"_index":1607,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.markforcheck",{"_index":1620,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.renderer.appendchild(this.elmref.nativeelement",{"_index":1391,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.createelement('canvas",{"_index":1382,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.removechild",{"_index":1392,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setattribute",{"_index":1383,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle",{"_index":1386,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle(this.elmref.nativeelement",{"_index":1384,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.restorewalletform",{"_index":2533,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.address",{"_index":2546,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.autosave_current",{"_index":2548,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.filename",{"_index":2545,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.password",{"_index":2549,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.restore_height",{"_index":2547,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.spendkey",{"_index":2551,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewkey",{"_index":2552,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewonly_wallet",{"_index":2550,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":2697,"title":{},"body":{"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.route.snapshot.parammap.get('slug",{"_index":2699,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.router.events",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":265,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":2178,"title":{},"body":{"components/LoginComponent.html":{},"components/WalletNewComponent.html":{}}}],["this.router.navigate(['/','wallet','details",{"_index":3020,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.router.navigate(['/login",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":2181,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.rows",{"_index":2886,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.rpc.getaddress().then((data",{"_index":3281,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.getbalance().then((data",{"_index":3278,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.gettransfers(opts).then((data",{"_index":3292,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.openwallet(req).then(async",{"_index":3273,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.restorewallet(req",{"_index":3272,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.startwalletservice().subscribe((data",{"_index":3271,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.stopwallet",{"_index":3293,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.transfer(opts",{"_index":3294,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(content",{"_index":1969,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["this.settargettabindex",{"_index":60,"title":{},"body":{"components/AddComponent.html":{}}}],["this.setupcallbacks",{"_index":891,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.slug",{"_index":2698,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.socket",{"_index":3376,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.closed",{"_index":3377,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.next(msg",{"_index":3381,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.startchain",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status_daemon",{"_index":1022,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["this.store$.pipe",{"_index":1525,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.store.dispatch",{"_index":3060,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.store.dispatch(changelanguage({language",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstartaction",{"_index":1484,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstopaction",{"_index":1497,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.pipe",{"_index":1482,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.pipe(select(selectlanguage)).subscribe((lang",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectwallettransactions)).subscribe((data",{"_index":2884,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.sub",{"_index":2451,"title":{},"body":{"components/PostComponent.html":{}}}],["this.sub.foreach((s",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["this.sub.unsubscribe",{"_index":915,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/PostComponent.html":{}}}],["this.sub['interval",{"_index":1031,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.subs$['txn",{"_index":2883,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.table.rowdetail.toggleexpandrow(row",{"_index":1048,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.targetaddform",{"_index":61,"title":{},"body":{"components/AddComponent.html":{}}}],["this.targettabindex",{"_index":62,"title":{},"body":{"components/AddComponent.html":{}}}],["this.terminal.keyeventinput.subscribe((e",{"_index":1622,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.terminal.underlying.buffer.active.cursorx",{"_index":1640,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.terminal.underlying.write('\\b",{"_index":1641,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.terminal.underlying.writeln(\"\\r\\n",{"_index":1637,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.terminal.underlying.writeln(atob(data[1]).trim().replace('src/cryptonote_protocol/cryptonote_protocol_handler.inl",{"_index":1614,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.terminal.underlying.writeln(data[1",{"_index":1613,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.terminal.write(e.key",{"_index":1644,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.titleservice.settitle(res",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transfer",{"_index":2920,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.transfer.destinations.map((dest",{"_index":2909,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.translate.get(data.description).subscribe",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.get(data.title).subscribe((res",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.getbrowserlang",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.getstreamontranslationchange",{"_index":2819,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["this.translate.setdefaultlang('en",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(lang",{"_index":264,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(req.language",{"_index":2654,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.updatemeta",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.length",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.username.value",{"_index":2785,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.wallet.getactiveaddress",{"_index":3016,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.getbalance",{"_index":1926,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.wallet.gettransfers(this.opts).then((data",{"_index":2890,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.wallet.getwalletlist",{"_index":2380,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.wallet.openwallet",{"_index":3041,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.wallet.openwallet({filename",{"_index":2386,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.wallet.restorewallet",{"_index":2544,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.wallet.sendtransfer(this.transfer).catch((err",{"_index":2911,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.wallet.startwallet().then(r",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["this.wallet.startwalletservice",{"_index":2381,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.wallet.walletlist",{"_index":3015,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet_name",{"_index":3104,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.wallet_name.value",{"_index":3108,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.wallet_name.value]).catch(console.error",{"_index":3113,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.walletrpc.createwallet",{"_index":3107,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.wallets",{"_index":2379,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["this.wallets.includes(dat",{"_index":3286,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.length",{"_index":3290,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.push(dat",{"_index":3289,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.ws.closeconnection",{"_index":1646,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect",{"_index":1617,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect().subscribe((data",{"_index":1608,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.sendmessage(channel",{"_index":1619,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["those",{"_index":837,"title":{},"body":{"interfaces/Balance.html":{}}}],["throw",{"_index":1459,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["ticket",{"_index":1316,"title":{},"body":{"components/BootstateComponent.html":{}}}],["tickmarklength",{"_index":2330,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ticks",{"_index":882,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["ticks.color",{"_index":1474,"title":{},"body":{"injectables/ChartService.html":{}}}],["time",{"_index":2312,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/TransactionsComponent.html":{}}}],["timeago",{"_index":2815,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{}}}],["timeagopipe",{"_index":2419,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/TimeAgoPipe.html":{},"overview.html":{}}}],["timeagopipe.translations",{"_index":2831,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["timeagopipe.translations['words.time.past.years",{"_index":2853,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["timed",{"_index":2434,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["timer",{"_index":1536,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timer(0",{"_index":1532,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timeseries",{"_index":2313,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["timestamp",{"_index":955,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["timezone",{"_index":3430,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainRoutingModule.html":{},"components/BootstateComponent.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletRoutingModule.html":{}}}],["titleservice",{"_index":170,"title":{},"body":{"components/AppComponent.html":{}}}],["tmi",{"_index":3490,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tocoin",{"_index":926,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/DetailsComponent.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["tocoinpipe",{"_index":2420,"title":{"pipes/ToCoinPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["todo",{"_index":1448,"title":{},"body":{"injectables/ChartService.html":{},"injectables/FileSystemService.html":{}}}],["toggled",{"_index":1050,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["toggleexpandrow",{"_index":971,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["toggleexpandrow(row",{"_index":981,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["token",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokengetter",{"_index":545,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":360,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbarmodule",{"_index":1147,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/UserModule.html":{}}}],["tooltip",{"_index":886,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top",{"_index":374,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top_block_hash",{"_index":1338,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["topromise",{"_index":1200,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{}}}],["torrents",{"_index":2995,"title":{},"body":{"components/VpnComponent.html":{}}}],["tostring",{"_index":1843,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["tot",{"_index":1996,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["total",{"_index":831,"title":{},"body":{"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalelements",{"_index":1000,"title":{},"body":{"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalpages",{"_index":1001,"title":{},"body":{"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["trace",{"_index":3463,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":2985,"title":{},"body":{"components/VpnComponent.html":{}}}],["transactin",{"_index":3176,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transaction",{"_index":1692,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["transactions",{"_index":1056,"title":{"interfaces/Transactions.html":{}},"body":{"components/BlockTransactionsComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{}}}],["transactions'},{'name",{"_index":90,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["transactions.component.html",{"_index":1057,"title":{},"body":{"components/BlockTransactionsComponent.html":{},"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":125,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["transfer",{"_index":2104,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"injectables/WalletRpcService.html":{}}}],["transfer'},{'name",{"_index":127,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["transfer(x",{"_index":3205,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfer.component.html",{"_index":2897,"title":{},"body":{"components/TransferComponent.html":{}}}],["transfer_type",{"_index":2137,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["transfercomponent",{"_index":126,"title":{"components/TransferComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["transferin",{"_index":2903,"title":{"interfaces/TransferIn.html":{}},"body":{"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["transferout",{"_index":2907,"title":{"interfaces/TransferOut.html":{}},"body":{"components/TransferComponent.html":{},"interfaces/TransferOut.html":{},"injectables/WalletRpcService.html":{}}}],["transfers",{"_index":2094,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"injectables/WalletEffects.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfersplit",{"_index":3155,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplit(x",{"_index":3207,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplitin",{"_index":1672,"title":{"interfaces/TransferSplitIn.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["transfersplitout",{"_index":2935,"title":{"interfaces/TransferSplitOut.html":{}},"body":{"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{}}}],["transform",{"_index":1952,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(content",{"_index":1965,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(string",{"_index":2108,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["transform(value",{"_index":1953,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["transforms",{"_index":1727,"title":{},"body":{"injectables/CryptService.html":{}}}],["translate",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"components/WalletNewComponent.html":{}}}],["translate/core",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"modules/StatusModule.html":{},"pipes/TimeAgoPipe.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":529,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":528,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":485,"title":{"modules/TranslateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["translatemodule.forroot",{"_index":550,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{}}}],["translations",{"_index":2817,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["tree",{"_index":26,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["treemodule",{"_index":1148,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["tries",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{}}}],["true",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"injectables/WalletEffects.html":{}}}],["try",{"_index":270,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BootstateComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"injectables/WebStorageService.html":{}}}],["ts",{"_index":1352,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["tslib",{"_index":3445,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tx",{"_index":1067,"title":{},"body":{"components/BlockTransactionsComponent.html":{},"interfaces/MakeUriIn.html":{},"components/TransferComponent.html":{}}}],["tx's",{"_index":2100,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["tx_blob_list",{"_index":2769,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_count",{"_index":1339,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_description",{"_index":2214,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx_hash",{"_index":2142,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"interfaces/Payment.html":{},"interfaces/TransferOut.html":{}}}],["tx_hash_list",{"_index":2770,"title":{},"body":{"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/TransferSplitOut.html":{}}}],["tx_key",{"_index":2928,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["tx_key_list",{"_index":2771,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_pool_size",{"_index":1340,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_size",{"_index":2143,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["txid",{"_index":2874,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{}}}],["txn",{"_index":2930,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["txs_as_hex",{"_index":2859,"title":{},"body":{"interfaces/Transactions.html":{}}}],["txs_as_json",{"_index":2860,"title":{},"body":{"interfaces/Transactions.html":{}}}],["txs_hashes",{"_index":1214,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["txshashes",{"_index":1190,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":3522,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2114,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["ui",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BootstateComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"modules/RootModule.html":{},"interfaces/SettingsState.html":{},"modules/StatusModule.html":{},"components/TransferComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["unable",{"_index":1312,"title":{},"body":{"components/BootstateComponent.html":{}}}],["unavailable",{"_index":2138,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["unblock",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/TransferComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["under",{"_index":1793,"title":{},"body":{"injectables/CryptService.html":{}}}],["unified",{"_index":2665,"title":{},"body":{"modules/SettingsModule.html":{}}}],["unique",{"_index":2484,"title":{},"body":{"components/ProfileComponent.html":{}}}],["uniquenamesgenerator",{"_index":2476,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unit",{"_index":2318,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["units",{"_index":1916,"title":{},"body":{"interfaces/Destination.html":{},"pipes/HashRatePipe.html":{},"interfaces/MakeUriIn.html":{}}}],["units[i]}h",{"_index":2118,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["unknown",{"_index":412,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["unlock",{"_index":2375,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["unlock_time",{"_index":1683,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["unlock_time:0",{"_index":2905,"title":{},"body":{"components/TransferComponent.html":{}}}],["unlocked",{"_index":835,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlocked_balance",{"_index":828,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlockwallet",{"_index":2369,"title":{},"body":{"components/OpenComponent.html":{}}}],["unlockwallet(name",{"_index":2373,"title":{},"body":{"components/OpenComponent.html":{}}}],["unsigned",{"_index":829,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["up",{"_index":1414,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["update",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{},"components/ConsoleComponent.html":{},"index.html":{}}}],["updatemeta",{"_index":166,"title":{},"body":{"components/AppComponent.html":{}}}],["updates",{"_index":1320,"title":{},"body":{"components/BootstateComponent.html":{}}}],["uri",{"_index":1699,"title":{"interfaces/Uri.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/Uri.html":{},"injectables/WalletRpcService.html":{}}}],["url",{"_index":1175,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{},"dependencies.html":{}}}],["use",{"_index":259,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{}}}],["useclass",{"_index":560,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2504,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["usefactory",{"_index":553,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":587,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":111,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["user'},{'name",{"_index":129,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["user.component",{"_index":2965,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.html",{"_index":2778,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.component.scss",{"_index":2779,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.reducer",{"_index":629,"title":{},"body":{"interfaces/AppState.html":{}}}],["user.usersstate",{"_index":610,"title":{},"body":{"interfaces/AppState.html":{}}}],["usercomponent",{"_index":128,"title":{"components/UserComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["userform",{"_index":2780,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["userids",{"_index":1853,"title":{},"body":{"injectables/CryptService.html":{}}}],["usermeta",{"_index":2951,"title":{"interfaces/UserMeta.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usermodule",{"_index":2958,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usernamehash",{"_index":2788,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["useroptions",{"_index":2954,"title":{"interfaces/UserOptions.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userroutingmodule",{"_index":567,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":682,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["users/${id}.lthn.key",{"_index":1869,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${id}.lthn.pub",{"_index":1861,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${usernamehash}.lthn",{"_index":2800,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.key",{"_index":2797,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.pub",{"_index":2798,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.rev",{"_index":2799,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["usersstate",{"_index":2956,"title":{"interfaces/UsersState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userstate",{"_index":2957,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["uses",{"_index":1814,"title":{},"body":{"injectables/CryptService.html":{}}}],["using",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["v",{"_index":2385,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["v.data.data}).then(async",{"_index":2387,"title":{},"body":{"components/OpenComponent.html":{}}}],["v.data}).then(async",{"_index":3018,"title":{},"body":{"components/WalletComponent.html":{}}}],["v12",{"_index":3395,"title":{},"body":{"dependencies.html":{}}}],["valid",{"_index":1954,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["validatorfn",{"_index":3477,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1011,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["validators.required",{"_index":1018,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["value",{"_index":47,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BootstateComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferOut.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["value.indexof",{"_index":2518,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.length",{"_index":2522,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.slice",{"_index":2520,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.substr(0",{"_index":2521,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.tostring",{"_index":2517,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["values",{"_index":2348,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["variable",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verified_user",{"_index":2740,"title":{},"body":{"components/StatusComponent.html":{}}}],["version",{"_index":988,"title":{},"body":{"components/BlockLedgerComponent.html":{},"properties.html":{}}}],["view",{"_index":2563,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransferComponent.html":{}}}],["view.chain.description",{"_index":1159,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["view.chain.heading",{"_index":1158,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["view.chain.title",{"_index":1157,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["view.dashboard.description",{"_index":2627,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.heading",{"_index":2626,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.title",{"_index":2625,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.terminal.description",{"_index":2630,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.terminal.heading",{"_index":2629,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.terminal.title",{"_index":2628,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.wallets.backup.description",{"_index":3128,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.backup.heading",{"_index":3127,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.backup.title",{"_index":3126,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.description",{"_index":3120,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.heading",{"_index":3119,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.new.description",{"_index":3124,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.new.heading",{"_index":3123,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.new.title",{"_index":3122,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.restore.description",{"_index":3132,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.restore.heading",{"_index":3131,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.restore.title",{"_index":3130,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.settings.description",{"_index":3136,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.settings.heading",{"_index":3135,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.settings.title",{"_index":3134,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.title",{"_index":3118,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["viewchild",{"_index":233,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{}}}],["viewchild('blockstable",{"_index":1006,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["viewchild('edittmpl",{"_index":997,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["viewchild('modal",{"_index":2236,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild('sidenav",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('term",{"_index":1599,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation",{"_index":1602,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation.none",{"_index":1575,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewkey",{"_index":2541,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["viewonly_wallet",{"_index":2542,"title":{},"body":{"components/RestoreComponent.html":{}}}],["viewport",{"_index":1648,"title":{},"body":{"components/ConsoleComponent.html":{},"dependencies.html":{}}}],["visibility_off",{"_index":2739,"title":{},"body":{"components/StatusComponent.html":{}}}],["vm",{"_index":1457,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartinstances[name",{"_index":1475,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name",{"_index":1458,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data",{"_index":1478,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.length",{"_index":1470,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.map((dataset",{"_index":1461,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options",{"_index":1479,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.colors[i",{"_index":1463,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales",{"_index":1472,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales[dataset.yaxisid",{"_index":1471,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].type",{"_index":1477,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.hashratepipe.transform(context.parsed.y",{"_index":2351,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.hashratepipe.transform(value",{"_index":2349,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.setupdatasubscription(name",{"_index":1480,"title":{},"body":{"injectables/ChartService.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BootstateComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["vpn",{"_index":2977,"title":{},"body":{"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn'},{'name",{"_index":131,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["vpn.component.html",{"_index":2979,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpn.component.scss",{"_index":2978,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpncomponent",{"_index":130,"title":{"components/VpnComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["vpnmodule",{"_index":2998,"title":{"modules/VpnModule.html":{}},"body":{"modules/VpnModule.html":{},"modules.html":{},"overview.html":{}}}],["vpnroutingmodule",{"_index":3003,"title":{"modules/VpnRoutingModule.html":{}},"body":{"modules/VpnRoutingModule.html":{},"modules.html":{}}}],["wails",{"_index":3493,"title":{},"body":{"index.html":{}}}],["wails.io",{"_index":3503,"title":{},"body":{"index.html":{}}}],["wailsdevelopment",{"_index":3505,"title":{},"body":{"index.html":{}}}],["wall",{"_index":2395,"title":{},"body":{"components/OpenComponent.html":{}}}],["wallet",{"_index":33,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/GetTransfersIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["wallet's",{"_index":2566,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["wallet'},{'name",{"_index":133,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["wallet.address",{"_index":1927,"title":{},"body":{"components/DetailsComponent.html":{},"components/WalletComponent.html":{}}}],["wallet.balance.balance",{"_index":3031,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.balance.unlocked_balance",{"_index":3029,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.balance.unlocked_balance|tocoin",{"_index":3032,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.balance['balance",{"_index":1928,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.balance['unlocked_balance",{"_index":1929,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.balance[\\'balance",{"_index":1930,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.balance[\\'unlocked_balance",{"_index":1931,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.component.html",{"_index":3007,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.component.scss",{"_index":3006,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.name",{"_index":3062,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.options.pollinginterval).pipe",{"_index":3055,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.reducer",{"_index":631,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.walleteffects",{"_index":651,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.walletsstate",{"_index":611,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet/backup",{"_index":3125,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet/new",{"_index":3121,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet/restore",{"_index":3129,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet/settings",{"_index":3133,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet_name",{"_index":3095,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["walletactions",{"_index":3070,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletbalance",{"_index":3061,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaddata",{"_index":3047,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaded",{"_index":3067,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletstoppedpolling",{"_index":3050,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.wallettransfers",{"_index":3064,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletcomponent",{"_index":132,"title":{"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["walleteffects",{"_index":3033,"title":{"injectables/WalletEffects.html":{}},"body":{"injectables/WalletEffects.html":{}}}],["walletlist",{"_index":3248,"title":{},"body":{"injectables/WalletService.html":{}}}],["walletloaddata",{"_index":3038,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletmodule",{"_index":2608,"title":{"modules/WalletModule.html":{}},"body":{"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletnewcomponent",{"_index":134,"title":{"components/WalletNewComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockTransactionsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/BootstateComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["walletroutingmodule",{"_index":568,"title":{"modules/WalletRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["walletrpc",{"_index":3098,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["walletrpcservice",{"_index":2866,"title":{"injectables/WalletRpcService.html":{}},"body":{"components/TransactionsComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["wallets",{"_index":605,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CreateWallet.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletselectors",{"_index":3072,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletservice",{"_index":1919,"title":{"injectables/WalletService.html":{}},"body":{"components/DetailsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletService.html":{}}}],["walletsstate",{"_index":3297,"title":{"interfaces/WalletsState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletstate",{"_index":3295,"title":{"classes/WalletState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["want",{"_index":1768,"title":{},"body":{"injectables/CryptService.html":{}}}],["watcher",{"_index":289,"title":{},"body":{"components/AppComponent.html":{}}}],["way",{"_index":1451,"title":{},"body":{"injectables/ChartService.html":{}}}],["ways",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{}}}],["web",{"_index":3448,"title":{},"body":{"dependencies.html":{}}}],["web.service",{"_index":2028,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["web.service.ts",{"_index":2039,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:10",{"_index":2040,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:17",{"_index":2041,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:21",{"_index":2047,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:34",{"_index":2048,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:38",{"_index":2050,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:43",{"_index":2052,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:56",{"_index":2054,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:73",{"_index":2045,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:87",{"_index":2043,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web3",{"_index":2586,"title":{},"body":{"components/RootComponent.html":{}}}],["webfilesystem",{"_index":2029,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["website",{"_index":2599,"title":{},"body":{"components/RootComponent.html":{}}}],["websites",{"_index":2598,"title":{},"body":{"components/RootComponent.html":{}}}],["websocket",{"_index":3372,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(\"ws://127.0.0.1:8081",{"_index":3382,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(ws_endpoint",{"_index":3378,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketservice",{"_index":1584,"title":{"injectables/WebsocketService.html":{}},"body":{"components/ConsoleComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketsubject",{"_index":3368,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["webstorageservice",{"_index":645,"title":{"injectables/WebStorageService.html":{}},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["webview2",{"_index":3495,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":681,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["well",{"_index":1777,"title":{},"body":{"injectables/CryptService.html":{}}}],["whatever",{"_index":3392,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["whenever",{"_index":3386,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["white",{"_index":2322,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["white_peerlist_size",{"_index":1341,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["width",{"_index":340,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/StatusComponent.html":{}}}],["width:80vw",{"_index":1390,"title":{},"body":{"directives/ChartDirective.html":{}}}],["window",{"_index":3502,"title":{},"body":{"index.html":{}}}],["within",{"_index":2505,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["withlatestfrom",{"_index":1524,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(walletselectors.selectopenedwalletdata",{"_index":3053,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["without",{"_index":687,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wizard",{"_index":2968,"title":{},"body":{"modules/UserModule.html":{}}}],["wont",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["word",{"_index":1804,"title":{},"body":{"injectables/CryptService.html":{}}}],["words.actions.save",{"_index":1119,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["words.things.type",{"_index":1061,"title":{},"body":{"components/BlockTransactionsComponent.html":{}}}],["words.time.past.day",{"_index":2825,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.days",{"_index":2826,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.hour",{"_index":2823,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.hours",{"_index":2824,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.minute",{"_index":2821,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.minutes",{"_index":2822,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.month",{"_index":2827,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.months",{"_index":2828,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.seconds",{"_index":2820,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.year",{"_index":2829,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.years",{"_index":2830,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["working",{"_index":2026,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["works",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["workstation",{"_index":1295,"title":{},"body":{"components/BootstateComponent.html":{}}}],["worst",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrapper",{"_index":2027,"title":{},"body":{"injectables/FileSystemService.html":{},"components/StatusComponent.html":{}}}],["write",{"_index":1976,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["write(filename",{"_index":2053,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["write(type",{"_index":1994,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["writefile",{"_index":2003,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["writefile(filename",{"_index":2022,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["ws",{"_index":1588,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ws://127.0.0.1:36909",{"_index":3375,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws_endpoint",{"_index":3374,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["x",{"_index":881,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["xmldom/xmldom",{"_index":3410,"title":{},"body":{"dependencies.html":{}}}],["xterm",{"_index":1647,"title":{},"body":{"components/ConsoleComponent.html":{},"dependencies.html":{}}}],["y",{"_index":884,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["years",{"_index":2849,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["yes",{"_index":1956,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"injectables/WalletRpcService.html":{}}}],["yes/no",{"_index":2488,"title":{},"body":{"components/ProfileComponent.html":{}}}],["z",{"_index":1826,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["zerolinewidth",{"_index":2328,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["zone.js",{"_index":3453,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":487,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddAddressBook.html":{"url":"interfaces/AddAddressBook.html","title":"interface - AddAddressBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddAddressBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/addAddressBook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddAddressBook {\n\taddress: string;\n\tpayment_id?: string; // (optional) string, defaults to \"0000000000000000000000000000000000000000000000000000000000000000\";\n\tdescription?: string; // (optional) string, defaults to \"\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddComponent.html":{"url":"components/AddComponent.html","title":"component - AddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/add.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-add\n            \n\n\n\n\n            \n                templateUrl\n                ./add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setTargetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                targetAddForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/add.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        targetAddForm\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/add.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/add.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTargetTabIndex\n                        \n                    \n                \n            \n            \n                \nsetTargetTabIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/add.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetTabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/add.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-wallet-add',\n\ttemplateUrl: './add.component.html'\n})\nexport class AddComponent implements OnInit {\n\t@Input() targetAddForm: string = 'open';\n\ttargetTabIndex: number = 0;\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t\tthis.setTargetTabIndex();\n\t}\n\n\tsetTargetTabIndex(): void {\n\t\tif (this.targetAddForm === \"open\") {\n\t\t\tthis.targetTabIndex = 0;\n\t\t}else if (this.targetAddForm === \"restore\") {\n\t\t\tthis.targetTabIndex = 1;\n\t\t}else{\n\t\t\tthis.targetTabIndex = 0;\n\t\t}\n\t}\n\n\n\n}\n\n    \n\n    \n        \n\n\t\n\t\t\n\t\t\t\n\t\t\t\tadd_box\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tcloud_download\n\t\t\t\n\t\t\n\t\t\n\t\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\tadd_box\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloud_download\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/address.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n\taddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                app\n                            \n                            \n                                    Public\n                                chainInfo\n                            \n                            \n                                    Public\n                                currentFlag\n                            \n                            \n                                    Public\n                                currentLanguage\n                            \n                            \n                                    Public\n                                currentLanguage$\n                            \n                            \n                                filteredNavigationTree\n                            \n                            \n                                    Public\n                                heading\n                            \n                            \n                                    Public\n                                menu\n                            \n                            \n                                    Public\n                                navExpanded\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                searchValue\n                            \n                            \n                                    Public\n                                sidenav\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getChild\n                            \n                            \n                                    Public\n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                    Async\n                                ngOnInit\n                            \n                            \n                                startChain\n                            \n                            \n                                updateMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, metaService: Meta, translate: TranslateService, store: Store, chain: BlockchainService, loadingService: LoadingService, app: AppConfigService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:34\n                            \n                        \n\n                \n                    \n                            Starts the Angular framework and configures system plugins\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                    LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:126\n                \n            \n\n\n            \n                \n                    Dispatch a language change request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChild\n                        \n                    \n                \n            \n            \n                \ngetChild(activatedRoute: ActivatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:194\n                \n            \n\n\n            \n                \n                    Angular router helper\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n                                    \n                                                ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:65\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startChain\n                        \n                    \n                \n            \n            \n                \nstartChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:177\n                \n            \n\n\n            \n                \n                    Start chain daemon and wallet service\nunblock UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMeta\n                        \n                    \n                \n            \n            \n                \nupdateMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:134\n                \n            \n\n\n            \n                \n                    creates subscriptions for multi lingual page meta\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        app\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AppConfigService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:58\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNavigationTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        heading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        offline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterContentInit, Component, OnInit, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {ActivatedRoute, NavigationEnd, NavigationStart, Router} from '@angular/router';\nimport {Meta, Title} from '@angular/platform-browser';\nimport {filter} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {select, Store} from '@ngrx/store';\nimport {changeLanguage, selectLanguage} from '@module/settings/data';\nimport { Subscription} from 'rxjs';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport { LoadingService } from '@swimlane/ngx-ui';\nimport {AppConfigService} from '@service/app-config.service';\n\n@Component({\n\tselector: 'lthn-app',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, AfterContentInit {\n\tpublic menu: boolean;\n\tpublic heading = '';\n\n\t@ViewChild('sidenav') public sidenav: MatSidenav;\n\tpublic currentFlag: any;\n\tpublic currentLanguage$: Subscription;\n\tpublic currentLanguage: string = 'en';\n\tpublic navExpanded: boolean = true;\n\tsearchValue = '';\n\tfilteredNavigationTree: any[];\n\tprivate sub: Subscription[] = [];\n\tpublic chainInfo: ChainGetInfo;\n\n\tpublic offline: boolean = true;\n\n\t/**\n\t * Starts the Angular framework and configures system plugins\n\t *\n\t * @param {Router} router\n\t * @param {ActivatedRoute} activatedRoute\n\t * @param {Title} titleService\n\t * @param {Meta} metaService\n\t * @param {TranslateService} translate\n\t * @param {Store} store\n\t * @param {BlockchainService} chain\n\t * @param app\n\t * @param loadingService\n\t */\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate translate: TranslateService,\n\t\tprivate store: Store,\n\t\tprivate chain: BlockchainService,\n\t\tprivate loadingService: LoadingService,\n\t\tpublic app: AppConfigService\n\t) {\n\n\n\n\t}\n\n\tpublic ngOnDestroy() {\n\t\tthis.sub.forEach((s) => s.unsubscribe());\n\t}\n\n\tpublic async ngOnInit() {\n\n\n\n\t\tthis.translate.setDefaultLang('en');\n\t\tlet lang = this.translate.getBrowserLang();\n\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\tthis.translate.use(lang ? lang : 'en');\n\n\t\tthis.router.events.subscribe((event) => {\n\t\t\tif (event instanceof NavigationStart) {\n\t\t\t\tthis.loadingService.start();\n\t\t\t} else if (event instanceof NavigationEnd) {\n\t\t\t\tthis.loadingService.complete();\n\t\t\t}\n\t\t});\n\n\t}\n\n\tpublic async ngAfterContentInit() {\n//\t\ttry {\n//\t\t\tawait this.app.fetchServerPublicKey()\n//\n//\t\t\tawait this.app.loadConfig('conf/app.ini')\n//\n//\t\t\tif(this.app.getConfig('daemon', 'start_on_boot', true)){\n//\t\t\t\tthis.startChain();\n//\t\t\t}\n//\t\t} catch (e) {\n//\t\t\tif ('HttpErrorResponse' === e.name) {\n//\t\t\t\tif (e.status === 401) {\n//\t\t\t\t\tthis.offline = false;\n//\t\t\t\t}else if(e.status === 404){\n//\t\t\t\t\tthis.offline = false;\n//\t\t\t\t\tawait this.app.makeDefault()\n//\t\t\t\t\tawait this.app.loadConfig('conf/app.ini')\n//\t\t\t\t\tif(this.app.getConfig('daemon', 'start_on_boot', true)){\n//\t\t\t\t\t\tthis.startChain();\n//\t\t\t\t\t}\n//\t\t\t\t}\n//\t\t\t}\n//\t\t}\n\n\t\t// setup language watcher\n\t\tthis.currentLanguage$ = this.store.pipe(select(selectLanguage)).subscribe((lang) => {\n\t\t\tthis.currentLanguage = lang;\n\t\t\tthis.translate.use(lang);\n\t\t});\n\n\t\tthis.updateMeta();\n\t}\n\n\t/**\n\t * Dispatch a language change request\n\t *\n\t * @param {string} lang\n\t */\n\tchangeLanguage(lang: string) {\n\t\tthis.store.dispatch(changeLanguage({language: lang}));\n\t}\n\n\n\t/**\n\t * creates subscriptions for multi lingual page meta\n\t */\n\tupdateMeta() {\n\t\tthis.router.events\n\t\t\t.pipe(filter((event) => event instanceof NavigationEnd))\n\t\t\t.subscribe(() => {\n\t\t\t\tconst rt = this.getChild(this.activatedRoute);\n\t\t\t\trt.data.subscribe((data) => {\n\t\t\t\t\tthis.translate.get(data.title).subscribe((res: string) => {\n\t\t\t\t\t\tthis.titleService.setTitle(res);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.heading = data.heading;\n\t\t\t\t\tif (data.description) {\n\n\t\t\t\t\t\tthis.translate.get(data.description).subscribe(() => {\n\t\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\t\tcontent: data.description\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.removeTag('name=\\'description\\'');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!data.robots) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'nofollow,noindex'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'follow,index'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * Start chain daemon and wallet service\n\t * unblock UI\n\t */\n\tstartChain() {\n\n\t\tthis.chain.startDaemon().then(() => {\n\t\t\t//this.blockUI.stop();\n\t\t\t//this.wallet.startWallet().then(r => r);\n\t\t});\n\n\t\tthis.chain.getInfo()\n\n\t}\n\n\t/**\n\t * Angular router helper\n\t *\n\t * @param {ActivatedRoute} activatedRoute\n\t * @returns {any}\n\t */\n\tgetChild(activatedRoute: ActivatedRoute) {\n\t\tif (activatedRoute.firstChild) {\n\t\t\treturn this.getChild(activatedRoute.firstChild);\n\t\t} else {\n\t\t\treturn activatedRoute;\n\t\t}\n\t}\n\n}\n\n    \n\n    \n        \n\n    \n        \n        \n        \n\n    \n\n\n    \n        \n            \n                \n            \n        \n\n        \n        \n            \n                dashboard\n            \n            \n                link\n            \n            {{ 'menu.text.blockchain' | translate }}-->\n                         account_balance_wallet\n terminal-->\n            {{ 'menu.text.settings' | translate }}-->\n        \n        \n        \n    \n    \n\n\n        \n             \n            \n                \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.en' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.ru' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.zh' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.es' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.de' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.fr' | translate }}\n                        \n                    \n\n\n                \n            \n\n            \n                \n            \n\n        \n        \n\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  .main-container {\n    height: 100vh;\n    width: 100%;\n    min-height: calc(99vh - 54px);\n    overflow: hidden;\n    background: radial-gradient(circle, rgba(8, 242, 181, 1) 0%, rgba(21, 130, 151, 1) 100%);\n\n    mat-card {\n      mat-card-content {\n        img {\n          height: 30vh;\n        }\n      }\n    }\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 64px;\n  }\n\n  mat-sidenav {\n    width: 74px;\n    align-items: center;\n    border: none;\n    .logo {\n      padding-left: 11px;\n      padding-top: 2px;\n      height: 58px;\n    }\n    .mat-nav-list {\n      padding-top: 0;\n      .mat-icon{\n        margin: 0 auto;\n      }\n    }\n  }\n\n  html.dark-theme .made-by {\n    --active-background-color: #242628;\n    color: #838488;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                        dashboard                                        link                        {{ \\'menu.text.blockchain\\' | translate }}-->                         account_balance_wallet terminal-->            {{ \\'menu.text.settings\\' | translate }}-->                                                                                                                                                           {{ \\'lang.en\\' | translate }}                                                                                                                      {{ \\'lang.ru\\' | translate }}                                                                                                                      {{ \\'lang.zh\\' | translate }}                                                                                                                      {{ \\'lang.es\\' | translate }}                                                                                                                      {{ \\'lang.de\\' | translate }}                                                                                                                      {{ \\'lang.fr\\' | translate }}                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                apiUrl\n                            \n                            \n                                    Static\n                                config\n                            \n                            \n                                crypto\n                            \n                            \n                                online\n                            \n                            \n                                openpgp\n                            \n                            \n                                    Static\n                                serverPublicKey\n                            \n                            \n                                    Static\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                fetchServerPublicKey\n                            \n                            \n                                getConfig\n                            \n                            \n                                loadConfig\n                            \n                            \n                                    Async\n                                makeDefault\n                            \n                            \n                                saveConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app-config.service.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        fetchServerPublicKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    fetchServerPublicKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(section: string, key: string, defaultValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    section\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    defaultValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadConfig\n                        \n                    \n                \n            \n            \n                \nloadConfig(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveConfig\n                        \n                    \n                \n            \n            \n                \nsaveConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:94\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(section: string, key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    section\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://127.0.0.1:36911'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigIniParser\n\n                    \n                \n                \n                    \n                        Default value : new ConfigIniParser()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        online\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openpgp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        serverPublicKey\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * @deprecated\n */\nexport class AppConfigService {\n\n\tpublic static apiUrl: string = 'http://127.0.0.1:36911';\n\tpublic static serverPublicKey;\n\tpublic static settings: any;\n\tpublic static config: ConfigIniParser = new ConfigIniParser();\n\topenpgp: any;\n\tcrypto: any;\n\tonline: boolean = false\n\n\tconstructor(private fs: FileSystemService) {\n\n\t}\n\n\tasync fetchServerPublicKey() {\n\n\t\treturn await fetch(AppConfigService.apiUrl + '/cert')\n\t\t\t.then(response =>  response.text())\n\t\t\t.then(text => {\n\t\t\t\treturn AppConfigService.serverPublicKey = text;\n\t\t\t});\n\n\t}\n\n\n\tloadConfig(filename: string = '') {\n\t\tconsole.log(`Load Config: ${filename}`);\n\t\tif (filename === '') {\n\t\t\treturn false;\n\t\t}\n\t\tAppConfigService.apiUrl = AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911');\n\n\t\treturn this.fs.readFile(filename).then((data) => {\n\t\t\tAppConfigService.config.parse(data);\n\t\t})\n\n\t}\n\n\tasync makeDefault() {\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'true');\n\n\t\t\tp.addSection('lethean-server');\n\t\t\tp.set('lethean-server', 'api_url', 'http://127.0.0.1:36911');\n\n\t\t\tawait this.fs.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {string} section\n\t * @param {string} key\n\t * @param {string} defaultValue\n\t * @returns {any}\n\t */\n\tgetConfig(section: string, key: string, defaultValue: any = '') {\n\t\treturn AppConfigService.config.get(section, key, defaultValue);\n\t}\n\n\t/**\n\t *\n\t * @param {string} section\n\t * @param {string} key\n\t * @param {string} value\n\t */\n\tsetConfig(section: string, key: string, value: string) {\n\t\tAppConfigService.config.set(section, key, value);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tsaveConfig() {\n\t\treturn this.fs.writeFile('conf/app.ini', AppConfigService.config.stringify());\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\nHeaderInterceptor\n\nHeaderInterceptor\n\nAppModule -->\n\nHeaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HeaderInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConsoleModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {DataModule} from '@data/data.module';\nimport {StatusModule} from '@module/status/status.module';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FlexModule} from '@angular/flex-layout';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {IconModule, NgxUIModule} from '@swimlane/ngx-ui';\nimport {ConsoleModule} from '@module/console/console.module';\nimport {JwtModule} from '@auth0/angular-jwt';\nimport {AuthService} from '@module/auth/auth.service';\nimport {HeaderInterceptor} from '@module/auth/auth.interceptor';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n\treturn new TranslateHttpLoader(http);\n}\n\nexport function tokenGetter() {\n\treturn AuthService.token[\"access_token\"];\n}\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tCommonModule,\n\t\tBrowserModule.withServerTransition({appId: 'lthn-data-sync'}),\n\t\tBrowserAnimationsModule,\n\t\tHttpClientModule,\n\t\tTranslateModule.forRoot({\n\t\t\tdefaultLanguage: 'en',\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t}\n\t\t}),\n\t\tJwtModule.forRoot({\n\t\t\tconfig: {\n\t\t\t\ttokenGetter: tokenGetter,\n\t\t\t\tallowedDomains: [\"localhost:36911\", \"127.0.0.1:36911\"],\n\t\t\t},\n\t\t}),\n\t\tAppRoutingModule,\n\t\tDataModule,\n\t\tStatusModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatDividerModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatMenuModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tFlexModule,\n\t\tAuthModule,\n\t\tReactiveComponentModule,\n\t\tNgxUIModule,\n\t\tIconModule,\n\t\tConsoleModule\n\n\t],\n\tbootstrap: [AppComponent],\n\tproviders: [\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true }\n\t]\n})\n/**\n * Application shell/bootstrap\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BlockchainRoutingModule\n                        \n                        \n                            RootRoutingModule\n                        \n                        \n                            UserRoutingModule\n                        \n                        \n                            WalletRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootRoutingModule} from '@module/root-routing.module';\nimport {LoginComponent} from '@module/auth/login.component';\nimport {BlockchainRoutingModule} from '@module/chain/blockchain-routing.module';\nimport {WalletRoutingModule} from '@module/wallet/wallet-routing.module';\nimport {UserRoutingModule} from '@module/user/user-routing.module';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'Login - Lethean (LTHN)',\n\t\t\theading: 'Login',\n\t\t\tdescription: 'Lethean (LTHN) Login',\n\t\t\trobots: true\n\t\t}\n\t},\n\t{\n\t\tpath: \"\",\n\t\tredirectTo: 'dashboard',\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy', initialNavigation: 'enabledBlocking' }),\n\t\tBlockchainRoutingModule,\n\t\tUserRoutingModule,\n\t\t//SettingsRoutingModule,\n\t\tWalletRoutingModule,\n\t\t// Make sure Root is the last in the list, it has a catch all\n\t\tRootRoutingModule\n\t],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\n/**\n * Application routing bootstrap file, adds all routes as lazy loaded modules\n */\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chain\n                                        \n                                \n                                \n                                        \n                                            charts\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            settings\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chain:     Chain.ChainState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Chain.ChainState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charts:         Chart.ChartsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Chart.ChartsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         Logs.LogsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Logs.LogsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         Settings.SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Settings.SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User.UsersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User.UsersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         Wallet.WalletsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wallet.WalletsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ActionReducer, ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {APP_CONFIG} from '@env/environment';\nimport * as Settings from '../../modules/settings/data';\nimport * as User from '../../modules/user/data/user';\nimport {localStorageSync} from 'ngrx-store-localstorage';\nimport * as Chart from '../../modules/chart/data';\nimport * as Wallet from '../../modules/wallet/data';\nimport * as Chain from '../../modules/chain/data';\nimport * as Logs from '../logs';\n\nexport interface AppState {\n\tsettings: Settings.SettingsState;\n\tcharts: Chart.ChartsState;\n\tuser: User.UsersState;\n\tlogs: Logs.LogsState;\n\twallets: Wallet.WalletsState;\n\tchain: Chain.ChainState\n}\n\nexport const reducers: ActionReducerMap = {\n\tsettings: Settings.reducer,\n\tcharts: Chart.reducer,\n\tuser: User.reducer,\n\tlogs: Logs.reducer,\n\twallets: Wallet.reducer,\n\tchain: Chain.reducer\n};\n\nexport function localStorageSyncReducer(\n\treducer: ActionReducer\n): ActionReducer {\n\treturn localStorageSync({\n\t\tkeys: [\n\t\t\t'settings',\n\t\t\t'wallets',\n\t\t\t{\n\t\t\t\tuser: {\n\t\t\t\t\tencrypt: (state: string) => btoa(state), // placeholder\n\t\t\t\t\tdecrypt: (state: string) => atob(state) // placeholder\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\trehydrate: true,\n\t\tremoveOnUndefined: true,\n\t\t//storage:  new WebStorageService()\n\t})(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !APP_CONFIG.production\n\t? []\n\t: [localStorageSyncReducer];\n\nexport const effects = [Chart.ChartsEffects, Settings.SettingsEffects, Wallet.WalletEffects ];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/auth/route.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/route.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/route.guard.ts:35\n                \n            \n\n\n            \n                \n                    Handles logged out access\nRun during routing to check if the user is logged in or not, we do this check if\ngetAuthStatus() returns true, the username variable is set, to logout simply clear the username\nIf the user is not authenticated this function acts in one of two ways\n\nif ~/Lethean/users is empty perform first run / welcome\nif users do exsist, take to the /login page\n\nif APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\nyou may or may not have to login to develop, for now at least\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\n\t/**\n\t * Handles logged out access\n\t * Run during routing to check if the user is logged in or not, we do this check if\n\t * getAuthStatus() returns true, the username variable is set, to logout simply clear the username\n\t *\n\t * If the user is not authenticated this function acts in one of two ways\n\t *\n\t * 1) if ~/Lethean/users is empty perform first run / welcome\n\t * 2) if users do exsist, take to the /login page\n\t *\n\t * if APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\n\t * you may or may not have to login to develop, for now at least\n\t *\n\t * @param {ActivatedRouteSnapshot} route\n\t * @param {RouterStateSnapshot} state\n\t * @returns {boolean | Promise}\n\t */\n\tasync canActivate(): Promise {\n\t\t//return true\n\t\tlet isAuthenticated = this.authService.getAuthStatus();\n\n\t\tif (!isAuthenticated) {\n\n\t\t\ttry {\n\t\t\t\tisAuthenticated = await this.fileSystem.listFiles('users').then(async (dat: any) => {\n\t\t\t\t\treturn dat.length > 0 && !dat.map((file: string) => file.endsWith('.lthn')).includes(true);\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tisAuthenticated = false\n\t\t\t}\n\n\t\t}\n\n\t\tif(!isAuthenticated){\n\t\t\tawait this.router.navigate(['/login']);\n\t\t}\n\n\t\treturn isAuthenticated;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAuthModule -->\n\nTranslateModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {InputModule} from '@swimlane/ngx-ui';\n\n@NgModule({\n\tdeclarations: [LoginComponent],\n\texports: [\n\t\tLoginComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatButtonModule,\n\t\tTranslateModule,\n\t\tMatIconModule,\n\t\tInputModule,\n\t\tFormsModule\n\t]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Static\n                                token\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthStatus\n                            \n                            \n                                getId\n                            \n                            \n                                getUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthStatus\n                        \n                    \n                \n            \n            \n                \ngetAuthStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n                    User auth check is (this.user.length > 0) we only need to store how to access the data.\nPlease do not add identifiable data or anything here, data like that should live in the users encrypted\njson profiles.\nIf extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\nnot because it would just be easier to code\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(key, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:58\n                \n            \n\n\n            \n                \n                    Takes a username and password and tries to decrypt data files with a name id matching\nIt either works and that was the right password, or it does not and then it wont.\nWe are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\nso if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:104\n                \n            \n\n\n            \n                \n                    Clear the user prop by setting to a empty string, making auth checks fail.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\taccess_token: undefined,\n\t\trefresh_token: undefined\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {CryptService} from '@service/crypt.service';\nimport {AppConfigService} from '@service/app-config.service';\nimport {NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate user = '';\n\tprivate id = '';\n\tpublic static token: { access_token: string, refresh_token: string } = {\n\t\taccess_token: undefined,\n\t\trefresh_token: undefined\n\t};\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate notificationService: NotificationService\n\t) {\nthis.getAuthStatus()\n\t}\n\n\t/**\n\t * User auth check is (this.user.length > 0) we only need to store how to access the data.\n\t *\n\t * Please do not add identifiable data or anything here, data like that should live in the users encrypted\n\t * json profiles.\n\t *\n\t * If extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\n\t * not because it would just be easier to code\n\t *\n\t * @returns {boolean}\n\t */\n\tgetAuthStatus() {\n\t\tif (AuthService.token['access_token'] == undefined) {\n\t\t\tAuthService.token['access_token'] = sessionStorage.getItem('access_token')\n\t\t}\n\n\t\tif (AuthService.token['refresh_token'] == undefined) {\n\t\t\tAuthService.token['refresh_token'] = sessionStorage.getItem('refresh_token')\n\t\t}\n\t\treturn AuthService.token['access_token']?.length > 0\n\t}\n\n\t/**\n\t * Takes a username and password and tries to decrypt data files with a name id matching\n\t *\n\t * It either works and that was the right password, or it does not and then it wont.\n\t *\n\t * We are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\n\t * so if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync login(key, password) {\n\n\t\ttry {\n\n\t\t\tlet privateKey = await this.cryptService.decryptPrivateKey(key, password);\n\t\t\tif (privateKey) {\n\n\t\t\t\t//console.log(privateKey.getUserIDs())\n\t\t\t\tconst msg = await this.cryptService.encryptPublic(await this.cryptService.sign(`{\"id\":\"${privateKey.getUserIDs()[0]}\"}`, privateKey), AppConfigService.serverPublicKey)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t\treturn btoa(res.toString())\n\t\t\t\t\t});\n\n\t\t\t\treturn fetch(AppConfigService.apiUrl + '/auth/login', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tpayload: msg\n\t\t\t\t\t})\n\t\t\t\t}).then((res) => res.json())\n\t\t\t\t\t.then(async res => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t\tif (res['result'] == false) {\n\t\t\t\t\t\t\tthis.notificationService.create({type: NotificationType.html, styleType: NotificationStyleType.error, body: 'Failed to login'});\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tAuthService.token = JSON.parse(await this.cryptService.decryptPGP(atob(res['result']), privateKey))\n\n\t\t\t\t\t\t\tsessionStorage.setItem('access_token', AuthService.token['access_token']);\n\t\t\t\t\t\t\tsessionStorage.setItem('refresh_token', AuthService.token['refresh_token']);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t});\n\t\t\t}\n\t\t} catch(e){ console.log(e)}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Clear the user prop by setting to a empty string, making auth checks fail.\n\t */\n\tlogout() {\n\t\tthis.user = '';\n\t}\n\n\tgetId(){\n\t\treturn this.id;\n\t}\n\n\tgetUser(){\n\t\treturn this.user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Balance.html":{"url":"interfaces/Balance.html","title":"interface - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/balance.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            unlocked_balance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlocked_balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlocked_balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Balance {\n\tbalance: number; // - unsigned int; The total balance of the current monero-wallet-rpc in session.\n\tunlocked_balance: number; // - unsigned int; Unlocked funds are those funds that are sufficiently deep enough in the Monero blockchain to be considered safe to spend.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseChartConfigService.html":{"url":"injectables/BaseChartConfigService.html","title":"injectable - BaseChartConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseChartConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/base-chart-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOptions\n                            \n                            \n                                configureOptions\n                            \n                            \n                                setupCallbacks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: []\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class BaseChartConfigService {\n\tpublic key = '';\n\tpublic type = '';\n\tpublic data: any = {\n\t\tdatasets: []\n\t};\n\tpublic options = {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis.configureOptions();\n\t\tthis.setupCallbacks();\n\t}\n\n\tsetupCallbacks() {}\n\n\tconfigureOptions() {}\n\n\taddOptions(overrides: object) {\n\t\tthis.options = { ...this.options, ...overrides };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockDetailsComponent.html":{"url":"components/BlockDetailsComponent.html","title":"component - BlockDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/block/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain-block-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                block\n                            \n                            \n                                blockData\n                            \n                            \n                                blockID\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/block/details.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chain/components/block/details.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        block\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockHeader\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {BlockHeader} from '@module/chain/interfaces/types/blockHeader';\n\n@Component({\n\tselector: 'lthn-chain-block-details',\n\ttemplateUrl: './details.component.html'\n})\nexport class BlockDetailsComponent implements OnInit, OnDestroy {\n\n\tblockID: string;\n\tsub: Subscription;\n\tblock: BlockHeader;\n\tblockData: any;\n\t@Input() id: string = '';\n\n\n\tconstructor(private chain: BlockchainService) {\n\t}\n\n\tasync ngOnInit() {\n\n\t\tif (this.id.length > 0) {\n\t\t\tconst data = await this.chain.getBlock(this.id);\n\t\t\tthis.block = data['block_header'];\n\t\t\tthis.blockData = JSON.parse(data['json']);\n\n\t\t}\n\n\t}\n\n\n\tngOnDestroy(): void {\n\t\tthis.sub.unsubscribe();\n\t}\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                \n                    {{'app.lthn.chain.words.hash' | translate}}\n                    {{ id }}\n                \n                \n                \n                \n                    {{'app.lthn.chain.words.valid' | translate}}\n                    \n                        \n                        \n                    \n                \n                \n                    {{'app.lthn.chain.words.tx_count' | translate}}\n                    {{ block.num_txes }}\n                \n                \n                    {{'app.lthn.chain.words.miner_tx' | translate}}\n                    {{ blockData['miner_tx']['vout'][0]['target']['key'] }}\n                \n                \n                    {{'app.lthn.chain.words.height' | translate}}\n                    {{ block.height }}\n                \n                \n                    {{'app.lthn.chain.words.reward' | translate}}\n                    {{ block.reward |toCoin  }}\n                \n                \n                    {{'app.lthn.chain.words.depth' | translate}}\n                    {{ block.depth }}\n                \n                \n                    {{'app.lthn.chain.words.timestamp' | translate}}\n                    {{ block.timestamp | amFromUnix  }}\n                \n                \n                    {{'app.lthn.chain.words.difficulty' | translate}}\n                    {{ block.difficulty }}\n                \n                \n                    {{'app.lthn.chain.words.block_size' | translate}}\n                    {{ block.block_size }}\n                \n                \n                    {{'app.lthn.chain.words.version' | translate}}\n                    {{ block.major_version }}.{{ block.minor_version}}\n                \n                \n                    {{'app.lthn.chain.words.nonce' | translate}}\n                    {{ block.nonce }}\n                \n                \n                \n\n                \n            \n        \n    \n    \n        \n            \n        \n    \n    \n        \n            \n                \n                    \n                        {{label}}:{{model.value}}\n                    \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                            {{\\'app.lthn.chain.words.hash\\' | translate}}                    {{ id }}                                                                                    {{\\'app.lthn.chain.words.valid\\' | translate}}                                                                                                                                            {{\\'app.lthn.chain.words.tx_count\\' | translate}}                    {{ block.num_txes }}                                                    {{\\'app.lthn.chain.words.miner_tx\\' | translate}}                    {{ blockData[\\'miner_tx\\'][\\'vout\\'][0][\\'target\\'][\\'key\\'] }}                                                    {{\\'app.lthn.chain.words.height\\' | translate}}                    {{ block.height }}                                                    {{\\'app.lthn.chain.words.reward\\' | translate}}                    {{ block.reward |toCoin  }}                                                    {{\\'app.lthn.chain.words.depth\\' | translate}}                    {{ block.depth }}                                                    {{\\'app.lthn.chain.words.timestamp\\' | translate}}                    {{ block.timestamp | amFromUnix  }}                                                    {{\\'app.lthn.chain.words.difficulty\\' | translate}}                    {{ block.difficulty }}                                                    {{\\'app.lthn.chain.words.block_size\\' | translate}}                    {{ block.block_size }}                                                    {{\\'app.lthn.chain.words.version\\' | translate}}                    {{ block.major_version }}.{{ block.minor_version}}                                                    {{\\'app.lthn.chain.words.nonce\\' | translate}}                    {{ block.nonce }}                                                                                                                                                                                                                {{label}}:{{model.value}}                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockHeader.html":{"url":"interfaces/BlockHeader.html","title":"interface - BlockHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/interfaces/types/blockHeader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            block_size\n                                        \n                                \n                                \n                                        \n                                            depth\n                                        \n                                \n                                \n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            major_version\n                                        \n                                \n                                \n                                        \n                                            minor_version\n                                        \n                                \n                                \n                                        \n                                            nonce\n                                        \n                                \n                                \n                                        \n                                            num_txes\n                                        \n                                \n                                \n                                        \n                                            orphan_status\n                                        \n                                \n                                \n                                        \n                                            prev_hash\n                                        \n                                \n                                \n                                        \n                                            reward\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        depth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        depth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        major_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        major_version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minor_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minor_version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nonce:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num_txes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num_txes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orphan_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orphan_status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reward:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockHeader {\n\tblock_size: number;\n\tdepth: number;\n\tdifficulty: number;\n\thash: string;\n\theight: number;\n\tmajor_version: number;\n\tminor_version: number;\n\tnonce: number;\n\tnum_txes: number;\n\torphan_status: boolean;\n\tprev_hash: string;\n\treward: number;\n\ttimestamp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockLedgerComponent.html":{"url":"components/BlockLedgerComponent.html","title":"component - BlockLedgerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockLedgerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/block/ledger.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ChartService\n                \n            \n\n\n            \n                selector\n                lthn-chain-ledger\n            \n\n\n\n\n            \n                templateUrl\n                ./ledger.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allColumns\n                            \n                            \n                                blocks\n                            \n                            \n                                blockSearch\n                            \n                            \n                                chainInfo\n                            \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                editTmpl\n                            \n                            \n                                page\n                            \n                            \n                                status_daemon\n                            \n                            \n                                    Private\n                                sub\n                            \n                            \n                                table\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBlocks\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onDetailToggle\n                            \n                            \n                                openDrawer\n                            \n                            \n                                toggleExpandRow\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService, drawerService: DrawerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawerService\n                                                  \n                                                        \n                                                                    DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:98\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:67\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDetailToggle\n                        \n                    \n                \n            \n            \n                \nonDetailToggle(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDrawer\n                        \n                    \n                \n            \n            \n                \nopenDrawer(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleExpandRow\n                        \n                    \n                \n            \n            \n                \ntoggleExpandRow(row)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    row\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{prop: 'height', name: 'app.lthn.chain.words.height', default: true},\n\t\t{prop: 'difficulty', name: 'app.lthn.chain.words.difficulty', default: true},\n\t\t{prop: 'hash', name: 'app.lthn.chain.words.hash', default: true},\n\t\t{prop: 'orphan_status', name: 'app.lthn.chain.words.orphan_status', default: true},\n\t\t//{ prop: 'reward', name: 'app.lthn.chain.table.th.reward', default: true },\n\t\t{prop: 'timestamp', name: 'app.lthn.chain.words.timestamp', default: true},\n\t\t//\t{ prop: 'block_size', name: 'Block Size', default: true },\n\t\t//{ prop: 'depth', name: 'app.lthn.chain.table.th.depth', default: true },\n\t\t//{ prop: 'major_version', name: 'Block Major Version', default: true },\n\t\t//\t{ prop: 'minor_version', name: 'Block Minor Version', default: false },\n\t\t//\t{ prop: 'nonce', name: 'Block Nonce', default: false },\n\t\t\t{ prop: 'num_txes', name: 'app.lthn.chain.words.tx_count', default: true },\n\t\t//\t{ prop: 'prev_hash', name: 'Last Hash', default: true },\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockHeader[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTmpl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('editTmpl', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tsize: 25,\n\t\ttotalElements: 0,\n\t\ttotalPages: 0,\n\t\tpageNumber: 0\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        table\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('blocksTable')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:45\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {ChartService} from '@module/chart/chart.service';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {interval, Subscription} from 'rxjs';\nimport {BlockHeader} from '@module/chain/interfaces/types/blockHeader';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport {DrawerDirection, DrawerService} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-chain-ledger',\n\ttemplateUrl: './ledger.component.html',\n\tproviders: [ChartService]\n})\nexport class BlockLedgerComponent implements OnInit, OnDestroy {\n\n\tcolumns: any = [];\n\n\tpage = {\n\t\tsize: 25,\n\t\ttotalElements: 0,\n\t\ttotalPages: 0,\n\t\tpageNumber: 0\n\t};\n\n\tallColumns = [\n\t\t{prop: 'height', name: 'app.lthn.chain.words.height', default: true},\n\t\t{prop: 'difficulty', name: 'app.lthn.chain.words.difficulty', default: true},\n\t\t{prop: 'hash', name: 'app.lthn.chain.words.hash', default: true},\n\t\t{prop: 'orphan_status', name: 'app.lthn.chain.words.orphan_status', default: true},\n\t\t//{ prop: 'reward', name: 'app.lthn.chain.table.th.reward', default: true },\n\t\t{prop: 'timestamp', name: 'app.lthn.chain.words.timestamp', default: true},\n\t\t//\t{ prop: 'block_size', name: 'Block Size', default: true },\n\t\t//{ prop: 'depth', name: 'app.lthn.chain.table.th.depth', default: true },\n\t\t//{ prop: 'major_version', name: 'Block Major Version', default: true },\n\t\t//\t{ prop: 'minor_version', name: 'Block Minor Version', default: false },\n\t\t//\t{ prop: 'nonce', name: 'Block Nonce', default: false },\n\t\t\t{ prop: 'num_txes', name: 'app.lthn.chain.words.tx_count', default: true },\n\t\t//\t{ prop: 'prev_hash', name: 'Last Hash', default: true },\n\t];\n\tColumnMode = ColumnMode;\n\tblocks: BlockHeader[] ;\n\tchainInfo: ChainGetInfo;\n\t@ViewChild('blocksTable') table: any;\n\t@ViewChild('editTmpl', { static: false }) editTmpl: TemplateRef;\n\tprivate sub: Subscription[] = [];\n\n\tstatus_daemon: number = 0;\n\tblockSearch: FormControl;\n\n\tconstructor(\n\t\tprivate chain: BlockchainService,\n\t\tprivate drawerService: DrawerService) {\n\n\t\tthis.allColumns.forEach((col) => {\n\t\t\tif (col.default) {\n\n\t\t\t\tthis.columns.push(\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\n\tasync ngOnInit() {\n\t\tthis.blockSearch = new FormControl('', [Validators.required]);\n\n\t\t//this.chain.getInfo()\n\t\tthis.chainInfo = await this.chain.getInfo();\n\t\tif (this.chainInfo) {\n\t\t\t// we have chain data, and it talks to us set to amber\n\t\t\tthis.status_daemon = 1;\n\t\t\t//console.log(data)\n\t\t\t// if chain height + 4 to give 2~ blocks to be considered healthy\n\t\t\tif (this.chainInfo.height + 4 > this.chainInfo.target_height) {\n\t\t\t\tthis.status_daemon = 2;\n\t\t\t}\n\t\t\tthis.page.totalElements = this.chainInfo.height\n\t\t} else {\n\t\t\tthis.status_daemon = 0;\n\t\t}\n\t\tawait this.getBlocks()\n\n\t\tthis.sub['interval'] = interval(5000).subscribe(async () => this.chainInfo = await this.chain.getInfo());\n\n\t}\n\n\tasync getBlocks() {\n\t\tlet start_height = this.page.totalElements - this.page.pageNumber * this.page.size - 1\n\t\tlet end_height = this.page.totalElements - this.page.size - this.page.pageNumber * this.page.size\n\n\t\tthis.blocks = await this.chain.getBlocks(Math.max(0, end_height), Math.max(0, start_height));\n\t}\n\n\n\tpublic ngOnDestroy() {\n\t\tthis.sub.forEach((s) => s.unsubscribe());\n\t}\n\topenDrawer(id) {\n\t\tthis.drawerService.create({\n\t\t\tdirection: DrawerDirection.Left,\n\t\t\ttemplate: this.editTmpl,\n\t\t\tcloseOnOutsideClick: true,\n\t\t\tcontext: { id}\n\n\t\t});\n\t}\n\n\ttoggleExpandRow(row) {\n\t\tconsole.log('Toggled Expand Row!', row);\n\t\tthis.table.rowDetail.toggleExpandRow(row);\n\t}\n\n\tonDetailToggle(event) {\n\t\tconsole.log('Detail Toggled', event);\n\t}\n\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            \n            \n        \n    \n    \n\n        \n            {{ value | hashrate}}\n            {{ value | number }}\n            {{ value | hashLink }}-->\n            {{ value | hashLink }}\n            \n                                done\n                                close\n                              \n            {{ value | amFromUnix }}\n            {{ value | number }}\n            {{ value | number }}\n            {{ value  }}\n            {{ value | number }}\n            {{ value  }}\n            {{ value | number }}\n            {{ value }}\n        \n\n    \n\n    \n        \n        \n        \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                            {{ value | hashrate}}            {{ value | number }}            {{ value | hashLink }}-->            {{ value | hashLink }}                                            done                                close                                          {{ value | amFromUnix }}            {{ value | number }}            {{ value | number }}            {{ value  }}            {{ value | number }}            {{ value  }}            {{ value | number }}            {{ value }}                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockLedgerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockTransactionsComponent.html":{"url":"components/BlockTransactionsComponent.html","title":"component - BlockTransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockTransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/block/transactions.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain-block-transactions\n            \n\n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                blockData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        blockData\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chain/components/block/transactions.component.ts:10\n                            \n                        \n            \n        \n\n\n\n\n\n\n\n\n\n    \n        import {Component, Input} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-chain-block-transactions',\n\ttemplateUrl: './transactions.component.html'\n})\nexport class BlockTransactionsComponent  {\n\n\n\t@Input() public blockData: any;\n\n\n}\n\n    \n\n    \n        {{'app.lthn.chain.desc.no_transactions' | translate}}\n\n    {{'app.lthn.chain.words.miner_transaction' | translate}}\n    \n    \n        {{'words.things.type' | translate}}\n        {{'app.lthn.chain.words.hash' | translate}}\n        {{'app.lthn.chain.words.reward' | translate}}\n        {{'app.lthn.chain.words.unlock_time' | translate}}\n    \n    \n    \n    \n        Block Miner Reward\n        {{ blockData['miner_tx']['vout'][0]['target']['key'] }}\n        {{ blockData['miner_tx']['vout'][0]['amount'] | toCoin }}\n        {{ blockData['miner_tx']['unlock_time'] }}\n    \n    \n\n\n\nBlock Transactions\n\n    Included Transactions\n    \n    \n        Tx {{'app.lthn.chain.words.hash' | translate}}\n    \n    \n    \n    \n        {{ tx }}\n    \n    \n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{\\'app.lthn.chain.desc.no_transactions\\' | translate}}    {{\\'app.lthn.chain.words.miner_transaction\\' | translate}}                {{\\'words.things.type\\' | translate}}        {{\\'app.lthn.chain.words.hash\\' | translate}}        {{\\'app.lthn.chain.words.reward\\' | translate}}        {{\\'app.lthn.chain.words.unlock_time\\' | translate}}                        Block Miner Reward        {{ blockData[\\'miner_tx\\'][\\'vout\\'][0][\\'target\\'][\\'key\\'] }}        {{ blockData[\\'miner_tx\\'][\\'vout\\'][0][\\'amount\\'] | toCoin }}        {{ blockData[\\'miner_tx\\'][\\'unlock_time\\'] }}        Block Transactions    Included Transactions                Tx {{\\'app.lthn.chain.words.hash\\' | translate}}                        {{ tx }}        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockTransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainComponent.html":{"url":"components/BlockchainComponent.html","title":"component - BlockchainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/blockchain.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain\n            \n\n\n\n\n            \n                templateUrl\n                ./blockchain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                blockSearch\n                            \n                            \n                                buildType\n                            \n                            \n                                    Public\n                                chain\n                            \n                            \n                                chainInfo\n                            \n                            \n                                end_height\n                            \n                            \n                                recentTxs\n                            \n                            \n                                start_height\n                            \n                            \n                                status_daemon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/blockchain.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockHeader[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end_height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recentTxs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start_height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {BlockHeader} from '@module/chain/interfaces/types/blockHeader';\nimport {FormControl} from '@angular/forms';\nimport {BlockchainService} from '@module/chain/blockchain.service';\n\n@Component({\n\tselector: 'lthn-chain',\n\ttemplateUrl: './blockchain.component.html'\n})\nexport class BlockchainComponent {\n\n\tblocks: BlockHeader[];\n\tchainInfo: ChainGetInfo;\n\n\trecentTxs: any;\n\tbuildType: string;\n\tstatus_daemon: number = 0;\n\tblockSearch: FormControl;\n\tstart_height: number = null;\n\tend_height: number = null;\n\n\tconstructor(public chain: BlockchainService) {\n\n\n\t}\n\n\n\tasync ngOnInit() {\n\n\t}\n\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ 'app.lthn.chain.title' | translate }}\n                &nbsp;\n                     0\" style=\"font-family: monospace; font-size: 12px;\">\n                    ({{info.height | number }}/{{info.target_height | number}} = {{ (info.height/info.target_height) | percent:'1.2-3' }})\n                \n                    \n                    Synchronized\n                \n                \n                \n                -->\n                account_balance_wallet-->\n                -->\n                -->\n                cloud_download-->\n                -->\n                -->\n                cloud_upload-->\n                -->\n-->\nclose-->\n-->\n            \n        \n\n\n        \n            \n                \n                    \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'app.lthn.chain.title\\' | translate }}                                      0\" style=\"font-family: monospace; font-size: 12px;\">                    ({{info.height | number }}/{{info.target_height | number}} = {{ (info.height/info.target_height) | percent:\\'1.2-3\\' }})                                                        Synchronized                                                                -->                account_balance_wallet-->                -->                -->                cloud_download-->                -->                -->                cloud_upload-->                -->-->close-->-->                                                                                                                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainConfigComponent.html":{"url":"components/BlockchainConfigComponent.html","title":"component - BlockchainConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/config.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain-config\n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chain\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService, fs: FileSystemService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/config.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/config.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/config.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/config.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/config.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\nimport 'codemirror/mode/properties/properties.js';\n@Component({\n\tselector: 'lthn-chain-config',\n\ttemplateUrl: './config.component.html'\n})\nexport class BlockchainConfigComponent {\n\n\tpublic config = ''\n\n\tconstructor(public chain: BlockchainService, private fs: FileSystemService, private notify: NotificationService) {\n\t\tthis.load().then(() => console.log('loaded'));\n\t}\n\n\tasync save() {\n\t\tawait this.fs.writeFile('conf/letheand.conf', this.config)\n\t\tthis.notify.create({\n\t\t\ttype: NotificationType.html,\n\t\t\tstyleType: NotificationStyleType.success,\n\t\t\ttitle: 'Saved Config File'\n\t\t})\n\t}\n\n\tasync load() {\n\t\tthis.config = await this.fs.readFile('conf/letheand.conf')\n\t}\n\n}\n\n    \n\n    \n        \n    \n    {{ 'words.actions.save' | translate}}\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ \\'words.actions.save\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_BlockchainModule_imports\n\n\n\n\nBlockDetailsComponent\n\nBlockDetailsComponent\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nBlockDetailsComponent->BlockchainModule\n\n\n\n\n\nBlockLedgerComponent\n\nBlockLedgerComponent\n\nBlockchainModule -->\n\nBlockLedgerComponent->BlockchainModule\n\n\n\n\n\nBlockTransactionsComponent\n\nBlockTransactionsComponent\n\nBlockchainModule -->\n\nBlockTransactionsComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nBlockchainConfigComponent\n\nBlockchainConfigComponent\n\nBlockchainModule -->\n\nBlockchainConfigComponent->BlockchainModule\n\n\n\n\n\nBlockchainStatsComponent\n\nBlockchainStatsComponent\n\nBlockchainModule -->\n\nBlockchainStatsComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent \n\nBlockchainComponent \n\nBlockchainComponent  -->\n\nBlockchainModule->BlockchainComponent \n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nBlockchainModule -->\n\nConsoleModule->BlockchainModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockDetailsComponent\n                        \n                        \n                            BlockLedgerComponent\n                        \n                        \n                            BlockTransactionsComponent\n                        \n                        \n                            BlockchainComponent\n                        \n                        \n                            BlockchainConfigComponent\n                        \n                        \n                            BlockchainStatsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChartModule\n                        \n                        \n                            ConsoleModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockchainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BlockchainComponent} from 'src/app/modules/chain/blockchain.component';\nimport {ChartModule} from '@module/chart/chart.module';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {HashRatePipe} from '@pipe/crypto/hashrate.pipe';\nimport {MomentModule} from 'ngx-moment';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {RouterModule} from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ButtonModule, CodeEditorModule, IconModule, JSONTreeModule, SectionModule, TabsModule, ToolbarModule, TreeModule} from '@swimlane/ngx-ui';\nimport {BlockDetailsComponent} from '@module/chain/components/block/details.component';\nimport {BlockLedgerComponent} from '@module/chain/components/block/ledger.component';\nimport {BlockchainStatsComponent} from '@module/chain/components/stats.component';\nimport {BlockchainConfigComponent} from '@module/chain/components/config.component';\nimport {BlockTransactionsComponent} from '@module/chain/components/block/transactions.component';\nimport {ConsoleModule} from '@module/console/console.module';\n\n@NgModule({\n\tdeclarations: [BlockchainComponent, BlockDetailsComponent, BlockLedgerComponent, BlockchainStatsComponent, BlockchainConfigComponent, BlockTransactionsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tChartModule,\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tTranslateModule,\n\t\tNgxDatatableModule,\n\t\tReactiveComponentModule,\n\t\tPipesModule,\n\t\tMatIconModule,\n\t\tMatToolbarModule,\n\t\tMatTooltipModule,\n\t\tMatMenuModule,\n\t\tMomentModule,\n\t\tMatProgressBarModule,\n\t\tRouterModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tReactiveFormsModule,\n\t\tSectionModule,\n\t\tToolbarModule,\n\t\tTabsModule,\n\t\tCodeEditorModule,\n\t\tFormsModule,\n\t\tButtonModule,\n\t\tTreeModule,\n\t\tJSONTreeModule,\n\t\tIconModule,\n\t\tConsoleModule\n\t],\n\texports: [BlockchainComponent],\n\tproviders: [HashRatePipe]\n})\nexport class BlockchainModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainRoutingModule.html":{"url":"modules/BlockchainRoutingModule.html","title":"module - BlockchainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chain/blockchain-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BlockchainComponent} from '@module/chain/blockchain.component';\nimport {BlockDetailsComponent} from \"@module/chain/components/block/details.component\";\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'chain/block/:id',\n\t\tcomponent: BlockDetailsComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'chain',\n\t\tcomponent: BlockchainComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t}\n\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class BlockchainRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chainInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chainRpc\n                            \n                            \n                                downloadDaemons\n                            \n                            \n                                exportChain\n                            \n                            \n                                    Async\n                                getBlock\n                            \n                            \n                                    Async\n                                getBlocks\n                            \n                            \n                                    Async\n                                getInfo\n                            \n                            \n                                    Async\n                                getTransactions\n                            \n                            \n                                importChain\n                            \n                            \n                                startDaemon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/blockchain.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chainRpc\n                        \n                    \n                \n            \n            \n                \nchainRpc(method: string, params: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'json_rpc'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadDaemons\n                        \n                    \n                \n            \n            \n                \ndownloadDaemons()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportChain\n                        \n                    \n                \n            \n            \n                \nexportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:50\n                \n            \n\n\n            \n                \n                    Export chain to a raw format\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBlock\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlock(block_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    block_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(start_height: number, end_height: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start_height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end_height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactions(txsHashes: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    txsHashes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importChain\n                        \n                    \n                \n            \n            \n                \nimportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:71\n                \n            \n\n\n            \n                \n                    Import raw chain data file\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDaemon\n                        \n                    \n                \n            \n            \n                \nstartDaemon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {AuthService} from '@module/auth/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BlockchainService {\n    public chainInfo: any;\n    constructor(private http: HttpClient) {\n    }\n\n    startDaemon() {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            }),\n            responseType: 'text' as 'json',\n        };\n        return this.http\n            .post(\n                `http://127.0.0.1:36911/daemon/chain/start`,\n                {\"configFile\":\"letheand.conf\"},\n                options\n            )\n            .toPromise()\n            .then((dat) => console.log(dat));\n    }\n\n    downloadDaemons() {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            }),\n            responseType: 'text' as 'json',\n        };\n        return this.http\n            .post(\n                `http://127.0.0.1:36911/update/cli`,{},\n                options\n            ) .toPromise()\n            .then((dat) => console.log(dat));\n    }\n\n    /**\n     * Export chain to a raw format\n     *\n     */\n    exportChain() {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            }),\n            responseType: 'text' as 'json'\n        };\n        return this.http\n            .post(\n                `http://127.0.0.1:36911/daemon/chain/export`,\n                {},\n                options\n            )\n            .toPromise()\n            .then((dat) => console.log(dat));\n    }\n\n    /**\n     * Import raw chain data file\n     *\n     */\n    importChain() {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/json'\n            }),\n            responseType: 'text' as 'json'\n        };\n        return this.http\n            .post(\n                `http://127.0.0.1:36911/daemon/chain/import`,\n                {},\n                options\n            )\n            .toPromise()\n            .then((dat) => console.log(dat));\n    }\n\n    chainRpc(method: string, params: any = '', url: string = 'json_rpc') {\n        return fetch(`http://127.0.0.1:36911/daemon/chain/${url}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':  AuthService.token.access_token\n            },\n            body: JSON.stringify(rpcBody(method)(params))\n        })\n            .then(res => res.json())\n            .then(res => res.result)\n    }\n\n    async getInfo() {\n        return this.chainInfo = await this.chainRpc('get_info')\n    }\n\n    async getTransactions(txsHashes: string[]) {\n\n        return await this.chainRpc('gettransactions', {txs_hashes: txsHashes});\n    }\n\n\n    async getBlock(block_id: string) {\n\n        return await this.chainRpc('getblock', {hash: block_id})\n    }\n\n    async getBlocks(start_height: number, end_height: number) {\n\n        return await this.chainRpc('getblockheadersrange', {\n            start_height: start_height,\n            end_height: end_height\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainStatsComponent.html":{"url":"components/BlockchainStatsComponent.html","title":"component - BlockchainStatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainStatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/stats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain-stats\n            \n\n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chain\n                            \n                            \n                                chainInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/stats.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/stats.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/stats.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {BlockchainService} from '@module/chain/blockchain.service';\n\n@Component({\n\tselector: 'lthn-chain-stats',\n\ttemplateUrl: './stats.component.html'\n})\nexport class BlockchainStatsComponent {\n\n\n\tchainInfo: ChainGetInfo;\n\n\tconstructor(public chain: BlockchainService) {}\n\n}\n\n    \n\n    \n        \n    \n    \n        {{ 'app.lthn.chain.words.chain_stat' | translate}}\n        {{ 'app.lthn.chain.words.chain_stat_value' | translate}}\n    \n    \n    \n    \n        {{ 'app.lthn.chain.words.status' | translate}}\n        {{ info.status }}\n    \n    \n        {{ 'app.lthn.chain.words.height' | translate}}\n        {{ info.height | number }}\n    \n    \n        {{ 'app.lthn.chain.words.start_time' | translate}}\n        {{info.start_time * 1000 | amTimeAgo }}\n    \n    \n        {{ 'app.lthn.chain.words.target_height' | translate}}\n        {{info.target_height }}\n    \n    \n        {{ 'app.lthn.chain.words.top_height' | translate}}\n        \n    \n    \n        {{ 'app.lthn.chain.words.white_peerlist_size' | translate}}\n        {{info.white_peerlist_size }}\n    \n    \n        {{ 'app.lthn.chain.words.grey_peerlist_size' | translate}}\n        {{info.grey_peerlist_size }}\n    \n    \n        {{ 'app.lthn.chain.words.difficulty' | translate}}\n        {{info.difficulty | hashrate }}\n    \n    \n        {{ 'app.lthn.chain.words.cumulative_difficulty' | translate}}\n        {{info.cumulative_difficulty | hashrate }}\n    \n    \n        {{ 'app.lthn.chain.words.incoming_connections_count' | translate}}\n        {{info.incoming_connections_count }}\n    \n    \n        {{ 'app.lthn.chain.words.tx_count' | translate}}\n        {{info.tx_count }}\n    \n    \n        {{ 'app.lthn.chain.words.tx_pool_size' | translate}}\n        {{info.tx_pool_size }}\n    \n    \n        {{ 'app.lthn.chain.words.testnet' | translate}}\n        {{info.testnet }}\n    \n    \n        {{ 'app.lthn.chain.words.outgoing_connections_count' | translate}}\n        {{info.outgoing_connections_count }}\n    \n    \n        {{ 'app.lthn.chain.words.target' | translate}}\n        {{info.target }}\n    \n    \n        {{ 'app.lthn.chain.words.alt_blocks_count' | translate}}\n        {{info.alt_blocks_count }}\n    \n    \n        {{ 'app.lthn.chain.words.block_size_limit' | translate}}\n        {{info.block_size_limit }}\n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ \\'app.lthn.chain.words.chain_stat\\' | translate}}        {{ \\'app.lthn.chain.words.chain_stat_value\\' | translate}}                        {{ \\'app.lthn.chain.words.status\\' | translate}}        {{ info.status }}                {{ \\'app.lthn.chain.words.height\\' | translate}}        {{ info.height | number }}                {{ \\'app.lthn.chain.words.start_time\\' | translate}}        {{info.start_time * 1000 | amTimeAgo }}                {{ \\'app.lthn.chain.words.target_height\\' | translate}}        {{info.target_height }}                {{ \\'app.lthn.chain.words.top_height\\' | translate}}                        {{ \\'app.lthn.chain.words.white_peerlist_size\\' | translate}}        {{info.white_peerlist_size }}                {{ \\'app.lthn.chain.words.grey_peerlist_size\\' | translate}}        {{info.grey_peerlist_size }}                {{ \\'app.lthn.chain.words.difficulty\\' | translate}}        {{info.difficulty | hashrate }}                {{ \\'app.lthn.chain.words.cumulative_difficulty\\' | translate}}        {{info.cumulative_difficulty | hashrate }}                {{ \\'app.lthn.chain.words.incoming_connections_count\\' | translate}}        {{info.incoming_connections_count }}                {{ \\'app.lthn.chain.words.tx_count\\' | translate}}        {{info.tx_count }}                {{ \\'app.lthn.chain.words.tx_pool_size\\' | translate}}        {{info.tx_pool_size }}                {{ \\'app.lthn.chain.words.testnet\\' | translate}}        {{info.testnet }}                {{ \\'app.lthn.chain.words.outgoing_connections_count\\' | translate}}        {{info.outgoing_connections_count }}                {{ \\'app.lthn.chain.words.target\\' | translate}}        {{info.target }}                {{ \\'app.lthn.chain.words.alt_blocks_count\\' | translate}}        {{info.alt_blocks_count }}                {{ \\'app.lthn.chain.words.block_size_limit\\' | translate}}        {{info.block_size_limit }}        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainStatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BootstateComponent.html":{"url":"components/BootstateComponent.html","title":"component - BootstateComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BootstateComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/bootstate/bootstate.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-bootstate\n            \n\n            \n                styleUrls\n                ./bootstate.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bootstate.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                authNeeded\n                            \n                            \n                                downloaded\n                            \n                            \n                                downloadNeeded\n                            \n                            \n                                index\n                            \n                            \n                                position\n                            \n                            \n                                readonly\n                            \n                            \n                                    Readonly\n                                StepperPosition\n                            \n                            \n                                    Readonly\n                                steps\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkDownloaded\n                            \n                            \n                                    Async\n                                checkDownloads\n                            \n                            \n                                    Async\n                                checkFolderStructure\n                            \n                            \n                                    Async\n                                checkServerAlive\n                            \n                            \n                                next\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: AppConfigService, fs: FileSystemService, chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkDownloaded\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDownloaded(that: BootstateComponent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/bootstate/bootstate.component.ts:146\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    that\n                                    \n                                                BootstateComponent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkDownloads\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkDownloads()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/bootstate/bootstate.component.ts:118\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkFolderStructure\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkFolderStructure()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/bootstate/bootstate.component.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkServerAlive\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkServerAlive()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/bootstate/bootstate.component.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next\n                        \n                    \n                \n            \n            \n                \nnext()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/bootstate/bootstate.component.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/bootstate/bootstate.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        authNeeded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadNeeded\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        position\n                        \n                    \n                \n            \n                \n                    \n                        Default value : StepperPosition.Top\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        readonly\n                        \n                    \n                \n            \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        StepperPosition\n                        \n                    \n                \n            \n                \n                    \n                        Default value : StepperPosition\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        steps\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : [\n    { title: 'app.boot.server-check', icon: 'ngx-icon ngx-server' },\n    { title: 'app.boot.folder-check', icon: 'ngx-icon ngx-folder' },\n    { title: 'app.boot.download-check', icon: 'ngx-icon ngx-cloud-download' },\n    { title: 'app.boot.start-runtime', icon: 'ngx-icon ngx-workstation' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/bootstate/bootstate.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { StepperPosition } from '@swimlane/ngx-ui';\nimport {AppConfigService} from '@service/app-config.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {interval, Subscription} from 'rxjs';\n@Component({\n  selector: 'lthn-app-bootstate',\n  templateUrl: './bootstate.component.html',\n  styleUrls: ['./bootstate.component.scss']\n})\nexport class BootstateComponent implements OnInit {\n\n  readonly StepperPosition = StepperPosition;\n  readonly steps: Array = [\n    { title: 'app.boot.server-check', icon: 'ngx-icon ngx-server' },\n    { title: 'app.boot.folder-check', icon: 'ngx-icon ngx-folder' },\n    { title: 'app.boot.download-check', icon: 'ngx-icon ngx-cloud-download' },\n    { title: 'app.boot.start-runtime', icon: 'ngx-icon ngx-workstation' }\n  ];\n  index = 0;\n  readonly = true;\n  position = StepperPosition.Top;\n\n  authNeeded = false;\n  downloadNeeded = false;\n  downloaded: Subscription;\n\n  constructor(private app: AppConfigService, private fs: FileSystemService, private chain: BlockchainService) { }\n\n  async ngOnInit() {\n\n    if(await this.checkServerAlive()){\n      this.next()\n    }else{\n      return;\n    }\n    if(await this.checkFolderStructure()){\n      this.next()\n    }else{\n      return\n    }\n\n    this.downloaded = interval(2000).subscribe(\n        () => {\n          if(this.checkDownloaded(this)){\n            this.next()\n            this.downloaded.unsubscribe()\n\n          }\n        }\n    );\n\n    if(await this.checkDownloads()){\n      this.next()\n    }else{\n      return\n    }\n\n    try {\n\t\t\tawait this.app.fetchServerPublicKey()\n\n\t\t\tawait this.app.loadConfig('conf/app.ini')\n\n\t\t\tif(this.app.getConfig('daemon', 'start_on_boot', true)){\n\t\t\t\tawait this.chain.startDaemon();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.log(e)\n\t\t}\n\n    this.app.online = true\n  }\n\n  next() {\n    if (this.index  console.log('daemons downloaded'));\n        return false\n      }\n\n\n    }catch (e) {\n      if ('HttpErrorResponse' === e.name) {\n        if (e.status === 401) {\n          this.authNeeded = true\n\n        }\n      }\n      return false;\n    }\n    return true;\n\n  }\n\n  async checkDownloaded(that: BootstateComponent) {\n\n   return await that.fs.listFiles('cli') > 3\n\n  }\n}\n\n\n    \n\n    \n        \n    \n        \n            \n                Lethean Server failed to start, unable to recover this installation. Please open a support ticket on https://github.com/letheanVPN/desktop/issues/new\n                Checking installation files\n                    This server is auth protected. please login\n                \n                \n                \n                Checking for updates.\n                    Downloading Blockchain Binaries\n                        \n                \n                Everything looks ok, starting.\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./bootstate.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Lethean Server failed to start, unable to recover this installation. Please open a support ticket on https://github.com/letheanVPN/desktop/issues/new                Checking installation files                    This server is auth protected. please login                                                                Checking for updates.                    Downloading Blockchain Binaries                                                        Everything looks ok, starting.                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BootstateComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChainGetInfo.html":{"url":"interfaces/ChainGetInfo.html","title":"interface - ChainGetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChainGetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/interfaces/props/get_info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alt_blocks_count\n                                        \n                                \n                                \n                                        \n                                            block_size_limit\n                                        \n                                \n                                \n                                        \n                                            cumulative_difficulty\n                                        \n                                \n                                \n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                        \n                                            grey_peerlist_size\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            incoming_connections_count\n                                        \n                                \n                                \n                                        \n                                            outgoing_connections_count\n                                        \n                                \n                                \n                                        \n                                            start_time\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            target_height\n                                        \n                                \n                                \n                                        \n                                            testnet\n                                        \n                                \n                                \n                                        \n                                            top_block_hash\n                                        \n                                \n                                \n                                        \n                                            tx_count\n                                        \n                                \n                                \n                                        \n                                            tx_pool_size\n                                        \n                                \n                                \n                                        \n                                            white_peerlist_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alt_blocks_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alt_blocks_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_size_limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_size_limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cumulative_difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cumulative_difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grey_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grey_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incoming_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incoming_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outgoing_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outgoing_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testnet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testnet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top_block_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top_block_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_pool_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_pool_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        white_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        white_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChainGetInfo {\n\talt_blocks_count: number;\n\tdifficulty: number;\n\tgrey_peerlist_size: number;\n\theight: number;\n\tincoming_connections_count: number;\n\toutgoing_connections_count: number;\n\tstatus: string;\n\ttarget: number;\n\ttarget_height: number;\n\ttestnet: boolean;\n\ttop_block_hash: string;\n\ttx_count: number;\n\ttx_pool_size: number;\n\twhite_peerlist_size: number;\n\tstart_time: number;\n\tcumulative_difficulty: number;\n\tblock_size_limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartConfigInterface.html":{"url":"interfaces/ChartConfigInterface.html","title":"interface - ChartConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dataMap\n                                    \n                                \n                                \n                                    \n                                        setupCallbacks\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartConfigInterface {\n\tkey: string;\n\ttype: string;\n\tdata: object;\n\toptions: object;\n\n\tsetupCallbacks(): void;\n\n\tdataMap(data: any, i: number): any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartDifficulty.html":{"url":"interfaces/ChartDifficulty.html","title":"interface - ChartDifficulty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartDifficulty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/interfaces/difficulty.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diff\n                                        \n                                \n                                \n                                        \n                                            ts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ts:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDifficultyState {\n\toptions: {\n\t\tpollingInterval: number;\n\t};\n\tdata: ChartDifficulty[];\n}\n\nexport class ChartDifficultyState implements ChartDifficultyState {\n\tdata: ChartDifficulty[] = [];\n\toptions: { pollingInterval: number } = { pollingInterval: 30000 };\n}\n\nexport interface ChartDifficulty {\n\tts: string;\n\tdiff: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChartDirective.html":{"url":"directives/ChartDirective.html","title":"directive - ChartDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ChartDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ChartService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [lthnChart]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChartElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lthnChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elmRef: ElementRef, chartService: ChartService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        ChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        lthnChart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chart/chart.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChartElement\n                        \n                    \n                \n            \n            \n                \ncreateChartElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy, PLATFORM_ID, Renderer2} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {ChartService} from './chart.service';\n\n@Directive({\n\tselector: '[lthnChart]',\n\tproviders: [ChartService]\n})\nexport class ChartDirective implements AfterViewInit, OnDestroy {\n\t@Input() lthnChart: string;\n\tprivate chartElement: any;\n\n\tconstructor(\n\t\tprivate renderer: Renderer2,\n\t\tprivate elmRef: ElementRef,\n\t\tprivate chartService: ChartService,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.createChartElement(this.lthnChart);\n\t\t\tthis.chartService.createChart(this.lthnChart);\n\t\t}\n\t}\n\n\tcreateChartElement(name: string) {\n\t\tthis.chartElement = this.renderer.createElement('canvas');\n\t\tthis.renderer.setAttribute(\n\t\t\tthis.chartElement,\n\t\t\t'id',\n\t\t\t`lthn-chart-${name}`\n\t\t);\n\t\tthis.renderer.setStyle(this.elmRef.nativeElement, 'height', '25vh');\n\t\tthis.renderer.setStyle(\n\t\t\tthis.elmRef.nativeElement,\n\t\t\t'position',\n\t\t\t'relative'\n\t\t);\n\n\t\t// position: relative; height:40vh; width:80vw\n\t\tthis.renderer.appendChild(this.elmRef.nativeElement, this.chartElement);\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.renderer.removeChild(\n\t\t\t\tthis.elmRef.nativeElement,\n\t\t\t\tthis.chartElement\n\t\t\t);\n\t\t}\n\t\tthis.chartService.destroySubscriptions(this.lthnChart);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_ChartDirective_providers\n\n\n\ncluster_ChartModule_exports\n\n\n\n\nChartDirective\n\nChartDirective\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartService\n\nChartService\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChartService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartDirective} from './chart.directive';\nimport {ChartService} from './chart.service';\n\n@NgModule({\n\tdeclarations: [ChartDirective],\n\timports: [CommonModule],\n\tproviders: [ChartService],\n\texports: [ChartDirective]\n})\nexport class ChartModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartData$\n                            \n                            \n                                    Private\n                                chartInstances\n                            \n                            \n                                    Private\n                                chartMeta\n                            \n                            \n                                    Private\n                                chartSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                destroySubscriptions\n                            \n                            \n                                setupDataSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, platformId: Object, NetworkHashrateChart: NetworkHashrateChart)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        NetworkHashrateChart\n                                                  \n                                                        \n                                                                        NetworkHashrateChart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:54\n                \n            \n\n\n            \n                \n                    Loads up a new chart instance,\napplies colour adjustments\ncreates data subscription\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroySubscriptions\n                        \n                    \n                \n            \n            \n                \ndestroySubscriptions(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDataSubscription\n                        \n                    \n                \n            \n            \n                \nsetupDataSubscription(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:98\n                \n            \n\n\n            \n                \n                    Gets the observable for the chart key from the datastore\ncreates the data subscription, the map function is provided by the\nchart config service as a function dataMap(data)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                        \n                    \n\n            \n                \n                    holds all the data observables for all charts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:19\n                        \n                    \n\n            \n                \n                    holds the chart.js instances\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:26\n                        \n                    \n\n            \n                \n                    holds the configurations for each chart type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {Chart, registerables} from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport {select, Store} from '@ngrx/store';\nimport colorLib from '@kurkle/color';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\nimport {selectChartData} from './data';\nimport {NetworkHashrateChart} from './charts/network-hashrate.chart';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ChartService {\n\t/**\n\t * holds the chart.js instances\n\t *\n\t * @private\n\t */\n\tprivate chartInstances: object = {};\n\tprivate chartSubscriptions: object = {};\n\t/**\n\t * holds the configurations for each chart type\n\t *\n\t * @private\n\t */\n\tprivate chartMeta = {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t};\n\t/**\n\t * holds all the data observables for all charts\n\t *\n\t * @private\n\t */\n\tprivate chartData$: object = {};\n\n\tconstructor(\n\t\tprivate store: Store,\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\t//@TODO try and find a better way than get DI to give us configs, so they can themselves use services\n\t\tprivate NetworkHashrateChart: NetworkHashrateChart\n\t) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tChart.register(...registerables);\n\t\t}\n\t}\n\n\t/**\n\t * Loads up a new chart instance,\n\t * applies colour adjustments\n\t * creates data subscription\n\t *\n\t * @param name\n\t */\n\tcreateChart(name: string) {\n\t\tconst vm = this;\n\t\tif (!vm.chartMeta[name]) {\n\t\t\tthrow new Error(`Chart Not Defined: ${name}`);\n\t\t}\n\n\t\tvm.chartMeta[name].data.datasets.map((dataset, i) => {\n\t\t\tdataset.backgroundColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t)\n\t\t\t\t.alpha(0.2)\n\t\t\t\t.rgbString();\n\t\t\tdataset.borderColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t).rgbString();\n\t\t\t// if we have more than one data point, change label colors to match data\n\t\t\tif (vm.chartMeta[name].data.datasets.length > 1) {\n\t\t\t\tif (\n\t\t\t\t\tvm.chartMeta[name].options.scales[dataset.yAxisID]\n\t\t\t\t\t\t.position === 'right'\n\t\t\t\t) {\n\t\t\t\t\tvm.chartMeta[name].options.scales[\n\t\t\t\t\t\tdataset.yAxisID\n\t\t\t\t\t\t].ticks.color = dataset.borderColor;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvm.chartInstances[name] = new Chart(`lthn-chart-${name}`, {\n\t\t\ttype: vm.chartMeta[name].type,\n\t\t\tdata: vm.chartMeta[name].data,\n\t\t\toptions: vm.chartMeta[name].options\n\t\t});\n\n\t\tvm.setupDataSubscription(name);\n\t}\n\n\t/**\n\t * Gets the observable for the chart key from the datastore\n\t * creates the data subscription, the map function is provided by the\n\t * chart config service as a function dataMap(data)\n\t *\n\t * @param name\n\t */\n\tsetupDataSubscription(name: string) {\n\t\t//let vm = this\n\t\tthis.chartData$[name] = this.store.pipe(\n\t\t\tselect(selectChartData(this.chartMeta[name].key))\n\t\t);\n\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStartAction);\n\n\t\tthis.chartSubscriptions[name] = this.chartData$[name].subscribe(\n\t\t\t(response) => {\n\t\t\t\tif (response != undefined) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tthis.chartInstances[name].data.datasets.map((item, i) => {\n\t\t\t\t\t\tthis.chartInstances[name].data.datasets[i].data =\n\t\t\t\t\t\t\tthis.chartMeta[name].dataMap(response, i);\n\t\t\t\t\t});\n\t\t\t\t\tthis.chartInstances[name].update();\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.destroySubscriptions(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroySubscriptions(name: string): void {\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStopAction);\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.chartSubscriptions[name].unsubscribe();\n\t\t\tthis.chartInstances[name].destroy();\n\t\t\tthis.chartInstances[name] = void 0;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartsEffects.html":{"url":"injectables/ChartsEffects.html","title":"injectable - ChartsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChartNetworkDifficultyStartPolling$\n                            \n                            \n                                ChartNetworkDifficultyStopPolling$\n                            \n                            \n                                LoadRequestedChartDifficulty$\n                            \n                            \n                                    Private\n                                    Static\n                                pollingUntil$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store$: Store>, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/data/effects.ts:125\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                    Store>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStartPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStopPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRequestedChartDifficulty$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\t//@ts-ignore\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pollingUntil$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tChartNetworkDifficulty$: new Subject()\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport * as ChartsActions from './actions';\nimport {of, Subject, timer} from 'rxjs';\nimport {select, State, Store} from '@ngrx/store';\nimport {HttpClient} from '@angular/common/http';\nimport {debug, RxJsLoggingLevel} from '@data/debug.rxjs';\nimport {ChartDifficulty} from './interfaces/difficulty.state';\nimport {selectChartOptions} from './selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\tprivate static pollingUntil$ = {\n\t\tChartNetworkDifficulty$: new Subject()\n\t};\n\t// LoadRequestedChartDifficulty$ = createEffect(() =>\n\t//     this.actions$.pipe(\n\t//         ofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t//         switchMap(() =>\n\t//             this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`)\n\t//                 .pipe(\n\t//                     map(\n\t//                         (networkDifficulty) => ChartsActions.chartNetworkDifficultyLoadSuccess({\n\t//                                 networkDifficulty,\n\t//                             }\n\t//                         ),\n\t//                         catchError((error) => {\n\t//                                 console.error(error);\n\t//                                 return of(ChartsActions.chartNetworkDifficultyLoadFailure({error}));\n\t//                             }\n\t//                         )\n\t//                     )\n\t//                 )\n\t//         )\n\t//     )\n\t// );\n\n\tLoadRequestedChartDifficulty$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\t//@ts-ignore\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tChartNetworkDifficultyStartPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t);\n\tChartNetworkDifficultyStopPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate store$: Store>,\n\t\tprivate http: HttpClient\n\t) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartsState.html":{"url":"interfaces/ChartsState.html","title":"interface - ChartsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            networkDifficulty\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        networkDifficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkDifficulty:         ChartDifficultyState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartDifficultyState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createReducer, on} from '@ngrx/store';\nimport * as ChartsActions from './actions';\nimport {ChartDifficultyState} from './interfaces/difficulty.state';\n\n// export const initialState = PoolStatsState;\nexport const initialState: ChartsState = {\n\tnetworkDifficulty: new ChartDifficultyState()\n};\n\nconst chartDifficultyReducer = createReducer(\n\tinitialState,\n\ton(\n\t\tChartsActions.chartNetworkDifficultyLoadSuccess,\n\t\t(state: any, {networkDifficulty}) => ({\n\t\t\t...state,\n\t\t\tnetworkDifficulty: {\n\t\t\t\t...state.networkDifficulty,\n\t\t\t\tdata: networkDifficulty\n\t\t\t}\n\t\t})\n\t),\n\ton(ChartsActions.chartNetworkDifficultyLoadFailure, (state) => ({\n\t\t...state,\n\t\terror: true\n\t}))\n);\n\nexport function reducer(state, action) {\n\treturn chartDifficultyReducer(state, action);\n}\n\nexport interface ChartsState {\n\tnetworkDifficulty?: ChartDifficultyState;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/console/console.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-console\n            \n\n            \n                styleUrls\n                ./console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./console.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                command\n                            \n                            \n                                terminal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStream\n                            \n                            \n                                getSub\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ws: WebsocketService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/console/console.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        attach\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'letheand'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/console/console.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStream\n                        \n                    \n                \n            \n            \n                \nchangeStream(channel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSub\n                        \n                    \n                \n            \n            \n                \ngetSub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:91\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/console/console.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        terminal\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgTerminal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('term', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/console/console.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {NgTerminal} from 'ng-terminal';\nimport {WebsocketService} from '@service/websocket.service';\n\n@Component({\n\tselector: 'lthn-console',\n\ttemplateUrl: './console.component.html',\n\tstyleUrls: ['./console.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n\n\n})\nexport class ConsoleComponent implements OnInit, AfterViewInit, OnDestroy {\n\t@ViewChild('term', { static: true }) terminal: NgTerminal;\n\n\t@Input() attach: string  = 'letheand';\n\tprivate command: string[] = []\n\n\tconstructor(private ws: WebsocketService, private ref: ChangeDetectorRef) {\n\t\tthis.ref.detach()\n\t\tsetInterval(() => {\n\t\t\tthis.ref.detectChanges();\n\t\t}, 1000);\n\n\t}\n\n\tngOnInit(): void {\n\t\tlet that = this;\n\n\t\tthis.ref.detectChanges();\n\t\tthis.ws.connect().subscribe((data) => {\n\t\t\tif(this.attach === data[0]) {\n\t\t\t\tif(data[0] === 'update-cli'){\n\t\t\t\t\tthis.terminal.underlying.writeln(data[1]);\n\t\t\t\t}else{\n\t\t\t\t\tthis.terminal.underlying.writeln(atob(data[1]).trim().replace('src/cryptonote_protocol/cryptonote_protocol_handler.inl', ''));\n\t\t\t\t}\n\n\t\t\t\tthat.ref.markForCheck()\n\t\t\t}\n\n\t\t})\n\n\t\t\tthis.changeStream(`daemon:${this.attach}`)\n    }\n\n\tgetSub(){\n\t\treturn this.ws.connect();\n\t}\n\n\tchangeStream(channel:string){\n\t\tthis.ws.sendMessage(channel)\n\t\tthis.ref.markForCheck()\n\t}\n\n\tngAfterViewInit() {\n\t\tconst that = this;\n\n\t\tif(this.terminal.keyEventInput) {\n\n\t\t\tthis.terminal.keyEventInput.subscribe((e) => {\n\t\t\t\t//console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n\n\t\t\t\tconst ev = e.domEvent;\n\t\t\t\tconst printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n\t\t\t\tif (ev.keyCode === 13) {\n\n\t\t\t\t\t//console.log(`cmd:letheand:${this.command.join('')}`)\n\t\t\t\t\tthat.ws.sendMessage(`cmd:${this.attach}:${this.command.join('')}`)\n\t\t\t\t\tthis.command = []\n\t\t\t\t\tthis.terminal.underlying.writeln(\"\\r\\n\");\n\t\t\t\t\tthis.ref.detectChanges();\n\t\t\t\t} else if (ev.keyCode === 8) {\n\t\t\t\t\t this.command.pop()\n\t\t\t\t\tif (this.terminal.underlying.buffer.active.cursorX > 0) {\n\t\t\t\t\t\tthis.terminal.underlying.write('\\b \\b');\n\t\t\t\t\t\tthis.ref.detectChanges();\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tthis.command.push(e.key);\n\t\t\t\t\tthis.terminal.write(e.key);\n\t\t\t\t\tthis.ref.detectChanges();\n\t\t\t\t}\n\t\t\t\t//console.log(this.command.join(\"\"))\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.ws.closeConnection()\n\t}\n}\n\n    \n\n    \n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./console.component.scss\n                \n                //.xterm-viewport {\n//\twidth: auto !important;\n//}\n//\n//.xterm-screen {\n//\twidth: auto !important;\n//\t> canvas {\n//\t\twidth: 100% !important;\n//\t}\n//}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleModule.html":{"url":"modules/ConsoleModule.html","title":"module - ConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\n\n\nConsoleModule\n\nConsoleModule\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nTerminalComponent\n\nTerminalComponent\n\nConsoleModule -->\n\nTerminalComponent->ConsoleModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsoleComponent\n                        \n                        \n                            TerminalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleComponent } from './console.component';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {NgTerminalModule} from 'ng-terminal';\nimport {FlexModule} from '@angular/flex-layout';\nimport { TerminalComponent } from 'src/app/modules/console/terminal.component';\nimport {SectionModule} from '@swimlane/ngx-ui';\n\n\n@NgModule({\n\tdeclarations: [ConsoleComponent, TerminalComponent],\n\texports: [\n\t\tConsoleComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tNgTerminalModule,\n\t\tFlexModule,\n\t\tSectionModule\n\t]\n})\nexport class ConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateWallet.html":{"url":"interfaces/CreateWallet.html","title":"interface - CreateWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptService.html":{"url":"injectables/CryptService.html","title":"injectable - CryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOpenPGP\n                            \n                            \n                                createSalt\n                            \n                            \n                                createSaltV2\n                            \n                            \n                                    Async\n                                decryptPGP\n                            \n                            \n                                    Async\n                                decryptPGPSingle\n                            \n                            \n                                    Async\n                                decryptPrivateKey\n                            \n                            \n                                    Async\n                                encryptPGPSingle\n                            \n                            \n                                    Async\n                                encryptPublic\n                            \n                            \n                                generateKey\n                            \n                            \n                                    Async\n                                readKey\n                            \n                            \n                                    Async\n                                readMessage\n                            \n                            \n                                    Async\n                                readPrivateKey\n                            \n                            \n                                sha256Salty\n                            \n                            \n                                    Async\n                                sign\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    keyMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/crypt.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOpenPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOpenPGP(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:103\n                \n            \n\n\n            \n                \n                    Creates a Armoured OpenPGP key for the username protected with the password supplied\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSalt\n                        \n                    \n                \n            \n            \n                \ncreateSalt(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:37\n                \n            \n\n\n            \n                \n                    Transforms the input string with a lite l337 conversion\nthis will always give you the same salt, im aware of the issues here\nPlease start a GitHub issue if you have a good idea for knowledge-less reproducible salts\nMaybe allow people to set a custom salter? something for later.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSaltV2\n                        \n                    \n                \n            \n            \n                \ncreateSaltV2(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:56\n                \n            \n\n\n            \n                \n                    lighter quasi-entropy salt, to test, when on on a markdown editor\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGP(message: string, privateKey: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    privateKey\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGPSingle(id: string, passphrase: string, encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:153\n                \n            \n\n\n            \n                \n                    Requires the users password, for this reason, you might want to make or interact with profiles\nthey are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPrivateKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPrivateKey(encryptionKey: string, passphrase: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encryptionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPGPSingle(id: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:124\n                \n            \n\n\n            \n                \n                    Using a Lethean user public key, encrypt the supplied data\nBigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\"quick for you\" it wont be on a Pi4 under load\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPublic\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPublic(data: any, publicKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publicKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateKey\n                        \n                    \n                \n            \n            \n                \ngenerateKey(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:88\n                \n            \n\n\n            \n                \n                    Create a salted PBKDF2 key for encryption purposes using a random word array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    readKey(encryptionKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encryptionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    readMessage(encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readPrivateKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    readPrivateKey(encryptionKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encryptionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Salty\n                        \n                    \n                \n            \n            \n                \nsha256Salty(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:76\n                \n            \n\n\n            \n                \n                    sha256 hash that uses itself converted as a reproducable salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sign\n                        \n                    \n                \n            \n            \n                \n                    \n                    sign(data: string, privateKey: PrivateKey)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    privateKey\n                                    \n                                            PrivateKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        keyMap\n                    \n                \n\n                \n                    \n                        getkeyMap()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/crypt.service.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemService} from './filesystem/file-system.service';\nimport * as openpgp from 'openpgp';\nimport * as crypto from 'crypto-js';\nimport {PrivateKey} from 'openpgp';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CryptService {\n\tconstructor(\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\tget keyMap() {\n\t\treturn {\n\t\t\t'o': '0',\n\t\t\t'l': \"1\",\n\t\t\t'e': \"3\",\n\t\t\t'a': \"4\",\n\t\t\t's': \"z\",\n\t\t\t't': \"7\",\n\t\t}\n\t}\n\n\t/**\n\t * Transforms the input string with a lite l337 conversion\n\t * this will always give you the same salt, im aware of the issues here\n\t * Please start a GitHub issue if you have a good idea for knowledge-less reproducible salts\n\t *\n\t * Maybe allow people to set a custom salter? something for later.\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSalt(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\t\treturn input\n\t\t\t.replace('o', '0')\n\t\t\t.replace(/l/gi, '1')\n\t\t\t.replace(/e/gi, '3')\n\t\t\t.replace(/a/gi, '4')\n\t\t\t.replace(/s/gi, 'z')\n\t\t\t.replace(/t/gi, '7');\n\t}\n\n\t/**\n\t * lighter quasi-entropy salt, to test, when on on a markdown editor\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSaltV2(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet i: number = input.length;\n\t\tlet salt:string[] = []\n\t\twhile (i--) {\n\t\t\tsalt.push(input[i] === this.keyMap[i] ? this.keyMap[i] : input[i]);\n\t\t}\n\n\t\treturn salt.join('');\n\t}\n\n\t/**\n\t * sha256 hash that uses itself converted as a reproducable salt\n\t *\n\t * @param input\n\t * @returns {string}\n\t */\n\tsha256Salty(input): string {\n\t\treturn crypto\n\t\t\t.SHA256(input + this.createSalt(input))\n\t\t\t.toString();\n\t}\n\n\t/**\n\t * Create a salted PBKDF2 key for encryption purposes using a random word array\n\t *\n\t * @param input\n\t * @returns {any}\n\t */\n\tgenerateKey(input) {\n\t\tconst salt = crypto.lib.WordArray.random(128 / 8);\n\t\treturn crypto.PBKDF2(input, salt, {\n\t\t\tkeySize: 256 / 32\n\t\t});\n\t}\n\n\n\t/**\n\t * Creates a Armoured OpenPGP key for the username protected with the password supplied\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync createOpenPGP(username, password) {\n\t\treturn await openpgp.generateKey({\n\t\t\ttype: 'rsa', // Type of the key, defaults to ECC\n\t\t\trsaBits: 4096,\n\t\t\tuserIDs: [{name: username}], // you can pass multiple user IDs\n\t\t\tpassphrase: password, // protects the private key\n\t\t\tformat: 'armored' // output key format, defaults to 'armored' (other options: 'binary' or 'object')\n\t\t});\n\t}\n\n\n\t/**\n\t * Using a Lethean user public key, encrypt the supplied data\n\t *\n\t * Bigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\t * \"quick for you\" it wont be on a Pi4 under load\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} data\n\t * @returns {Promise}\n\t */\n\tasync encryptPGPSingle(id: string, data: string) {\n\t\tconst encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.pub`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\tconst encrypted = await openpgp.encrypt({\n\t\t\tmessage: await openpgp.createMessage({\n\t\t\t\ttext: data\n\t\t\t}), // input as Message object\n\t\t\tencryptionKeys: await openpgp.readKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t})\n\t\t});\n\n\t\treturn encrypted;\n\t}\n\n\t/**\n\t * Requires the users password, for this reason, you might want to make or interact with profiles\n\t * they are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} passphrase\n\t * @param {string} encrypted\n\t * @returns {Promise}\n\t */\n\tasync decryptPGPSingle(id: string, passphrase: string, encrypted: string) {\n\t\t/**\n\t\t * @type string OpenPGP Armoured private key\n\t\t */\n\t\tlet encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.key`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\t// decrypt the private key\n\t\tlet privateKey = await this.decryptPrivateKey( encryptionKey, passphrase);\n\n\t\tlet message = await this.readMessage(encrypted);\n\n\t\tconst {data: decrypted, signatures} =\n\t\t\tawait openpgp.decrypt({\n\t\t\t\tmessage,\n\t\t\t\tdecryptionKeys: privateKey\n\t\t\t});\n\t\tconsole.log(signatures)\n\t\t// Leave nothing to chance\n\t\tprivateKey = null\n\t\tencryptionKey = ''\n\t\tmessage = null\n\n\t\treturn decrypted;\n\t}\n\n\tasync readMessage(encrypted: string ) {\n\t\treturn await openpgp.readMessage({\n\t\t\tarmoredMessage: encrypted\n\t\t})\n\t}\n\n\tasync readPrivateKey(encryptionKey: string){\n\t\treturn await openpgp.readPrivateKey({\n\t\t\tarmoredKey: encryptionKey\n\t\t})\n\t}\n\tasync readKey(encryptionKey: string){\n\t\treturn await openpgp.readKey({\n\t\t\tarmoredKey: encryptionKey\n\t\t})\n\t}\n\n\tasync decryptPrivateKey(encryptionKey: string, passphrase: string){\n\t\treturn await openpgp.decryptKey({\n\t\t\tprivateKey: await this.readPrivateKey( encryptionKey),\n\t\t\tpassphrase\n\t\t});\n\t}\n\n\tasync sign(data: string, privateKey: PrivateKey) {\n\t\tconst options: any = {\n\t\t\tmessage: await openpgp.createCleartextMessage({ text: data }),\n\t\t\tsigningKeys: privateKey,\n\t\t};\n\n\t\treturn await openpgp.sign(options);\n\t}\n\n\tasync encryptPublic(data: any, publicKey: string) {\n\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tmessage: await openpgp.createMessage({ text: data }),\n\t\t\t\tencryptionKeys:  await this.readKey(publicKey),\n\t\t\t};\n\n\t\t\treturn await openpgp.encrypt(options);\n\t\t}catch (e) {\n\t\t\treturn false\n\t\t}\n\n\t}\n\n\tasync decryptPGP(\n\t\tmessage: string,\n\t\tprivateKey: any\n\t): Promise {\n\n\t\tlet options: any = {\n\t\t\tmessage: await this.readMessage(message),\n\t\t\tdecryptionKeys: privateKey,\n\t\t};\n\n\t\treturn await openpgp.decrypt(options).then((result: any) => {\n\t\t\treturn result.data;\n\t\t});\n\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {effects, metaReducers, reducers} from './reducers';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {APP_CONFIG} from '@env/environment';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {EntityDataModule} from '@ngrx/data';\nimport {entityConfig} from './entity-metadata';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [\n\t\tStoreModule.forRoot(reducers, {\n\t\t\tmetaReducers\n\t\t}),\n\t\tStoreDevtoolsModule.instrument({\n\t\t\tmaxAge: 25,\n\t\t\tlogOnly: APP_CONFIG.production,\n\t\t\tactionsBlocklist: ['@ngrx/router*']\n\t\t}),\n\t\tEffectsModule.forRoot([...effects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tEntityDataModule.forRoot(entityConfig)\n\t]\n})\nexport class DataModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/destination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Destination {\n\tamount: number; // - unsigned int; Amount to send to each destination, in atomic units.\n\taddress: string; // - string; Destination public address.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                    Public\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/details.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/details.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/details.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/details.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WalletService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/details.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {WalletService} from '@module/wallet/wallet.service';\n\n@Component({\n  selector: 'lthn-wallet-details',\n  templateUrl: './details.component.html'\n})\nexport class DetailsComponent implements OnInit{\n  @Input() name?: string = '';\n  balance:any\n  constructor(public wallet: WalletService) {\n\n\n  }\n\n  public ngOnInit(): void {\n    this.wallet.getBalance()\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        Main Address\n        {{wallet.address}}\n        Balance\n        {{ wallet.balance['balance'] | toCoin }}\n        Available to spend\n        {{ wallet.balance['unlocked_balance'] | toCoin }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Main Address        {{wallet.address}}        Balance        {{ wallet.balance[\\'balance\\'] | toCoin }}        Available to spend        {{ wallet.balance[\\'unlocked_balance\\'] | toCoin }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/status/dialog/no-daemon-running.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            animal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/profile/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions} from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects-1.html":{"url":"injectables/Effects-1.html","title":"injectable - Effects-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/user/effects.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Effects {\n\tconstructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EffortPipe.html":{"url":"pipes/EffortPipe.html","title":"pipe - EffortPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EffortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/effort.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        effort\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/effort.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'effort', pure: false })\nexport class EffortPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tif (valid === false) {\n\t\t\treturn 'black';\n\t\t}\n\t\tconst mid = 100;\n\t\tlet r = 0;\n\t\tlet g = 0;\n\t\tconst b = 0;\n\t\tif (value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keepHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/html.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(content);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSystemInterface.html":{"url":"interfaces/FileSystemInterface.html","title":"interface - FileSystemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileSystemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/file-system.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        mkdir\n                                    \n                                \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        write\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(type, pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:49\n                \n            \n\n\n            \n                \n                    check if a path.. dir or filename exsists in the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:33\n                \n            \n\n\n            \n                \n                    returns a json list of folder contents\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:41\n                \n            \n\n\n            \n                \n                    make a dir, return result as a boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:8\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:16\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        write\n                        \n                    \n                \n            \n            \n                \nwrite(type, filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:25\n                \n            \n\n\n            \n                \n                    write the string value tot he request filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string value to save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileSystemInterface {\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tpath(type, filename);\n\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tread(type, filename);\n\n\t/**\n\t * write the string value tot he request filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t * @param data string value to save\n\t */\n\twrite(type, filename, data): void;\n\n\t/**\n\t * returns a json list of folder contents\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tlist(type, dirname): any;\n\n\t/**\n\t * make a dir, return result as a boolean\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tmkdir(type, dirname): void;\n\n\t/**\n\t * check if a path.. dir or filename exsists in the filesystem\n\t *\n\t * @param type\n\t * @param pathname full system path\n\t */\n\texists(type, pathname): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemService.html":{"url":"injectables/FileSystemService.html","title":"injectable - FileSystemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exists\n                            \n                            \n                                isDir\n                            \n                            \n                                isFile\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                mkDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fileSystem\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appFilesystem: FileSystemWebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appFilesystem\n                                                  \n                                                        \n                                                                        FileSystemWebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:71\n                \n            \n\n\n            \n                \n                    check if a file or directory exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDir\n                        \n                    \n                \n            \n            \n                \nisDir(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFile\n                        \n                    \n                \n            \n            \n                \nisFile(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    listFiles(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:27\n                \n            \n\n\n            \n                \n                    List files in the directory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkDir\n                        \n                    \n                \n            \n            \n                \nmkDir(dirname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:61\n                \n            \n\n\n            \n                \n                    Create a directory on the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the string value of a file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Including system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filename: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:51\n                \n            \n\n\n            \n                \n                    write a file to the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fileSystem\n                    \n                \n\n                \n                    \n                        getfileSystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filesystem/file-system.service.ts:17\n                                \n                            \n                    \n                        \n                                returns a working FS wrapper\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemWebService} from './file-system-web.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemService {\n\tpublic type: string;\n\n\tconstructor(private appFilesystem: FileSystemWebService) {\n\t}\n\n\t/**\n\t * returns a working FS wrapper\n\t * @todo add WebFileSystem API wrapper\n\t */\n\tget fileSystem() {\n\t\treturn this.appFilesystem;\n\t}\n\n\t/**\n\t * List files in the directory\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tasync listFiles(dirname) {\n\t\ttry {\n\t\t\treturn await this.fileSystem.list(dirname);\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the string value of a file\n\t *\n\t * @param filename Including system path\n\t */\n\tasync readFile(filename: string) {\n\t\treturn await this.fileSystem.read(filename);\n\t}\n\n\t/**\n\t * write a file to the filesystem\n\t *\n\t * @param filename\n\t * @param data\n\t */\n\twriteFile(filename: string, data: any) {\n\t\treturn this.fileSystem.write(filename, data);\n\t}\n\n\t/**\n\t * Create a directory on the filesystem\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tmkDir(dirname: string) {\n\t\treturn this.fileSystem.mkdir(dirname);\n\t}\n\n\t/**\n\t * check if a file or directory exists\n\t *\n\t * @param pathname\n\t * @returns\n\t */\n\texists(pathname: string) {\n\t\treturn this.fileSystem.exists(pathname);\n\t}\n\n\tisFile(pathname: string) {\n\t\treturn this.fileSystem.isFile(pathname);\n\t}\n\tisDir(pathname: string) {\n\t\treturn this.fileSystem.isDir(pathname);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemWebService.html":{"url":"injectables/FileSystemWebService.html","title":"injectable - FileSystemWebService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemWebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system-web.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exists\n                            \n                            \n                                    Public\n                                    Async\n                                isDir\n                            \n                            \n                                    Public\n                                    Async\n                                isFile\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                            \n                                    Public\n                                mkdir\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isDir\n                        \n                    \n                \n            \n            \n                \n                    \n                    isDir(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        isFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    isFile(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mkdir\n                        \n                    \n                \n            \n            \n                \n                    \n                    mkdir(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        path\n                        \n                    \n                \n            \n            \n                \n                    \n                    path(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        write\n                        \n                    \n                \n            \n            \n                \n                    \n                    write(filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://127.0.0.1:36911'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {FileSystemInterface} from '@interface/file-system.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class FileSystemWebService implements FileSystemInterface {\n\n\tpublic apiUrl: string = 'http://127.0.0.1:36911';\n\n\n\tconstructor(private http: HttpClient) {\n\t\tthis.apiUrl = this.apiUrl + '/filesystem'\n\t}\n\n\tpublic exists(pathname): boolean {\n\t\treturn pathname;\n\t}\n\n\tpublic async list(dirname) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/list`, {path: dirname}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat));\n\t}\n\n\tpublic mkdir(dirname): void {\n\t\tconsole.log(dirname)\n\t}\n\n\tpublic path(filename) {\n\t\tconsole.log(filename)\n\t}\n\n\n\tpublic async read(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/read`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => atob(dat));\n\t}\n\n\tpublic async write(filename, data) {\n\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t})\n\t\t};\n\n\t\treturn await this.http\n\t\t\t.post(\n\t\t\t\t`${this.apiUrl}/write`,\n\t\t\t\t{path: filename, data: btoa(data)},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise();\n\t}\n\n\tpublic async isFile(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/file-check`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat))\n\t\t\t.then((dat) => dat.result);\n\t}\n\n\tpublic async isDir(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/dir-check`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat))\n\t\t\t.then((dat) => dat.result);\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FromCoinPipe.html":{"url":"pipes/FromCoinPipe.html","title":"pipe - FromCoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FromCoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/fromCoin.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fromCoin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/fromCoin.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'fromCoin', pure: false })\nexport class FromCoinPipe implements PipeTransform {\n\n\n  transform (content: number):number {\n    return (content * 100000000)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAddressBookOut.html":{"url":"interfaces/GetAddressBookOut.html","title":"interface - GetAddressBookOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAddressBookOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getAddressBookOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetAddressBookOut {\n\tentries: {\n\t\taddress: string;\n\t\tdescription: string;\n\t\tindex: number;\n\t\tpayment_id: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsIn.html":{"url":"interfaces/GetBulkPaymentsIn.html","title":"interface - GetBulkPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getBulkPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            min_block_height\n                                        \n                                \n                                \n                                        \n                                            payment_ids\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        min_block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetBulkPaymentsIn {\n\tpayment_ids: string[]; // - array of: string\n\tmin_block_height: number; // - unsigned int; The block height at which to start looking for payments.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsOut.html":{"url":"interfaces/GetBulkPaymentsOut.html","title":"interface - GetBulkPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getBulkPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from 'src/app/modules/wallet/interfaces/types/payment';\n\nexport interface GetBulkPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsIn.html":{"url":"interfaces/GetPaymentsIn.html","title":"interface - GetPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetPaymentsIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsOut.html":{"url":"interfaces/GetPaymentsOut.html","title":"interface - GetPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from 'src/app/modules/wallet/interfaces/types/payment';\n\nexport interface GetPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersIn.html":{"url":"interfaces/GetTransfersIn.html","title":"interface - GetTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getTransfersIn.ts\n        \n\n\n            \n                Description\n            \n            \n                Get wallet transfers request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter_by_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers FAILED\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter_by_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter_by_height:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter TX's\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers IN\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    max height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    min height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers OUT\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers PENDING\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers POOL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GetTransfersIn {\n\t/** transfers IN */\n\tin?: boolean;\n\t/** transfers OUT */\n\tout?: boolean;\n\t/** transfers PENDING */\n\tpending?: boolean;\n\t/** transfers FAILED */\n\tfailed?: boolean;\n\t/** transfers POOL */\n\tpool?: boolean;\n\t/** Filter TX's */\n\tfilter_by_height?: boolean;\n\t/** min height */\n\tmin_height?: number;\n\t/** max height */\n\tmax_height?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersOut.html":{"url":"interfaces/GetTransfersOut.html","title":"interface - GetTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Transfer} from 'src/app/modules/wallet/interfaces/types/transfer';\nimport {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\n\nexport interface GetTransfersOut {\n\tin?: Transfer[] & Destination[]; // - boolean;\n\tout?: Transfer[]; // - boolean;\n\tpending?: Transfer[]; // - boolean;\n\tfailed?: Transfer[]; // - boolean;\n\tpool?: Transfer[]; // - boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashLinkPipe.html":{"url":"pipes/HashLinkPipe.html","title":"pipe - HashLinkPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashLinkPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashLink.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashLink\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(string, maxLength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashLink.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    maxLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        16\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: \"hashLink\", pure: false })\nexport class HashLinkPipe implements PipeTransform {\n  constructor() {}\n\n  transform(string, maxLength = 16) {\n    if (!string) return string;\n    if (maxLength \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashRatePipe.html":{"url":"pipes/HashRatePipe.html","title":"pipe - HashRatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashRatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashrate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number | string, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashrate.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'hashrate', pure: false })\nexport class HashRatePipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(content: number | string = 0, decorator?: boolean) {\n\t\tif (typeof content == 'string' || content === null) {\n\t\t\tcontent = 0;\n\t\t}\n\t\tlet i = 0;\n\t\tconst units = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z'];\n\t\twhile (content > 1000) {\n\t\t\tcontent /= 1000;\n\t\t\ti++;\n\t\t}\n\t\tif (decorator === false) {\n\t\t\treturn content.toFixed(2);\n\t\t} else {\n\t\t\treturn `${content.toFixed(2)} ${units[i]}H`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HeaderInterceptor.html":{"url":"interceptors/HeaderInterceptor.html","title":"interceptor - HeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(httpRequest: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpRequest\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@module/auth/auth.service';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\tintercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n\n\t\tif(AuthService.token.access_token) {\n\t\t\treturn next.handle( httpRequest.clone({\n\t\t\t\tsetHeaders: { 'Authorization': AuthService.token.access_token }\n\t\t\t}));\n\t\t}\n\t\treturn next.handle(httpRequest);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Height.html":{"url":"interfaces/Height.html","title":"interface - Height","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Height\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/height.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Height {\n\theight: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersIn.html":{"url":"interfaces/IncomingTransfersIn.html","title":"interface - IncomingTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/incomingTransfersIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            transfer_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_type:     \"all\" | \"available\" | \"unavailable\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"all\" | \"available\" | \"unavailable\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersIn {\n\ttransfer_type: 'all' | 'available' | 'unavailable';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersOut.html":{"url":"interfaces/IncomingTransfersOut.html","title":"interface - IncomingTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/incomingTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            global_index\n                                        \n                                \n                                \n                                        \n                                            spent\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        global_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersOut {\n\tamount: number; // - unsigned int\n\tspent: boolean; // - boolean\n\tglobal_index: number; // - unsigned int; Mostly internal use, can be ignored by most users.\n\ttx_hash: string; // - string; Several incoming transfers may share the same hash if they were in the same transaction.\n\ttx_size: number; // - unsigned int\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntegratedAddress.html":{"url":"interfaces/IntegratedAddress.html","title":"interface - IntegratedAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IntegratedAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/integratedAddress.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            integrated_address\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from 'src/app/modules/wallet/interfaces/types/address';\n\nexport interface IntegratedAddress {\n\tintegrated_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            log\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                fileName\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                inputChanged\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        inputChanged\n                        \n                    \n                \n            \n            \n                \ninputChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {Router} from '@angular/router';\nimport {NotificationService, NotificationType} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\tkey: string;\n\terror = '';\n\tfileName = '';\n\tpublic password: any;\n\n\tconstructor(private authService: AuthService, private router: Router, private notificationService: NotificationService) {\n\n\t}\n\n\tinputChanged() {\n\t\t// Reset error after inputs are changed\n\t\tthis.error = '';\n\t}\n\n\tasync submit() {\n\n\t\tif (this.key) {\n\n\t\t\t//this.authService.login(privateKey);\n\t\t\t//this.router.navigate(['/']);\n\n\t\t\t this.authService.login(this.key, this.password)\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (this.authService.getAuthStatus()) {\n\t\t\t\t\t\tthis.router.navigateByUrl('/');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.error = 'Login Failed, try again.';\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\tthis.error = 'Login Failed, try again.';\n\t\t\t\t});\n\t\t}\n\t}\n\n\tpublic ngOnInit(): void {\n\n\t}\n\n\tonFileSelected(event) {\n\n\t\tconst file: File = event.target.files[0];\n\n\t\tconst that = this;\n\t\tif (file) {\n\n\t\t\tthis.fileName = file.name;\n\n\t\t\tlet reader = new FileReader();\n\n\t\t\treader.addEventListener('load', async function (e) {\n\t\t\t\tlet text = e.target.result.toString();\n\t\t\t\ttry {\n\t\t\t\t\tthat.key = text;\n\t\t\t\t} catch (e) {\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// event fired when file reading failed\n\t\t\treader.addEventListener('error', function () {\n\t\t\t\tthat.notificationService.create({\n\t\t\t\t\ttitle: 'Error',\n\t\t\t\t\tbody: 'Could not read file',\n\t\t\t\t\ttype: NotificationType.html\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// read file as text file\n\t\t\treader.readAsText(file);\n\n\t\t}\n\t}\n}\n\n    \n\n    \n         0\">{{error}}\n\n    \n        {{fileName || \"Select private key.\"}}\n        \n        \n            attach_file\n        \n    \n    \n        \n        \n    \n    \n        Login\n    \n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .file-input {\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">{{error}}            {{fileName || \"Select private key.\"}}                            attach_file                                                Login    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/logs/logs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-logs\n            \n\n            \n                styleUrls\n                ./logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/logs/logs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/logs/logs.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-logs',\n\ttemplateUrl: './logs.component.html',\n\tstyleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./logs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogsComponent} from './logs.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'logs',\n\t\tcomponent: LogsComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [LogsComponent],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule, LogsComponent]\n})\nexport class LogsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsState.html":{"url":"interfaces/LogsState.html","title":"interface - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeIntegratedAddressIn.html":{"url":"interfaces/MakeIntegratedAddressIn.html","title":"interface - MakeIntegratedAddressIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeIntegratedAddressIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/makeIntegratedAddressIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MakeIntegratedAddressIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeUriIn.html":{"url":"interfaces/MakeUriIn.html","title":"interface - MakeUriIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeUriIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/makeUriIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipient_name\n                                        \n                                \n                                \n                                        \n                                            tx_description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipient_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from 'src/app/modules/wallet/interfaces/types/address';\n\nexport interface MakeUriIn {\n\taddress: Address;\n\tamount?: number; // (optional) - the integer amount to receive, in atomic units\n\tpayment_id?: string; // (optional) - 16 or 64 character hexadecimal payment id string\n\trecipient_name?: string; // (optional) - string name of the payment recipient\n\ttx_description: string; // (optional) - string describing the reason for the tx\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/services/ui/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalContent\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalConfig\n                    \n                \n                \n                    \n                        Type :         ModalConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/services/ui/modal/modal.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injectable, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalConfig} from '@service/ui/modal/modalConfig';\n\n@Component({\n\tselector: 'modal',\n\ttemplateUrl: './modal.component.html'\n})\n@Injectable({providedIn: 'root'})\nexport class ModalComponent implements OnInit {\n\n\t@Input() public modalConfig: ModalConfig\n\n\t@ViewChild('modal') private modalContent: TemplateRef\n\tprivate modalRef: NgbModalRef\n\n\tconstructor(private modalService: NgbModal) { }\n\n\tngOnInit(): void { }\n\n\topen(): Promise {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.modalRef = this.modalService.open(this.modalContent)\n\t\t\tthis.modalRef.result.then(resolve, resolve)\n\t\t})\n\t}\n\n\tasync close(): Promise {\n\t\tif (this.modalConfig.shouldClose === undefined || (await this.modalConfig.shouldClose())) {\n\t\t\tconst result = this.modalConfig.onClose === undefined || (await this.modalConfig.onClose())\n\t\t\tthis.modalRef.close(result)\n\t\t}\n\t}\n\n\tasync dismiss(): Promise {\n\t\tif (this.modalConfig.shouldDismiss === undefined || (await this.modalConfig.shouldDismiss())) {\n\t\t\tconst result = this.modalConfig.onDismiss === undefined || (await this.modalConfig.onDismiss())\n\t\t\tthis.modalRef.dismiss(result)\n\t\t}\n\t}\n}\n\n\n\n\n\n\n    \n\n    \n        \n    \n        {{ modalConfig.modalTitle }}\n    \n    \n        \n    \n    \n        \n            {{ modalConfig.dismissButtonLabel }}\n        \n        \n            {{ modalConfig.closeButtonLabel }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ modalConfig.modalTitle }}                                            {{ modalConfig.dismissButtonLabel }}                            {{ modalConfig.closeButtonLabel }}            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ui/modal/modalConfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closeButtonLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissButtonLabel\n                                        \n                                \n                                \n                                        \n                                            modalTitle\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        disableCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        disableDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onDismiss\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldDismiss\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableCloseButton\n                        \n                    \n                \n            \n            \n                \ndisableCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableDismissButton\n                        \n                    \n                \n            \n            \n                \ndisableDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideCloseButton\n                        \n                    \n                \n            \n            \n                \nhideCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideDismissButton\n                        \n                    \n                \n            \n            \n                \nhideDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onDismiss\n                        \n                    \n                \n            \n            \n                \nonDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldClose\n                        \n                    \n                \n            \n            \n                \nshouldClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldDismiss\n                        \n                    \n                \n            \n            \n                \nshouldDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modalTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modalTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModalConfig {\n\tmodalTitle: string;\n\tdismissButtonLabel?: string;\n\tcloseButtonLabel?: string;\n\n\tshouldClose?(): Promise | boolean;\n\n\tshouldDismiss?(): Promise | boolean;\n\n\tonClose?(): Promise | boolean;\n\n\tonDismiss?(): Promise | boolean;\n\n\tdisableCloseButton?(): boolean;\n\n\tdisableDismissButton?(): boolean;\n\n\thideCloseButton?(): boolean;\n\n\thideDismissButton?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/ui/modal/modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\n\n\n@NgModule({\n  declarations: [ModalComponent],\n  exports: [\n    ModalComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkHashrateChart.html":{"url":"injectables/NetworkHashrateChart.html","title":"injectable - NetworkHashrateChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NetworkHashrateChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/charts/network-hashrate.chart.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseChartConfigService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                pollingStartAction\n                            \n                            \n                                    Public\n                                pollingStopAction\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureOptions\n                            \n                            \n                                dataMap\n                            \n                            \n                                setupCallbacks\n                            \n                            \n                                addOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/charts/network-hashrate.chart.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:121\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'networkDifficulty'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStartAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStartPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/charts/network-hashrate.chart.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStopAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStopPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/charts/network-hashrate.chart.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'line'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as ChartsActions from '@module/chart/data/actions';\nimport {BaseChartConfigService} from '@module/chart/base-chart-config.service';\nimport {ChartConfigInterface} from '@module/chart/chart-config.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class NetworkHashrateChart\n\textends BaseChartConfigService\n\timplements ChartConfigInterface {\n\tpublic pollingStartAction =\n\t\tChartsActions.chartNetworkDifficultyStartPolling();\n\tpublic pollingStopAction =\n\t\tChartsActions.chartNetworkDifficultyStopPolling();\n\tpublic key = 'networkDifficulty';\n\tpublic type = 'line';\n\tpublic data = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconfigureOptions() {\n\t\tthis.addOptions({\n\t\t\tparsing: false,\n\t\t\tspanGaps: true,\n\t\t\tlayout: {\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\tx: {\n\t\t\t\t\ttitle: 'time',\n\t\t\t\t\ttype: 'timeseries',\n\t\t\t\t\ttime: {\n\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\tday: 'D MMM'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunit: 'day'\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsource: 'data',\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tsize: 10,\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\tbounds: 'data',\n\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\toffsetGridLines: false,\n\t\t\t\t\t\ttickMarkLength: 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\ttitle: 'hashrate',\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tcallback: null,\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro',\n\t\t\t\t\t\t\tsize: 10\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tmirror: true,\n\t\t\t\t\t\tpadding: 4\n\t\t\t\t\t},\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\ttickMarkLength: 0,\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tposition: 'nearest',\n\t\t\t\t\tmode: 'index',\n\t\t\t\t\tintersect: false,\n\t\t\t\t\tcaretSize: 4,\n\t\t\t\t\tbackgroundColor: 'e2e2e2',\n\t\t\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\tcallbacks: {}\n\t\t\t\t},\n\t\t\t\tdecimation: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\talgorithm: 'lttb',\n\t\t\t\t\tsamples: 50\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolors: ['#1c9ea3']\n\t\t});\n\t}\n\n\tsetupCallbacks() {\n\n\t\t// this.options.scales.y.ticks.callback = function (value, index, values) {\n\t\t//     return vm.hashratePipe.transform(value);\n\t\t// };\n\t\t//\n\t\t// this.options.plugins.tooltip.callbacks = {\n\t\t//     label: context => `Hashrate: ${vm.hashratePipe.transform(context.parsed.y)}`\n\t\t// };\n\t}\n\n\tdataMap(data) {\n\t\treturn data.map((n: any) => ({\n\t\t\tx: n.ts,\n\t\t\ty: Math.floor(n.diff / 120)\n\t\t}));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoDaemonRunningDialog.html":{"url":"components/NoDaemonRunningDialog.html","title":"component - NoDaemonRunningDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoDaemonRunningDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/dialog/no-daemon-running.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status-no-daemon\n            \n\n\n\n\n            \n                templateUrl\n                no-daemon-running.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n    \n        \n  Please Download Our App\n  \n    The blockchain functionality requires extra software, please install our app to enable this feature.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Download Our App      The blockchain functionality requires extra software, please install our app to enable this feature.  '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoDaemonRunningDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-open\n            \n\n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                    Public\n                                loadingService\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                unlockWallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, notificationService: NotificationService, alertService: AlertService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/open.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                    LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/open.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/open.component.ts:28\n                \n            \n\n\n            \n                \n                    get list of filesystem wallets\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockWallet\n                        \n                    \n                \n            \n            \n                \nunlockWallet(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/open.component.ts:37\n                \n            \n\n\n            \n                \n                    Unlock wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/open.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/open.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/open.component.ts:18\n                        \n                    \n\n            \n                \n                    Lists the wallets known\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {AlertService, LoadingService, NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-wallet-open',\n\ttemplateUrl: './open.component.html'\n})\nexport class OpenComponent implements OnInit {\n\t@Input() name?: string = '';\n\n\t/**\n\t * Lists the wallets known\n\t *\n\t * @type {string[]}\n\t */\n\tpublic wallets: string[];\n\n\n\tconstructor(private wallet: WalletService, private notificationService: NotificationService, public alertService: AlertService, public loadingService: LoadingService) {\n\n\t}\n\n\t/**\n\t * get list of filesystem wallets\n\t */\n\tasync ngOnInit() {\n\t\tthis.wallets = await this.wallet.getWalletList()\n\t}\n\n\t/**\n\t * Unlock wallet\n\t *\n\t * @returns {Promise>}\n\t */\n\tunlockWallet(name: string) {\n\t\tthis.wallet.startWalletService()\n\t\tconst subject = this.alertService.prompt({\n\t\t\ttitle: 'Wallet Password',\n\t\t\tcontent: 'Please enter the wallet password.'\n\t\t});\n\t\tsubject.subscribe({\n\t\t\tnext: (v) => {\n\t\t\t\tthis.loadingService.start()\n\t\t\t\tthis.wallet.openWallet({filename: name, password: v.data.data}).then(async () => {\n\t\t\t\t\tthis.name = name;\n\t\t\t\t\tthis.notificationService.create({\n\t\t\t\t\t\ttype: NotificationType.html,\n\t\t\t\t\t\tstyleType: NotificationStyleType.success,\n\t\t\t\t\t\ttitle: 'Loaded Wallet!',\n\t\t\t\t\t\tbody: name\n\t\t\t\t\t})\n\t\t\t\t\tthis.loadingService.complete()\n\t\t\t\t}).catch((err) => console.error(err))\n\t\t\t},\n\t\t\terror: (err) => console.log('Prompt err', err)\n\t\t});\n\n\t}\n\n\n}\n\n    \n\n    \n        \n    {{ 'app.lthn.wallet.titles.unlock-wallet' | translate }}\n\n        \n            \n            \n                {{wall}}\n                \n                    {{ 'app.lthn.wallet.button.unlock-wallet' | translate }}\n\n                \n            \n            \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'app.lthn.wallet.titles.unlock-wallet\\' | translate }}                                                {{wall}}                                    {{ \\'app.lthn.wallet.button.unlock-wallet\\' | translate }}                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenWallet.html":{"url":"interfaces/OpenWallet.html","title":"interface - OpenWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptions.html":{"url":"classes/PaginatorOptions.html","title":"class - PaginatorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PaginatorOptionsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptionsInterface.html":{"url":"classes/PaginatorOptionsInterface.html","title":"class - PaginatorOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParseUri.html":{"url":"interfaces/ParseUri.html","title":"interface - ParseUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParseUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         MakeUriIn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MakeUriIn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payment.html":{"url":"interfaces/Payment.html","title":"interface - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/payment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Payment {\n\tamount: number;\n\tblock_height: number;\n\tpayment_id: string;\n\ttx_hash: string;\n\tunlock_time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nFromCoinPipe\n\nFromCoinPipe\n\nPipesModule -->\n\nFromCoinPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nFromCoinPipe \n\nFromCoinPipe \n\nFromCoinPipe  -->\n\nPipesModule->FromCoinPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            FromCoinPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            FromCoinPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EffortPipe, EscapeHtmlPipe, HashLinkPipe, HashRatePipe, RemoveTrailingZerosPipe, ShruggiePipe, TimeAgoPipe, ToCoinPipe} from '@pipe/index';\nimport {FromCoinPipe} from '@pipe/crypto/fromCoin.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tToCoinPipe,\n\t\tFromCoinPipe,\n\t\tHashLinkPipe\n\t],\n\texports: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tToCoinPipe,\n\t\tHashLinkPipe,\n\t\tFromCoinPipe\n\t],\n\timports: [CommonModule]\n})\nexport class PipesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginDefinition.html":{"url":"interfaces/PluginDefinition.html","title":"interface - PluginDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluginDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description_short\n                                        \n                                \n                                \n                                        \n                                            git_repo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            readme_list\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description_short\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description_short:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git_repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        git_repo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readme_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readme_list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PluginStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plugins.html":{"url":"interfaces/Plugins.html","title":"interface - Plugins","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plugins\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_update_check\n                                        \n                                \n                                \n                                        \n                                            loaded_keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_update_check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_update_check:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_keys:         PluginDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginDefinition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/post/post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-post\n            \n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                posts\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatestPosts\n                            \n                            \n                                loadPost\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/post/post.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestPosts\n                        \n                    \n                \n            \n            \n                \ngetLatestPosts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPost\n                        \n                    \n                \n            \n            \n                \nloadPost(slug, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/post/post.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/modules/content/post/post.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n\tselector: 'lthn-app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit, OnDestroy {\n\tpublic posts:any;\n\tprivate sub;\n\n\tconstructor(private http: HttpClient) {}\n\n\tngOnInit(): void {\n\n\t\tthis.sub = this.getLatestPosts()\n\t\t\t.subscribe((data: any) => this.posts = data);\n\t}\n\n\n\tgetLatestPosts() {\n\t\treturn this.http.get(\"https://sparta.lt.hn/latest.json\");\n\t}\n\n\tloadPost(slug, id){\n\t\tthis.http.get(`https://sparta.lt.hn/${slug}/${id}.json`).subscribe((data: any) => {\n\t\t\tthis.posts = data\n\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.sub.unsubscribe();\n\t}\n}\n\n    \n\n    \n        \n    \n        {{post.title }}\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{post.title }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_PostModule_exports\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nPostComponent \n\nPostComponent \n\nPostComponent  -->\n\nPostModule->PostComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PostComponent} from 'src/app/modules/content/post/post.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {MatListModule} from '@angular/material/list';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n\n@NgModule({\n\tdeclarations: [PostComponent],\n\texports: [\n\t\tPostComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tPipesModule,\n\t\tMatListModule,\n\t\tReactiveComponentModule,\n\t\tMatButtonModule\n\t]\n})\nexport class PostModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostRoutingModule.html":{"url":"modules/PostRoutingModule.html","title":"module - PostRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PostRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/post/post-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'p',\n\t\tloadChildren: () => \"import('src/app/modules/content/post/post.module').then((m) => m.PostModule)\"\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class PostRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                randomAlias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/profile.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/profile.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        randomAlias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {colors, names, starWars, uniqueNamesGenerator} from 'unique-names-generator';\n\n@Component({\n\tselector: 'lthn-user-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\tpublic randomAlias: string = uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t});\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Profiles\n            \n              Profile 1\n              -->\n              \n              -->\n            \n          \n\n          \n          \n            \n              person_add\n            \n          \n          \n            engineering\n          \n        \n      \n\n\n    \n    \n    \n      \n        Profile\n        \n          \n            Name\n          \n        \n      \n      \n        Blockchain Settings\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n      \n        Wallets\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Profiles                          Profile 1              -->                            -->                                                                    person_add                                            engineering                                                  Profile                              Name                                      Blockchain Settings                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                            Wallets                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            dkey\n                                        \n                                \n                                \n                                        \n                                            ekey\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ekey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ekey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileState {\n\t// Friendly name for the profile\n\talias: string;\n\t// auto generated image from the friendly name\n\tavatar: string;\n\t// id's to attached wallets\n\twallets: any;\n\t// application prefrences etc\n\toptions: any;\n\t// Decryption Key, used to store profile data encrypted within a shared local database\n\tdkey: string;\n\t// Encryption Key, to save data\n\tekey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyIn.html":{"url":"interfaces/QueryKeyIn.html","title":"interface - QueryKeyIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/queryKeyIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyIn {\n\tkey_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyOut.html":{"url":"interfaces/QueryKeyOut.html","title":"interface - QueryKeyOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/queryKeyOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyOut {\n\tkey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RemoveTrailingZerosPipe.html":{"url":"pipes/RemoveTrailingZerosPipe.html","title":"pipe - RemoveTrailingZerosPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RemoveTrailingZerosPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/math/removeTrailingZeros.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        removeTrailingZero\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/math/removeTrailingZeros.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'removeTrailingZero', pure: true })\nexport class RemoveTrailingZerosPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value) {\n\t\tvalue = value.toString();\n\t\tif (value.indexOf('.') === -1) {\n\t\t\treturn parseInt(value);\n\t\t}\n\t\twhile (\n\t\t\t(value.slice(-1) === '0' || value.slice(-1) === '.') &&\n\t\t\tvalue.indexOf('.') !== -1\n\t\t) {\n\t\t\tvalue = value.substr(0, value.length - 1);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreComponent.html":{"url":"components/RestoreComponent.html","title":"component - RestoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/restore.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-restore\n            \n\n\n\n\n            \n                templateUrl\n                ./restore.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restoreWalletForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                restoreWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/restore.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/restore.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/restore.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWalletForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/restore.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {nameNotTakenValidator} from 'src/app/modules/wallet/validators';\n\n@Component({\n\tselector: 'lthn-wallet-restore',\n\ttemplateUrl: './restore.component.html'\n})\n\nexport class RestoreComponent implements OnInit {\n\trestoreWalletForm : FormGroup;\n\n\tconstructor(private wallet: WalletService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.restoreWalletForm = new FormGroup({\n\t\t\tfilename: new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]),\n\t\t\taddress: new FormControl(''),\n\t\t\trestore_height: new FormControl('0'),\n\t\t\tautosave_current: new FormControl(true),\n\t\t\tpassword: new FormControl(''),\n\t\t\tpassword_confirm: new FormControl(''),\n\t\t\tspendkey: new FormControl(''),\n\t\t\tviewkey: new FormControl(''),\n\t\t\tviewonly_wallet: new FormControl(false),\n\t\t});\n\t}\n\n\trestoreWallet() {\n\n\t\tthis.wallet.restoreWallet({\n\t\t\tfilename: this.restoreWalletForm.value.filename,\n\t\t\taddress: this.restoreWalletForm.value.address,\n\t\t\trestore_height: this.restoreWalletForm.value.restore_height,\n\t\t\tautosave_current: this.restoreWalletForm.value.autosave_current,\n\t\t\tpassword: this.restoreWalletForm.value.password,\n\t\t\tspendkey:\n\t\t\t(\n\t\t\t\tthis.restoreWalletForm.value.viewonly_wallet ?\n\t\t\t\t\t'' : this.restoreWalletForm.value.spendkey\n\t\t\t)\n\t\t\t,\n\t\t\tviewkey: this.restoreWalletForm.value.viewkey\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n    {{ 'app.lthn.wallet.titles.restore-seed' | translate }}\n    \n        \n            \n                \n                    {{ 'app.lthn.wallet.label.filename' | translate }}\n                    \n\t\t\t\t\tWallet already exists\n                \n                \n                    {{ 'app.lthn.wallet.label.wallet-password' | translate }}\n                    \n                \n                \n                    {{ 'app.lthn.wallet.label.wallet-password-confirm' | translate }}\n                    \n                \n            \n\n            \n                \n                    {{ 'app.lthn.wallet.label.address' | translate }}\n                    \n                \n            \n\n\n\n            \n                {{ 'app.lthn.wallet.label.spend-key' | translate }}\n                \n            \n\n            \n                {{ 'app.lthn.wallet.label.view-key' | translate }}\n                \n            \n\n            \n\n                \n                    \n                        Optional parameters\n                    \n                \n\n                \n                    {{ 'app.lthn.wallet.label.restore-height' | translate }}\n                    \n                \n\n                \n                    {{ 'app.lthn.wallet.label.autosave' | translate }}\n                \n\n                \n                    View only wallet\n                \n\n            \n\n            \n                {{ 'app.lthn.wallet.button.restore-wallet' | translate }}\n            \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'app.lthn.wallet.titles.restore-seed\\' | translate }}                                                            {{ \\'app.lthn.wallet.label.filename\\' | translate }}                    \t\t\t\t\tWallet already exists                                                    {{ \\'app.lthn.wallet.label.wallet-password\\' | translate }}                                                                        {{ \\'app.lthn.wallet.label.wallet-password-confirm\\' | translate }}                                                                                                {{ \\'app.lthn.wallet.label.address\\' | translate }}                                                                            {{ \\'app.lthn.wallet.label.spend-key\\' | translate }}                                                        {{ \\'app.lthn.wallet.label.view-key\\' | translate }}                                                                                                    Optional parameters                                                                        {{ \\'app.lthn.wallet.label.restore-height\\' | translate }}                                                                        {{ \\'app.lthn.wallet.label.autosave\\' | translate }}                                                    View only wallet                                                        {{ \\'app.lthn.wallet.button.restore-wallet\\' | translate }}                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestoreWallet.html":{"url":"interfaces/RestoreWallet.html","title":"interface - RestoreWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestoreWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/requests/restoreWallet.ts\n        \n\n\n            \n                Description\n            \n            \n                Restore Wallet request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            autosave_current\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            restore_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spendkey\n                                        \n                                \n                                \n                                        \n                                            viewkey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's primary address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autosave_current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosave_current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Defaults to true) If true, save the current wallet before generating the new wallet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's file name on the RPC server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's password.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restore_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restore_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; defaults to 0) The block height to restore the wallet from.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's private view key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RestoreWallet {\n\n\t/**\n\t * The wallet's file name on the RPC server.\n\t */\n\tfilename: string;\n\n\t/**\n\t * (Optional; defaults to 0) The block height to restore the wallet from.\n\t */\n\trestore_height?: number;\n\n\t/**\n\t * The wallet's primary address.\n\t */\n\taddress: string;\n\n\t/**\n\t * (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\t */\n\tspendkey?: string;\n\n\t/**\n\t * The wallet's private view key.\n\t */\n\tviewkey: string;\n\n\t/**\n\t * The wallet's password.\n\t */\n\tpassword: string;\n\n\t/**\n\t * (Defaults to true) If true, save the current wallet before generating the new wallet.\n\t */\n\tautosave_current?: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RootComponent.html":{"url":"components/RootComponent.html","title":"component - RootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/root.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-root\n            \n\n\n\n\n            \n                templateUrl\n                ./root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                downloadingCLI\n                            \n                            \n                                    Public\n                                hasCLI\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                renderWebView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/root.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        renderWebView\n                        \n                    \n                \n            \n            \n                \nrenderWebView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadingCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n@Component({\n\tselector: 'lthn-root',\n\ttemplateUrl: './root.component.html'\n})\nexport class RootComponent {\n\tpublic posts: any = [];\n\n\tpublic hasCLI: boolean;\n\tpublic loaded: boolean = false;\n\tpublic downloadingCLI: boolean;\n\tpublic code: any;\n\n\tconstructor() {}\n\n\trenderWebView() {\n\n\t}\n}\n\n    \n\n    \n        \n    \n            \n                Welcome to Lethean Desktop!\n                \n                    This app is using bleeding edge technologies to bring Web3 to you, it is rough around the edges and in active development\n                \n\n            \n            \n                \n                    Mining Pools\n                    \n                        \n                            \n                                HashVault\n                            \n                            \n                                FairHash\n                            \n                            \n                                FastPool\n                            \n                            \n                                Pool Pay\n                            \n                        \n                    \n                \n                \n                    Project Websites\n                    \n                        \n                            \n                                Website\n                            \n                            \n                                Community Website\n                            \n                            \n                                SSL & DNS Store\n                            \n                            \n                                GitHub\n                            \n                        \n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                Welcome to Lethean Desktop!                                    This app is using bleeding edge technologies to bring Web3 to you, it is rough around the edges and in active development                                                                            Mining Pools                                                                                                        HashVault                                                                                        FairHash                                                                                        FastPool                                                                                        Pool Pay                                                                                                                            Project Websites                                                                                                        Website                                                                                        Community Website                                                                                        SSL & DNS Store                                                                                        GitHub                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootModule\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_RootModule_declarations\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nRootModule -->\n\nBlockchainModule->RootModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nRootModule -->\n\nPostModule->RootModule\n\n\n\n\n\nSpartaModule\n\nSpartaModule\n\nRootModule -->\n\nSpartaModule->RootModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            SpartaModule\n                        \n                        \n                            TranslateModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RootComponent} from './root.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatIconModule} from '@angular/material/icon';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {MatCardModule} from '@angular/material/card';\nimport {WalletModule} from '@module/wallet/wallet.module';\nimport {BlockchainModule} from '@module/chain/blockchain.module';\nimport {PostModule} from '@module/content/post/post.module';\nimport {SpartaModule} from '@module/content/sparta/sparta.module';\nimport {CodeEditorModule} from '@swimlane/ngx-ui';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [RootComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tMatTabsModule,\n\t\tWalletModule,\n\t\tTranslateModule,\n\t\tMatDividerModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatListModule,\n\t\tReactiveComponentModule,\n\t\tPipesModule,\n\t\tNgxDatatableModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tBlockchainModule,\n\t\tPostModule,\n\t\tSpartaModule,\n\t\tCodeEditorModule,\n\t\tFormsModule\n\t]\n})\nexport class RootModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootRoutingModule.html":{"url":"modules/RootRoutingModule.html","title":"module - RootRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RootRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootRoutingModule\n\n\n\ncluster_RootRoutingModule_imports\n\n\n\n\nRootModule\n\nRootModule\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RootModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootComponent} from '@module/root.component';\nimport {RootModule} from '@module/root.module';\nimport {TerminalComponent} from '@module/console/terminal.component';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'dashboard',\n\t\tcomponent: RootComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.dashboard.title',\n\t\t\theading: 'view.dashboard.heading',\n\t\t\tdescription: 'view.dashboard.description',\n\t\t\trobots: true\n\t\t}\n\t},\n\t{\n\t\tpath: 'terminal',\n\t\tcomponent: TerminalComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.terminal.title',\n\t\t\theading: 'view.terminal.heading',\n\t\t\tdescription: 'view.terminal.description',\n\t\t\trobots: true\n\t\t}\n\t},\n\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule,\n\t\tRootModule,\n\t\tRouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class RootRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                setting_tab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        setting_tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'general'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\tsetting_tab = 'general';\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tconsole.log('SettingsComponent INIT');\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('SettingsComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                :host {\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent-1.html":{"url":"components/SettingsComponent-1.html","title":"component - SettingsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/settings.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-settings',\n\ttemplateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settings.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/data/settings.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/data/settings.effects.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {switchMap} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable()\nexport class SettingsEffects {\n\tchangeLanguage$ = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t);\n\n\tconstructor(private actions$: Actions, private translate: TranslateService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {LogsModule} from './logs/logs.module';\nimport {SettingsComponent} from './settings.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: SettingsComponent,\n\t\tdata: {\n\t\t\ttitle: 'Settings',\n\t\t\theading: 'Unified Settings Panel',\n\t\t\tdescription: 'Lethean (LTHN) Blockchain Stats',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'logs',\n\t\tloadChildren: () =>\n\t\t\t\"import('./logs/logs.module').then((m) => m.LogsModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [SettingsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tFlexModule,\n\t\tMatToolbarModule,\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatTabsModule,\n\t\tLogsModule\n\t],\n\texports: [RouterModule]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'settings',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./settings.module').then(\\\n\t\t\t\t(m) => m.SettingsModule\\\n\t\t\t)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class SettingsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settingsState.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            biggerContentFont\n                                        \n                                \n                                \n                                        \n                                            daltonism\n                                        \n                                \n                                \n                                        \n                                            darkMode\n                                        \n                                \n                                \n                                        \n                                            globalFontSize\n                                        \n                                \n                                \n                                        \n                                            hideNavigation\n                                        \n                                \n                                \n                                        \n                                            highContrastText\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            rtl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        biggerContentFont\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biggerContentFont:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daltonism\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        daltonism:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        globalFontSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        globalFontSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideNavigation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideNavigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrastText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highContrastText:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rtl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rtl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState {\n\thideNavigation: boolean;\n\t// accessibility\n\tbiggerContentFont: boolean;\n\thighContrastText: boolean;\n\tdaltonism: boolean;\n\trtl: boolean;\n\t// global font size\n\tglobalFontSize: string;\n\t// UI Language\n\tlanguage: string;\n\t// UI mode\n\tdarkMode: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShruggiePipe.html":{"url":"pipes/ShruggiePipe.html","title":"pipe - ShruggiePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShruggiePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/shruggie.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shrug\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/shruggie.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'shrug', pure: false })\nexport class ShruggiePipe implements PipeTransform {\n\ttransform(content) {\n\t\tif (content === null || content === '') {\n\t\t\treturn '¯\\\\_(ツ)_/¯';\n\t\t}\n\t\treturn content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpartaComponent.html":{"url":"components/SpartaComponent.html","title":"component - SpartaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpartaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/sparta/sparta.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-sparta\n            \n\n            \n                styleUrls\n                ./sparta.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sparta.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchedHtml\n                            \n                            \n                                id\n                            \n                            \n                                slug\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPost\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPost\n                        \n                    \n                \n            \n            \n                \nloadPost(slug, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/sparta/sparta.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/sparta/sparta.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchedHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'lthn-app-sparta',\n  templateUrl: './sparta.component.html',\n  styleUrls: ['./sparta.component.scss']\n})\nexport class SpartaComponent implements OnInit {\n  public fetchedHtml: any;\n  id: string\n  slug: string\n  constructor(private http: HttpClient, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id')\n    this.slug = this.route.snapshot.paramMap.get('slug')\nconsole.log('d')\n    this.loadPost(this.slug, this.id)\n\n  }\n\n  loadPost(slug, id){\n    const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n    const requestOptions: Object = {\n      headers: headers,\n      responseType: 'text'\n    }\n    this.http.get(`https://sparta.lt.hn/t/${slug}/${id}`, requestOptions).subscribe((data: any) => {\n      this.fetchedHtml = data\n    });\n  }\n\n}\n\n    \n\n    \n        dd\n\n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./sparta.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dd                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpartaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpartaModule.html":{"url":"modules/SpartaModule.html","title":"module - SpartaModule","body":"\n                   \n\n\n\n\n    Modules\n    SpartaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpartaModule\n\n\n\ncluster_SpartaModule_declarations\n\n\n\n\nSpartaComponent\n\nSpartaComponent\n\n\n\nSpartaModule\n\nSpartaModule\n\nSpartaModule -->\n\nSpartaComponent->SpartaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/sparta/sparta.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpartaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpartaComponent } from './sparta.component';\nimport {MatCardModule} from '@angular/material/card';\n\n\n@NgModule({\n  declarations: [\n    SpartaComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule\n  ]\n})\nexport class SpartaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpartaRoutingModule.html":{"url":"modules/SpartaRoutingModule.html","title":"module - SpartaRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SpartaRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/sparta/sparta-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {SpartaComponent} from '@module/content/sparta/sparta.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'sparta/:slug/:id',\n\t\tcomponent: SpartaComponent\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class SpartaRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SplitIntegratedAddressOut.html":{"url":"interfaces/SplitIntegratedAddressOut.html","title":"interface - SplitIntegratedAddressOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SplitIntegratedAddressOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/splitIntegratedAddressOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            standard_address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standard_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        standard_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from 'src/app/modules/wallet/interfaces/types/address';\n\nexport interface SplitIntegratedAddressOut {\n\tstandard_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusComponent.html":{"url":"components/StatusComponent.html","title":"component - StatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status\n            \n\n            \n                styleUrls\n                ./status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chainInfo\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                status_annon\n                            \n                            \n                                status_daemon\n                            \n                            \n                                status_private\n                            \n                            \n                                status_secure\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/status.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/status.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_annon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_secure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {BlockchainService} from '@module/chain/blockchain.service';\n\n@Component({\n\tselector: 'lthn-app-status',\n\ttemplateUrl: './status.component.html',\n\tstyleUrls: ['./status.component.scss']\n})\nexport class StatusComponent implements OnInit {\n\tstatus_daemon: any;\n\tstatus_secure: any;\n\tstatus_private: any;\n\tstatus_annon: any;\n\tprivate chainInfo: ChainGetInfo;\n\n\tconstructor(public dialog: MatDialog, private chain: BlockchainService) {}\n\n\tpublic async ngOnInit() {\n\t\tthis.chainInfo = await this.chain.chainInfo\n\n\t\tif (this.chainInfo) {\n\t\t\t// we have chain data, and it talks to us set to amber\n\t\t\tthis.status_daemon = 1\n\t\t\t//console.log(data)\n\t\t\t// if chain height + 4 to give 2~ blocks to be considered healthy\n\t\t\tif (this.chainInfo.height + 4 > this.chainInfo.target_height) {\n\t\t\t\tthis.status_daemon = 2\n\t\t\t}\n\t\t} else {\n\t\t\tthis.status_daemon = 0\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                cloud\n            \n            \n                cloud_off\n            \n            \n                visibility_off\n            \n            \n                visibility_off\n            \n            \n                verified_user\n            \n            \n                verified_user\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./status.component.scss\n                \n                .mat-icon {\n  font-size: 48px;\n  height: 48px;\n  width: 48px;\n}\n\n.status-wrapper {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n}\n\n.mat-card{\n  padding-left: 0;\n  padding-right: 0;\n  background: inherit;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cloud                                        cloud_off                                        visibility_off                                        visibility_off                                        verified_user                                        verified_user                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_imports\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\n\nBootstateComponent\n\nBootstateComponent\n\n\n\nStatusModule\n\nStatusModule\n\nStatusModule -->\n\nBootstateComponent->StatusModule\n\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nBootstateComponent \n\nBootstateComponent \n\nBootstateComponent  -->\n\nStatusModule->BootstateComponent \n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nStatusModule -->\n\nAuthModule->StatusModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nStatusModule -->\n\nTranslateModule->StatusModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/status/status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BootstateComponent\n                        \n                        \n                            NoDaemonRunningDialog\n                        \n                        \n                            StatusComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BootstateComponent\n                        \n                        \n                            StatusComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatusComponent} from './status.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {NoDaemonRunningDialog} from './dialog/no-daemon-running.component';\nimport { BootstateComponent } from './bootstate/bootstate.component';\nimport {ProgressSpinnerModule, SectionModule, StepperModule} from '@swimlane/ngx-ui';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {AuthModule} from '@module/auth/auth.module';\n\n@NgModule({\n\tdeclarations: [StatusComponent, NoDaemonRunningDialog, BootstateComponent],\n\texports: [StatusComponent, BootstateComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatDialogModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tSectionModule,\n\t\tStepperModule,\n\t\tTranslateModule,\n\t\tAuthModule,\n\t\tProgressSpinnerModule\n\t]\n})\nexport class StatusModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreOut.html":{"url":"interfaces/StoreOut.html","title":"interface - StoreOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/storeOut.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface StoreOut {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllIn.html":{"url":"interfaces/SweepAllIn.html","title":"interface - SweepAllIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/sweepAllIn.ts\n        \n\n\n            \n                Description\n            \n            \n                SweepAll request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            below_amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            do_not_relay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_keys\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination public address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        below_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        below_amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        do_not_relay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        do_not_relay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_hex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) return the transactions as hex encoded string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_keys:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Return the transaction keys after sending.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of outpouts from the blockchain to mix with (0 means no mixing).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllIn {\n\n\t/** Destination public address */\n\taddress: string;\n\n\t/** (Optional) */\n\tpriority?: number;\n\n\t/** Number of outpouts from the blockchain to mix with (0 means no mixing). */\n\tmixin: number;\n\n\t/** unsigned int; Number of blocks before the monero can be spent (0 to not add a lock). */\n\tunlock_time: number;\n\n\t/** (Optional) Random 32-byte/64-character hex string to identify a transaction. */\n\tpayment_id?: string;\n\n\t/** (Optional) Return the transaction keys after sending. */\n\tget_tx_keys?: boolean;\n\n\t/** (Optional) */\n\tbelow_amount?: number;\n\n\t/** (Optional)  */\n\tdo_not_relay?: boolean;\n\n\t/** (Optional) return the transactions as hex encoded string. */\n\tget_tx_hex?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllOut.html":{"url":"interfaces/SweepAllOut.html","title":"interface - SweepAllOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/sweepAllOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_blob_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                                \n                                        \n                                            tx_key_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_blob_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_blob_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllOut {\n\ttx_hash_list: string[];\n\ttx_key_list: string[];\n\ttx_blob_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepDustOut.html":{"url":"interfaces/SweepDustOut.html","title":"interface - SweepDustOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepDustOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/sweepDustOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepDustOut {\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.key`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.pub`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.rev`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(privateKey, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TerminalComponent.html":{"url":"components/TerminalComponent.html","title":"component - TerminalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TerminalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/console/terminal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-terminal\n            \n\n            \n                styleUrls\n                ./terminal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./terminal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/console/terminal.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/terminal.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lthn-app-terminal',\n  templateUrl: './terminal.component.html',\n  styleUrls: ['./terminal.component.scss']\n})\nexport class TerminalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./terminal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TerminalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimeAgoPipe.html":{"url":"pipes/TimeAgoPipe.html","title":"pipe - TimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/date/timeAgo.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timeAgo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/date/timeAgo.pipe.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        translations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pipes/date/timeAgo.pipe.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n\tname: 'timeAgo',\n\tpure: false\n})\nexport class TimeAgoPipe implements PipeTransform {\n\tprivate static translations: any;\n\n\tconstructor(private translate: TranslateService) {\n\t\tthis.translate.getStreamOnTranslationChange([\n\t\t\t'words.time.past.seconds',\n\t\t\t'words.time.past.minute',\n\t\t\t'words.time.past.minutes',\n\t\t\t'words.time.past.hour',\n\t\t\t'words.time.past.hours',\n\t\t\t'words.time.past.day',\n\t\t\t'words.time.past.days',\n\t\t\t'words.time.past.month',\n\t\t\t'words.time.past.months',\n\t\t\t'words.time.past.year',\n\t\t\t'words.time.past.years',\n\t\t]).subscribe((data) => TimeAgoPipe.translations = data)\n\n\t}\n\n\ttransform(value: number) {\n\t\tconst d = new Date(value * 1000);\n\t\tconst now = new Date();\n\t\tconst seconds = Math.round(\n\t\t\tMath.abs((now.getTime() - d.getTime()) / 1000)\n\t\t);\n\t\tconst minutes = Math.round(Math.abs(seconds / 60));\n\t\tconst hours = Math.round(Math.abs(minutes / 60));\n\t\tconst days = Math.round(Math.abs(hours / 24));\n\t\tconst months = Math.round(Math.abs(days / 30.416));\n\t\tconst years = Math.round(Math.abs(days / 365));\n\n\t\t\tif (Number.isNaN(seconds)) {\n\t\t\t\treturn '';\n\t\t\t} else if (seconds  545)\n\t\t\t\treturn `${years} ${TimeAgoPipe.translations['words.time.past.years']}`;\n\t\t\t}\n\t\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToCoinPipe.html":{"url":"pipes/ToCoinPipe.html","title":"pipe - ToCoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToCoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/toCoin.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toCoin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/toCoin.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'toCoin', pure: false })\nexport class ToCoinPipe implements PipeTransform {\n\n\n  transform (content: number) {\n    return (content / 100000000).toFixed((8))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transactions.html":{"url":"interfaces/Transactions.html","title":"interface - Transactions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/interfaces/props/transactions.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            missed_tx\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txs_as_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txs_as_json\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        missed_tx\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missed_tx:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txs_as_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txs_as_hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txs_as_json\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txs_as_json:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transactions {\n\tstatus: string,\n\ttxs_as_hex?: string,\n\ttxs_as_json?: any,\n\tmissed_tx?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/transactions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transactions\n            \n\n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                rows\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadTransactions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                opts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService, store: Store, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/transactions.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opts\n                    \n                \n                \n                    \n                        Type :         GetTransfersIn\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t}\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/transactions.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transactions.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transactions.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetTransfersOut[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Subscription} from 'rxjs';\nimport {GetTransfersIn, GetTransfersOut} from '@module/wallet/interfaces';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport {select, Store} from '@ngrx/store';\nimport {selectWalletTransactions} from '@module/wallet/data';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-wallet-transactions',\n\ttemplateUrl: './transactions.component.html'\n})\nexport class TransactionsComponent implements OnInit {\n\t@Input() name?: string = '';\n\t@Input() opts: GetTransfersIn = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t};\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\n\trows: GetTransfersOut[] = [];\n\n\n\n\tcolumns = [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}];\n\n\tColumnMode = ColumnMode;\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletRpcService, private store: Store, private route: ActivatedRoute) {\n\t\tthis.name = this.route.snapshot.paramMap.get('id')\n\t}\n\n\tngOnInit(): void {\n\t\tthis.subs$['txn'] = this.store.pipe(select(selectWalletTransactions)).subscribe((data) => {\n\t\t\tif(data) {\n\t\t\t\tthis.rows = [...data['in'], ...data['out']]\n\t\t\t}\n\t\t})\n\t\tthis.loadTransactions().catch((err) => console.error(err));\n\t}\n\n\tasync loadTransactions() {\n\n\t\tthis.rows = await this.wallet.getTransfers(this.opts).then((data) => Object.values(data).flat());\n\t\tconsole.log(this.rows);\n\n\t}\n}\n\n    \n\n    \n        \n     0\">\n        \n            \n            \n                \n                    \n                \n            \n            \n                \n                    {{ value | toCoin | number:'1.0-8'}}\n                \n            \n            \n                \n                    {{ value | timeAgo }}\n                \n            \n        \n    \n    \n        You have no transactions, you need to send LTHN to your wallet\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     0\">                                                                                                                                                {{ value | toCoin | number:\\'1.0-8\\'}}                                                                            {{ value | timeAgo }}                                                    You have no transactions, you need to send LTHN to your wallet    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/transfer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            txid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transfer {\n\tamount: number;\n\tfee: number;\n\theight: number;\n\tnote: string;\n\tpayment_id: string;\n\ttimestamp: number;\n\ttxid: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransferComponent.html":{"url":"components/TransferComponent.html","title":"component - TransferComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransferComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/transfer/transfer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transfer\n            \n\n\n\n\n            \n                templateUrl\n                ./transfer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                transfer\n                            \n                            \n                                    Public\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendTransfer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendTransfer\n                        \n                    \n                \n            \n            \n                \nsendTransfer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferIn\n\n                    \n                \n                \n                    \n                        Default value : {\n    destinations: [\n      {\n        address: '',\n        amount: 0\n      }\n    ],\n    mixin: 5,\n    unlock_time:0,\n    get_tx_key: true,\n    payment_id: undefined\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WalletService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {TransferIn, TransferOut} from '@module/wallet/interfaces';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {AlertService, AlertStyles} from '@swimlane/ngx-ui';\n\n@Component({\n  selector: 'lthn-wallet-transfer',\n  templateUrl: './transfer.component.html',\n})\nexport class TransferComponent implements OnInit {\n\n  transfer: TransferIn = {\n    destinations: [\n      {\n        address: '',\n        amount: 0\n      }\n    ],\n    mixin: 5,\n    unlock_time:0,\n    get_tx_key: true,\n    payment_id: undefined\n  }\n\n  constructor(public wallet: WalletService, public alertService: AlertService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendTransfer(){\n    this.transfer.destinations.map((dest) => dest.amount = dest.amount * 100000000)\n    this.wallet.sendTransfer(this.transfer).catch((err) => console.error(err)).then((data: TransferOut) => {\n      if(data.fee){\n        this.alertService.alert({title: \"Transfer Sent\", style: AlertStyles.Info, content: `Fee: ${data.fee} Tx: ${data.tx_hash} View Key: ${data.tx_key}`})\n        this.transfer = {\n          destinations: [\n            {\n              address: '',\n              amount: 0\n            }\n          ],\n          mixin: 5,\n          unlock_time:0,\n          get_tx_key: true,\n          payment_id: undefined\n        }\n      }else{\n        console.log(data)\n        this.alertService.alert({title: \"ERROR\", style: AlertStyles.Danger, content: `${data['error']['message']}`})\n\n      }\n\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n    \n    \n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    \n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    \n\n    \n    \nPress and hold to send the transaction\n    \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                Press and hold to send the transaction    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransferComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferIn.html":{"url":"interfaces/TransferIn.html","title":"interface - TransferIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/transferIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\n\nexport interface TransferIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin?: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time?: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. Outputs:\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOut.html":{"url":"interfaces/TransferOut.html","title":"interface - TransferOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/transferOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferOut {\n\tfee: number; // - Integer value of the fee charged for the txn.\n\ttx_hash: string; // - String for the publically searchable transaction hash\n\ttx_key: string; // - String for the transaction key if get_tx_key is true, otherwise, blank string.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitIn.html":{"url":"interfaces/TransferSplitIn.html","title":"interface - TransferSplitIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            new_algorithm\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        new_algorithm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        new_algorithm:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitOut.html":{"url":"interfaces/TransferSplitOut.html","title":"interface - TransferSplitOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/transferSplitOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee_list:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferSplitOut {\n\tfee_list: number[];\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslateModule.html":{"url":"modules/TranslateModule.html","title":"module - TranslateModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/i18n/translate/translate.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserModule,\n  ]\n})\nexport class TranslateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Uri.html":{"url":"interfaces/Uri.html","title":"interface - Uri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Uri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/uri.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Uri {\n\turi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                processingForm\n                            \n                            \n                                task\n                            \n                            \n                                userForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/user.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/user.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processingForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.key`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.pub`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.rev`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(privateKey, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    Lethean Desktop\n                \n            \n        \n        \n        \n            \n                \n                    Please Login\n                    \n                        \n                    \n\n                \n                \n                    New User\n                    \n                        \n                            \n                                Username\n                                \n                            \n                            \n                                Password\n                                \n                            \n                            \n                                Password (Confirm)\n                                \n                            \n\n                        \n                        Create User\n                    \n                \n\n\n            \n\n        \n        \n            \n                Building Your Encryption Keys\n                \n                    You will be redirected to the profile creation page soon.\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Lethean Desktop                                                                                                    Please Login                                                                                                                    New User                                                                                                        Username                                                                                                                        Password                                                                                                                        Password (Confirm)                                                                                                            Create User                                                                                            Building Your Encryption Keys                                    You will be redirected to the profile creation page soon.                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMeta.html":{"url":"interfaces/UserMeta.html","title":"interface - UserMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decryptionKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decryptionKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decryptionKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatOptionModule} from '@angular/material/core';\nimport {UserComponent} from './user.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {SectionModule, ToolbarModule} from '@swimlane/ngx-ui';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: UserComponent,\n\t\tdata: {\n\t\t\ttitle: 'New User - Lethean (LTHN)',\n\t\t\theading: 'New User Wizard',\n\t\t\tdescription: 'Lethean (LTHN) New User Panel',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [UserComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatOptionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatDividerModule,\n\t\tMatCardModule,\n\t\tMatInputModule,\n\t\tFlexModule,\n\t\tMatCheckboxModule,\n\t\tReactiveFormsModule,\n\t\tMatProgressBarModule,\n\t\tAuthModule,\n\t\tToolbarModule,\n\t\tSectionModule\n\t]\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOptions.html":{"url":"interfaces/UserOptions.html","title":"interface - UserOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/interfaces/user.options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginMethod\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginMethod:         LoginMethods\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginMethods\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserOptions {\n\tloginMethod: LoginMethods;\n}\n\nexport enum LoginMethods {\n\tPASSWORD = 1,\n\tSSH_PEM\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'user',\n\t\tloadChildren: () =>\n\t\t\t\"import('./user.module').then((m) => m.UserModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         UserMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMeta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         UserOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersState.html":{"url":"interfaces/UsersState.html","title":"interface - UsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VpnComponent.html":{"url":"components/VpnComponent.html","title":"component - VpnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VpnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/vpn/vpn.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-vpn\n            \n\n            \n                styleUrls\n                ./vpn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vpn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/vpn/vpn.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/vpn/vpn.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-vpn',\n\ttemplateUrl: './vpn.component.html',\n\tstyleUrls: ['./vpn.component.scss']\n})\nexport class VpnComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      VPN Marketplace\n      All nodes are community run, browse and keep track of your favourites here.\n      \n        New Provider\n        List Services\n        Deploy ExitNode\n\n      \n    \n    \n      \n        \n          local Blockchain\n          This helps the community the most, and makes you a member of the network. Exactly the same\n            as Torrents, but just our blockchain.\n          \n          \n            \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n            \n\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./vpn.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            VPN Marketplace      All nodes are community run, browse and keep track of your favourites here.              New Provider        List Services        Deploy ExitNode                                      local Blockchain          This helps the community the most, and makes you a member of the network. Exactly the same            as Torrents, but just our blockchain.                                                                            Region                Provider                Service                Cost                                                                        Region                Provider                Service                Cost                                                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'VpnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnModule.html":{"url":"modules/VpnModule.html","title":"module - VpnModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/vpn/vpn.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VpnComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {VpnComponent} from 'src/app/modules/vpn/vpn.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [VpnComponent],\n\timports: [CommonModule, MatCardModule, FlexModule, MatButtonModule]\n})\nexport class VpnModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnRoutingModule.html":{"url":"modules/VpnRoutingModule.html","title":"module - VpnRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/vpn/vpn-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {VpnComponent} from 'src/app/modules/vpn/vpn.component';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'vpn',\n\t\tcomponent: VpnComponent,\n\t\tcanActivate: [AuthGuard]\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class VpnRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletComponent.html":{"url":"components/WalletComponent.html","title":"component - WalletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/wallet.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-wallet\n            \n\n            \n                styleUrls\n                ./wallet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wallet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                name\n                            \n                            \n                                    Public\n                                wallet\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                openWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, notificationService: NotificationService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/wallet.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openWallet\n                        \n                    \n                \n            \n            \n                \n                    \n                    openWallet(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WalletService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {AlertService, NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-app-wallet',\n\ttemplateUrl: './wallet.component.html',\n\tstyleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit, AfterViewInit {\n\n\tpublic wallets: string[] = [];\n\tname: string = ''\n\tconstructor(public wallet: WalletService, private notificationService: NotificationService, public alertService: AlertService) {}\n\n\n\tpublic ngAfterViewInit() {\n\t\tthis.wallet.startWalletService()\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis.wallets = this.wallet.walletList()\n\t\tthis.wallet.getActiveAddress()\n\t}\n\n\tpublic openWallet(name: string){\n\t\tconsole.log(name)\n\t\tconst subject = this.alertService.prompt({\n\t\t\ttitle: 'Wallet Password',\n\t\t\tcontent: 'Please enter the wallet password.'\n\t\t});\n\n\t\tsubject.subscribe({\n\t\t\tnext: (v) => {\n\t\t\t\tthis.wallet.openWallet({filename: name, password: v.data}).then(async (data) => {\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\tthis.name = name;\n\t\t\t\t}).catch((err) => console.error(err)).then(() => this.notificationService.create({\n\t\t\t\t\ttype: NotificationType.html,\n\t\t\t\t\tstyleType: NotificationStyleType.success,\n\t\t\t\t\ttitle: 'Loaded Wallet!',\n\t\t\t\t\tbody: name\n\t\t\t\t}));\n\t\t\t},\n\t\t\terror: (err) => console.log('Prompt err', err)\n\t\t});\n\n\n\t\t//this.router.navigate(['/','wallet','details', name]).catch((err) => console.log(err))\n\t}\n\n}\n\n    \n\n    \n        \n        \n            \n                \n                    Wallet:  {{ wallet.address |hashLink }}\n-->\nclose-->\n-->\n-->\n\n\n\n-->\n-->\n                    \n-->\naccount_balance_wallet-->\n-->\n-->\ncloud_download-->\n-->\n-->\ncloud_upload-->\n-->\n                    \n                        close\n                    \n                \n            \n            \n                \n                    Lethean Wallet Manager\n\n                    Please select a previous wallet using the dropdown above or use the forms below to get started\n\n                    \n\n                \n                \n                Make or Add Wallet\n                \n\n            \n            \n\n            \n                \n                    \n                        \n                            \n                        \n                    \n                    \n                        \n                            \n                        \n                    \n                    \n                        \n                            Balance: {{ wallet.balance.unlocked_balance | toCoin}}\n                            Locked Balance: {{wallet.balance.balance-wallet.balance.unlocked_balance|toCoin}}\n                            \n                        \n                    \n                    \n                        \n                            \n                        \n                    \n                \n            \n        \n\n\n\n    \n\n    \n                \n                    ./wallet.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Wallet:  {{ wallet.address |hashLink }}-->close-->-->-->-->-->                    -->account_balance_wallet-->-->-->cloud_download-->-->-->cloud_upload-->-->                                            close                                                                                                Lethean Wallet Manager                    Please select a previous wallet using the dropdown above or use the forms below to get started                                                                    Make or Add Wallet                                                                                                                                                                                                                                                                                                                                                                                    Balance: {{ wallet.balance.unlocked_balance | toCoin}}                            Locked Balance: {{wallet.balance.balance-wallet.balance.unlocked_balance|toCoin}}                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletEffects.html":{"url":"injectables/WalletEffects.html","title":"injectable - WalletEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isPollingActiveStats\n                            \n                            \n                                openWallet\n                            \n                            \n                                StartPollingWallet$\n                            \n                            \n                                StopPollingWallet$\n                            \n                            \n                                WalletLoadData$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, http: HttpClient, store: Store, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/data/effects.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isPollingActiveStats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StopPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WalletLoadData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t//@ts-ignore\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\tconsole.log(payload)\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeWhile, withLatestFrom} from 'rxjs/operators';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from 'src/app/modules/wallet/data/actions';\nimport * as WalletSelectors from 'src/app/modules/wallet/data/selectors';\nimport {merge, of, timer} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {Balance, GetTransfersIn, GetTransfersOut} from '@module/wallet/interfaces';\n\n@Injectable()\nexport class WalletEffects {\n\topenWallet = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t);\n\n\n\tWalletLoadData$ =\n\t\tcreateEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t//@ts-ignore\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\tconsole.log(payload)\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\tStartPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t));\n\tStopPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t));\n\n\tprivate isPollingActiveStats = false;\n\n\tconstructor(private actions$: Actions, private http: HttpClient, private store: Store, private wallet: WalletService) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_imports\n\n\n\ncluster_WalletModule_declarations\n\n\n\n\nAddComponent\n\nAddComponent\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nWalletModule -->\n\nDetailsComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nWalletModule -->\n\nSettingsComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nTransferComponent\n\nTransferComponent\n\nWalletModule -->\n\nTransferComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nWalletNewComponent\n\nWalletNewComponent\n\nWalletModule -->\n\nWalletNewComponent->WalletModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nWalletModule -->\n\nConsoleModule->WalletModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddComponent\n                        \n                        \n                            DetailsComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                        \n                            TransferComponent\n                        \n                        \n                            WalletComponent\n                        \n                        \n                            WalletNewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ConsoleModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {WalletComponent} from 'src/app/modules/wallet/wallet.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatInputModule} from '@angular/material/input';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatSelectModule} from '@angular/material/select';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {RouterModule} from '@angular/router';\nimport {WalletNewComponent} from '@module/wallet/components/wallet-new.component';\nimport {TransactionsComponent} from '@module/wallet/components/transactions.component';\nimport {SettingsComponent} from '@module/wallet/components/settings.component';\nimport {RestoreComponent} from '@module/wallet/components/restore.component';\nimport {CardModule, NgxUIModule, SectionModule, SelectModule, TabsModule} from '@swimlane/ngx-ui';\nimport {DetailsComponent} from '@module/wallet/components/details.component';\nimport {AddComponent} from '@module/wallet/components/add.component';\nimport {OpenComponent} from '@module/wallet/components/open.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\nimport {ConsoleModule} from '@module/console/console.module';\n\n\n\n@NgModule({\n\tdeclarations: [\n\t\tWalletComponent,\n\t\tDetailsComponent,\n\t\tWalletNewComponent,\n\t\tTransactionsComponent,\n\t\tSettingsComponent,\n\t\tRestoreComponent,\n\t\tAddComponent,\n\t\tOpenComponent,\n  TransferComponent\n\t],\n\texports: [\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tFlexModule,\n\t\tReactiveFormsModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tMatCheckboxModule,\n\t\tMatExpansionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatTooltipModule,\n\t\tMatInputModule,\n\t\tTranslateModule,\n\t\tNgxDatatableModule,\n\t\tMatSelectModule,\n\t\tMatTabsModule,\n\t\tPipesModule,\n\t\tRouterModule,\n\t\tSelectModule,\n\t\tTabsModule,\n\t\tSectionModule,\n\t\tCardModule,\n\t\tNgxUIModule,\n\t\tConsoleModule\n\t]\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletNewComponent.html":{"url":"components/WalletNewComponent.html","title":"component - WalletNewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletNewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/wallet-new.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-new\n            \n\n\n\n\n            \n                templateUrl\n                ./wallet-new.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                password_confirm\n                            \n                            \n                                wallet_name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWallet\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(walletRpc: WalletRpcService, wallet: WalletService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletRpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/wallet-new.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/wallet-new.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password_confirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\n\nimport {nameNotTakenValidator} from 'src/app/modules/wallet/validators';\nimport {WalletService} from 'src/app/modules/wallet/wallet.service';\nimport {Router} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-wallet-new',\n\ttemplateUrl: './wallet-new.component.html'\n})\nexport class WalletNewComponent implements OnInit {\n\twallet_name: FormControl;\n\tpassword: FormControl;\n\tpassword_confirm: FormControl;\n\tconstructor(private walletRpc: WalletRpcService, private wallet: WalletService, private router: Router) {}\n\n\tngOnInit(): void {\n\t\tthis.wallet_name = new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]);\n\t\tthis.password = new FormControl('')\n\t\tthis.password_confirm = new FormControl('')\n\t}\n\n\tcreateWallet() {\n\t\tif (this.password.value === this.password_confirm.value) {\n\n\t\t\t\tthis.walletRpc.createWallet({\n\t\t\t\t\tfilename: this.wallet_name.value,\n\t\t\t\t\tpassword: this.password.value,\n\t\t\t\t\tlanguage: 'English'\n\t\t\t\t}).then((data) => {\n\t\t\t\t\tif(data.status === 200){\n\t\t\t\t\t\tthis.router.navigate(['/', 'wallet', this.wallet_name.value]).catch(console.error)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ 'app.lthn.wallet.titles.new-wallet' | translate }}\n    \n\n        \n            {{ 'app.lthn.wallet.label.filename' | translate }}\n            \n\t\t\tWallet already exists\n        \n        \n            {{ 'app.lthn.wallet.label.wallet-password' | translate }}\n            \n        \n        \n            {{ 'app.lthn.wallet.label.wallet-password-confirm' | translate }}\n            \n        \n        {{ 'app.lthn.wallet.button.create-wallet' | translate }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'app.lthn.wallet.titles.new-wallet\\' | translate }}                        {{ \\'app.lthn.wallet.label.filename\\' | translate }}            \t\t\tWallet already exists                            {{ \\'app.lthn.wallet.label.wallet-password\\' | translate }}                                        {{ \\'app.lthn.wallet.label.wallet-password-confirm\\' | translate }}                            {{ \\'app.lthn.wallet.button.create-wallet\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'BlockTransactionsComponent', 'selector': 'lthn-chain-block-transactions'},{'name': 'BootstateComponent', 'selector': 'lthn-app-bootstate'},{'name': 'ConsoleComponent', 'selector': 'lthn-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletNewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletRoutingModule.html":{"url":"modules/WalletRoutingModule.html","title":"module - WalletRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/wallet/wallet-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {WalletComponent} from '@module/wallet/wallet.component';\nimport {WalletNewComponent} from '@module/wallet/components/wallet-new.component';\nimport {RestoreComponent} from '@module/wallet/components/restore.component';\nimport {SettingsComponent} from '@module/wallet/components/settings.component';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallet',\n\t\tcomponent: WalletComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.title',\n\t\t\theading: 'view.wallets.heading',\n\t\t\tdescription: 'view.wallets.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/new',\n\t\tcomponent: WalletNewComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.new.title',\n\t\t\theading: 'view.wallets.new.heading',\n\t\t\tdescription: 'view.wallets.new.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/backup',\n\t\tcomponent: RestoreComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.backup.title',\n\t\t\theading: 'view.wallets.backup.heading',\n\t\t\tdescription: 'view.wallets.backup.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/restore',\n\t\tcomponent: RestoreComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.restore.title',\n\t\t\theading: 'view.wallets.restore.heading',\n\t\t\tdescription: 'view.wallets.restore.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/settings',\n\t\tcomponent: SettingsComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.settings.title',\n\t\t\theading: 'view.wallets.settings.heading',\n\t\t\tdescription: 'view.wallets.settings.description',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class WalletRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletRpcService.html":{"url":"injectables/WalletRpcService.html","title":"injectable - WalletRpcService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletRpcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.rpc.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddressBook\n                            \n                            \n                                createWallet\n                            \n                            \n                                deleteAddressBook\n                            \n                            \n                                getAddress\n                            \n                            \n                                getAddressBook\n                            \n                            \n                                getBalance\n                            \n                            \n                                getBulkPayments\n                            \n                            \n                                getHeight\n                            \n                            \n                                getPayments\n                            \n                            \n                                getTransferByTxid\n                            \n                            \n                                getTransfers\n                            \n                            \n                                incomingTransfers\n                            \n                            \n                                makeIntegratedAddress\n                            \n                            \n                                makeUri\n                            \n                            \n                                openWallet\n                            \n                            \n                                other\n                            \n                            \n                                parseUri\n                            \n                            \n                                queryKey\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                splitIntegratedAddress\n                            \n                            \n                                startWalletService\n                            \n                            \n                                stopWallet\n                            \n                            \n                                store\n                            \n                            \n                                sweepAll\n                            \n                            \n                                sweepDust\n                            \n                            \n                                transfer\n                            \n                            \n                                transferSplit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wallet.rpc.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddressBook\n                        \n                    \n                \n            \n            \n                \naddAddressBook(x: AddAddressBook)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                AddAddressBook\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet(x: CreateWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                CreateWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddressBook\n                        \n                    \n                \n            \n            \n                \ndeleteAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:52\n                \n            \n\n\n            \n                \n                    Get the address of the opened wallet\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressBook\n                        \n                    \n                \n            \n            \n                \ngetAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:43\n                \n            \n\n\n            \n                \n                    Get openned wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBulkPayments\n                        \n                    \n                \n            \n            \n                \ngetBulkPayments(x: GetBulkPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetBulkPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:61\n                \n            \n\n\n            \n                \n                    Get chain height\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPayments\n                        \n                    \n                \n            \n            \n                \ngetPayments(x: GetPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransferByTxid\n                        \n                    \n                \n            \n            \n                \ngetTransferByTxid(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:142\n                \n            \n\n\n            \n                \n                    Get transfer by Transactin ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransfers\n                        \n                    \n                \n            \n            \n                \ngetTransfers(x: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incomingTransfers\n                        \n                    \n                \n            \n            \n                \nincomingTransfers(x: IncomingTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IncomingTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nmakeIntegratedAddress(x: MakeIntegratedAddressIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeIntegratedAddressIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeUri\n                        \n                    \n                \n            \n            \n                \nmakeUri(x: MakeUriIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeUriIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(x: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n            \n                \nother(method: string, arg?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseUri\n                        \n                    \n                \n            \n            \n                \nparseUri(x: Uri)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                Uri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKey\n                        \n                    \n                \n            \n            \n                \nqueryKey(x: QueryKeyIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                QueryKeyIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(x: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nsplitIntegratedAddress(x: IntegratedAddress)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IntegratedAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWalletService\n                        \n                    \n                \n            \n            \n                \nstartWalletService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:21\n                \n            \n\n\n            \n                \n                    Send Wallet Service start POST req\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopWallet\n                        \n                    \n                \n            \n            \n                \nstopWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepAll\n                        \n                    \n                \n            \n            \n                \nsweepAll(x: SweepAllIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:97\n                \n            \n\n\n            \n                \n                    Send all funds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                SweepAllIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepDust\n                        \n                    \n                \n            \n            \n                \nsweepDust()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n            \n                \ntransfer(x: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:71\n                \n            \n\n\n            \n                \n                    Send a transaction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferSplit\n                        \n                    \n                \n            \n            \n                \ntransferSplit(x: TransferSplitIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferSplitIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911') + '/daemon/wallet/json_rpc'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.rpc.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {request} from '@service/json-rpc';\nimport {AddAddressBook, Address, Balance, CreateWallet, GetAddressBookOut, GetBulkPaymentsIn, GetBulkPaymentsOut, GetPaymentsIn, GetPaymentsOut, GetTransfersIn, GetTransfersOut, Height, IncomingTransfersIn, IncomingTransfersOut, IntegratedAddress, MakeIntegratedAddressIn, MakeUriIn, OpenWallet, QueryKeyIn, QueryKeyOut, SplitIntegratedAddressOut, StoreOut, SweepAllIn, SweepAllOut, Transfer, TransferIn, TransferOut, TransferSplitIn, TransferSplitOut, Uri} from '@plugin/../modules/wallet/interfaces';\nimport {RestoreWallet} from '@module/wallet/interfaces/requests/restoreWallet';\nimport {AppConfigService} from '@service/app-config.service';\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WalletRpcService {\n\tprivate url = AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911') + '/daemon/wallet/json_rpc'\n\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Send Wallet Service start POST req\n\t *\n\t */\n\tstartWalletService() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\n\t\tconst request = {rpcBindPort: '36963', disableRpcLogin: false};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`${AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911')}/daemon/wallet/rpc`,\n\t\t\t\trequest,\n\t\t\t\toptions\n\t\t\t);\n\t}\n\n\t/**\n\t * Get openned wallet balance\n\t *\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn request(this.url)('getbalance');\n\t}\n\n\t/**\n\t * Get the address of the opened wallet\n\t *\n\t * @returns {Promise}\n\t */\n\tgetAddress(): Promise {\n\t\treturn request(this.url)('getaddress');\n\t}\n\n\t/**\n\t * Get chain height\n\t *\n\t * @returns {Promise}\n\t */\n\tgetHeight(): Promise {\n\t\treturn request(this.url)('getheight');\n\t}\n\n\t/**\n\t * Send a transaction\n\t *\n\t * @param {TransferIn} x\n\t * @returns {Promise}\n\t */\n\ttransfer(x: TransferIn): Promise {\n\t\treturn request(this.url)('transfer', x);\n\t}\n\n\t/**\n\t *\n\t * @param {TransferSplitIn} x\n\t * @returns {Promise}\n\t */\n\ttransferSplit(x: TransferSplitIn): Promise {\n\t\treturn request(this.url)('transfer_split', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tsweepDust() {\n\t\treturn request(this.url)('sweep_dust');\n\t}\n\n\t/**\n\t * Send all funds\n\t * @param {SweepAllIn} x\n\t * @returns {Promise}\n\t */\n\tsweepAll(x: SweepAllIn): Promise {\n\t\treturn request(this.url)('sweep_all', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tstore(): Promise {\n\t\treturn request(this.url)('store');\n\t}\n\n\t/**\n\t *\n\t * @param {GetPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetPayments(x: GetPaymentsIn): Promise {\n\t\treturn request(this.url)('get_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetBulkPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetBulkPayments(x: GetBulkPaymentsIn): Promise {\n\t\treturn request(this.url)('get_bulk_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tgetTransfers(x: GetTransfersIn): Promise {\n\t\treturn request(this.url)('get_transfers', x);\n\t}\n\n\t/**\n\t * Get transfer by Transactin ID\n\t *\n\t * @param {{txid: string}} x\n\t * @returns {Promise}\n\t */\n\tgetTransferByTxid(x: { txid: string }): Promise {\n\t\treturn request(this.url)('get_transfer_by_txid', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IncomingTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tincomingTransfers(\n\t\tx: IncomingTransfersIn\n\t): Promise {\n\t\treturn request(this.url)('incoming_transfers', x);\n\t}\n\n\t/**\n\t *\n\t * @param {QueryKeyIn} x\n\t * @returns {Promise}\n\t */\n\tqueryKey(x: QueryKeyIn): Promise {\n\t\treturn request(this.url)('query_key', x);\n\t}\n\n\t/**\n\t *\n\t * @param {MakeIntegratedAddressIn} x\n\t * @returns {Promise}\n\t */\n\tmakeIntegratedAddress(\n\t\tx: MakeIntegratedAddressIn\n\t): Promise {\n\t\treturn request(this.url)('make_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IntegratedAddress} x\n\t * @returns {Promise}\n\t */\n\tsplitIntegratedAddress(\n\t\tx: IntegratedAddress\n\t): Promise {\n\t\treturn request(this.url)('split_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tstopWallet() {\n\t\treturn request(this.url)('stop_wallet');\n\t}\n\n\t/**\n\t *\n\t * @param {MakeUriIn} x\n\t * @returns {Promise}\n\t */\n\tmakeUri(x: MakeUriIn): Promise {\n\t\treturn request(this.url)('make_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {Uri} x\n\t * @returns {Promise}\n\t */\n\tparseUri(x: Uri): Promise {\n\t\treturn request(this.url)('parse_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{entries: number[]}} x\n\t * @returns {Promise}\n\t */\n\tgetAddressBook(x: { entries: number[] }): Promise {\n\t\treturn request(this.url)('get_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {AddAddressBook} x\n\t * @returns {Promise}\n\t */\n\taddAddressBook(x: AddAddressBook): Promise {\n\t\treturn request(this.url)('add_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{index: number}} x\n\t * @returns {Promise>}\n\t */\n\tdeleteAddressBook(x: { index: number }) {\n\t\treturn request(this.url)('delete_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {OpenWallet} x\n\t * @returns {Promise>}\n\t */\n\topenWallet(x: OpenWallet) {\n\t\treturn request(this.url)('open_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {CreateWallet} x\n\t * @returns {Promise>}\n\t */\n\tcreateWallet(x: CreateWallet) {\n\t\treturn request(this.url)('create_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {RestoreWallet} x\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(x: RestoreWallet) {\n\t\treturn request(this.url)('generate_from_keys', x);\n\t}\n\n\t/**\n\t *\n\t * @param {string} method\n\t * @param arg\n\t * @returns {Promise}\n\t */\n\tother(method: string, arg?: any): Promise {\n\t\treturn request(this.url)(method, arg);\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                balance\n                            \n                            \n                                    Public\n                                openedWallet\n                            \n                            \n                                    Private\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeWallet\n                            \n                            \n                                getActiveAddress\n                            \n                            \n                                getBalance\n                            \n                            \n                                getWalletList\n                            \n                            \n                                loadTransfers\n                            \n                            \n                                openWallet\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                sendTransfer\n                            \n                            \n                                startWalletService\n                            \n                            \n                                walletList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService, rpc: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/wallet.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeWallet\n                        \n                    \n                \n            \n            \n                \ncloseWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveAddress\n                        \n                    \n                \n            \n            \n                \ngetActiveAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:70\n                \n            \n\n\n            \n                \n                    Get the address of the wallet logged in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:63\n                \n            \n\n\n            \n                \n                    Get wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWalletList\n                        \n                    \n                \n            \n            \n                \ngetWalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:76\n                \n            \n\n\n            \n                \n                    Gets the list of known wallets from the file system\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTransfers\n                        \n                    \n                \n            \n            \n                \nloadTransfers(opts: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(req: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:49\n                \n            \n\n\n            \n                \n                    Open a known wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(req: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:39\n                \n            \n\n\n            \n                \n                    Restore wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendTransfer\n                        \n                    \n                \n            \n            \n                \nsendTransfer(opts: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWalletService\n                        \n                    \n                \n            \n            \n                \nstartWalletService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:27\n                \n            \n\n\n            \n                \n                    Start wallet service\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletList\n                        \n                    \n                \n            \n            \n                \nwalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:96\n                \n            \n\n\n            \n                \n                    Returns the wallets we know about\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openedWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Balance, GetTransfersIn, OpenWallet, RestoreWallet, TransferIn} from '@module/wallet/interfaces';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * Orchestrates dealing with wallets, to add a new wallet type, implement this class\n */\nexport class WalletService {\n\tprivate wallets: string[] = [];\n\n\tpublic openedWallet: string = null\n\tbalance: Balance;\n\taddress: string = null;\n\n\n\tconstructor(private fs: FileSystemService, private rpc: WalletRpcService) {}\n\n\t/**\n\t * Start wallet service\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWalletService() {\n\t\treturn this.rpc.startWalletService().subscribe((data) => {\n\t\t\tconsole.log(data)\n\t\t});\n\t}\n\n\t/**\n\t * Restore wallet\n\t *\n\t * @param {RestoreWallet} req\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(req: RestoreWallet) {\n\t\treturn this.rpc.restoreWallet(req);\n\t}\n\n\t/**\n\t * Open a known wallet\n\t *\n\t * @param {OpenWallet} req\n\t * @returns {Promise>}\n\t */\n\topenWallet(req: OpenWallet) {\n\t\treturn this.rpc.openWallet(req).then(async () => {\n\t\t\tthis.openedWallet = req.filename\n\t\t\tawait this.getBalance()\n\t\t\tawait this.getActiveAddress()\n\t\t});\n\t}\n\n\t/**\n\t * Get wallet balance\n\t *\n\t * @param {Balance} req\n\t * @returns {Promise}\n\t */\n\tgetBalance() {\n\t\tthis.rpc.getBalance().then((data) => this.balance = data).catch((err) => console.error(err))\n\t}\n\n\t/**\n\t * Get the address of the wallet logged in.\n\t */\n\tgetActiveAddress(){\n\t\tthis.rpc.getAddress().then((data) => this.address = data.address)\n\t}\n\t/**\n\t * Gets the list of known wallets from the file system\n\t */\n\tgetWalletList() {\n\t\treturn this.fs.listFiles('/wallets').then((data) => {\n\t\t\tconsole.log(data)\n\t\t\tif (data.length > 0) {\n\t\t\t\tfor (let dat of data) {\n\t\t\t\t\tif (!this.wallets.includes(dat) && !dat.endsWith('.keys') && !dat.endsWith('.txt')) {\n\t\t\t\t\t\tthis.wallets.push(dat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.wallets\n\t\t});\n\t}\n\n\t/**\n\t * Returns the wallets we know about\n\t *\n\t * @returns {string[]}\n\t */\n\twalletList() {\n\t\tif (this.wallets.length === 0) {\n\t\t\tthis.getWalletList();\n\t\t}\n\t\treturn this.wallets;\n\t}\n\n\tloadTransfers(opts: GetTransfersIn){\n\t\treturn this.rpc.getTransfers(opts).then((data) => Object.values(data).flat());\n\t}\n\n\tcloseWallet(){\n\t\tthis.address = null\n\t\tthis.balance = null\n\t\treturn this.rpc.stopWallet()\n\t}\n\n\tsendTransfer(opts: TransferIn){\n\t\treturn this.rpc.transfer(opts)\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletState.html":{"url":"classes/WalletState.html","title":"class - WalletState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/data/state.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            WalletsState\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                known_wallets\n                            \n                            \n                                loaded_wallet\n                            \n                            \n                                wallets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        known_wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/state.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded_wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/state.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/state.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut} from '@module/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletsState.html":{"url":"interfaces/WalletsState.html","title":"interface - WalletsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/data/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            known_wallets\n                                        \n                                \n                                \n                                        \n                                            loaded_wallet\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        known_wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        known_wallets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_wallet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_wallet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut} from '@module/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebStorageService.html":{"url":"injectables/WebStorageService.html","title":"injectable - WebStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/web-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                count\n                            \n                            \n                                    Private\n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backend\n                            \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        backend\n                        \n                    \n                \n            \n            \n                \n                    \n                    backend(cmd: string, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:63\n                \n            \n\n\n            \n                \n                    Performs call to backend object store\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(key: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://127.0.0.1:36911/object'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/web-storage.service.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebStorageService implements Storage {\n\n\tprivate items = {};\n\tprivate count = 0\n\tprivate apiUrl = 'http://127.0.0.1:36911/object';\n\n\tget length() {\n\t\treturn this.count;\n\t}\n\n\tkey(key:number): string | null {\n\t\treturn this.items[key]\n\t}\n\n\tgetItem(key): string | null {\n\t\ttry {\n\t\t\tconst ret = this.backend('get', {object: key});\n\t\t\tif(ret){\n\t\t\t\treturn JSON.parse(ret)\n\t\t\t}\n\t\t}catch (e){\n\t\t\tconsole.log('getItem Error')\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetItem(key: string, value: string) {\n\t\ttry {\n\t\t\tthis.count++\n\t\t\treturn this.backend('set', {object: key, data: value});\n\t\t}catch (e){\n\t\t\tconsole.log('setItem Error')\n\t\t}\n\t\treturn null;\n\n\t}\n\n\tremoveItem(key) {\n\t\tdelete this.items[key]\n\t\tthis.count--\n\t\tthis.backend('remove', {object: key});\n\t}\n\n\tclear() {\n\t\tthis.items ={}\n\t\tthis.count = 0\n\t\tthis.backend('clear', {});\n\t}\n\n\t/**\n\t * Performs call to backend object store\n\t *\n\t * @param {string} cmd\n\t * @param payload\n\t * @returns {string | null}\n\t * @private\n\t */\n\tprivate backend(cmd:string, payload: any):string|null {\n\t\tconst axios = require('axios').default;\n\t\ttry {\n\t\t\tconst ret = axios.post(`${this.apiUrl}/${cmd}`, {group: 'lthn-app', ...payload}).then((data) => data.data)\n\t\t\treturn ret.data;\n\t\t}catch (NetworkError) {\n\t\t\tconsole.log('HTTP Error')\n\t\t}\n\t\treturn null\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeConnection\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                dataUpdates$\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeConnection\n                        \n                    \n                \n            \n            \n                \ncloseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     WebSocketSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dataUpdates$\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataUpdates$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/websocket.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\nexport const WS_ENDPOINT = 'ws://127.0.0.1:36909';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebsocketService {\n\n\tprivate socket$: WebSocketSubject;\n\n\tconstructor() {}\n\n\tpublic connect(): WebSocketSubject {\n\t\tif (!this.socket$ || this.socket$.closed) {\n\t\t\tthis.socket$ = webSocket(WS_ENDPOINT);\n\t\t}\n\t\treturn this.socket$;\n\t}\n\n\tpublic dataUpdates$() {\n\t\treturn this.connect().asObservable();\n\t}\n\n\tcloseConnection() {\n\t\tthis.connect().complete();\n\t}\n\n\tsendMessage(msg: string) {\n\t\tthis.socket$.next(msg);\n\t}\n\n\n\t/**\n\timport { webSocket } from \"rxjs/webSocket\";\nconst subject = webSocket(\"ws://127.0.0.1:8081\");\n\nsubject.subscribe(\n   msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n   err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n   () => console.log('complete') // Called when connection is closed (for whatever reason).\n );\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : v12-lts\n        \n            @angular/cdk : v12-lts\n        \n            @angular/common : v12-lts\n        \n            @angular/compiler : v12-lts\n        \n            @angular/core : v12-lts\n        \n            @angular/flex-layout : 12.0.0-beta.35\n        \n            @angular/forms : v12-lts\n        \n            @angular/material : v12-lts\n        \n            @angular/platform-browser : v12-lts\n        \n            @angular/router : v12-lts\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @kurkle/color : ^0.1.9\n        \n            @ngrx/component : ^12.5.1\n        \n            @ngrx/component-store : ^12.5.1\n        \n            @ngrx/data : ^12.5.1\n        \n            @ngrx/effects : ^12.5.1\n        \n            @ngrx/entity : ^12.5.1\n        \n            @ngrx/router-store : ^12.5.1\n        \n            @ngrx/store : ^12.5.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @swimlane/ngx-datatable : ^20.0.0\n        \n            @swimlane/ngx-ui : ^39.2.0\n        \n            @xmldom/xmldom : ^0.8.0\n        \n            axios : ^0.24.0\n        \n            big.js : ^6.1.1\n        \n            chart.js : ^3.6.0\n        \n            chartjs-adapter-moment : ^1.0.0\n        \n            codemirror : 5.58.2\n        \n            config-ini-parser : ^1.5.9\n        \n            crypto-js : ^4.1.1\n        \n            jest : ^27.5.1\n        \n            jest-preset-angular : ^11.1.1\n        \n            jszmq : ^0.1.2\n        \n            localstorage-polyfill : ^1.0.1\n        \n            moment : ^2.29.2\n        \n            moment-timezone : ^0.5.33\n        \n            mousetrap : ^1.6.5\n        \n            ng-in-viewport : ^6.1.5\n        \n            ng-terminal : ^5.0.0-beta.2\n        \n            ngrx-store-localstorage : ^12.0.1\n        \n            ngx-moment : ^6.0.2\n        \n            normalize.css : ^8.0.0\n        \n            openpgp : ^5.0.0\n        \n            prismjs : ^1.25.0\n        \n            random-js : ^2.1.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.3.0\n        \n            url-polyfill : ^1.1.12\n        \n            web-animations-js : ^2.3.2\n        \n            xterm-addon-serialize : ^0.6.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginMethods   (src/.../user.options.ts)\n                        \n                        \n                            PluginStatus   (src/.../state.ts)\n                        \n                        \n                            RxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/user/data/user/interfaces/user.options.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginMethods\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SSH_PEM\n                            \n                        \n            \n        \n\n    src/app/data/plugins/state.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginStatus\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TIMED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 OUTDATED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/data/debug.rxjs.ts\n    \n        \n            \n                \n                    \n                        \n                        RxJsLoggingLevel\n                    \n                \n                    \n                        \n                            Observable logging levels\n\n                        \n                    \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            nameNotTakenValidator   (src/.../validators.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../settings.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            setRxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                        \n                            tokenGetter   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n    src/app/data/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        localStorageSyncReducer\n                        \n                    \n                \n            \n            \n                \nlocalStorageSyncReducer(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/modules/wallet/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nameNotTakenValidator\n                        \n                    \n                \n            \n            \n                \nnameNotTakenValidator(nameList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/data/logs/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/plugins/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chain/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chart/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/settings/data/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/wallet/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/profile/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state: ProfileState, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProfileState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/user/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/debug.rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setRxJsLoggingLevel\n                        \n                    \n                \n            \n            \n                \nsetRxJsLoggingLevel(level: RxJsLoggingLevel)\n                \n            \n\n\n\n\n            \n                \n                    Adjust the logging level during runtime\nsetRxJsLoggingLevel(4) = off\nsetRxJsLoggingLevel(0) - tmi\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                RxJsLoggingLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPWA Desktop Interface\n\nHow Wails Interacts with WebView2\nGoLang to Browser Integration\nCLI Reference\nCLI Remote Templates\nCLI: Install Check\nCLI: Build\nCLI: Dev\nCLI: Update\nWindow Options\nMenu Options\nProject Config\n\nAbout Wails\n\nAbout Wails.io\nWails GitHub\nSponsor WailsDevelopment Build\n\n\nnpm install --legacy-peer-deps\nnpm run dev:setup\nnpm run devProduction Build\nnpm install --legacy-peer-deps\nnpm run buildDocumentation\nnpm install --legacy-peer-deps\nnpm run doc\nnpm run doc:serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpartaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpartaRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_ChartDirective_providers\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_PostModule_exports\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SpartaModule\n\n\n\ncluster_SpartaModule_declarations\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nStatusModule -->\n\nAuthModule->StatusModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nConsoleModule->BlockchainModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nConsoleModule->WalletModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nBootstateComponent \n\nBootstateComponent \n\nBootstateComponent  -->\n\nStatusModule->BootstateComponent \n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\nAuthModule -->\n\nTranslateModule->AuthModule\n\n\n\nStatusModule -->\n\nTranslateModule->StatusModule\n\n\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\nHeaderInterceptor\n\nHeaderInterceptor\n\nAppModule -->\n\nHeaderInterceptor->AppModule\n\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nBlockDetailsComponent\n\nBlockDetailsComponent\n\nBlockchainModule -->\n\nBlockDetailsComponent->BlockchainModule\n\n\n\n\n\nBlockLedgerComponent\n\nBlockLedgerComponent\n\nBlockchainModule -->\n\nBlockLedgerComponent->BlockchainModule\n\n\n\n\n\nBlockTransactionsComponent\n\nBlockTransactionsComponent\n\nBlockchainModule -->\n\nBlockTransactionsComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nBlockchainConfigComponent\n\nBlockchainConfigComponent\n\nBlockchainModule -->\n\nBlockchainConfigComponent->BlockchainModule\n\n\n\n\n\nBlockchainStatsComponent\n\nBlockchainStatsComponent\n\nBlockchainModule -->\n\nBlockchainStatsComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent \n\nBlockchainComponent \n\nBlockchainComponent  -->\n\nBlockchainModule->BlockchainComponent \n\n\n\nRootModule -->\n\nBlockchainModule->RootModule\n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartDirective\n\nChartDirective\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartService\n\nChartService\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nTerminalComponent\n\nTerminalComponent\n\nConsoleModule -->\n\nTerminalComponent->ConsoleModule\n\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nFromCoinPipe\n\nFromCoinPipe\n\nPipesModule -->\n\nFromCoinPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nFromCoinPipe \n\nFromCoinPipe \n\nFromCoinPipe  -->\n\nPipesModule->FromCoinPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nPostComponent \n\nPostComponent \n\nPostComponent  -->\n\nPostModule->PostComponent \n\n\n\nRootModule -->\n\nPostModule->RootModule\n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\nSpartaModule\n\nSpartaModule\n\nRootModule -->\n\nSpartaModule->RootModule\n\n\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nWalletModule -->\n\nSettingsComponent->WalletModule\n\n\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSpartaComponent\n\nSpartaComponent\n\nSpartaModule -->\n\nSpartaComponent->SpartaModule\n\n\n\n\n\nBootstateComponent\n\nBootstateComponent\n\nStatusModule -->\n\nBootstateComponent->StatusModule\n\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\nAddComponent\n\nAddComponent\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nWalletModule -->\n\nDetailsComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nTransferComponent\n\nTransferComponent\n\nWalletModule -->\n\nTransferComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nWalletNewComponent\n\nWalletNewComponent\n\nWalletModule -->\n\nWalletNewComponent->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        27 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    31 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    57 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompilerOptions   (test-config.helper.ts)\n                        \n                        \n                            ConfigureFn   (test-config.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test-config.helper.ts\n    \n    \n        \n            \n                \n                    \n                    CompilerOptions\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ConfigureFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
