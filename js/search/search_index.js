var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/interfaces/AddAddressBook.html",[0,0.271,1,3.83]],["body/interfaces/AddAddressBook.html",[0,0.376,1,6.483,2,1.363,3,0.069,4,0.079,5,0.079,6,6.488,7,0.461,8,0.707,9,4.311,10,1.67,11,4.431,12,4.311,13,1.269,14,0.592,15,0.007,16,0.079,17,5.18,18,6.488,19,0.006,20,0.006]],["title/components/AddComponent.html",[21,0.81,22,1.579]],["body/components/AddComponent.html",[3,0.041,4,0.047,5,0.047,7,0.274,8,0.499,13,0.731,14,0.386,15,0.007,16,0.047,19,0.004,20,0.004,21,1.139,22,2.433,23,1.96,24,1.378,25,1.378,26,1.378,27,3.851,28,1.532,29,2.74,30,1.114,31,3.268,32,2.959,33,2.542,34,3.136,35,1.921,36,5.592,37,6.584,38,1.217,39,2.938,40,7.224,41,3.366,42,6.584,43,1.51,44,1.425,45,5.592,46,1.811,47,1.589,48,4.739,49,3.851,50,3.851,51,1.196,52,2.21,53,3.851,54,1.56,55,2.584,56,0.312,57,3.246,58,0.456,59,0.393,60,3.851,61,5.592,62,6.584,63,2.939,64,1.68,65,5.592,66,4.267,67,1.323,68,2,69,2,70,1.297,71,2.584,72,1.378,73,1.118,74,1.378,75,1.297,76,1.378,77,1.272,78,1.378,79,1.297,80,2.386,81,1.378,82,1.297,83,1.378,84,1.272,85,1.323,86,2,87,1.297,88,1.378,89,1.297,90,2.904,91,1.378,92,1.297,93,1.272,94,1.378,95,1.297,96,1.378,97,1.297,98,1.378,99,1.272,100,1.224,101,1.378,102,1.297,103,1.378,104,1.297,105,1.378,106,1.35,107,1.201,108,1.378,109,1.272,110,1.378,111,1.272,112,1.378,113,1.777,114,2,115,1.272,116,1.378,117,1.297,118,1.378,119,1.272,120,1.378,121,1.297,122,1.378,123,1.297,124,1.378,125,1.272,126,1.378,127,1.272,128,1.378,129,1.272,130,1.378,131,1.272,132,0.931,133,1.35,134,1.272,135,1.35,136,1.378]],["title/interfaces/Address.html",[0,0.271,9,2.264]],["body/interfaces/Address.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,9,4.599,13,1.168,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,137,7.137]],["title/components/AppComponent.html",[21,0.81,75,1.579]],["body/components/AppComponent.html",[3,0.016,4,0.019,5,0.019,7,0.109,8,0.238,10,0.634,11,0.762,13,0.82,14,0.521,15,0.007,16,0.019,19,0.002,20,0.002,21,0.612,22,0.517,23,0.935,24,0.549,25,0.549,26,0.549,28,0.731,30,0.444,31,2.921,32,2.627,33,1.987,35,0.917,38,0.581,43,0.612,44,1.493,46,1.829,47,1.604,51,1.279,52,1.466,55,1.266,56,0.576,58,0.182,59,0.157,64,1.164,67,0.527,68,0.954,69,0.954,70,0.517,71,1.513,72,0.549,73,1.259,74,0.549,75,1.425,76,0.549,77,0.507,78,0.549,79,0.517,80,2.291,81,0.549,82,0.517,83,0.549,84,0.507,85,0.527,86,0.954,87,0.517,88,0.549,89,0.517,90,2.497,91,0.549,92,0.517,93,0.507,94,0.549,95,0.517,96,0.549,97,0.517,98,0.549,99,0.507,100,0.488,101,0.549,102,0.517,103,0.549,104,0.517,105,0.549,106,0.538,107,0.478,108,0.549,109,0.507,110,0.549,111,0.507,112,0.549,113,0.848,114,0.954,115,0.507,116,0.549,117,0.517,118,0.549,119,0.507,120,0.549,121,0.517,122,0.549,123,0.517,124,0.549,125,0.507,126,0.549,127,0.507,128,0.549,129,0.507,130,0.549,131,0.507,132,0.371,133,0.538,134,0.507,135,0.538,136,0.549,138,0.808,139,1.535,140,3.539,141,1.363,142,3.539,143,2.668,144,2.993,145,2.42,146,3.539,147,5.256,148,3.539,149,2.311,150,4.263,151,3.539,152,3.539,153,4.791,154,3.539,155,4.23,156,2.482,157,2.548,158,3.149,159,2.668,160,1.622,161,4.23,162,2.762,163,4.23,164,4.23,165,4.23,166,1.366,167,4.459,168,6.163,169,4.23,170,2.601,171,4.23,172,4.309,173,4.618,174,3.916,175,3.299,176,2.884,177,3.045,178,5.322,179,2.668,180,2.668,181,3.764,182,2.668,183,2.668,184,1.921,185,1.824,186,0.812,187,2.668,188,1.535,189,3.457,190,2.216,191,2.181,192,2.893,193,5.981,194,2.668,195,1.535,196,2.668,197,1.535,198,1.535,199,1.535,200,2.893,201,1.921,202,1.921,203,2.668,204,1.622,205,1.535,206,2.668,207,1.535,208,2.181,209,2.668,210,2.374,211,2.668,212,1.824,213,2.311,214,1.535,215,1.535,216,3.149,217,1.535,218,3.449,219,1.535,220,1.535,221,1.535,222,2.09,223,1.535,224,1.377,225,1.535,226,2.668,227,4.011,228,3.457,229,5.025,230,2.668,231,4.23,232,2.668,233,2.668,234,2.668,235,2.668,236,1.535,237,1.483,238,1.535,239,3.539,240,1.105,241,2.668,242,1.535,243,1.535,244,1.171,245,1.366,246,3.539,247,2.668,248,0.624,249,1.105,250,1.002,251,1.254,252,1.171,253,0.924,254,0.924,255,1.002,256,0.924,257,1.535,258,1.535,259,1.535,260,0.961,261,1.002,262,1.105,263,1.254,264,1.171,265,0.722,266,3.781,267,1.535,268,1.535,269,1.606,270,1.535,271,1.171,272,1.049,273,1.254,274,1.535,275,1.535,276,2.668,277,3.539,278,1.366,279,1.535,280,1.366,281,1.366,282,0.924,283,1.665,284,2.668,285,1.535,286,1.366,287,1.535,288,0.961,289,0.961,290,1.535,291,1.535,292,1.535,293,1.535,294,2.668,295,1.535,296,1.535,297,1.535,298,1.535,299,1.535,300,2.668,301,1.535,302,1.535,303,1.535,304,1.535,305,1.535,306,1.535,307,1.535,308,1.254,309,1.535,310,0.444,311,1.535,312,1.535,313,1.535,314,1.535,315,1.535,316,1.535,317,1.535,318,2.668,319,1.535,320,3.539,321,2.226,322,1.535,323,1.535,324,1.742,325,1.535,326,1.535,327,1.535,328,1.535,329,1.535,330,1.366,331,1.254,332,1.535,333,0.786,334,1.535,335,2.668,336,2.181,337,1.921,338,2.668,339,2.181,340,2.668,341,2.668,342,2.216,343,2.668,344,2.036,345,1.824,346,2.668,347,5.256,348,2.668,349,2.668,350,2.668,351,2.668,352,2.668,353,2.668,354,1.366,355,1.366,356,1.535,357,2.253,358,1.535,359,2.181,360,2.036,361,1.254,362,1.535,363,1.535,364,1.535,365,1.535,366,2.374,367,1.535,368,1.535,369,1.535,370,1.535,371,1.535,372,1.535,373,1.535,374,1.535,375,5.025,376,2.374,377,1.535,378,1.535,379,2.668,380,2.668,381,1.535,382,1.535,383,1.535,384,1.535,385,1.366,386,1.535,387,1.535,388,1.254,389,1.535,390,2.893,391,1.254,392,1.535,393,2.374,394,1.535,395,1.535,396,1.535,397,1.535,398,1.254,399,1.535,400,1.535,401,1.535,402,1.105,403,2.374,404,1.535,405,1.535]],["title/injectables/AppConfigService.html",[177,3.374,406,1.381]],["body/injectables/AppConfigService.html",[3,0.036,4,0.041,5,0.041,7,0.239,8,0.451,10,1.212,13,1.238,14,0.575,15,0.007,16,0.041,19,0.004,20,0.004,38,1.1,43,0.77,44,1.638,46,2.19,47,2.364,51,1.739,52,1.546,56,0.492,58,0.398,59,0.343,73,1.148,132,1.469,144,2.322,160,2.785,177,3.638,186,1.55,224,1.307,237,1.177,266,4.271,282,2.022,283,1.579,286,2.988,288,2.102,289,3.163,310,0.972,333,1.992,337,4.374,406,1.49,407,1.501,408,8.907,409,2.988,410,5.964,411,4.966,412,4.957,413,4.966,414,4.155,415,6.076,416,3.967,417,6.759,418,5.053,419,5.053,420,6.759,421,6.759,422,5.053,423,2.988,424,4.069,425,5.053,426,3.856,427,3.358,428,5.053,429,3.371,430,7.249,431,3.358,432,7.249,433,5.053,434,3.358,435,3.104,436,3.358,437,3.358,438,5.053,439,3.358,440,5.524,441,3.358,442,7.249,443,3.358,444,3.358,445,3.358,446,3.358,447,2.988,448,2.988,449,2.297,450,2.193,451,1.767,452,1.767,453,3.358,454,1.43,455,3.358,456,3.358,457,2.988,458,3.358,459,3.358,460,3.358,461,3.358,462,2.988,463,2.193,464,3.358,465,3.358,466,3.358,467,2.988,468,4.497,469,3.358,470,3.358,471,2.745,472,3.358,473,3.358,474,3.358,475,3.358,476,3.358,477,3.358,478,3.358,479,3.358,480,3.358,481,3.358,482,3.358,483,3.358,484,2.022,485,3.358,486,3.358]],["title/modules/AppModule.html",[487,1.747,488,3.576]],["body/modules/AppModule.html",[3,0.043,4,0.049,5,0.049,15,0.007,16,0.082,19,0.004,20,0.004,32,1.226,56,0.781,58,0.474,59,0.409,75,3.044,90,1.35,132,0.969,204,1.836,210,3.565,216,3.565,224,1.559,245,3.565,249,4.142,250,2.616,253,3.464,254,2.412,265,1.884,273,4.703,333,1.696,412,2.74,488,7.252,489,1.404,490,2.451,491,3.565,492,3.565,493,3.565,494,3.565,495,3.565,496,5.84,497,5.548,498,5.84,499,5.84,500,5.84,501,4.691,502,6.191,503,2.572,504,1.748,505,1.594,506,3.565,507,2.289,508,3.227,509,2.145,510,4.391,511,2.145,512,2.239,513,1.463,514,3.565,515,5.754,516,4.007,517,5.754,518,4.053,519,5.754,520,2.412,521,4.007,522,4.007,523,5.754,524,3.602,525,2.508,526,4.703,527,3.275,528,3.935,529,2.74,530,4.142,531,2.884,532,5.12,533,3.565,534,3.227,535,2.247,536,4.391,537,3.057,538,3.602,539,2.412,540,2.326,541,4.007,542,3.565,543,3.565,544,5.754,545,4.007,546,3.565,547,4.391,548,2.884,549,5.754,550,5.12,551,4.007,552,4.007,553,3.565,554,3.565,555,2.412,556,3.275,557,4.007,558,3.602,559,3.565,560,4.007,561,5.991,562,4.007,563,4.007,564,1.323,565,3.275,566,4.007,567,4.007,568,5.12,569,4.007,570,3.565,571,3.565,572,4.007,573,4.007,574,4.007,575,4.007,576,4.007,577,3.275,578,4.007]],["title/modules/AppRoutingModule.html",[487,1.747,496,3.374]],["body/modules/AppRoutingModule.html",[3,0.054,4,0.061,5,0.082,11,2.497,15,0.007,16,0.061,19,0.005,20,0.005,21,0.87,32,2.062,56,0.732,58,0.596,59,0.514,93,2.226,149,3.285,170,2.731,224,2.622,228,4.111,248,2.046,288,3.149,310,1.456,324,3.285,342,3.149,452,2.647,489,2.362,490,2.87,496,6.765,503,3.012,504,2.194,505,2.001,508,2.821,509,2.512,510,3.839,511,2.512,542,7.223,564,1.662,577,4.111,579,4.476,580,4.476,581,6.27,582,6.27,583,6.27,584,6.27,585,5.03,586,3.028,587,3.442,588,4.406,589,5.03,590,5.03,591,5.03,592,5.03,593,5.03,594,4.218,595,3.44,596,3.345,597,5.843,598,4.476,599,4.111,600,4.057,601,5.03,602,5.03,603,5.03,604,5.03,605,4.476,606,5.03,607,5.03,608,3.839,609,3.839,610,5.03,611,4.476,612,2.194,613,4.476,614,5.03,615,5.03,616,3.839]],["title/interfaces/AppState.html",[0,0.271,617,4.17]],["body/interfaces/AppState.html",[0,0.274,2,0.995,3,0.051,4,0.058,5,0.058,7,0.337,8,0.577,13,0.846,14,0.591,15,0.007,16,0.101,19,0.005,20,0.005,33,1.397,56,0.732,80,2.827,107,2.731,132,1.146,175,2.493,224,2.518,256,2.852,310,2.133,333,1.397,416,5.72,558,2.966,617,5.759,618,4.216,619,7.378,620,5.99,621,4.504,622,7.37,623,7.37,624,7.37,625,7.37,626,7.37,627,7.37,628,6.558,629,6.471,630,6.471,631,4.216,632,4.216,633,4.738,634,4.738,635,6.471,636,4.216,637,4.216,638,3.411,639,4.738,640,4.738,641,4.738,642,4.216,643,4.738,644,4.738,645,4.738,646,4.738,647,4.738,648,4.738,649,5.759,650,5.759,651,3.616,652,4.216,653,4.658,654,4.738,655,6.471,656,3.873,657,4.738,658,4.738,659,4.738,660,4.216,661,3.873,662,4.216,663,3.873,664,3.24,665,4.738,666,4.738,667,4.738]],["title/guards/AuthGuard.html",[594,2.934,668,4.17]],["body/guards/AuthGuard.html",[3,0.044,4,0.05,5,0.05,7,0.293,10,0.739,13,0.539,14,0.285,15,0.007,16,0.05,19,0.004,20,0.004,28,1.129,38,1.278,43,1.347,44,1.091,51,1.594,55,1.475,56,0.603,58,0.488,59,0.421,64,1.798,73,0.7,107,2.324,156,2.447,160,3.135,166,3.668,167,5.601,186,0.945,212,4.016,222,1.64,224,2.662,227,3.146,237,2.398,248,1.677,266,3.293,282,2.482,283,2.762,288,2.581,289,2.581,333,2.016,336,4.799,406,1.731,424,4.488,449,2.819,450,2.692,484,4.118,505,2.336,555,5.073,558,3.676,594,3.676,597,5.896,613,5.225,653,2.967,663,4.799,669,4.122,670,4.122,671,5.601,672,4.282,673,4.122,674,4.122,675,5.872,676,6.633,677,5.689,678,5.225,679,5.896,680,5.225,681,4.666,682,5.872,683,4.481,684,5.225,685,5.872,686,4.799,687,5.872,688,5.872,689,5.225,690,5.872,691,5.872,692,5.872,693,5.225,694,5.872,695,5.872,696,5.225,697,3.834,698,5.872,699,5.225,700,5.225,701,5.872,702,5.872,703,5.225,704,5.872,705,5.872,706,5.872,707,5.225,708,3.668,709,2.692,710,4.122,711,4.122,712,7.879,713,3.668,714,4.122,715,3.668,716,4.122,717,4.122,718,4.122,719,4.122,720,4.122]],["title/modules/AuthModule.html",[487,1.747,497,3.205]],["body/modules/AuthModule.html",[3,0.062,4,0.07,5,0.07,15,0.007,16,0.07,19,0.005,20,0.005,56,0.766,58,0.681,59,0.588,93,3.166,204,2.637,253,3.463,254,3.463,265,2.706,489,2.016,490,3.134,497,6.425,501,5.441,503,3.289,504,2.509,505,2.288,507,2.926,509,2.743,511,2.743,512,2.863,513,2.101,524,4.606,525,3.601,534,4.126,535,3.226,612,3.209,721,5.119,722,5.119,723,5.753,724,5.119,725,5.753,726,5.753,727,4.126,728,3.226,729,6.013,730,5.615,731,3.027,732,5.615,733,4.39,734,7.357]],["title/injectables/AuthService.html",[406,1.381,555,2.821]],["body/injectables/AuthService.html",[3,0.031,4,0.035,5,0.067,7,0.204,8,0.399,10,0.802,13,1.011,14,0.494,15,0.007,16,0.035,19,0.003,20,0.004,34,2.509,38,0.974,43,1.026,44,1.475,46,1.783,47,1.564,51,1.597,52,0.877,55,1.969,56,0.503,58,0.339,59,0.293,73,1.057,107,2.477,144,1.891,156,2.906,160,2.523,175,2.355,177,2.063,186,1.026,204,1.313,222,1.78,224,1.115,237,1.568,263,2.342,264,2.187,265,1.348,266,2.509,272,3.06,282,1.725,283,2.104,310,0.829,321,1.508,333,2.202,336,3.657,361,3.657,406,1.319,407,1.281,410,3.764,414,3.06,429,2.971,451,1.508,452,1.508,457,2.55,462,2.55,484,1.725,555,2.694,564,2.683,597,3.962,656,5.845,679,3.221,680,5.535,681,3.446,684,5.535,686,3.657,693,3.981,697,2.922,700,5.535,735,2.865,736,3.35,737,5.504,738,6.221,739,6.221,740,2.55,741,5.148,742,5.378,743,2.865,744,2.865,745,4.474,746,3.981,747,3.06,748,4.474,749,4.474,750,5.084,751,4.474,752,3.657,753,3.221,754,3.657,755,3.981,756,4.474,757,4.474,758,4.474,759,4.474,760,4.474,761,4.474,762,3.981,763,2.865,764,2.865,765,4.474,766,3.793,767,2.865,768,4.474,769,4.474,770,3.981,771,4.474,772,3.414,773,3.981,774,5.457,775,4.474,776,4.474,777,3.657,778,4.474,779,4.474,780,4.474,781,4.474,782,4.474,783,2.063,784,2.865,785,3.981,786,4.474,787,4.474,788,4.474,789,4.474,790,2.865,791,2.063,792,5.504,793,4.477,794,5.504,795,2.865,796,2.865,797,2.342,798,2.187,799,2.063,800,2.865,801,5.504,802,2.865,803,5.504,804,2.865,805,2.865,806,4.747,807,2.865,808,2.865,809,3.981,810,2.865,811,2.865,812,4.474,813,4.474,814,2.865,815,2.865,816,2.342,817,2.063,818,2.063,819,2.342,820,3.221,821,2.342,822,1.959,823,2.55,824,2.865,825,2.865,826,2.55,827,2.865,828,2.063,829,2.187,830,2.865,831,1.959,832,2.865,833,2.865,834,2.865,835,2.865,836,2.865,837,2.865,838,2.55,839,4.474,840,2.55]],["title/interfaces/Balance.html",[0,0.271,841,3.06]],["body/interfaces/Balance.html",[0,0.374,2,1.355,3,0.069,4,0.078,5,0.078,7,0.458,8,0.705,14,0.546,15,0.007,16,0.078,19,0.006,20,0.006,33,1.902,54,2.595,272,4.412,841,6.152,842,6.452,843,8.908,844,4.588,845,4.588,846,5.273,847,5.162,848,4.213,849,6.452,850,6.452,851,7.034,852,6.452,853,6.452,854,6.452,855,6.452,856,3.395,857,5.273,858,6.452,859,5.273]],["title/injectables/BaseChartConfigService.html",[406,1.381,860,3.83]],["body/injectables/BaseChartConfigService.html",[3,0.041,4,0.046,5,0.046,7,0.27,8,0.494,10,0.681,13,0.724,14,0.582,15,0.007,16,0.046,19,0.004,20,0.004,38,1.205,43,1.498,44,1.565,46,2.326,47,2.04,51,1.397,52,1.999,55,3.015,56,0.307,58,0.45,59,0.388,67,1.902,73,0.645,144,3.074,185,3.787,186,0.872,224,2.794,237,2.516,406,1.632,407,1.698,409,3.381,429,2.599,451,2,564,2.158,638,6.187,793,4.494,860,4.526,861,8.594,862,2.994,863,4.928,864,6.388,865,5.867,866,3.8,867,4.928,868,4.026,869,3.8,870,4.928,871,3.8,872,3.8,873,4.928,874,3.8,875,3.8,876,4.928,877,4.928,878,4.226,879,4.928,880,4.928,881,4.928,882,4.928,883,4.928,884,4.526,885,4.928,886,4.928,887,4.928,888,4.226,889,4.226,890,4.928,891,4.526,892,4.928,893,4.928,894,4.928,895,4.928,896,4.526,897,6.388,898,6.388,899,4.928,900,4.526,901,4.928,902,4.928,903,3.8,904,3.8,905,3.8,906,3.8,907,5.538]],["title/components/BlockDetailsComponent.html",[21,0.81,84,1.548]],["body/components/BlockDetailsComponent.html",[3,0.028,4,0.032,5,0.032,7,0.186,8,0.372,10,0.469,13,0.774,14,0.476,15,0.007,16,0.032,19,0.003,20,0.003,21,0.898,22,0.882,23,1.461,24,0.937,25,0.937,26,0.937,28,1.142,29,2.16,30,0.758,31,3.152,32,2.847,33,2.127,35,1.432,38,0.907,39,2.407,41,2.509,43,0.601,44,1.391,46,0.848,47,0.744,51,0.891,52,1.275,55,0.937,56,0.479,57,2.419,58,0.31,59,0.268,67,0.9,68,1.491,69,1.491,70,0.882,71,2.117,72,0.937,73,1.005,74,0.937,75,0.882,76,0.937,77,0.865,78,0.937,79,0.882,80,2.474,81,0.937,82,0.882,83,0.937,84,1.955,85,2.824,86,1.491,87,0.882,88,0.937,89,0.882,90,2.6,91,0.937,92,0.882,93,0.865,94,0.937,95,0.882,96,0.937,97,0.882,98,0.937,99,0.865,100,0.832,101,0.937,102,0.882,103,0.937,104,0.882,105,0.937,106,0.918,107,0.817,108,0.937,109,0.865,110,0.937,111,0.865,112,0.937,113,1.325,114,1.491,115,0.865,116,0.937,117,0.882,118,0.937,119,0.865,120,0.937,121,0.882,122,0.937,123,0.882,124,0.937,125,0.865,126,0.937,127,0.865,128,0.937,129,0.865,130,0.937,131,0.865,132,0.633,133,0.918,134,0.865,135,0.918,136,0.937,157,3.737,160,2.379,162,3.865,173,5.503,176,3.563,186,0.601,218,3.737,260,1.639,261,1.71,283,1.232,310,0.758,454,1.115,564,0.865,736,3.208,908,2.619,909,3.55,910,3.709,911,3.709,912,5.192,913,5.192,914,1.885,915,4.168,916,2.619,917,2.619,918,3.737,919,2.619,920,2.619,921,2.619,922,2.619,923,2.14,924,2.619,925,2.619,926,2.619,927,2.619,928,2.619,929,2.619,930,2.619,931,2.33,932,6.124,933,4.168,934,4.168,935,4.168,936,4.168,937,3.406,938,4.168,939,3.406,940,4.168,941,4.168,942,4.168,943,4.168,944,4.168,945,4.168,946,4.168,947,3.406,948,4.168,949,3.709,950,4.168,951,3.709,952,4.168,953,3.709,954,5.918,955,4.168,956,4.26,957,3.709,958,4.168,959,4.168,960,4.168,961,4.168,962,4.168,963,4.168,964,3.406,965,2.619,966,2.619,967,2.619,968,4.26,969,4.168,970,4.837,971,2.619,972,2.619,973,2.619]],["title/interfaces/BlockHeader.html",[0,0.271,918,3.374]],["body/interfaces/BlockHeader.html",[0,0.309,2,1.121,3,0.057,4,0.065,5,0.065,7,0.379,8,0.625,13,1.159,14,0.659,15,0.007,16,0.065,19,0.005,20,0.005,54,2.763,222,3.112,357,3.908,918,5.044,964,6.791,974,5.336,975,7.394,976,7.394,977,6.791,978,5.682,979,7.394,980,7.394,981,7.394,982,7.394,983,7.394,984,7.394,985,6.341]],["title/components/BlockLedgerComponent.html",[21,0.81,87,1.579]],["body/components/BlockLedgerComponent.html",[3,0.02,4,0.023,5,0.023,7,0.135,8,0.285,10,0.573,14,0.49,15,0.007,16,0.023,19,0.002,20,0.002,21,0.717,22,0.638,23,1.12,24,1.143,25,0.678,26,0.678,28,0.876,29,1.725,30,0.548,31,3.023,32,2.724,33,1.849,35,1.098,38,0.696,39,1.98,43,0.733,44,1.466,46,2.907,47,2.529,51,1.041,52,0.978,54,2.085,55,2.454,56,0.555,58,0.224,59,0.194,64,1.394,67,0.651,68,1.143,69,1.143,70,0.638,71,1.741,72,0.678,73,1.518,74,0.678,75,0.638,76,0.678,77,0.626,78,0.678,79,0.638,80,2.343,81,0.678,82,0.638,83,0.678,84,0.626,85,2.357,86,1.143,87,1.64,88,0.678,89,0.638,90,2.311,91,0.678,92,0.638,93,0.626,94,0.678,95,0.638,96,0.678,97,0.638,98,0.678,99,0.626,100,0.602,101,0.678,102,0.638,103,0.678,104,0.638,105,0.678,106,0.664,107,0.591,108,0.678,109,0.626,110,0.678,111,0.626,112,0.678,113,1.016,114,1.143,115,0.626,116,0.678,117,0.638,118,0.678,119,0.626,120,0.678,121,0.638,122,0.678,123,0.638,124,0.678,125,0.626,126,0.678,127,0.626,128,0.678,129,0.626,130,0.678,131,0.626,132,0.773,133,0.664,134,0.626,135,0.664,136,0.678,144,1.424,145,2.835,156,1.945,157,2.984,160,2.702,162,3.179,176,2.931,186,0.733,204,0.869,212,2.835,213,2.707,218,2.984,224,3.335,237,2.067,240,1.364,244,1.446,260,1.186,261,1.237,262,1.364,265,1.503,280,1.686,281,1.686,283,2.289,331,3.388,357,1.95,410,2.186,508,1.793,564,0.626,611,2.844,683,1.446,709,2.087,731,0.997,736,1.587,785,7.77,857,1.549,868,1.063,909,2.835,914,1.364,918,2.984,923,1.549,932,2.844,937,2.613,939,2.613,947,2.613,949,2.844,951,2.844,953,2.844,964,2.613,975,2.844,976,2.844,977,2.613,978,3.329,979,2.844,980,2.844,981,4.332,982,2.844,983,2.844,984,2.844,985,2.439,986,1.895,987,2.835,988,3.196,989,3.196,990,4.145,991,2.931,992,3.689,993,5.246,994,3.689,995,4.145,996,3.388,997,4.332,998,3.196,999,6.274,1000,3.196,1001,1.895,1002,1.895,1003,1.895,1004,3.196,1005,1.895,1006,3.196,1007,3.179,1008,3.196,1009,3.196,1010,4.332,1011,3.196,1012,1.895,1013,1.895,1014,3.179,1015,1.895,1016,1.895,1017,1.895,1018,3.689,1019,3.196,1020,1.895,1021,2.844,1022,2.613,1023,2.613,1024,2.613,1025,1.895,1026,1.895,1027,1.895,1028,1.895,1029,1.686,1030,1.296,1031,1.895,1032,1.895,1033,1.895,1034,1.895,1035,1.895,1036,1.895,1037,1.895,1038,1.895,1039,3.388,1040,1.686,1041,1.686,1042,3.689,1043,1.364,1044,2.439,1045,1.446,1046,1.686,1047,2.844,1048,1.686,1049,4.145,1050,1.895,1051,1.895,1052,1.895,1053,2.613,1054,3.196,1055,4.145,1056,2.613,1057,1.895,1058,1.895,1059,1.895,1060,1.895,1061,1.895,1062,1.895,1063,1.895,1064,1.895,1065,1.686,1066,2.439,1067,3.979,1068,3.196,1069,2.439]],["title/components/BlockchainComponent.html",[21,0.81,77,1.548]],["body/components/BlockchainComponent.html",[3,0.034,4,0.039,5,0.039,7,0.225,8,0.431,10,0.568,13,0.632,14,0.577,15,0.007,16,0.039,19,0.003,20,0.003,21,1.014,22,1.067,23,1.694,24,1.133,25,1.133,26,1.133,30,0.917,31,3.214,32,2.907,33,2.283,35,1.661,38,1.052,39,2.668,43,0.726,44,1.577,46,1.899,47,1.666,51,0.677,54,2.329,55,2.347,56,0.572,58,0.375,59,0.324,66,3.689,67,1.088,68,1.729,69,1.729,70,1.067,71,2.347,72,1.133,73,1.114,74,1.133,75,1.067,76,1.133,77,2.167,78,1.133,79,1.067,80,2.758,81,1.133,82,1.067,83,1.133,84,1.046,85,1.088,86,1.729,87,1.067,88,1.133,89,1.067,90,2.756,91,1.133,92,1.067,93,1.046,94,1.133,95,1.067,96,1.133,97,1.067,98,1.133,99,1.046,100,1.007,101,1.133,102,1.067,103,1.133,104,1.067,105,1.133,106,1.11,107,0.988,108,1.133,109,1.046,110,1.133,111,1.046,112,1.133,113,1.536,114,1.729,115,1.046,116,1.133,117,1.067,118,1.133,119,1.046,120,1.133,121,1.067,122,1.133,123,1.067,124,1.133,125,1.046,126,1.133,127,1.046,128,1.133,129,1.046,130,1.133,131,1.046,132,0.766,133,1.11,134,1.046,135,1.11,136,1.133,144,1.661,145,4.009,160,2.687,173,2.806,176,4.253,186,0.726,213,3.828,261,2.068,262,2.28,344,3.689,731,1.667,914,2.28,918,4.22,923,2.589,991,3.529,992,5.217,996,4.791,1007,3.157,1014,3.828,1053,4.791,1056,4.791,1069,3.689,1070,3.167,1071,4.834,1072,5.862,1073,5.862,1074,4.834,1075,3.167,1076,3.167,1077,3.167,1078,3.167,1079,3.167,1080,3.167,1081,4.284,1082,3.167,1083,3.167,1084,3.167,1085,2.068,1086,4.834,1087,3.167,1088,4.834,1089,4.302,1090,4.834,1091,3.689,1092,4.834,1093,4.302,1094,4.302,1095,4.834,1096,3.167,1097,3.306,1098,4.834,1099,3.951,1100,3.167]],["title/components/BlockchainConfigComponent.html",[21,0.81,79,1.579]],["body/components/BlockchainConfigComponent.html",[3,0.039,4,0.044,5,0.065,7,0.26,8,0.48,10,0.655,13,0.478,14,0.487,15,0.007,16,0.044,19,0.004,20,0.004,21,1.105,22,1.231,23,1.886,24,1.307,25,1.307,26,1.307,30,1.057,31,3.255,32,2.946,33,2.395,35,1.849,38,1.171,43,0.838,44,1.395,46,1.184,47,1.038,51,1.15,56,0.608,58,0.433,59,0.373,67,1.255,68,1.925,69,1.925,70,1.231,71,2.52,72,1.307,73,1.197,74,1.307,75,1.231,76,1.307,77,1.207,78,1.307,79,2.373,80,2.858,81,1.307,82,1.231,83,1.307,84,1.207,85,1.255,86,1.925,87,1.231,88,1.307,89,1.231,90,2.866,91,1.307,92,1.231,93,1.207,94,1.307,95,1.231,96,1.307,97,1.231,98,1.307,99,1.207,100,1.161,101,1.307,102,1.231,103,1.307,104,1.231,105,1.307,106,1.281,107,1.139,108,1.307,109,1.207,110,1.307,111,1.207,112,1.307,113,1.71,114,1.925,115,1.207,116,1.307,117,1.231,118,1.307,119,1.207,120,1.307,121,1.231,122,1.307,123,1.231,124,1.307,125,1.207,126,1.307,127,1.207,128,1.307,129,1.207,130,1.307,131,1.207,132,0.884,133,1.281,134,1.207,135,1.281,136,1.307,144,2.58,156,1.925,160,3.601,170,1.984,173,3.123,176,4.522,186,0.838,204,1.675,261,2.386,265,1.718,283,2.531,412,5.373,424,4.242,426,4.874,449,2.499,450,2.386,742,5.072,798,2.788,799,2.63,828,2.63,829,2.788,914,2.63,1085,2.386,1101,3.654,1102,5.381,1103,6.27,1104,5.377,1105,6.387,1106,5.381,1107,3.654,1108,3.654,1109,3.654,1110,3.654,1111,3.654,1112,3.654,1113,3.654,1114,5.381,1115,3.654,1116,2.986,1117,3.654,1118,3.654,1119,5.381]],["title/modules/BlockchainModule.html",[487,1.747,1120,3.374]],["body/modules/BlockchainModule.html",[3,0.047,4,0.054,5,0.054,15,0.007,16,0.054,19,0.004,20,0.004,56,0.789,58,0.522,59,0.45,77,3.037,79,2.819,82,2.819,84,2.765,87,2.819,204,2.021,248,1.793,253,3.707,254,2.654,265,2.896,489,1.545,490,2.622,501,5.039,503,2.752,504,1.923,505,1.754,507,2.449,508,2.473,509,2.296,511,2.296,512,2.396,513,1.61,524,3.854,525,2.76,528,4.211,529,3.015,530,4.432,531,3.174,532,5.479,533,3.923,534,3.453,535,2.473,536,4.699,537,3.364,538,3.854,539,2.654,540,2.559,547,4.699,548,3.174,587,3.145,612,2.686,727,3.453,728,2.473,729,5.032,730,4.699,731,2.32,732,4.699,733,3.364,1030,3.015,1120,6.87,1121,3.923,1122,3.923,1123,3.923,1124,3.923,1125,6.025,1126,4.409,1127,4.409,1128,4.409,1129,5.032,1130,3.854,1131,3.364,1132,4.432,1133,4.409,1134,6.157,1135,3.603,1136,5.479,1137,3.603,1138,3.923,1139,5.032,1140,3.603,1141,3.603,1142,6.157,1143,5.479,1144,4.699,1145,5.479,1146,5.479,1147,3.923,1148,4.409,1149,4.409,1150,4.409]],["title/modules/BlockchainRoutingModule.html",[487,1.747,581,3.374]],["body/modules/BlockchainRoutingModule.html",[3,0.064,4,0.073,5,0.073,11,3.737,15,0.007,16,0.073,19,0.005,20,0.005,21,1.302,56,0.738,58,0.706,59,0.609,77,2.486,80,1.97,84,2.486,149,4.915,170,4.086,237,2.638,248,2.425,310,1.726,324,4.915,489,2.09,507,2.372,508,3.344,509,2.223,511,2.806,512,2.929,513,2.177,564,2.486,581,5.419,586,3.59,587,3.845,588,4.478,594,5.423,595,4.078,596,3.737,612,2.601,671,5.147,1147,5.306,1151,5.963,1152,5.963,1153,5.963,1154,7.527,1155,7.527,1156,7.527,1157,3.344]],["title/injectables/BlockchainService.html",[176,2.821,406,1.381]],["body/injectables/BlockchainService.html",[3,0.036,4,0.041,5,0.074,7,0.241,8,0.455,10,1.306,13,1.144,14,0.587,15,0.007,16,0.074,19,0.004,20,0.004,38,1.109,43,0.779,44,1.579,46,1.101,47,0.966,51,1.745,54,2.134,56,0.619,58,0.402,59,0.347,73,1.238,80,2.246,132,1.48,144,2.102,145,4.184,160,4.008,176,3.069,186,1.671,283,3.198,310,1.771,321,3.578,333,2.406,406,1.503,407,1.519,451,1.788,452,1.788,454,1.447,463,3.996,518,4.093,520,2.046,555,2.046,556,2.777,564,1.684,753,4.405,783,4.895,816,4.167,817,4.895,818,4.895,819,2.777,820,2.446,823,3.024,848,2.219,862,3.506,978,2.324,997,4.537,1039,2.777,1053,5.001,1056,5.955,1158,3.398,1159,5.099,1160,6.8,1161,5.099,1162,6.8,1163,5.099,1164,6.8,1165,6.8,1166,2.446,1167,5.099,1168,3.192,1169,5.099,1170,6.119,1171,5.001,1172,3.398,1173,5.099,1174,3.398,1175,6.8,1176,4.537,1177,5.099,1178,3.398,1179,5.099,1180,5.099,1181,3.398,1182,3.398,1183,5.099,1184,3.398,1185,5.099,1186,3.398,1187,3.398,1188,5.189,1189,3.024,1190,2.777,1191,5.001,1192,5.001,1193,5.001,1194,5.001,1195,4.67,1196,4.67,1197,3.398,1198,3.398,1199,5.445,1200,5.445,1201,6.119,1202,3.398,1203,3.398,1204,3.398,1205,3.024,1206,3.024,1207,3.398,1208,5.099,1209,3.398,1210,3.398,1211,3.398,1212,3.398,1213,3.398,1214,3.398]],["title/components/BlockchainStatsComponent.html",[21,0.81,82,1.579]],["body/components/BlockchainStatsComponent.html",[3,0.031,4,0.036,5,0.036,7,0.208,8,0.407,10,0.526,14,0.386,15,0.007,16,0.036,19,0.003,20,0.003,21,0.967,22,0.989,23,1.598,24,1.05,25,1.05,26,1.05,30,0.849,31,3.19,32,2.884,33,2.222,35,1.566,43,0.673,44,1.038,54,1.272,56,0.452,58,0.348,59,0.3,67,1.008,68,1.631,69,1.631,70,0.989,71,2.254,72,1.05,73,1.071,74,1.05,75,0.989,76,1.05,77,0.969,78,1.05,79,0.989,80,2.701,81,1.05,82,2.123,83,1.05,84,0.969,85,1.008,86,1.631,87,0.989,88,1.05,89,0.989,90,2.695,91,1.05,92,0.989,93,0.969,94,1.05,95,0.989,96,1.05,97,0.989,98,1.05,99,0.969,100,0.933,101,1.05,102,0.989,103,1.05,104,0.989,105,1.05,106,1.029,107,0.915,108,1.05,109,0.969,110,1.05,111,0.969,112,1.05,113,1.449,114,1.631,115,0.969,116,1.05,117,0.989,118,1.05,119,0.969,120,1.05,121,0.989,122,1.05,123,0.989,124,1.05,125,0.969,126,1.05,127,0.969,128,1.05,129,0.969,130,1.05,131,0.969,132,0.71,133,1.029,134,0.969,135,1.029,136,1.05,144,1.566,145,3.823,173,5.56,176,4.108,186,0.673,213,3.65,261,1.917,262,2.113,914,2.113,937,3.726,939,3.726,947,3.726,1066,4.809,1085,1.917,1093,4.057,1094,4.057,1215,2.935,1216,4.057,1217,4.559,1218,4.559,1219,2.935,1220,4.559,1221,4.559,1222,4.559,1223,4.559,1224,4.559,1225,4.559,1226,3.479,1227,4.559,1228,4.559,1229,4.559,1230,4.559,1231,4.559,1232,4.559,1233,4.559,1234,4.559,1235,4.559,1236,4.559,1237,4.559,1238,4.559,1239,4.559,1240,4.559,1241,4.559,1242,4.559,1243,4.559,1244,4.559,1245,4.559,1246,4.559,1247,4.559,1248,4.559,1249,4.559,1250,4.559,1251,4.559]],["title/interfaces/ChainGetInfo.html",[0,0.271,213,3.06]],["body/interfaces/ChainGetInfo.html",[0,0.285,2,1.034,3,0.053,4,0.06,5,0.06,7,0.35,8,0.592,13,1.132,14,0.663,15,0.007,16,0.06,19,0.005,20,0.005,54,2.776,100,2.557,213,4.336,222,2.989,357,3.784,977,6.575,1252,4.922,1253,8.045,1254,8.045,1255,8.045,1256,8.045,1257,8.045,1258,8.045,1259,8.045,1260,8.045,1261,8.045,1262,8.045,1263,8.045,1264,8.045,1265,8.045,1266,8.045]],["title/interfaces/ChartConfigInterface.html",[0,0.271,1267,3.83]],["body/interfaces/ChartConfigInterface.html",[0,0.349,2,1.266,3,0.064,4,0.073,5,0.073,7,0.428,8,0.676,10,1.08,13,1.196,14,0.655,15,0.007,16,0.073,19,0.005,20,0.005,38,1.649,44,1.407,51,1.62,52,2.318,54,2.312,73,1.024,186,1.382,429,3.459,564,2.96,862,3.986,865,7.108,868,5.13,1267,6.193,1268,8.288,1269,6.026,1270,6.743,1271,6.193,1272,6.026,1273,6.026]],["title/interfaces/ChartDifficulty.html",[0,0.271,1274,3.83]],["body/interfaces/ChartDifficulty.html",[0,0.451,2,1.325,3,0.067,4,0.077,5,0.077,7,0.448,8,0.695,13,1.21,14,0.539,15,0.007,16,0.103,19,0.005,20,0.005,28,1.729,54,2.175,59,0.645,564,2.575,862,3.574,1274,7.225,1275,6.309,1276,8.839,1277,6.746,1278,7.53,1279,6.916,1280,6.309]],["title/directives/ChartDirective.html",[70,1.579,134,1.548]],["body/directives/ChartDirective.html",[3,0.05,4,0.057,5,0.057,7,0.331,8,0.571,10,1.147,13,1.078,14,0.543,15,0.007,16,0.057,19,0.004,20,0.004,28,1.753,30,1.349,31,2.155,32,1.426,38,1.392,41,3.852,43,1.468,44,1.582,51,1.562,52,2.407,56,0.591,57,3.714,58,0.552,59,0.476,70,2.155,73,1.336,133,1.634,134,2.113,135,2.889,156,3.12,162,5.136,186,1.468,357,2.192,508,3.589,513,1.702,638,3.355,736,2.314,868,4.098,909,4.997,987,6.163,1281,4.661,1282,5.972,1283,7.307,1284,6.399,1285,6.428,1286,4.661,1287,7.865,1288,7.307,1289,7.865,1290,6.502,1291,6.399,1292,6.399,1293,4.661,1294,6.399,1295,4.661,1296,4.661,1297,4.661,1298,3.557,1299,4.147,1300,4.147,1301,4.147,1302,4.147,1303,5.694,1304,4.661,1305,4.661,1306,7.865,1307,4.661,1308,4.661,1309,4.661,1310,4.661,1311,4.661,1312,6.399,1313,4.883,1314,6.399,1315,4.661,1316,4.661,1317,4.661,1318,4.661,1319,4.661]],["title/modules/ChartModule.html",[487,1.747,1125,3.374]],["body/modules/ChartModule.html",[3,0.066,4,0.075,5,0.075,15,0.007,16,0.075,19,0.005,20,0.005,56,0.71,58,0.731,59,0.631,134,3.22,489,2.164,490,3.276,503,3.438,504,2.692,505,2.455,507,3.06,508,4.314,509,2.301,511,2.868,512,2.993,513,2.254,612,3.355,987,6.382,1125,6.848,1301,5.493,1320,5.493,1321,6.173,1322,5.493,1323,5.493,1324,6.173,1325,6.173]],["title/injectables/ChartService.html",[406,1.381,987,3.205]],["body/injectables/ChartService.html",[3,0.032,4,0.036,5,0.036,7,0.211,8,0.41,10,1.137,13,1.05,14,0.577,15,0.007,16,0.036,19,0.003,20,0.003,38,1.001,43,1.055,44,1.491,46,2.054,47,1.802,51,1.204,52,2.099,55,1.062,56,0.633,58,0.352,59,0.303,64,1.295,73,1.419,132,1.533,156,3.215,175,3.819,186,1.454,191,2.427,202,3.312,208,5.183,218,4.565,255,1.939,256,1.788,266,2.58,269,1.788,282,1.788,310,0.859,406,1.356,407,1.327,412,3.146,429,1.83,451,1.563,452,1.563,513,1.084,558,3.97,564,2.71,619,4.094,638,5.906,689,2.643,772,2.266,793,1.859,862,1.361,868,4.601,878,2.266,889,2.266,987,3.146,1045,2.266,1135,2.427,1271,3.76,1277,2.266,1290,5.011,1298,2.266,1299,2.643,1300,2.643,1302,2.643,1303,4.094,1313,2.266,1326,2.97,1327,5.631,1328,5.631,1329,5.631,1330,5.631,1331,4.6,1332,4.6,1333,4.6,1334,2.97,1335,6.187,1336,4.6,1337,4.6,1338,2.97,1339,4.6,1340,3.76,1341,4.6,1342,4.6,1343,4.6,1344,4.6,1345,4.6,1346,2.97,1347,4.6,1348,2.97,1349,4.094,1350,3.76,1351,4.6,1352,3.76,1353,4.6,1354,7.257,1355,4.6,1356,2.97,1357,5.011,1358,4.6,1359,3.511,1360,4.6,1361,2.97,1362,4.6,1363,4.094,1364,2.97,1365,2.97,1366,2.643,1367,2.643,1368,5.631,1369,2.643,1370,2.97,1371,2.97,1372,2.97,1373,2.97,1374,2.643,1375,2.97,1376,2.97,1377,2.97,1378,2.97,1379,2.97,1380,2.97,1381,2.643,1382,2.97,1383,4.6,1384,2.97,1385,2.643,1386,2.97,1387,2.97,1388,2.97,1389,4.6,1390,2.97,1391,4.6,1392,4.6,1393,2.97,1394,2.643,1395,2.97,1396,2.97,1397,2.97,1398,2.97,1399,2.97,1400,2.97,1401,2.97,1402,2.97,1403,2.97,1404,2.97,1405,2.97,1406,2.97,1407,2.97,1408,2.97,1409,2.97,1410,2.97,1411,2.97,1412,2.97,1413,4.094,1414,2.427,1415,2.97,1416,2.97,1417,2.97,1418,2.97,1419,2.97,1420,2.97,1421,1.612,1422,2.97,1423,2.97,1424,2.97,1425,2.97,1426,2.97]],["title/injectables/ChartsEffects.html",[406,1.381,1427,4.17]],["body/injectables/ChartsEffects.html",[3,0.034,4,0.038,5,0.038,7,0.224,8,0.43,10,0.565,14,0.333,15,0.007,16,0.038,19,0.003,20,0.003,43,1.105,44,1.31,46,2.121,47,1.86,56,0.675,58,0.373,59,0.322,73,0.536,132,1.165,156,2.659,175,4.07,186,0.723,200,3.295,252,2.407,255,2.06,256,1.899,260,5.309,333,2.079,406,1.42,407,1.41,410,3.999,518,3.941,520,1.899,653,2.271,822,4.476,862,2.209,868,1.769,1168,4.414,1196,3.677,1274,2.578,1277,3.677,1352,6.518,1359,4.995,1413,4.288,1414,3.938,1421,2.616,1427,4.288,1428,3.154,1429,7.052,1430,7.052,1431,6.546,1432,5.847,1433,2.407,1434,5.568,1435,3.154,1436,6.518,1437,6.321,1438,4.819,1439,7.748,1440,8.34,1441,5.673,1442,6.546,1443,4.819,1444,3.154,1445,4.819,1446,4.819,1447,3.154,1448,5.847,1449,6.546,1450,5.203,1451,4.819,1452,4.819,1453,4.819,1454,4.819,1455,4.819,1456,4.288,1457,4.288,1458,4.288,1459,4.819,1460,5.847,1461,4.819,1462,5.203,1463,5.35,1464,4.819,1465,2.551,1466,4.819,1467,4.819,1468,5.203,1469,5.203,1470,5.203,1471,4.819,1472,3.154,1473,4.819,1474,4.462,1475,3.154,1476,2.578,1477,2.157,1478,2.807,1479,2.578,1480,2.578,1481,3.154,1482,2.807,1483,3.154,1484,3.154,1485,3.154,1486,3.154]],["title/interfaces/ChartsState.html",[0,0.271,1487,4.17]],["body/interfaces/ChartsState.html",[0,0.343,2,1.246,3,0.063,4,0.072,5,0.072,7,0.421,8,0.669,10,1.345,14,0.41,15,0.007,16,0.105,19,0.005,20,0.005,56,0.666,132,1.434,224,2.308,256,3.571,310,2.381,333,1.749,558,3.714,564,1.959,653,6.225,1278,7.937,1359,7.144,1421,3.22,1434,4.27,1441,5.725,1468,5.279,1479,4.848,1482,5.279,1487,7.322,1488,5.279,1489,7.502,1490,8.229,1491,5.932,1492,5.932,1493,5.932,1494,5.932,1495,5.279,1496,5.932]],["title/components/ConsoleComponent.html",[21,0.81,89,1.579]],["body/components/ConsoleComponent.html",[3,0.03,4,0.034,5,0.034,7,0.199,8,0.393,10,0.79,13,0.874,14,0.462,15,0.007,16,0.034,19,0.003,20,0.003,21,0.94,22,0.946,23,1.544,24,1.005,25,1.005,26,1.005,28,1.207,29,2.261,30,0.813,31,3.176,32,2.87,33,2.327,35,1.513,38,0.959,39,2.503,41,2.652,43,0.644,44,1.466,46,1.427,47,1.252,51,1.429,52,2.17,55,1.005,56,0.44,57,2.557,58,0.333,59,0.287,67,0.965,68,1.576,69,1.576,70,0.946,71,2.201,72,1.005,73,1.135,74,1.005,75,0.946,76,1.005,77,0.928,78,1.005,79,0.946,80,2.032,81,1.005,82,0.946,83,1.005,84,0.928,85,0.965,86,1.576,87,0.946,88,1.005,89,2.073,90,2.773,91,1.005,92,0.946,93,0.928,94,1.005,95,0.946,96,1.005,97,0.946,98,1.005,99,0.928,100,0.893,101,1.005,102,0.946,103,1.005,104,0.946,105,1.005,106,0.985,107,0.876,108,1.005,109,0.928,110,1.005,111,0.928,112,1.005,113,1.4,114,1.576,115,0.928,116,1.005,117,0.946,118,1.005,119,0.928,120,1.005,121,0.946,122,1.005,123,0.946,124,1.005,125,0.928,126,1.005,127,0.928,128,1.005,129,0.928,130,1.005,131,0.928,132,0.679,133,0.985,134,0.928,135,0.985,136,1.005,138,1.478,141,2.25,144,1.867,156,2.201,162,4.018,186,1.01,224,1.714,240,2.022,244,2.144,308,2.296,310,1.573,333,0.828,345,1.921,359,4.442,360,2.144,398,3.6,410,3.012,454,1.196,600,2.652,777,2.296,848,2.876,891,2.296,909,3.716,1226,2.144,1282,4.442,1285,5.029,1497,2.809,1498,4.405,1499,4.405,1500,4.405,1501,4.405,1502,4.405,1503,5.435,1504,4.405,1505,5.435,1506,5.435,1507,4.405,1508,6.154,1509,5.435,1510,2.809,1511,5.029,1512,5.435,1513,6.154,1514,4.405,1515,4.405,1516,2.809,1517,2.809,1518,2.809,1519,2.809,1520,2.809,1521,2.809,1522,2.809,1523,2.809,1524,5.435,1525,4.405,1526,2.809,1527,2.809,1528,2.809,1529,2.144,1530,2.809,1531,2.809,1532,2.809,1533,6.684,1534,2.809,1535,2.809,1536,2.809,1537,2.809,1538,2.809,1539,2.5,1540,2.809,1541,2.809,1542,2.809,1543,2.809,1544,2.809,1545,2.809,1546,2.809,1547,2.809,1548,2.809,1549,2.809,1550,2.809,1551,2.809,1552,2.809,1553,2.809,1554,2.809,1555,2.809,1556,4.405,1557,2.809,1558,2.809,1559,2.809,1560,4.405,1561,2.809,1562,2.809,1563,2.809,1564,2.809,1565,2.809,1566,2.144,1567,2.809,1568,2.809,1569,2.809,1570,2.5,1571,2.809,1572,2.809,1573,2.809,1574,2.809,1575,4.405,1576,2.5,1577,5.435,1578,2.809,1579,2.809]],["title/modules/ConsoleModule.html",[487,1.747,498,3.374]],["body/modules/ConsoleModule.html",[3,0.061,4,0.07,5,0.07,15,0.007,16,0.07,19,0.005,20,0.005,56,0.76,58,0.678,59,0.585,89,3.226,119,2.981,204,2.623,265,2.692,345,3.914,489,2.006,490,3.124,498,6.757,503,3.278,504,2.497,505,2.277,507,2.917,509,2.134,511,2.734,512,2.854,513,2.09,534,4.113,535,3.21,538,4.591,539,3.446,540,3.322,612,3.199,727,4.113,728,3.21,1144,5.597,1529,4.368,1580,5.094,1581,5.094,1582,5.094,1583,5.724,1584,5.724,1585,7.334,1586,5.724]],["title/interfaces/CreateWallet.html",[0,0.271,1587,3.06]],["body/interfaces/CreateWallet.html",[0,0.469,2,1.055,3,0.054,4,0.061,5,0.061,7,0.356,8,0.6,10,1.206,12,2.424,13,1.243,14,0.524,15,0.007,16,0.103,17,3.278,19,0.005,20,0.005,34,2.815,54,2.359,55,2.407,56,0.614,132,1.214,190,5.294,222,3.226,224,1.953,237,1.759,269,3.022,310,1.452,333,1.48,429,1.996,435,4.32,621,2.641,766,3.876,844,4.406,845,4.406,847,3.278,856,2.641,991,3.022,1587,4.394,1588,3.83,1589,4.051,1590,3.432,1591,4.394,1592,3.83,1593,4.752,1594,3.432,1595,3.83,1596,4.844,1597,3.432,1598,3.613,1599,3.83,1600,3.432,1601,3.432,1602,3.022,1603,4.601,1604,3.613,1605,3.613,1606,3.278,1607,3.432,1608,3.432,1609,3.432,1610,3.432,1611,3.278,1612,3.278,1613,3.278,1614,3.432,1615,3.278,1616,3.432,1617,3.278,1618,3.432,1619,3.432,1620,4.406,1621,3.278,1622,3.432,1623,3.83,1624,3.83,1625,3.613,1626,3.432,1627,3.278,1628,3.022,1629,3.613]],["title/injectables/CryptService.html",[406,1.381,741,3.374]],["body/injectables/CryptService.html",[3,0.018,4,0.021,5,0.021,7,0.122,10,1.376,11,1.459,13,1.242,14,0.53,15,0.007,16,0.021,17,1.919,19,0.002,20,0.002,38,0.64,43,0.674,44,1.448,51,1.766,54,0.479,55,1.633,56,0.415,57,4.377,58,0.203,59,0.175,64,1.282,73,1.324,107,1.202,132,0.711,144,1.01,156,1.633,157,2.116,160,4.015,186,1.76,200,2.01,204,1.347,208,2.402,237,0.602,266,3.948,282,1.034,283,3.884,288,1.075,289,1.84,310,1.619,333,2.387,406,0.866,407,0.767,413,3.15,414,3.826,424,2.748,429,2.94,450,1.121,451,0.904,452,0.904,463,2.517,484,3.089,564,2.387,568,2.616,600,1.77,609,2.243,652,2.616,656,1.403,672,1.84,681,3.212,683,2.243,697,1.919,699,2.616,736,3.131,741,2.116,747,3.121,750,2.402,752,5.155,754,2.402,766,3.019,773,2.616,774,3.483,783,4.741,806,5.949,862,2.092,868,1.648,978,2.01,1044,2.243,1045,2.243,1081,1.919,1097,2.01,1103,4.061,1176,2.616,1385,2.616,1566,1.31,1593,1.84,1594,1.174,1615,1.121,1630,1.717,1631,2.939,1632,2.939,1633,2.939,1634,3.854,1635,2.939,1636,2.939,1637,2.939,1638,2.939,1639,2.939,1640,2.939,1641,2.939,1642,2.939,1643,2.939,1644,2.939,1645,2.402,1646,3.854,1647,1.717,1648,1.717,1649,2.939,1650,1.717,1651,3.854,1652,2.939,1653,4.564,1654,2.939,1655,1.717,1656,2.939,1657,2.939,1658,2.939,1659,2.939,1660,2.939,1661,2.402,1662,6.307,1663,2.939,1664,2.939,1665,2.939,1666,2.402,1667,2.939,1668,2.939,1669,2.939,1670,2.939,1671,2.939,1672,2.939,1673,2.939,1674,2.939,1675,2.939,1676,2.939,1677,2.939,1678,2.939,1679,2.939,1680,2.939,1681,2.939,1682,1.717,1683,2.939,1684,2.939,1685,2.939,1686,2.616,1687,2.939,1688,2.939,1689,1.717,1690,1.717,1691,6.076,1692,2.939,1693,6.828,1694,1.717,1695,2.616,1696,2.402,1697,2.939,1698,2.939,1699,2.939,1700,3.854,1701,2.939,1702,2.939,1703,2.939,1704,2.939,1705,2.939,1706,2.939,1707,4.564,1708,2.939,1709,1.717,1710,7.04,1711,2.939,1712,1.717,1713,2.939,1714,2.939,1715,2.939,1716,2.939,1717,2.939,1718,2.939,1719,2.939,1720,2.939,1721,2.939,1722,2.939,1723,2.939,1724,3.15,1725,1.717,1726,2.939,1727,1.717,1728,2.243,1729,2.939,1730,2.939,1731,3.73,1732,2.939,1733,2.939,1734,2.616,1735,2.939,1736,1.717,1737,2.939,1738,1.717,1739,2.939,1740,1.717,1741,2.939,1742,1.717,1743,2.939,1744,2.939,1745,2.939,1746,2.939,1747,2.939,1748,2.939,1749,1.717,1750,1.717,1751,1.717,1752,1.717,1753,1.717,1754,1.717,1755,1.717,1756,2.616,1757,1.528,1758,2.939,1759,1.717,1760,1.717,1761,1.717,1762,1.717,1763,1.717,1764,1.717,1765,1.717,1766,1.717,1767,1.717,1768,2.939,1769,1.717,1770,1.717,1771,1.717,1772,1.717,1773,1.403,1774,1.717,1775,1.717,1776,1.717,1777,1.717,1778,1.717,1779,1.717,1780,1.717,1781,1.717,1782,1.717,1783,1.717,1784,1.717,1785,1.717,1786,1.717,1787,2.939,1788,1.717,1789,1.717,1790,2.939,1791,1.717,1792,2.939,1793,2.939,1794,1.717,1795,2.939,1796,2.939,1797,2.939,1798,3.854,1799,1.717,1800,1.717,1801,1.717,1802,2.939,1803,1.717,1804,1.717,1805,2.939,1806,1.717,1807,1.717,1808,1.717,1809,1.717,1810,1.717,1811,1.717,1812,1.717,1813,1.717,1814,1.717,1815,1.717,1816,1.717,1817,1.717,1818,1.717,1819,1.717,1820,1.717,1821,1.717,1822,1.717]],["title/modules/DataModule.html",[487,1.747,499,3.374]],["body/modules/DataModule.html",[3,0.067,4,0.077,5,0.077,15,0.007,16,0.077,19,0.005,20,0.005,30,1.826,56,0.773,58,0.747,59,0.645,175,3.32,256,4.694,489,2.211,499,5.613,507,2.509,509,2.352,511,2.907,631,5.614,632,5.614,642,6.938,662,6.938,663,5.157,664,4.314,1021,5.614,1477,4.314,1823,6.309,1824,6.309,1825,6.309,1826,6.309,1827,6.309,1828,6.309,1829,6.938,1830,6.309,1831,5.614,1832,6.309,1833,6.309,1834,6.309,1835,6.309,1836,6.309,1837,6.309,1838,6.309,1839,6.309,1840,6.309,1841,6.309]],["title/interfaces/Destination.html",[0,0.271,1589,2.821]],["body/interfaces/Destination.html",[0,0.386,2,1.399,3,0.071,4,0.081,5,0.081,7,0.473,8,0.719,9,4.454,13,1.178,14,0.557,15,0.007,16,0.081,19,0.006,20,0.006,54,2.418,144,2.288,844,3.865,845,3.865,1363,5.925,1589,5.421,1842,6.659,1843,6.022,1844,5.081,1845,5.925,1846,5.442]],["title/components/DetailsComponent.html",[21,0.81,92,1.579]],["body/components/DetailsComponent.html",[3,0.04,4,0.046,5,0.046,7,0.267,8,0.49,9,2.655,10,0.674,13,0.719,14,0.494,15,0.007,16,0.046,19,0.004,20,0.004,21,1.123,22,1.267,23,1.927,24,1.346,25,1.346,26,1.346,28,1.506,29,2.703,30,1.089,31,3.262,32,2.953,33,2.658,35,1.889,38,1.196,39,2.906,41,3.31,43,0.863,44,1.412,46,1.219,47,1.069,51,0.804,52,1.682,56,0.445,57,3.191,58,0.445,59,0.384,67,1.293,68,1.967,69,1.967,70,1.267,71,2.556,72,1.346,73,1.393,74,1.346,75,1.267,76,1.346,77,1.243,78,1.346,79,1.267,80,2.36,81,1.346,82,1.267,83,1.346,84,1.243,85,1.293,86,1.967,87,1.267,88,1.346,89,1.267,90,2.888,91,1.346,92,2.407,93,1.243,94,1.346,95,1.267,96,1.346,97,1.267,98,1.346,99,1.243,100,1.196,101,1.346,102,1.267,103,1.346,104,1.267,105,1.346,106,1.319,107,1.173,108,1.346,109,1.243,110,1.346,111,1.243,112,1.346,113,1.747,114,1.967,115,1.243,116,1.346,117,1.267,118,1.346,119,1.243,120,1.346,121,1.267,122,1.346,123,1.267,124,1.346,125,1.243,126,1.346,127,1.243,128,1.346,129,1.243,130,1.346,131,1.243,132,0.91,133,1.319,134,1.243,135,1.319,136,1.346,144,2.611,186,0.863,271,4.195,355,4.892,841,4.666,859,4.493,910,4.892,911,4.892,956,5.144,1085,2.457,1847,3.762,1848,2.573,1849,4.576,1850,5.498,1851,3.762,1852,3.762,1853,3.762,1854,2.573,1855,3.762,1856,3.762,1857,4.892,1858,3.762,1859,3.762,1860,3.762,1861,3.762]],["title/interfaces/DialogData.html",[0,0.271,1862,3.83]],["body/interfaces/DialogData.html",[0,0.358,2,1.3,3,0.066,4,0.075,5,0.075,7,0.44,8,0.687,13,1.204,14,0.532,15,0.007,16,0.094,19,0.005,20,0.005,21,1.333,31,2.085,32,1.894,35,2.126,43,1.42,52,1.894,56,0.623,58,0.733,59,0.632,73,1.491,90,2.085,99,2.044,100,1.967,144,2.647,201,6.039,564,2.044,1298,4.723,1862,6.857,1863,5.508,1864,5.508,1865,7.813,1866,5.508,1867,6.856,1868,4.723,1869,5.508,1870,5.508,1871,5.508,1872,5.508,1873,5.508]],["title/injectables/Effects.html",[406,1.381,664,3.205]],["body/injectables/Effects.html",[3,0.074,4,0.084,5,0.084,10,1.237,14,0.477,15,0.007,16,0.084,19,0.006,20,0.006,43,1.583,44,1.282,56,0.666,58,0.817,59,0.705,73,1.172,186,1.583,406,2.427,407,3.084,454,2.939,664,5.63,1433,5.266,1434,6.802,1477,4.719,1874,6.9,1875,6.9]],["title/injectables/Effects-1.html",[64,1.701,406,1.15,664,2.667]],["body/injectables/Effects-1.html",[3,0.077,4,0.087,5,0.087,15,0.007,16,0.087,19,0.006,20,0.006,43,2.052,44,1.334,56,0.581,58,0.85,59,0.734,406,2.485,407,3.21,664,5.765,1876,7.182,1877,7.182]],["title/pipes/EffortPipe.html",[1465,2.044,1878,3.576]],["body/pipes/EffortPipe.html",[3,0.066,4,0.075,5,0.075,10,1.109,13,0.81,14,0.428,15,0.007,16,0.075,19,0.005,20,0.005,28,1.696,30,1.791,38,1.347,43,1.42,44,1.15,47,2.189,51,1.323,55,3.001,56,0.501,58,0.733,59,0.632,73,1.425,186,1.42,222,3.337,237,2.701,310,2.23,330,5.508,333,1.824,360,4.723,1465,3.361,1570,5.508,1878,5.88,1879,3.593,1880,6.189,1881,7.705,1882,3.726,1883,6.297,1884,8.78,1885,6.189,1886,5.059,1887,4.639,1888,3.726,1889,6.189,1890,6.189,1891,5.508]],["title/pipes/EscapeHtmlPipe.html",[1465,2.044,1892,3.576]],["body/pipes/EscapeHtmlPipe.html",[3,0.07,4,0.08,5,0.08,10,1.176,15,0.007,16,0.08,19,0.006,20,0.006,28,1.798,30,1.899,38,1.428,44,1.219,51,1.403,56,0.646,58,0.777,59,0.671,73,1.463,186,1.505,237,2.3,249,4.724,250,4.286,321,3.454,333,1.935,454,2.795,1465,3.484,1879,3.809,1882,3.951,1887,4.809,1888,3.951,1892,6.096,1893,6.563,1894,7.988,1895,5.75,1896,6.563,1897,7.988,1898,6.563,1899,6.563]],["title/interfaces/FileSystemInterface.html",[0,0.271,1900,3.83]],["body/interfaces/FileSystemInterface.html",[0,0.221,2,0.802,3,0.041,4,0.046,5,0.046,7,0.271,10,1.43,11,3.962,13,1.104,14,0.619,15,0.007,16,0.046,19,0.004,20,0.004,38,1.209,44,1.482,47,2.044,51,1.805,52,2.202,73,1.355,184,6.447,186,1.83,192,3.801,222,2.862,266,5.07,333,2.352,342,4.505,435,4.81,564,2.788,596,4.586,599,7.32,609,4.241,672,3.479,679,4.001,753,4.001,1104,4.241,1900,4.542,1901,8.236,1902,3.819,1903,4.001,1904,4.542,1905,4.542,1906,5.881,1907,5.558,1908,5.881,1909,3.819,1910,7.196,1911,5.558,1912,5.558,1913,6.898,1914,3.819,1915,5.558,1916,5.558,1917,5.558,1918,3.819,1919,4.946,1920,5.558,1921,3.819,1922,7.196,1923,5.558,1924,3.819,1925,5.558,1926,3.819,1927,5.558]],["title/injectables/FileSystemService.html",[406,1.381,424,2.821]],["body/injectables/FileSystemService.html",[3,0.041,4,0.046,5,0.102,7,0.27,8,0.494,10,1.428,11,1.886,13,1.207,14,0.594,15,0.007,16,0.046,19,0.004,20,0.004,34,2.131,38,1.205,43,0.872,44,1.565,47,1.573,51,1.913,56,0.448,58,0.45,59,0.388,73,1.353,144,2.245,160,3.651,184,4.703,186,1.827,266,4.468,282,2.288,283,2.604,288,2.379,289,2.379,333,2.424,342,3.466,406,1.632,407,1.698,424,3.334,426,4.226,435,3.667,451,2,452,2,454,1.618,564,2.521,596,2.749,672,5.148,679,3.986,770,4.928,783,3.986,1374,3.381,1645,4.526,1728,4.226,1903,5.168,1904,4.526,1906,4.526,1908,4.526,1913,5.867,1928,7.648,1929,3.8,1930,5.538,1931,5.538,1932,5.538,1933,3.8,1934,5.867,1935,5.538,1936,5.538,1937,4.928,1938,3.8,1939,7.966,1940,5.538,1941,3.8,1942,4.928,1943,3.8,1944,5.538,1945,3.8,1946,5.538,1947,5.538,1948,3.8,1949,3.8,1950,3.8,1951,5.538,1952,5.814,1953,3.8,1954,3.8,1955,3.381,1956,3.8,1957,3.8,1958,3.8,1959,3.8,1960,3.8,1961,3.8]],["title/injectables/FileSystemWebService.html",[406,1.381,1934,3.83]],["body/injectables/FileSystemWebService.html",[3,0.041,4,0.046,5,0.046,7,0.27,8,0.494,10,1.474,13,0.724,14,0.527,15,0.007,16,0.046,19,0.004,20,0.004,28,1.041,38,1.205,43,0.872,44,1.565,46,1.231,47,1.08,51,1.703,52,1.999,56,0.529,58,0.45,59,0.388,73,1.397,132,1.58,144,3.245,160,3.939,184,6.187,186,1.886,222,2.203,283,3.073,310,1.891,321,3.438,333,2.116,342,3.466,406,1.632,407,1.698,411,5.34,435,3.898,440,4.526,451,2,454,1.618,463,3.616,518,4.322,520,2.288,564,2.371,596,3.789,672,2.379,753,3.986,783,4.703,817,2.735,818,4.703,819,3.106,862,3.651,1166,2.735,1168,3.466,1188,5.478,1191,4.526,1192,4.526,1193,4.526,1194,4.526,1195,4.226,1196,4.986,1199,5.814,1200,4.928,1900,4.526,1903,3.986,1904,4.526,1905,4.526,1906,4.526,1908,4.526,1913,5.34,1928,7.648,1934,4.526,1937,4.928,1942,4.928,1962,3.8,1963,5.538,1964,3.8,1965,5.538,1966,3.8,1967,3.8,1968,5.538,1969,3.8,1970,5.538,1971,3.8,1972,5.538,1973,3.8,1974,3.8,1975,3.8,1976,5.538,1977,3.8,1978,3.8,1979,3.8,1980,3.8,1981,3.8,1982,3.8,1983,3.8,1984,3.8]],["title/pipes/FromCoinPipe.html",[1465,2.044,1985,3.576]],["body/pipes/FromCoinPipe.html",[3,0.07,4,0.08,5,0.08,10,1.176,14,0.453,15,0.007,16,0.08,19,0.006,20,0.006,28,1.798,30,1.899,38,1.428,44,1.219,51,1.403,54,2.402,56,0.531,58,0.777,59,0.671,73,1.463,186,1.505,237,2.3,321,4.532,333,1.935,1465,3.484,1879,3.809,1882,4.809,1887,4.809,1888,3.951,1895,4.724,1985,6.096,1986,6.563,1987,7.988,1988,6.563,1989,6.563,1990,5.84]],["title/interfaces/GetAddressBookOut.html",[0,0.271,1991,3.83]],["body/interfaces/GetAddressBookOut.html",[0,0.399,2,1.45,3,0.074,4,0.084,5,0.084,7,0.585,8,0.734,9,3.333,11,3.426,12,3.333,13,1.151,14,0.608,15,0.007,16,0.084,19,0.006,20,0.006,54,1.925,791,5.926,1991,6.729,1992,6.9,1993,8.109]],["title/interfaces/GetBulkPaymentsIn.html",[0,0.271,1994,3.83]],["body/interfaces/GetBulkPaymentsIn.html",[0,0.389,2,1.411,3,0.072,4,0.082,5,0.082,7,0.477,8,0.722,13,1.181,14,0.56,15,0.007,16,0.082,19,0.006,20,0.006,54,2.427,85,2.308,200,4.594,357,3.159,844,3.899,845,3.899,1734,5.978,1994,6.621,1995,6.717,1996,9.032,1997,9.032,1998,6.717,1999,5.49]],["title/interfaces/GetBulkPaymentsOut.html",[0,0.271,2000,3.83]],["body/interfaces/GetBulkPaymentsOut.html",[0,0.409,2,1.486,3,0.076,4,0.086,5,0.086,7,0.502,8,0.745,14,0.489,15,0.007,16,0.086,19,0.006,20,0.006,56,0.572,1999,7.508,2000,6.827,2001,7.071,2002,6.282,2003,6.292]],["title/interfaces/GetPaymentsIn.html",[0,0.271,2004,3.83]],["body/interfaces/GetPaymentsIn.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,12,4.45,13,1.168,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,2004,6.865,2005,7.137]],["title/interfaces/GetPaymentsOut.html",[0,0.271,2006,3.83]],["body/interfaces/GetPaymentsOut.html",[0,0.409,2,1.486,3,0.076,4,0.086,5,0.086,7,0.502,8,0.745,14,0.489,15,0.007,16,0.086,19,0.006,20,0.006,56,0.572,1999,7.508,2002,6.282,2003,6.292,2006,6.827,2007,7.071]],["title/interfaces/GetTransfersIn.html",[0,0.271,2008,3.205]],["body/interfaces/GetTransfersIn.html",[0,0.296,2,1.076,3,0.055,4,0.062,5,0.062,7,0.364,8,0.608,10,1.722,11,2.542,14,0.627,15,0.007,16,0.062,19,0.005,20,0.005,33,1.509,54,2.443,192,3.502,222,3.846,251,5.573,357,3.845,361,5.573,505,3.482,822,3.502,831,5.987,2008,4.663,2009,5.121,2010,6.737,2011,8.175,2012,8.175,2013,8.175,2014,6.681,2015,6.681,2016,6.819,2017,6.819]],["title/interfaces/GetTransfersOut.html",[0,0.271,2018,3.06]],["body/interfaces/GetTransfersOut.html",[0,0.352,2,1.276,3,0.065,4,0.074,5,0.074,7,0.431,8,0.679,10,1.712,14,0.603,15,0.007,16,0.074,19,0.005,20,0.005,56,0.616,222,3.573,505,3.469,831,5.964,1589,4.584,1590,4.154,2014,6.655,2015,6.655,2018,4.973,2019,6.074,2020,7.005,2021,6.074]],["title/pipes/HashLinkPipe.html",[1465,2.044,2022,3.576]],["body/pipes/HashLinkPipe.html",[3,0.069,4,0.079,5,0.079,10,1.16,13,1.119,14,0.447,15,0.007,16,0.079,19,0.006,20,0.006,28,1.773,30,1.872,38,1.408,43,1.484,44,1.202,46,2.096,47,1.838,51,1.383,54,2.209,56,0.524,58,0.766,59,0.661,73,1.454,186,1.484,237,2.268,333,1.907,1067,6.472,1465,3.454,1597,5.415,1879,3.755,1882,3.895,1887,4.767,1888,3.895,2022,6.043,2023,6.47,2024,7.919,2025,8.917,2026,6.47]],["title/pipes/HashRatePipe.html",[1132,3.374,1465,2.044]],["body/pipes/HashRatePipe.html",[3,0.06,4,0.068,5,0.068,10,1.003,13,1.107,14,0.387,15,0.007,16,0.068,19,0.005,20,0.005,28,1.534,30,1.62,38,1.218,43,1.284,44,1.04,46,1.813,47,1.59,51,1.197,54,2.234,55,3.027,56,0.453,58,0.663,59,0.572,73,1.36,186,1.284,222,3.185,237,2.534,289,3.504,310,1.62,321,4.722,333,2.131,471,4.575,1066,5.517,1081,3.655,1132,5.204,1226,5.517,1465,3.153,1756,4.981,1757,4.981,1846,4.575,1879,3.249,1882,3.37,1886,4.575,1887,4.352,1888,3.37,1891,4.981,1895,5.204,2027,5.598,2028,8.463,2029,5.598,2030,5.598,2031,5.598,2032,4.981,2033,7.229,2034,5.598]],["title/interceptors/HeaderInterceptor.html",[502,3.576,2035,4.686]],["body/interceptors/HeaderInterceptor.html",[3,0.065,4,0.074,5,0.074,7,0.431,10,1.089,14,0.42,15,0.007,16,0.074,19,0.005,20,0.005,28,1.664,38,1.657,44,1.128,51,1.299,56,0.706,58,0.719,59,0.621,73,1.032,186,1.393,260,3.802,333,2.245,406,2.245,502,5.811,520,3.657,555,3.657,556,4.964,1205,5.405,1206,5.405,1350,6.799,2036,6.074,2037,6.074,2038,7.615,2039,7.615,2040,8.982,2041,6.799,2042,8.721,2043,6.074,2044,7.615,2045,6.074,2046,6.074,2047,6.074,2048,6.074,2049,6.074,2050,6.074]],["title/interfaces/Height.html",[0,0.271,357,2.204]],["body/interfaces/Height.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,54,2.49,357,4.478,2051,7.137]],["title/interfaces/IncomingTransfersIn.html",[0,0.271,2052,3.83]],["body/interfaces/IncomingTransfersIn.html",[0,0.402,2,1.458,3,0.074,4,0.084,5,0.084,7,0.493,8,0.737,14,0.48,15,0.007,16,0.084,19,0.006,20,0.006,271,6.732,2052,6.753,2053,6.942,2054,9.131,2055,8.822]],["title/interfaces/IncomingTransfersOut.html",[0,0.271,2056,3.83]],["body/interfaces/IncomingTransfersOut.html",[0,0.346,2,1.256,3,0.064,4,0.073,5,0.073,7,0.425,8,0.672,13,1.134,14,0.618,15,0.007,16,0.073,19,0.005,20,0.005,54,2.639,222,3.449,269,3.599,697,3.904,844,4.793,845,4.793,978,4.088,1603,4.088,1613,5.662,1620,3.47,1661,6.162,1843,5.662,2010,4.304,2056,6.162,2057,5.979,2058,8.672,2059,7.087,2060,8.672,2061,5.979,2062,5.979,2063,5.979,2064,5.979,2065,5.979]],["title/interfaces/IntegratedAddress.html",[0,0.271,2066,3.83]],["body/interfaces/IntegratedAddress.html",[0,0.398,2,1.445,3,0.074,4,0.084,5,0.084,7,0.489,8,0.733,9,4.397,12,4.397,13,1.15,14,0.568,15,0.007,16,0.084,19,0.006,20,0.006,56,0.557,2066,6.717,2067,6.879,2068,9.104,2069,5.623]],["title/interfaces/LogEntry.html",[0,0.271,2070,3.83]],["body/interfaces/LogEntry.html",[0,0.472,2,1.428,3,0.073,4,0.083,5,0.083,7,0.483,8,0.728,13,1.246,14,0.564,15,0.007,16,0.099,19,0.006,20,0.006,620,4.648,2070,6.669,2071,6.049,2072,7.411,2073,8.069,2074,5.556]],["title/components/LoginComponent.html",[21,0.81,93,1.548]],["body/components/LoginComponent.html",[3,0.031,4,0.036,5,0.097,7,0.208,8,0.407,10,0.817,13,0.824,14,0.499,15,0.007,16,0.036,19,0.003,20,0.003,21,0.967,22,0.989,23,1.598,24,1.05,25,1.05,26,1.05,28,1.249,29,2.326,30,0.849,31,3.19,32,2.884,33,2.222,35,1.566,38,0.992,39,2.563,41,1.767,43,0.673,44,1.486,46,1.477,47,1.295,51,1.347,52,1.928,56,0.51,57,1.704,58,0.348,59,0.3,67,1.008,68,1.631,69,1.631,70,0.989,71,2.254,72,1.05,73,1.159,74,1.05,75,0.989,76,1.05,77,0.969,78,1.05,79,0.989,80,2.082,81,1.05,82,0.989,83,1.05,84,0.969,85,1.008,86,1.631,87,0.989,88,1.05,89,0.989,90,2.695,91,1.05,92,0.989,93,2.082,94,1.05,95,0.989,96,1.05,97,0.989,98,1.05,99,0.969,100,0.933,101,1.05,102,0.989,103,1.05,104,0.989,105,1.05,106,1.029,107,0.915,108,1.05,109,0.969,110,1.05,111,0.969,112,1.05,113,1.449,114,1.631,115,0.969,116,1.05,117,0.989,118,1.05,119,0.969,120,1.05,121,0.989,122,1.05,123,0.989,124,1.05,125,0.969,126,1.05,127,0.969,128,1.05,129,0.969,130,1.05,131,0.969,132,1.102,133,1.029,134,0.969,135,1.029,136,1.05,138,1.545,141,2.329,144,2.481,156,2.254,160,2.888,167,5.154,170,1.593,186,1.046,204,1.345,248,1.194,255,2.977,265,1.38,282,3.365,288,1.837,289,2.854,308,3.726,310,1.319,388,2.399,429,2.714,435,3.486,454,1.25,463,3.65,504,1.28,555,4.348,558,2.854,597,5.199,708,2.612,713,2.612,742,5.426,766,2.562,799,2.113,820,2.113,828,2.113,831,3.823,838,2.612,900,2.399,1421,3.704,1905,3.726,2075,2.935,2076,5.59,2077,4.559,2078,6.302,2079,4.559,2080,6.302,2081,2.935,2082,4.559,2083,2.935,2084,2.935,2085,4.559,2086,2.935,2087,2.935,2088,2.935,2089,2.935,2090,2.935,2091,2.935,2092,5.59,2093,2.935,2094,2.399,2095,2.612,2096,2.935,2097,2.612,2098,2.399,2099,4.559,2100,2.935,2101,2.935,2102,2.935,2103,2.935,2104,2.935,2105,2.935,2106,2.935,2107,2.935,2108,2.935,2109,2.935,2110,2.935,2111,2.935,2112,2.935,2113,2.935,2114,4.559,2115,4.559]],["title/components/LogsComponent.html",[21,0.81,95,1.579]],["body/components/LogsComponent.html",[3,0.047,4,0.053,5,0.053,7,0.309,15,0.006,16,0.053,19,0.004,20,0.004,21,1.218,22,1.465,23,2.138,24,1.556,25,1.556,26,1.556,28,1.671,29,2.931,30,1.259,31,3.298,32,2.988,33,2.523,35,2.096,38,1.327,39,3.105,43,1.616,44,1.133,51,0.93,52,1.866,56,0.352,58,0.515,59,0.444,67,1.495,68,2.182,69,2.182,70,1.465,71,2.731,72,1.556,73,1.197,74,1.556,75,1.465,76,1.556,77,1.437,78,1.556,79,1.465,80,2.522,81,1.556,82,1.465,83,1.556,84,1.437,85,1.495,86,2.182,87,1.465,88,1.556,89,1.465,90,3.062,91,1.556,92,1.465,93,1.437,94,1.556,95,2.572,96,1.556,97,1.465,98,1.556,99,1.437,100,1.382,101,1.556,102,1.465,103,1.556,104,1.465,105,1.556,106,1.525,107,1.356,108,1.556,109,1.437,110,1.556,111,1.437,112,1.556,113,1.938,114,2.182,115,1.437,116,1.556,117,1.465,118,1.556,119,1.437,120,1.556,121,1.465,122,1.556,123,1.465,124,1.556,125,1.437,126,1.556,127,1.437,128,1.556,129,1.437,130,1.556,131,1.437,132,1.052,133,1.525,134,1.437,135,1.525,136,1.556,138,2.289,141,3.116,620,4.171,2116,4.35,2117,7.044,2118,6.1,2119,4.35,2120,4.35]],["title/modules/LogsModule.html",[487,1.747,2121,3.374]],["body/modules/LogsModule.html",[3,0.066,4,0.075,5,0.075,15,0.007,16,0.075,19,0.005,20,0.005,21,1.068,56,0.71,58,0.731,59,0.631,95,3.272,248,2.511,310,1.786,489,2.164,490,3.276,503,3.438,504,2.692,505,2.455,507,3.06,509,2.301,511,2.868,512,2.993,513,2.254,587,3.929,588,4.549,596,3.065,612,3.355,620,4.221,1157,3.462,2121,6.718,2122,5.493,2123,5.493,2124,5.493,2125,6.173,2126,6.173]],["title/interfaces/LogsState.html",[0,0.271,2074,3.83]],["body/interfaces/LogsState.html",[0,0.478,2,1.458,3,0.074,4,0.084,5,0.084,7,0.493,8,0.737,13,1.22,14,0.48,15,0.007,16,0.1,19,0.006,20,0.006,620,6.244,2070,5.674,2071,6.177,2072,5.674,2073,6.177,2074,6.753]],["title/interfaces/MakeIntegratedAddressIn.html",[0,0.271,2127,3.83]],["body/interfaces/MakeIntegratedAddressIn.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,12,4.45,13,1.168,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,2127,6.865,2128,7.137]],["title/interfaces/MakeUriIn.html",[0,0.271,1591,3.06]],["body/interfaces/MakeUriIn.html",[0,0.336,2,1.221,3,0.062,4,0.071,5,0.071,7,0.413,8,0.66,9,4.503,10,1.7,12,4.145,13,1.256,14,0.612,15,0.007,16,0.071,19,0.005,20,0.005,54,2.274,56,0.47,73,0.987,736,2.885,970,4.75,1591,4.835,1597,3.974,1598,4.183,1617,3.795,1696,4.75,1843,5.788,1845,5.171,1846,4.75,2002,5.064,2069,4.75,2129,5.811,2130,8.582,2131,8.582,2132,5.171,2133,5.811,2134,5.811,2135,5.811,2136,5.811]],["title/components/ModalComponent.html",[21,0.81,97,1.579]],["body/components/ModalComponent.html",[3,0.035,4,0.04,5,0.04,7,0.234,8,0.444,10,0.591,14,0.463,15,0.007,16,0.04,19,0.003,20,0.003,21,1.039,22,1.11,23,1.746,24,1.179,25,1.179,26,1.179,28,1.365,29,2.499,30,0.954,31,3.226,32,2.905,33,2.315,35,1.712,38,1.084,39,2.723,41,2.999,43,0.756,44,1.502,48,4.819,51,1.431,52,1.524,56,0.486,57,2.892,58,0.39,59,0.337,67,1.132,68,1.782,69,1.782,70,1.11,71,2.395,72,1.179,73,1.137,74,1.179,75,1.11,76,1.179,77,1.088,78,1.179,79,1.11,80,2.211,81,1.179,82,1.11,83,1.179,84,1.088,85,1.132,86,1.782,87,1.11,88,1.179,89,1.11,90,2.788,91,1.179,92,1.11,93,1.088,94,1.179,95,1.11,96,1.179,97,2.255,98,1.179,99,1.088,100,1.047,101,1.179,102,1.11,103,1.179,104,1.11,105,1.179,106,1.155,107,1.027,108,1.179,109,1.088,110,1.179,111,1.088,112,1.179,113,1.583,114,1.782,115,1.088,116,1.179,117,1.11,118,1.179,119,1.088,120,1.179,121,1.11,122,1.179,123,1.11,124,1.179,125,1.088,126,1.179,127,1.088,128,1.179,129,1.088,130,1.179,131,1.088,132,1.205,133,1.155,134,1.088,135,1.155,136,1.179,144,1.132,156,2.705,160,3.466,186,0.756,240,2.372,244,2.515,283,3.149,310,1.442,333,0.971,406,0.971,452,1.734,454,1.404,484,4.552,510,2.515,793,4.191,1018,5.345,1069,5.109,1529,2.515,1919,4.433,2137,3.295,2138,4.982,2139,4.982,2140,6.006,2141,6.006,2142,6.695,2143,6.18,2144,3.295,2145,6.695,2146,4.982,2147,4.982,2148,3.295,2149,3.295,2150,3.295,2151,3.295,2152,3.295,2153,4.982,2154,3.295,2155,6.006,2156,3.295,2157,3.295,2158,3.295,2159,3.295,2160,3.295,2161,3.295,2162,3.295,2163,3.295,2164,4.982,2165,4.982,2166,3.295,2167,4.982,2168,4.982,2169,3.295,2170,4.982,2171,4.982,2172,4.982]],["title/interfaces/ModalConfig.html",[0,0.271,2143,3.83]],["body/interfaces/ModalConfig.html",[0,0.29,2,1.052,3,0.054,4,0.061,5,0.061,7,0.356,8,0.599,10,1.739,13,1.197,14,0.524,15,0.007,16,0.061,19,0.005,20,0.005,38,1.462,44,1.678,51,1.931,222,3.811,484,5.438,2143,5.491,2173,5.008,2174,8.102,2175,8.102,2176,8.102,2177,8.102,2178,8.102,2179,8.102,2180,8.102,2181,8.102,2182,8.102,2183,8.102,2184,8.102,2185,5.008,2186,5.008,2187,5.008,2188,5.008,2189,5.008,2190,5.008,2191,5.008,2192,5.008]],["title/modules/ModalModule.html",[487,1.747,2193,3.576]],["body/modules/ModalModule.html",[3,0.068,4,0.077,5,0.077,15,0.007,16,0.077,19,0.005,20,0.005,56,0.686,58,0.751,59,0.648,97,3.271,489,2.224,490,3.332,503,3.497,504,2.767,505,2.523,507,3.112,509,2.365,511,2.917,512,3.044,513,2.317,612,3.413,2193,7.164,2194,5.645,2195,5.645,2196,5.645,2197,6.344,2198,6.344]],["title/injectables/NetworkHashrateChart.html",[406,1.381,1335,3.83]],["body/injectables/NetworkHashrateChart.html",[3,0.03,4,0.075,5,0.034,7,0.387,8,0.394,10,0.791,13,0.806,14,0.546,15,0.007,16,0.034,19,0.003,20,0.003,28,0.771,38,0.96,44,1.501,46,2.3,47,2.109,51,1.317,52,1.665,55,3.074,56,0.499,58,0.333,59,0.288,64,1.925,67,1.516,73,0.75,144,3.037,170,2.396,185,3.018,186,1.012,224,2.99,237,2.833,264,2.149,333,1.301,390,4.449,391,3.607,393,2.506,403,5.955,406,1.301,407,1.259,429,2.165,451,1.482,540,1.634,558,1.763,564,2.67,638,2.027,709,1.839,772,2.149,793,2.763,860,6.606,862,2.023,863,3.928,864,5.483,865,5.036,867,2.506,868,3.456,870,2.506,873,3.928,876,2.506,877,2.506,878,3.368,879,3.928,880,2.506,881,2.506,882,2.506,883,2.506,884,2.301,885,2.506,886,2.506,887,2.506,888,2.149,889,4.154,890,2.506,891,4.449,892,2.506,893,3.928,894,2.506,895,3.928,896,4.449,897,5.483,898,4.844,899,4.844,900,5.036,901,3.928,902,3.928,1007,2.882,1044,3.368,1065,2.506,1066,3.368,1081,4.846,1089,3.928,1091,3.368,1267,3.607,1270,3.928,1271,3.607,1313,3.368,1335,3.607,1359,3.368,1394,4.844,1479,2.301,1625,2.027,2199,6.162,2200,2.816,2201,4.414,2202,5.443,2203,5.443,2204,7.422,2205,2.816,2206,2.816,2207,2.816,2208,2.816,2209,4.414,2210,4.414,2211,5.443,2212,5.443,2213,2.816,2214,2.816,2215,4.414,2216,2.816,2217,4.414,2218,2.816,2219,2.816,2220,2.816,2221,2.816,2222,2.816,2223,2.816,2224,2.816,2225,2.816,2226,2.816,2227,2.816,2228,2.506,2229,3.928,2230,2.816,2231,2.816,2232,4.414,2233,2.506,2234,2.816,2235,2.816,2236,3.607,2237,4.414,2238,4.414,2239,4.414,2240,2.816,2241,2.816,2242,4.414,2243,4.414,2244,4.414,2245,4.414,2246,2.816,2247,4.414,2248,2.816,2249,2.816,2250,4.414,2251,2.816,2252,2.816,2253,2.506,2254,2.816,2255,2.816,2256,2.816,2257,2.816,2258,2.816,2259,2.816,2260,2.816,2261,2.816,2262,2.816,2263,2.816,2264,2.816,2265,2.816,2266,2.816,2267,2.816,2268,2.816,2269,2.816,2270,2.816,2271,2.816,2272,2.816]],["title/components/NoDaemonRunningDialog.html",[21,0.81,99,1.548]],["body/components/NoDaemonRunningDialog.html",[0,0.215,3,0.04,4,0.045,5,0.045,7,0.264,8,0.486,10,0.667,13,0.713,14,0.446,15,0.007,16,0.066,19,0.004,20,0.004,21,1.116,22,1.253,23,1.911,24,1.33,25,1.33,26,1.33,30,1.076,31,3.259,32,2.951,33,2.408,35,1.873,38,1.186,43,1.25,44,1.32,51,0.795,52,1.668,56,0.441,58,0.44,59,0.38,67,1.278,68,1.95,69,1.95,70,1.253,71,2.542,72,1.33,73,1.285,74,1.33,75,1.253,76,1.33,77,1.228,78,1.33,79,1.253,80,2.347,81,1.33,82,1.253,83,1.33,84,1.228,85,1.278,86,1.95,87,1.253,88,1.33,89,1.253,90,3.079,91,1.33,92,1.253,93,1.228,94,1.33,95,1.253,96,1.33,97,1.253,98,1.33,99,2.347,100,2.051,101,1.33,102,1.253,103,1.33,104,1.253,105,1.33,106,1.304,107,1.16,108,1.33,109,1.228,110,1.33,111,1.228,112,1.33,113,1.732,114,1.95,115,1.228,116,1.33,117,1.253,118,1.33,119,1.228,120,1.33,121,1.253,122,1.33,123,1.253,124,1.33,125,1.228,126,1.33,127,1.228,128,1.33,129,1.228,130,1.33,131,1.228,132,0.899,133,1.304,134,1.228,135,1.304,136,1.33,144,2.716,186,0.853,201,6.153,240,2.677,564,2.499,747,4.86,755,4.851,856,2.869,1298,2.838,1695,4.851,1862,6.183,1863,6.732,1864,3.31,1865,3.31,1866,3.31,1867,6.732,1868,2.838,1869,4.851,1870,6.324,1871,4.851,1872,6.324,1873,3.31,2273,3.719,2274,3.719,2275,3.719,2276,3.719,2277,3.719,2278,5.452,2279,5.452,2280,5.452,2281,4.851,2282,5.452,2283,5.452]],["title/components/OpenComponent.html",[21,0.81,102,1.579]],["body/components/OpenComponent.html",[3,0.033,4,0.037,5,0.037,7,0.216,8,0.418,10,0.841,13,1.032,14,0.545,15,0.007,16,0.037,19,0.003,20,0.003,21,0.989,22,1.026,23,1.644,24,1.089,25,1.089,26,1.089,28,1.285,29,2.38,30,0.881,31,3.202,32,2.895,33,2.691,35,1.611,38,1.021,39,2.614,41,2.824,43,0.698,44,1.419,46,0.986,47,0.865,48,3.376,51,1.223,52,1.75,56,0.463,57,2.722,58,0.361,59,0.311,67,1.046,68,1.678,69,1.678,70,1.026,71,2.299,72,1.089,73,1.449,74,1.089,75,1.026,76,1.089,77,1.006,78,1.089,79,1.026,80,2.123,81,1.089,82,1.026,83,1.089,84,1.006,85,1.046,86,1.678,87,1.026,88,1.089,89,1.026,90,2.725,91,1.089,92,1.026,93,1.006,94,1.089,95,1.026,96,1.089,97,1.026,98,1.089,99,1.006,100,0.968,101,1.089,102,2.165,103,1.089,104,1.026,105,1.089,106,1.067,107,0.949,108,1.089,109,1.006,110,1.089,111,1.006,112,1.089,113,1.49,114,1.678,115,1.006,116,1.089,117,1.026,118,1.089,119,1.006,120,1.089,121,1.026,122,1.089,123,1.026,124,1.089,125,1.006,126,1.089,127,1.006,128,1.089,129,1.006,130,1.089,131,1.006,132,0.736,133,1.067,134,1.006,135,1.067,136,1.089,144,2.779,156,1.089,170,2.546,173,3.73,178,7.351,186,1.076,204,1.396,265,1.432,278,2.71,310,0.881,321,1.602,342,2.936,454,1.297,484,1.833,616,2.324,621,4.02,672,2.936,742,5.498,747,2.082,766,2.622,798,2.324,799,2.192,820,2.192,828,2.192,829,2.324,1116,2.489,1421,1.653,1474,2.324,1848,2.082,1849,3.869,1854,2.082,2041,2.489,2284,3.045,2285,4.69,2286,6.752,2287,4.69,2288,4.69,2289,3.045,2290,3.045,2291,4.69,2292,3.045,2293,4.174,2294,4.69,2295,4.69,2296,4.174,2297,2.489,2298,3.045,2299,2.71,2300,2.71,2301,2.71,2302,2.489,2303,2.71,2304,2.71,2305,3.045,2306,2.192,2307,2.71,2308,3.045,2309,2.71,2310,2.489,2311,4.675,2312,2.71,2313,4.69,2314,4.69,2315,4.69]],["title/interfaces/OpenWallet.html",[0,0.271,1628,2.821]],["body/interfaces/OpenWallet.html",[0,0.472,2,1.071,3,0.055,4,0.062,5,0.062,7,0.362,8,0.606,10,1.219,12,2.462,13,1.232,14,0.47,15,0.007,16,0.103,17,3.329,19,0.005,20,0.005,34,2.859,54,2.372,55,2.432,56,0.619,132,1.233,190,4.256,222,3.246,224,1.984,237,1.787,269,3.069,310,1.475,333,1.503,429,2.028,435,4.343,621,2.683,766,3.896,844,4.44,845,4.44,847,3.329,856,2.683,991,3.069,1587,3.329,1588,3.89,1589,4.093,1590,3.486,1591,4.44,1592,3.89,1593,4.789,1594,3.486,1595,3.89,1596,4.894,1597,3.486,1598,3.67,1599,3.89,1600,3.486,1601,3.486,1602,3.069,1603,4.649,1604,3.67,1605,3.67,1606,3.329,1607,3.486,1608,3.486,1609,3.486,1610,3.486,1611,3.329,1612,3.329,1613,3.329,1614,3.486,1615,3.329,1616,3.486,1617,3.329,1618,3.486,1619,3.486,1620,4.44,1621,3.329,1622,3.486,1623,3.89,1624,3.89,1625,3.67,1626,3.486,1627,3.329,1628,4.093,1629,3.67]],["title/classes/PaginatorOptions.html",[59,0.479,2316,3.374]],["body/classes/PaginatorOptions.html",[3,0.061,4,0.07,5,0.07,7,0.407,8,0.654,14,0.59,15,0.007,16,0.089,19,0.005,20,0.005,28,2.009,44,1.585,46,2.765,47,2.425,54,2.672,59,0.749,64,3.722,212,5.015,272,3.914,846,5.994,888,5.597,1007,5.572,1022,6.975,1023,6.975,1024,6.975,2316,5.279,2317,4.368,2318,5.094,2319,6.614,2320,5.724,2321,6.526,2322,5.724,2323,6.526,2324,5.724,2325,5.724,2326,5.094]],["title/classes/PaginatorOptionsInterface.html",[59,0.479,2319,3.83]],["body/classes/PaginatorOptionsInterface.html",[3,0.064,4,0.073,5,0.073,7,0.426,8,0.673,14,0.6,15,0.007,16,0.092,19,0.005,20,0.005,28,1.642,44,1.612,54,2.689,59,0.772,64,3.294,212,5.164,272,4.099,846,6.172,888,5.763,1007,5.668,1022,7.094,1023,7.094,1024,7.094,2316,4.315,2317,4.575,2318,5.334,2319,6.758,2321,5.334,2323,5.334,2326,5.334,2327,5.994,2328,5.994,2329,5.994,2330,5.994]],["title/interfaces/ParseUri.html",[0,0.271,1626,3.205]],["body/interfaces/ParseUri.html",[0,0.475,2,1.088,3,0.055,4,0.063,5,0.063,7,0.368,8,0.613,10,1.231,12,2.501,13,1.19,14,0.358,15,0.007,16,0.104,17,3.382,19,0.005,20,0.005,34,2.904,54,2.384,55,2.458,56,0.624,132,1.252,190,4.301,222,3.266,224,2.015,237,1.815,269,3.118,310,1.499,333,1.527,429,2.06,435,3.51,621,2.725,766,3.149,844,4.475,845,4.475,847,3.382,856,2.725,991,3.118,1587,3.382,1588,3.952,1589,4.136,1590,3.541,1591,5.362,1592,3.952,1593,4.826,1594,3.541,1595,3.952,1596,4.946,1597,3.541,1598,3.728,1599,3.952,1600,3.541,1601,3.541,1602,3.118,1603,4.698,1604,3.728,1605,3.728,1606,3.382,1607,3.541,1608,3.541,1609,3.541,1610,3.541,1611,3.382,1612,3.382,1613,3.382,1614,3.541,1615,3.382,1616,3.541,1617,3.382,1618,3.541,1619,3.541,1620,4.475,1621,3.382,1622,3.541,1623,3.952,1624,3.952,1625,3.728,1626,4.698,1627,5.362,1628,3.118,1629,3.728]],["title/interfaces/Payment.html",[0,0.271,2002,3.205]],["body/interfaces/Payment.html",[0,0.371,2,1.348,3,0.069,4,0.078,5,0.078,7,0.456,8,0.702,12,4.294,13,1.215,14,0.631,15,0.007,16,0.078,19,0.005,20,0.005,54,2.671,1611,5.806,1843,5.806,2002,5.387,2059,7.267,2331,6.415,2332,8.891]],["title/modules/PipesModule.html",[487,1.747,1130,2.934]],["body/modules/PipesModule.html",[3,0.049,4,0.056,5,0.056,15,0.007,16,0.056,19,0.004,20,0.004,56,0.634,58,0.547,59,0.472,489,1.62,490,2.71,503,2.844,504,2.016,505,1.839,507,2.531,509,1.724,511,2.372,512,2.476,513,1.688,612,2.775,1130,6.148,1132,6.674,1878,7.075,1892,7.075,1985,7.075,2022,7.075,2333,4.114,2334,4.114,2335,4.114,2336,7.075,2337,7.075,2338,7.075,2339,7.075,2340,4.623,2341,4.623,2342,4.623]],["title/interfaces/PluginDefinition.html",[0,0.271,2343,3.83]],["body/interfaces/PluginDefinition.html",[0,0.437,2,1.256,3,0.064,4,0.073,5,0.073,7,0.425,8,0.672,13,1.26,14,0.618,15,0.007,16,0.1,19,0.005,20,0.005,54,1.668,55,2.139,64,2.608,73,1.473,100,2.756,185,4.088,402,4.304,709,3.904,1097,4.088,2343,6.75,2344,4.886,2345,7.717,2346,7.717,2347,7.717,2348,7.087,2349,5.32,2350,5.32,2351,4.886,2352,4.886,2353,4.886,2354,4.886]],["title/interfaces/Plugins.html",[0,0.271,185,3.205]],["body/interfaces/Plugins.html",[0,0.452,2,1.329,3,0.068,4,0.077,5,0.077,7,0.449,8,0.696,13,1.157,14,0.54,15,0.007,16,0.103,19,0.005,20,0.005,54,2.364,55,2.263,64,2.76,73,1.075,100,2.011,185,5.341,402,4.554,709,4.131,1097,4.326,2343,7.232,2344,5.171,2345,5.63,2346,5.63,2347,5.63,2348,6.384,2349,7.873,2350,7.873,2351,5.171,2352,5.171,2353,5.171,2354,5.171]],["title/components/PostComponent.html",[21,0.81,104,1.579]],["body/components/PostComponent.html",[3,0.039,4,0.044,5,0.044,7,0.258,8,0.478,10,0.961,14,0.37,15,0.007,16,0.044,19,0.004,20,0.004,21,1.102,22,1.225,23,1.879,24,1.301,25,1.301,26,1.301,28,1.469,29,2.65,30,1.052,31,3.253,32,2.945,33,2.391,35,1.842,38,1.167,39,2.859,43,0.834,44,1.506,51,1.503,52,2.294,56,0.434,58,0.431,59,0.372,67,1.249,68,1.918,69,1.918,70,1.225,71,2.515,72,1.301,73,1.273,74,1.301,75,1.225,76,1.301,77,1.201,78,1.301,79,1.225,80,2.322,81,1.301,82,1.225,83,1.301,84,1.201,85,1.249,86,1.918,87,1.225,88,1.301,89,1.225,90,2.952,91,1.301,92,1.225,93,1.201,94,1.301,95,1.225,96,1.301,97,1.225,98,1.301,99,1.201,100,1.156,101,1.301,102,1.225,103,1.301,104,2.368,105,1.301,106,1.275,107,1.134,108,1.301,109,1.201,110,1.301,111,1.201,112,1.301,113,1.704,114,1.918,115,1.201,116,1.301,117,1.225,118,1.301,119,1.201,120,1.301,121,1.225,122,1.301,123,1.225,124,1.301,125,1.201,126,1.301,127,1.201,128,1.301,129,1.201,130,1.301,131,1.201,132,0.879,133,1.275,134,1.201,135,1.275,136,1.301,138,1.914,141,2.739,144,2.695,156,2.278,157,4.585,162,4.59,186,1.23,333,1.072,454,1.549,518,4.232,520,2.189,564,1.771,736,3.162,817,3.86,909,4.356,931,3.236,1166,2.618,1168,3.357,2355,3.636,2356,6.369,2357,5.362,2358,4.771,2359,7.03,2360,4.771,2361,5.362,2362,3.636,2363,4.771,2364,3.636,2365,3.236,2366,3.636,2367,3.636,2368,3.636,2369,3.636,2370,3.636,2371,3.636,2372,3.236,2373,5.362,2374,3.636,2375,3.636,2376,5.362]],["title/modules/PostModule.html",[487,1.747,2377,3.374]],["body/modules/PostModule.html",[3,0.065,4,0.074,5,0.074,15,0.007,16,0.074,19,0.005,20,0.005,56,0.761,58,0.719,59,0.621,104,3.253,489,2.129,490,3.243,503,3.404,504,2.649,505,2.416,507,3.029,509,2.265,511,2.839,512,2.963,513,2.218,528,5.207,529,4.154,534,4.271,535,3.407,547,5.811,548,4.373,612,3.322,727,4.271,728,3.407,1130,4.767,1131,4.635,2377,6.695,2378,5.405,2379,5.405,2380,5.405,2381,6.074,2382,6.074]],["title/modules/PostRoutingModule.html",[487,1.747,2383,3.83]],["body/modules/PostRoutingModule.html",[3,0.072,4,0.081,5,0.081,15,0.007,16,0.081,19,0.006,20,0.006,56,0.703,58,0.793,59,0.684,248,2.724,310,1.938,471,5.474,489,2.348,509,2.497,511,3.015,512,3.147,513,2.446,586,4.032,587,4.131,588,4.716,596,3.325,612,2.921,1157,3.756,2383,6.61,2384,6.698,2385,5.111,2386,6.698,2387,6.698]],["title/components/ProfileComponent.html",[21,0.81,106,1.643]],["body/components/ProfileComponent.html",[3,0.039,4,0.044,5,0.044,7,0.256,8,0.475,13,0.696,14,0.249,15,0.007,16,0.044,19,0.004,20,0.004,21,1.095,22,1.213,23,1.866,24,1.288,25,1.288,26,1.288,28,1.459,29,2.636,30,1.042,31,3.251,32,2.942,33,2.384,35,1.829,38,1.159,39,2.846,43,1.453,44,1.176,46,1.167,47,1.023,51,0.77,52,1.629,56,0.431,58,0.427,59,0.368,64,2.322,67,1.238,68,1.905,69,1.905,70,1.213,71,2.503,72,1.288,73,1.268,74,1.288,75,1.213,76,1.288,77,1.19,78,1.288,79,1.213,80,2.742,81,1.288,82,1.213,83,1.288,84,1.19,85,1.238,86,1.905,87,1.213,88,1.288,89,1.213,90,2.855,91,1.288,92,1.213,93,1.19,94,1.288,95,1.213,96,1.288,97,1.213,98,1.288,99,1.19,100,1.145,101,1.288,102,1.213,103,1.288,104,1.213,105,1.288,106,2.453,107,1.975,108,1.288,109,1.19,110,1.288,111,1.19,112,1.288,113,1.692,114,1.905,115,1.19,116,1.288,117,1.213,118,1.288,119,1.19,120,1.288,121,1.213,122,1.288,123,1.213,124,1.288,125,1.19,126,1.288,127,1.19,128,1.288,129,1.19,130,1.288,131,1.19,132,0.871,133,1.263,134,1.19,135,1.263,136,1.288,138,1.896,141,2.72,144,2.176,201,5.037,269,4.213,416,3.477,600,4.213,621,2.802,677,5.34,754,4.352,856,2.802,878,4.834,2388,3.602,2389,5.965,2390,6.334,2391,5.324,2392,6.334,2393,3.602,2394,3.602,2395,6.334,2396,5.324,2397,6.997,2398,6.334,2399,4.738,2400,5.324,2401,5.324,2402,3.602,2403,3.602,2404,3.602,2405,5.324,2406,5.324,2407,8.302,2408,6.227,2409,6.227]],["title/interfaces/ProfileState.html",[0,0.271,2410,3.83]],["body/interfaces/ProfileState.html",[0,0.336,2,1.218,3,0.062,4,0.07,5,0.07,7,0.412,8,0.659,13,1.255,14,0.626,15,0.007,16,0.07,19,0.005,20,0.005,73,1.256,175,3.05,398,4.738,429,2.941,564,2.442,577,4.738,621,4.661,703,5.158,752,4.738,862,3.93,1104,4.424,1731,4.738,2389,5.642,2410,6.043,2411,5.797,2412,8.574,2413,8.574,2414,8.574,2415,8.574,2416,7.393,2417,5.797,2418,5.797,2419,5.797,2420,5.797,2421,5.797,2422,5.797,2423,5.797,2424,5.797,2425,5.797,2426,4.424,2427,5.797]],["title/interfaces/QueryKeyIn.html",[0,0.271,2428,3.83]],["body/interfaces/QueryKeyIn.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,13,1.168,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,2428,6.865,2429,7.137,2430,9.214]],["title/interfaces/QueryKeyOut.html",[0,0.271,2431,3.83]],["body/interfaces/QueryKeyOut.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,13,1.168,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,429,3.665,2431,6.865,2432,7.137]],["title/pipes/RemoveTrailingZerosPipe.html",[1465,2.044,2336,3.576]],["body/pipes/RemoveTrailingZerosPipe.html",[3,0.065,4,0.074,5,0.074,10,1.089,15,0.007,16,0.074,19,0.005,20,0.005,28,1.664,30,1.758,38,1.322,43,1.393,44,1.128,47,2.478,51,1.299,55,2.173,56,0.491,58,0.719,59,0.621,64,3.918,73,1.413,186,1.393,224,2.963,333,2.245,1465,3.322,1879,3.526,1882,3.657,1883,6.224,1887,4.584,1888,4.584,2336,5.811,2433,6.074,2434,7.615,2435,6.074,2436,6.074,2437,7.615,2438,6.074,2439,7.615,2440,6.074,2441,6.074]],["title/components/RestoreComponent.html",[21,0.81,109,1.548]],["body/components/RestoreComponent.html",[3,0.033,4,0.037,5,0.037,7,0.216,8,0.418,9,2.263,10,1.024,14,0.324,15,0.007,16,0.037,19,0.003,20,0.003,21,0.988,22,1.024,23,1.642,24,1.088,25,1.088,26,1.088,28,1.284,29,2.378,30,0.88,31,3.201,32,2.895,33,2.642,35,1.61,38,1.019,39,2.612,43,0.697,44,1.193,51,1.002,52,1.749,56,0.52,58,0.36,59,0.311,63,3.575,67,1.045,68,1.676,69,1.676,70,1.024,71,2.297,72,1.088,73,1.091,74,1.088,75,1.024,76,1.088,77,1.004,78,1.088,79,1.024,80,2.121,81,1.088,82,1.024,83,1.088,84,1.004,85,1.045,86,1.676,87,1.024,88,1.088,89,1.024,90,2.724,91,1.088,92,1.024,93,1.004,94,1.088,95,1.024,96,1.088,97,1.024,98,1.088,99,1.004,100,0.966,101,1.088,102,1.024,103,1.088,104,1.024,105,1.088,106,1.066,107,0.948,108,1.088,109,2.121,110,1.088,111,1.004,112,1.088,113,1.489,114,1.676,115,1.004,116,1.088,117,1.024,118,1.088,119,1.004,120,1.088,121,1.024,122,1.088,123,1.024,124,1.088,125,1.004,126,1.088,127,1.004,128,1.088,129,1.004,130,1.088,131,1.004,132,2.032,133,1.066,134,1.004,135,1.066,136,1.088,173,5.298,186,1.311,357,2.204,429,2.554,435,2.393,454,1.295,731,1.6,766,3.358,1014,4.985,1629,3.373,1848,2.079,1849,3.866,1854,2.079,1903,3.373,2442,3.041,2443,4.685,2444,5.716,2445,4.623,2446,4.685,2447,3.041,2448,3.041,2449,5.249,2450,2.485,2451,2.706,2452,3.041,2453,2.706,2454,4.169,2455,3.041,2456,4.169,2457,3.041,2458,2.706,2459,4.169,2460,4.169,2461,3.041,2462,3.041,2463,3.041,2464,3.041,2465,3.041,2466,3.041,2467,3.041,2468,3.041,2469,3.041,2470,3.041,2471,3.041,2472,4.685,2473,4.169,2474,4.169,2475,5.715,2476,3.829,2477,4.685,2478,4.685,2479,4.685,2480,4.685,2481,4.685,2482,3.829,2483,4.685]],["title/interfaces/RestoreWallet.html",[0,0.271,2445,3.374]],["body/interfaces/RestoreWallet.html",[0,0.272,2,0.987,3,0.05,4,0.057,5,0.089,7,0.334,8,0.574,9,4.123,10,1.637,11,2.333,13,1.238,14,0.604,15,0.007,16,0.057,17,5.154,19,0.004,20,0.004,33,2.661,54,2.047,55,2.302,63,5.6,73,1.093,85,2.211,132,1.556,156,2.823,192,3.213,222,2.919,224,3.071,272,4.4,337,4.632,357,3.026,429,3.139,435,4.032,766,3.913,822,3.213,848,4.202,859,5.259,1104,4.911,1612,4.202,1728,4.911,2445,4.632,2454,7.023,2456,7.023,2459,7.023,2460,7.023,2482,6.45,2484,4.699,2485,9.134,2486,6.435,2487,6.435,2488,6.435]],["title/components/RootComponent.html",[21,0.81,111,1.548]],["body/components/RootComponent.html",[3,0.037,4,0.043,5,0.043,7,0.248,8,0.464,14,0.51,15,0.007,16,0.043,19,0.004,20,0.004,21,1.077,22,1.178,23,1.826,24,1.251,25,1.251,26,1.251,30,1.012,31,3.242,32,2.934,33,2.361,35,1.79,38,1.133,43,1.428,44,1.488,46,1.687,47,1.48,51,0.748,52,1.07,56,0.283,58,0.414,59,0.357,67,1.202,68,1.863,69,1.863,70,1.178,71,2.467,72,1.251,73,1.057,74,1.251,75,1.178,76,1.251,77,1.155,78,1.251,79,1.178,80,2.278,81,1.251,82,1.178,83,1.251,84,1.155,85,1.202,86,1.863,87,1.178,88,1.251,89,1.178,90,2.927,91,1.251,92,1.178,93,1.155,94,1.251,95,1.178,96,1.251,97,1.178,98,1.251,99,1.155,100,1.111,101,1.251,102,1.178,103,1.251,104,1.178,105,1.251,106,1.226,107,1.09,108,1.251,109,1.155,110,1.251,111,2.278,112,1.251,113,1.655,114,1.863,115,1.155,116,1.251,117,1.178,118,1.251,119,1.155,120,1.251,121,1.178,122,1.251,123,1.178,124,1.251,125,1.155,126,1.251,127,1.155,128,1.251,129,1.155,130,1.251,131,1.155,132,0.846,133,1.226,134,1.155,135,1.226,136,1.251,144,3.108,175,2.741,222,3.076,237,1.826,339,4.257,402,3.75,452,2.741,600,3.136,616,4.75,696,4.635,762,5.539,774,3.975,1666,4.257,2015,3.975,2358,6.563,2489,3.497,2490,5.209,2491,6.225,2492,6.225,2493,6.897,2494,5.209,2495,3.497,2496,3.497,2497,3.497,2498,3.497,2499,3.497,2500,4.257,2501,5.209,2502,5.209,2503,5.209,2504,5.209,2505,5.209,2506,5.209,2507,5.209,2508,5.209,2509,5.209,2510,5.209,2511,5.209,2512,5.209,2513,5.209,2514,5.209,2515,5.209,2516,4.635,2517,5.209,2518,6.897,2519,4.635,2520,5.209,2521,5.209,2522,5.209]],["title/modules/RootModule.html",[487,1.747,2523,3.374]],["body/modules/RootModule.html",[3,0.053,4,0.061,5,0.061,15,0.007,16,0.061,19,0.005,20,0.005,56,0.787,58,0.592,59,0.511,111,2.872,204,2.29,253,3.009,254,3.009,265,3.155,489,1.752,490,2.857,501,5.234,503,2.999,504,2.18,505,1.988,507,2.668,509,2.501,511,2.501,512,2.611,513,1.825,524,4.2,525,3.128,526,5.483,527,4.084,528,4.588,529,3.417,534,3.763,535,2.803,538,4.2,539,3.009,540,2.901,547,5.12,548,3.597,727,3.763,728,2.803,729,5.483,731,2.63,1030,3.417,1120,6.258,1129,5.483,1130,4.2,1131,3.814,1137,4.084,1143,5.97,2377,6.258,2523,6.896,2524,4.447,2525,4.447,2526,4.447,2527,6.258,2528,6.258,2529,4.997,2530,4.997,2531,5.483,2532,4.084,2533,6.709,2534,4.997,2535,4.997,2536,4.997,2537,4.997,2538,4.997]],["title/modules/RootRoutingModule.html",[487,1.747,582,3.374]],["body/modules/RootRoutingModule.html",[3,0.06,4,0.068,5,0.068,11,3.595,15,0.007,16,0.068,19,0.005,20,0.005,21,1.252,56,0.739,58,0.664,59,0.573,111,2.392,119,2.392,149,4.728,170,3.931,224,2.818,228,4.586,248,2.282,310,1.624,324,4.728,345,3.837,489,1.967,490,3.084,503,3.236,504,2.448,505,2.232,507,2.232,508,3.147,509,2.7,511,2.7,512,2.818,513,2.049,564,2.392,582,6.464,586,3.378,587,3.699,588,4.352,594,5.018,595,3.837,596,3.595,598,6.443,599,5.918,612,2.448,671,3.837,1157,3.147,2523,6.464,2539,5.611,2540,5.611,2541,5.611,2542,5.611,2543,5.611,2544,5.611,2545,5.611,2546,5.611,2547,5.611,2548,5.611,2549,5.611,2550,5.611]],["title/components/SettingsComponent.html",[21,0.81,113,1.489]],["body/components/SettingsComponent.html",[3,0.043,4,0.049,5,0.049,7,0.288,8,0.518,13,0.531,14,0.28,15,0.007,16,0.049,19,0.004,20,0.004,21,1.172,22,1.366,23,2.035,24,1.451,25,1.451,26,1.451,28,1.59,29,2.821,30,1.174,31,3.281,32,2.972,33,2.472,35,1.994,38,1.263,39,3.01,43,1.555,44,1.374,46,1.314,47,1.152,51,1.241,52,2.264,56,0.328,58,0.48,59,0.414,67,1.394,68,2.076,69,2.076,70,1.366,71,2.647,72,1.451,73,1.152,74,1.451,75,1.366,76,1.451,77,1.34,78,1.451,79,1.366,80,2.444,81,1.451,82,1.366,83,1.451,84,1.34,85,1.394,86,2.076,87,1.366,88,1.451,89,1.366,90,2.942,91,1.451,92,1.366,93,1.34,94,1.451,95,1.366,96,1.451,97,1.366,98,1.451,99,1.34,100,1.289,101,1.451,102,1.366,103,1.451,104,1.366,105,1.451,106,1.422,107,1.265,108,1.451,109,1.34,110,1.451,111,1.34,112,1.451,113,2.488,114,2.076,115,1.34,116,1.451,117,1.366,118,1.451,119,1.34,120,1.451,121,1.366,122,1.451,123,1.366,124,1.451,125,1.34,126,1.451,127,1.34,128,1.451,129,1.34,130,1.451,131,1.34,132,0.981,133,1.422,134,1.34,135,1.422,136,1.451,138,2.135,141,2.965,162,4.832,354,3.61,416,3.791,909,4.636,2551,4.056,2552,6.779,2553,5.166,2554,6.779,2555,5.805,2556,4.056,2557,4.056,2558,5.805,2559,5.805,2560,4.056,2561,4.056]],["title/components/SettingsComponent-1.html",[21,0.675,64,1.701,113,1.24]],["body/components/SettingsComponent-1.html",[3,0.045,4,0.051,5,0.051,7,0.3,15,0.006,16,0.051,19,0.004,20,0.004,21,1.198,22,1.422,23,2.093,24,1.51,25,1.51,26,1.51,28,1.636,29,2.884,30,1.222,31,3.291,32,2.981,33,2.599,35,2.052,38,1.299,39,3.064,43,1.589,44,1.109,51,0.903,52,1.827,56,0.342,58,0.5,59,0.431,64,1.841,66,4.557,67,1.45,68,2.136,69,2.136,70,1.422,71,2.695,72,1.51,73,1.177,74,1.51,75,1.422,76,1.51,77,1.394,78,1.51,79,1.422,80,2.489,81,1.51,82,1.422,83,1.51,84,1.394,85,1.45,86,2.136,87,1.422,88,1.51,89,1.422,90,3.045,91,1.51,92,1.422,93,1.394,94,1.51,95,1.422,96,1.51,97,1.422,98,1.51,99,1.394,100,1.341,101,1.51,102,1.422,103,1.51,104,1.422,105,1.51,106,1.48,107,1.316,108,1.51,109,1.394,110,1.51,111,1.394,112,1.51,113,2.526,114,2.136,115,1.394,116,1.51,117,1.422,118,1.51,119,1.394,120,1.51,121,1.422,122,1.51,123,1.422,124,1.51,125,1.394,126,1.51,127,1.394,128,1.51,129,1.394,130,1.51,131,1.394,132,1.021,133,1.48,134,1.394,135,1.48,136,1.51,344,4.557,416,4.92,621,3.143,862,2.737,1099,4.881,2553,5.314,2562,4.221,2563,4.221,2564,4.221,2565,5.314,2566,5.972,2567,4.221,2568,4.221]],["title/injectables/SettingsEffects.html",[406,1.381,2569,4.17]],["body/injectables/SettingsEffects.html",[3,0.06,4,0.068,5,0.068,7,0.397,8,0.644,10,1.001,13,1.106,14,0.553,15,0.007,16,0.068,19,0.005,20,0.005,43,1.281,44,1.341,46,1.809,47,1.587,56,0.684,58,0.661,59,0.571,73,0.949,156,1.997,158,7.117,173,4.642,174,6.91,186,1.281,189,5.899,190,5.293,191,5.899,237,2.53,252,4.261,253,3.362,254,3.362,333,2.128,406,2.128,407,2.496,454,2.378,1433,4.261,1434,6.455,1436,6.537,1437,5.899,1463,4.564,1476,4.564,1477,3.819,2569,6.423,2570,5.584,2571,5.584,2572,7.218,2573,6.423,2574,7.218,2575,5.584]],["title/modules/SettingsModule.html",[487,1.747,2576,3.576]],["body/modules/SettingsModule.html",[3,0.056,4,0.063,5,0.063,11,2.583,15,0.007,16,0.063,19,0.005,20,0.005,21,0.9,32,1.592,56,0.773,58,0.616,59,0.532,113,2.851,149,3.397,170,2.824,237,1.824,248,2.116,310,1.505,324,3.397,416,4.5,489,1.824,490,2.935,503,3.08,504,2.269,505,2.069,507,2.741,509,2.569,511,2.569,512,2.682,513,1.9,524,4.314,525,3.257,528,4.712,529,3.558,530,4.961,531,3.745,534,3.865,535,2.918,538,4.314,539,3.132,540,3.02,564,1.718,587,3.52,588,4.195,596,3.421,600,3.132,612,2.269,620,3.558,727,3.865,728,2.918,856,2.738,1139,5.632,1140,4.252,1141,4.252,1157,2.918,1216,4.629,2121,6.331,2385,3.97,2531,5.632,2532,4.252,2576,6.951,2577,4.629,2578,4.629,2579,5.202,2580,5.202,2581,5.632,2582,4.252,2583,5.202,2584,5.202,2585,5.202,2586,4.629,2587,5.202,2588,5.202]],["title/modules/SettingsRoutingModule.html",[487,1.747,608,3.576]],["body/modules/SettingsRoutingModule.html",[3,0.069,4,0.079,5,0.079,15,0.007,16,0.079,19,0.006,20,0.006,56,0.722,58,0.766,59,0.661,248,2.632,310,1.872,416,4.225,489,2.268,507,2.573,508,3.629,509,2.412,511,2.952,512,3.081,513,2.362,586,3.895,587,4.045,588,4.645,594,5.357,595,4.424,596,3.212,608,6.043,612,2.822,671,4.424,1157,3.629,2032,5.757,2385,4.937,2589,6.47,2590,6.47,2591,6.47]],["title/interfaces/SettingsState.html",[0,0.271,2592,4.17]],["body/interfaces/SettingsState.html",[0,0.335,2,1.215,3,0.062,4,0.07,5,0.07,7,0.411,8,0.658,13,1.184,14,0.644,15,0.007,16,0.07,19,0.005,20,0.005,190,5.54,204,3.383,222,3.893,1007,3.776,1091,4.412,2253,5.145,2592,6.568,2593,5.782,2594,8.566,2595,8.566,2596,8.566,2597,8.566,2598,8.566,2599,8.566,2600,8.566,2601,5.782,2602,5.782]],["title/pipes/ShruggiePipe.html",[1465,2.044,2337,3.576]],["body/pipes/ShruggiePipe.html",[3,0.07,4,0.079,5,0.079,10,1.166,15,0.007,16,0.079,19,0.006,20,0.006,28,1.783,30,1.883,38,1.416,44,1.208,51,1.391,56,0.527,58,0.77,59,0.665,73,1.457,186,1.492,237,2.281,321,4.702,333,2.342,1081,4.249,1465,3.466,1879,3.777,1882,3.917,1887,4.784,1888,3.917,1895,5.72,2337,6.064,2603,6.507,2604,7.946,2605,6.507,2606,6.507]],["title/components/SpartaComponent.html",[21,0.81,115,1.548]],["body/components/SpartaComponent.html",[3,0.038,4,0.043,5,0.043,7,0.254,8,0.472,10,0.949,13,0.912,14,0.514,15,0.007,16,0.043,19,0.004,20,0.004,21,1.09,22,1.204,23,1.856,24,1.278,25,1.278,26,1.278,28,1.45,29,2.624,30,1.034,31,3.248,32,2.94,33,2.378,35,1.819,38,1.152,39,2.835,43,0.82,44,1.447,51,1.132,52,1.929,56,0.51,58,0.423,59,0.365,67,1.228,68,1.894,69,1.894,70,1.204,71,2.493,72,1.278,73,1.264,74,1.278,75,1.204,76,1.278,77,1.18,78,1.278,79,1.204,80,2.302,81,1.278,82,1.204,83,1.278,84,1.18,85,1.228,86,1.894,87,1.204,88,1.278,89,1.204,90,2.941,91,1.278,92,1.204,93,1.18,94,1.278,95,1.204,96,1.278,97,1.204,98,1.278,99,1.18,100,1.136,101,1.278,102,1.204,103,1.278,104,1.204,105,1.278,106,1.253,107,1.114,108,1.278,109,1.18,110,1.278,111,1.18,112,1.278,113,1.682,114,1.894,115,2.302,116,1.278,117,1.204,118,1.278,119,1.18,120,1.278,121,1.204,122,1.278,123,1.204,124,1.278,125,1.18,126,1.278,127,1.18,128,1.278,129,1.18,130,1.278,131,1.18,132,1.28,133,1.253,134,1.18,135,1.253,136,1.278,138,1.881,141,2.704,144,2.166,156,1.278,168,5.697,186,1.214,227,4.811,248,1.454,310,1.532,339,4.327,454,1.522,463,2.334,518,4.197,520,2.152,564,1.18,736,3.869,818,4.539,840,4.711,868,2.004,1166,2.573,1168,3.314,1188,2.727,1195,2.727,1566,2.727,2360,4.711,2363,4.711,2365,6.203,2607,3.574,2608,6.305,2609,5.294,2610,6.305,2611,5.294,2612,3.574,2613,3.574,2614,3.574,2615,3.574,2616,3.18,2617,3.574,2618,3.574,2619,3.574,2620,3.574,2621,3.574,2622,3.574,2623,3.574,2624,3.574,2625,3.574,2626,3.574,2627,3.574,2628,5.294]],["title/modules/SpartaModule.html",[487,1.747,2527,3.374]],["body/modules/SpartaModule.html",[3,0.069,4,0.078,5,0.078,15,0.007,16,0.078,19,0.005,20,0.005,56,0.72,58,0.762,59,0.657,115,3.07,489,2.255,490,3.361,503,3.527,504,2.806,505,2.559,507,3.139,509,2.399,511,2.942,512,3.071,513,2.349,727,4.426,728,3.608,2527,6.692,2629,5.725,2630,5.725,2631,6.434,2632,6.434]],["title/modules/SpartaRoutingModule.html",[487,1.747,2633,3.83]],["body/modules/SpartaRoutingModule.html",[3,0.072,4,0.082,5,0.082,15,0.007,16,0.082,19,0.006,20,0.006,21,1.162,56,0.731,58,0.795,59,0.686,115,2.676,248,2.732,310,1.944,489,2.355,509,2.505,511,3.021,512,3.152,513,2.453,586,4.044,587,4.139,588,4.722,596,3.335,612,2.93,1157,3.767,2633,6.621,2634,6.717,2635,6.717,2636,6.717]],["title/interfaces/SplitIntegratedAddressOut.html",[0,0.271,2637,3.83]],["body/interfaces/SplitIntegratedAddressOut.html",[0,0.398,2,1.445,3,0.074,4,0.084,5,0.084,7,0.489,8,0.733,9,4.397,12,4.397,13,1.15,14,0.568,15,0.007,16,0.084,19,0.006,20,0.006,56,0.557,2069,5.623,2637,6.717,2638,6.879,2639,9.104]],["title/components/StatusComponent.html",[21,0.81,117,1.579]],["body/components/StatusComponent.html",[3,0.035,4,0.04,5,0.04,7,0.234,8,0.444,10,0.59,14,0.542,15,0.007,16,0.04,19,0.003,20,0.003,21,1.038,22,1.108,23,1.744,24,1.177,25,1.177,26,1.177,28,1.363,29,2.497,30,0.952,31,3.225,32,2.918,33,2.313,35,1.71,38,1.083,39,2.721,43,0.755,44,1.501,51,0.704,55,2.393,56,0.541,58,0.39,59,0.336,64,1.435,67,1.131,68,1.78,69,1.78,70,1.108,71,2.393,72,1.177,73,1.136,74,1.177,75,1.108,76,1.177,77,1.087,78,1.177,79,1.108,80,2.732,81,1.177,82,1.108,83,1.177,84,1.087,85,1.131,86,1.78,87,1.108,88,1.177,89,1.108,90,2.886,91,1.177,92,1.108,93,1.087,94,1.177,95,1.108,96,1.177,97,1.108,98,1.177,99,1.087,100,2.126,101,1.177,102,1.108,103,1.177,104,1.108,105,1.177,106,1.153,107,1.026,108,1.177,109,1.087,110,1.177,111,1.087,112,1.177,113,1.581,114,1.78,115,1.087,116,1.177,117,2.253,118,1.177,119,1.087,120,1.177,121,1.108,122,1.177,123,1.108,124,1.177,125,1.087,126,1.177,127,1.087,128,1.177,129,1.087,130,1.177,131,1.087,132,0.796,133,1.153,134,1.087,135,1.153,136,1.177,138,1.732,141,2.542,144,2.468,145,4.104,156,2.393,160,2.75,176,4.027,186,0.755,213,3.919,229,2.928,261,2.149,262,2.369,283,1.548,331,2.689,357,2.34,359,4.067,360,2.511,366,2.928,375,4.428,376,2.928,390,4.067,391,2.689,564,1.087,683,2.511,709,3.249,772,2.511,857,2.689,991,1.981,996,4.905,1007,2.149,1039,4.067,1040,2.928,1041,2.928,1042,5.34,1043,2.369,1044,3.798,1045,2.511,1046,2.928,1047,2.928,1048,2.928,1085,2.149,1091,2.511,1313,2.511,1868,2.511,1952,2.928,2228,2.928,2640,3.291,2641,6.001,2642,4.976,2643,6.69,2644,6.001,2645,6.001,2646,6.001,2647,3.291,2648,7.185,2649,4.976,2650,3.291,2651,3.291,2652,3.291,2653,3.291,2654,3.291,2655,3.291,2656,4.976,2657,4.976,2658,6.69,2659,6.69,2660,6.001,2661,3.291,2662,3.291]],["title/modules/StatusModule.html",[487,1.747,500,3.374]],["body/modules/StatusModule.html",[3,0.063,4,0.072,5,0.072,15,0.007,16,0.072,19,0.005,20,0.005,56,0.764,58,0.699,59,0.603,99,3.005,117,3.24,201,4.248,489,2.069,490,3.185,500,6.795,503,3.342,504,2.574,505,2.347,507,2.974,509,2.2,511,2.788,512,2.91,513,2.155,524,4.681,525,3.694,534,4.194,535,3.31,536,5.707,537,4.504,612,3.262,727,4.194,728,3.31,1868,4.504,2663,5.251,2664,5.251,2665,5.251,2666,5.901,2667,5.901,2668,7.478,2669,5.901,2670,5.901]],["title/interfaces/StoreOut.html",[0,0.271,2671,3.83]],["body/interfaces/StoreOut.html",[0,0.429,2,1.558,3,0.079,4,0.09,5,0.09,15,0.006,16,0.09,19,0.006,20,0.006,2671,7.02,2672,7.416]],["title/interfaces/SweepAllIn.html",[0,0.271,2673,3.83]],["body/interfaces/SweepAllIn.html",[0,0.258,2,0.937,3,0.048,4,0.054,5,0.054,7,0.317,8,0.554,9,4.057,10,1.736,11,2.214,12,3.728,13,1.182,14,0.617,15,0.007,16,0.054,19,0.004,20,0.004,34,3.481,54,2.635,55,2.761,144,2.133,192,3.05,222,3.551,333,2.275,651,4.737,822,3.05,844,3.603,845,3.603,847,4.053,856,3.267,968,4.468,991,3.737,1589,3.737,1593,3.886,1606,5.04,1607,4.245,1608,4.245,1609,4.245,1610,4.245,1611,5.04,1612,4.053,1613,4.053,1614,4.245,1615,4.053,1616,4.245,1617,4.053,1618,5.278,1619,4.245,1620,4.48,1622,4.245,2673,5.073,2674,4.46,2675,3.969,2676,7.719,2677,7.719,2678,7.719,2679,7.719,2680,7.719,2681,6.207]],["title/interfaces/SweepAllOut.html",[0,0.271,2682,3.83]],["body/interfaces/SweepAllOut.html",[0,0.391,2,1.42,3,0.072,4,0.082,5,0.082,7,0.48,8,0.725,13,1.263,14,0.603,15,0.007,16,0.082,19,0.006,20,0.006,2682,6.645,2683,6.757,2684,9.05,2685,7.396,2686,9.05]],["title/interfaces/SweepDustOut.html",[0,0.271,2687,4.17]],["body/interfaces/SweepDustOut.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,13,1.168,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,2685,7.531,2687,7.474,2688,7.137]],["title/interfaces/Task.html",[0,0.271,2689,3.83]],["body/interfaces/Task.html",[0,0.252,2,0.914,3,0.047,4,0.053,5,0.074,7,0.309,8,0.544,13,1.09,14,0.487,15,0.007,16,0.074,19,0.004,20,0.004,21,1.055,31,1.465,32,1.331,35,1.495,43,0.998,56,0.674,58,0.515,59,0.444,73,1.366,100,2.555,107,1.902,125,1.437,132,2.069,141,2.222,156,2.731,160,1.994,167,4.817,222,2.802,224,1.693,237,2.138,248,1.769,283,4.108,310,2.327,414,2.975,424,3.672,429,1.73,449,2.975,450,2.84,555,4.241,564,1.437,565,3.555,651,4.655,672,3.818,681,5.217,731,2.289,736,2.16,741,5.071,766,3.82,797,3.555,806,4.655,821,3.555,856,2.289,1014,5.588,1340,3.555,1724,4.985,1773,3.555,2094,3.555,2098,3.555,2389,3.32,2426,3.32,2449,4.985,2689,6.24,2690,3.871,2691,7.154,2692,3.871,2693,3.871,2694,3.871,2695,3.871,2696,6.794,2697,3.871,2698,3.871,2699,3.871,2700,3.871,2701,3.555,2702,3.871,2703,6.268,2704,3.871,2705,5.428,2706,5.428,2707,3.871,2708,3.871,2709,3.871,2710,3.871,2711,6.794,2712,3.871,2713,3.871,2714,3.871,2715,3.871,2716,3.871,2717,3.871,2718,3.871,2719,3.871,2720,3.871,2721,3.871,2722,3.871,2723,3.871]],["title/components/TerminalComponent.html",[21,0.81,119,1.548]],["body/components/TerminalComponent.html",[3,0.046,4,0.052,5,0.052,7,0.306,15,0.007,16,0.052,19,0.004,20,0.004,21,1.212,22,1.451,23,2.124,24,1.541,25,1.541,26,1.541,28,1.66,29,2.916,30,1.247,31,3.296,32,2.986,33,2.516,35,2.082,38,1.318,39,3.093,43,1.607,44,1.125,51,0.921,52,1.854,56,0.349,58,0.51,59,0.44,67,1.48,68,2.167,69,2.167,70,1.451,71,2.72,72,1.541,73,1.19,74,1.541,75,1.451,76,1.541,77,1.423,78,1.541,79,1.451,80,2.511,81,1.541,82,1.451,83,1.541,84,1.423,85,1.48,86,2.167,87,1.451,88,1.541,89,1.451,90,3.057,91,1.541,92,1.451,93,1.423,94,1.541,95,1.451,96,1.541,97,1.451,98,1.541,99,1.423,100,1.369,101,1.541,102,1.451,103,1.541,104,1.451,105,1.541,106,1.51,107,1.344,108,1.541,109,1.423,110,1.541,111,1.423,112,1.541,113,1.926,114,2.167,115,1.423,116,1.541,117,1.451,118,1.541,119,2.511,120,1.541,121,1.451,122,1.541,123,1.451,124,1.541,125,1.423,126,1.541,127,1.423,128,1.541,129,1.423,130,1.541,131,1.423,132,1.042,133,1.51,134,1.423,135,1.51,136,1.541,138,2.268,141,3.095,345,4.143,2724,4.309,2725,7.008,2726,6.059,2727,4.309,2728,4.309]],["title/pipes/TimeAgoPipe.html",[1465,2.044,2338,3.576]],["body/pipes/TimeAgoPipe.html",[3,0.055,4,0.063,5,0.063,8,0.462,10,0.928,14,0.475,15,0.007,16,0.063,19,0.005,20,0.005,28,1.419,30,1.499,38,1.127,44,1.276,47,1.471,51,1.107,54,2.151,56,0.556,58,0.613,59,0.529,73,1.31,132,1.661,156,2.458,173,3.006,174,5.615,186,1.188,237,1.815,253,3.118,254,3.118,310,2.633,333,2.025,410,4.698,454,2.206,564,1.71,707,4.608,1226,5.243,1465,2.997,1879,3.006,1882,3.118,1883,5.615,1887,4.136,1888,3.118,2233,4.608,2338,5.243,2372,4.608,2729,5.179,2730,6.114,2731,5.179,2732,6.87,2733,5.179,2734,5.179,2735,5.179,2736,5.179,2737,5.179,2738,5.179,2739,5.179,2740,5.179,2741,5.179,2742,5.179,2743,5.179,2744,5.179,2745,5.179,2746,5.179,2747,5.179,2748,5.179,2749,6.87,2750,5.179,2751,5.179,2752,5.179,2753,5.179,2754,5.179,2755,6.87,2756,5.179,2757,5.179,2758,5.179,2759,5.179,2760,5.179,2761,5.179,2762,6.87,2763,5.179,2764,6.87,2765,5.179,2766,5.179,2767,5.179,2768,5.179]],["title/pipes/ToCoinPipe.html",[1465,2.044,2339,3.576]],["body/pipes/ToCoinPipe.html",[3,0.07,4,0.08,5,0.08,10,1.18,14,0.455,15,0.007,16,0.08,19,0.006,20,0.006,28,1.803,30,1.905,38,1.432,44,1.222,51,1.407,54,2.405,56,0.533,58,0.779,59,0.673,73,1.465,186,1.51,237,2.307,321,4.537,333,1.94,956,5.76,1465,3.49,1879,3.82,1882,4.817,1887,4.817,1888,3.962,1895,4.738,2339,6.107,2769,6.582,2770,6.582,2771,6.582]],["title/interfaces/Transactions.html",[0,0.271,968,3.374]],["body/interfaces/Transactions.html",[0,0.378,2,1.371,3,0.07,4,0.079,5,0.079,7,0.463,8,0.71,10,1.672,13,1.256,14,0.618,15,0.007,16,0.079,19,0.006,20,0.006,100,2.842,968,5.73,2772,6.525,2773,8.943,2774,8.943,2775,8.943]],["title/components/TransactionsComponent.html",[21,0.81,121,1.579]],["body/components/TransactionsComponent.html",[3,0.029,4,0.033,5,0.033,7,0.196,8,0.387,10,0.494,13,0.567,14,0.527,15,0.007,16,0.033,19,0.003,20,0.003,21,0.928,22,0.928,23,1.521,24,0.985,25,0.985,26,0.985,28,1.189,29,2.233,30,0.797,31,3.169,32,2.879,33,2.49,35,1.49,38,0.944,39,2.476,41,2.612,43,0.632,44,1.521,46,2.47,47,2.366,51,0.928,52,1.327,55,1.552,56,0.635,57,3.115,58,0.326,59,0.281,67,0.946,68,1.552,69,1.552,70,0.928,71,2.178,72,0.985,73,1.564,74,0.985,75,0.928,76,0.985,77,0.91,78,0.985,79,0.928,80,2.011,81,0.985,82,0.928,83,0.985,84,0.91,85,0.946,86,1.552,87,0.928,88,0.985,89,0.928,90,2.643,91,0.985,92,0.928,93,0.91,94,0.985,95,0.928,96,0.985,97,0.928,98,0.985,99,0.91,100,0.875,101,0.985,102,0.928,103,0.985,104,0.928,105,0.985,106,0.966,107,0.859,108,0.985,109,0.91,110,0.985,111,0.91,112,0.985,113,1.379,114,1.552,115,0.91,116,0.985,117,0.928,118,0.985,119,0.91,120,0.985,121,2.051,122,0.985,123,0.928,124,0.985,125,0.91,126,0.985,127,0.91,128,0.985,129,0.91,130,0.985,131,0.91,132,1.601,133,0.966,134,0.91,135,0.966,136,0.985,156,2.369,160,2.46,168,4.976,175,3.873,186,0.632,218,3.863,224,3.125,227,4.095,248,1.12,255,1.799,256,1.658,260,1.724,265,1.296,283,1.296,357,2.04,435,2.741,454,1.173,505,1.726,731,1.45,736,2.154,746,3.86,766,2.46,831,2.967,956,3.123,968,4.382,985,3.311,993,6.259,994,4.775,1014,4.324,1030,1.884,1566,3.311,1602,2.612,1843,2.833,1844,3.311,1848,1.884,2002,2.967,2008,3.67,2014,3.311,2015,3.311,2018,3.504,2229,3.86,2293,3.86,2306,1.983,2310,2.251,2616,2.451,2730,3.86,2776,2.755,2777,4.338,2778,5.366,2779,5.366,2780,6.088,2781,4.775,2782,4.382,2783,4.338,2784,2.755,2785,2.755,2786,2.755,2787,2.755,2788,2.755,2789,3.86,2790,3.546,2791,2.755,2792,2.755,2793,2.755,2794,2.755,2795,2.251,2796,1.884,2797,2.755,2798,2.755,2799,2.755,2800,2.755,2801,2.755,2802,4.338,2803,2.755,2804,2.755,2805,2.755,2806,2.755,2807,2.451,2808,2.755,2809,2.755,2810,2.755]],["title/interfaces/Transfer.html",[0,0.271,2020,3.374]],["body/interfaces/Transfer.html",[0,0.345,2,1.253,3,0.064,4,0.073,5,0.073,7,0.424,8,0.671,12,4.184,13,1.26,14,0.666,15,0.007,16,0.073,19,0.005,20,0.005,54,2.687,357,4.074,985,6.611,1602,5.216,1843,5.657,2020,5.419,2789,7.709,2790,7.081,2811,5.963]],["title/components/TransferComponent.html",[21,0.81,123,1.579]],["body/components/TransferComponent.html",[3,0.035,4,0.04,5,0.04,7,0.233,8,0.443,9,2.893,10,0.588,12,2.893,14,0.462,15,0.007,16,0.04,19,0.003,20,0.003,21,1.036,22,1.105,23,1.741,24,1.174,25,1.174,26,1.174,28,1.36,29,2.493,30,0.949,31,3.224,32,2.917,33,2.588,35,1.706,38,1.08,39,2.717,43,0.753,44,1.402,46,1.063,47,0.932,51,1.062,52,1.833,55,2.143,56,0.541,58,0.389,59,0.335,67,1.127,68,1.776,69,1.776,70,1.105,71,2.39,72,1.174,73,1.135,74,1.174,75,1.105,76,1.174,77,1.084,78,1.174,79,1.105,80,2.206,81,1.174,82,1.105,83,1.174,84,1.084,85,1.127,86,1.776,87,1.105,88,1.174,89,1.105,90,2.784,91,1.174,92,1.105,93,1.084,94,1.174,95,1.105,96,1.174,97,1.105,98,1.174,99,1.084,100,1.043,101,1.174,102,1.105,103,1.174,104,1.105,105,1.174,106,1.15,107,1.023,108,1.174,109,1.084,110,1.174,111,1.084,112,1.174,113,1.578,114,1.776,115,1.084,116,1.174,117,1.105,118,1.174,119,1.084,120,1.174,121,1.105,122,1.174,123,2.25,124,1.174,125,1.084,126,1.174,127,1.084,128,1.174,129,1.084,130,1.174,131,1.084,132,0.793,133,1.15,134,1.084,135,1.15,136,1.174,144,2.465,186,0.753,204,1.504,224,2.331,265,1.543,321,2.613,429,1.305,793,3.75,970,2.682,1043,2.362,1085,2.143,1421,1.781,1601,4.097,1602,1.975,1606,3.912,1620,2.882,1621,3.912,1843,3.912,1844,3.789,1848,2.244,1849,4.32,1854,2.244,1990,2.92,2020,5.434,2286,6.887,2399,4.419,2482,2.682,2796,2.244,2812,3.281,2813,4.966,2814,5.944,2815,3.281,2816,3.281,2817,3.281,2818,4.966,2819,4.312,2820,5.991,2821,5.991,2822,3.281,2823,3.789,2824,3.281,2825,3.281,2826,4.966,2827,3.281,2828,3.281,2829,3.281,2830,4.966,2831,3.281,2832,3.281,2833,3.281,2834,3.281,2835,3.281,2836,3.281,2837,3.281,2838,3.281,2839,4.966,2840,4.966]],["title/interfaces/TransferIn.html",[0,0.271,2819,3.374]],["body/interfaces/TransferIn.html",[0,0.312,2,1.132,3,0.058,4,0.066,5,0.066,7,0.383,8,0.629,10,1.702,12,4.028,13,1.132,14,0.614,15,0.007,16,0.066,19,0.005,20,0.005,34,3.021,54,2.633,55,2.522,56,0.436,222,3.317,333,1.588,429,2.142,844,4.562,845,4.562,847,3.517,856,2.835,991,3.243,1589,5.02,1590,3.683,1593,3.372,1601,5.703,1602,5.02,1603,3.683,1604,3.877,1605,3.877,1606,5.445,1607,3.683,1608,3.683,1609,3.683,1610,3.683,1611,5.445,1612,3.517,1613,3.517,1614,3.683,1615,3.517,1616,3.683,1617,3.517,1618,3.683,1619,3.683,1620,4.093,1621,5.445,1622,3.683,2819,5.076,2841,5.386,2842,5.386]],["title/interfaces/TransferOut.html",[0,0.271,2823,3.576]],["body/interfaces/TransferOut.html",[0,0.368,2,1.337,3,0.068,4,0.077,5,0.077,7,0.452,8,0.699,13,1.251,14,0.587,15,0.007,16,0.077,19,0.005,20,0.005,47,1.808,54,2.37,224,2.476,429,2.53,978,4.35,1602,5.481,1620,4.549,1621,4.154,2059,7.246,2132,5.661,2823,5.981,2843,6.362,2844,8.865,2845,6.362,2846,6.362,2847,6.362,2848,6.362,2849,6.362,2850,6.362]],["title/interfaces/TransferSplitIn.html",[0,0.271,1600,3.205]],["body/interfaces/TransferSplitIn.html",[0,0.455,2,0.977,3,0.05,4,0.057,5,0.057,7,0.33,8,0.57,10,1.634,12,3.795,13,1.192,14,0.602,15,0.007,16,0.1,17,3.037,19,0.004,20,0.004,34,2.609,54,2.568,55,2.286,56,0.591,132,1.125,190,4,222,3.532,224,1.81,237,1.63,269,2.8,310,1.346,333,1.371,429,1.85,435,3.264,621,2.448,766,2.929,844,4.237,845,4.237,847,3.037,856,2.448,991,2.8,1587,3.037,1588,3.55,1589,4.731,1590,3.181,1591,4.172,1592,3.55,1593,4.569,1594,3.181,1595,3.55,1596,4.6,1597,3.181,1598,3.348,1599,3.55,1600,4.37,1601,5.374,1602,4.731,1603,4.37,1604,3.348,1605,3.348,1606,5.131,1607,3.181,1608,3.181,1609,3.181,1610,3.181,1611,5.131,1612,3.037,1613,3.037,1614,3.181,1615,3.037,1616,3.181,1617,3.037,1618,3.181,1619,3.181,1620,4.237,1621,5.131,1622,3.181,1623,5.997,1624,3.55,1625,3.348,1626,3.181,1627,3.037,1628,2.8,1629,3.348]],["title/interfaces/TransferSplitOut.html",[0,0.271,2851,3.83]],["body/interfaces/TransferSplitOut.html",[0,0.402,2,1.458,3,0.074,4,0.084,5,0.084,7,0.493,8,0.737,13,1.154,14,0.571,15,0.007,16,0.084,19,0.006,20,0.006,54,2.461,2685,7.463,2851,6.753,2852,6.942,2853,9.131]],["title/modules/TranslateModule.html",[487,1.747,501,2.821]],["body/modules/TranslateModule.html",[3,0.075,4,0.085,5,0.085,15,0.007,16,0.085,19,0.006,20,0.006,56,0.716,58,0.827,59,0.714,249,5.028,250,4.561,489,2.448,501,4.992,507,2.778,509,2.604,511,3.092,512,3.227,513,2.55,514,7.379,2854,6.985]],["title/interfaces/Uri.html",[0,0.271,1627,3.06]],["body/interfaces/Uri.html",[0,0.413,2,1.5,3,0.076,4,0.087,5,0.087,7,0.507,8,0.749,13,1.168,14,0.493,15,0.007,16,0.087,19,0.006,20,0.006,1627,6.218,2855,7.137]],["title/components/UserComponent.html",[21,0.81,125,1.548]],["body/components/UserComponent.html",[0,0.159,3,0.029,4,0.033,5,0.053,7,0.195,8,0.386,10,0.493,13,0.567,14,0.299,15,0.007,16,0.053,19,0.003,20,0.003,21,0.927,22,0.927,23,1.519,24,0.984,25,0.984,26,0.984,30,0.796,31,3.169,32,2.863,33,2.169,35,1.489,38,0.943,43,0.994,44,1.416,46,2.277,47,1.997,51,0.588,56,0.569,58,0.326,59,0.281,67,0.945,68,1.55,69,1.55,70,0.927,71,2.176,72,0.984,73,1.25,74,0.984,75,0.927,76,0.984,77,0.909,78,0.984,79,0.927,80,2.009,81,0.984,82,0.927,83,0.984,84,0.909,85,0.945,86,1.55,87,0.927,88,0.984,89,0.927,90,2.642,91,0.984,92,0.927,93,0.909,94,0.984,95,0.927,96,0.984,97,0.927,98,0.984,99,0.909,100,1.933,101,0.984,102,0.927,103,0.984,104,0.927,105,0.984,106,0.964,107,2.377,108,0.984,109,0.909,110,0.984,111,0.909,112,0.984,113,1.377,114,1.55,115,0.909,116,0.984,117,0.927,118,0.984,119,0.909,120,0.984,121,0.927,122,0.984,123,0.927,124,0.984,125,2.009,126,0.984,127,0.909,128,0.984,129,0.909,130,0.984,131,0.909,132,2.128,133,0.964,134,0.909,135,0.964,136,0.984,138,1.448,141,2.214,156,2.176,160,2.458,167,5.031,186,0.631,212,2.964,222,1.094,224,1.071,237,2.133,248,1.119,283,3.585,310,1.915,414,1.881,424,3.663,429,1.094,449,1.881,450,1.797,555,4.429,564,0.909,565,3.542,597,3.12,600,2.609,651,4.643,672,3.809,681,5.125,731,1.448,736,1.366,740,2.448,741,5.061,747,2.964,766,3.87,797,2.249,806,3.307,821,2.249,856,2.281,1014,5.514,1340,2.249,1724,3.542,1728,3.307,1731,3.542,1773,2.249,2094,2.249,2098,2.249,2389,4.092,2426,2.1,2449,4.383,2476,3.542,2500,3.542,2689,5.746,2690,2.448,2691,4.772,2692,2.448,2693,3.857,2694,4.772,2695,4.772,2696,6.547,2697,4.772,2698,5.414,2699,2.448,2700,2.448,2701,2.249,2702,2.448,2703,4.772,2704,2.448,2705,3.857,2706,3.857,2707,2.448,2708,2.448,2709,2.448,2710,2.448,2711,5.414,2712,2.448,2713,2.448,2714,2.448,2715,2.448,2716,2.448,2717,2.448,2718,2.448,2719,2.448,2720,2.448,2721,2.448,2722,2.448,2723,2.448,2856,4.334,2857,2.751,2858,2.751,2859,2.751,2860,2.751,2861,2.751,2862,2.751,2863,4.334,2864,4.334,2865,4.334,2866,4.334]],["title/interfaces/UserMeta.html",[0,0.271,2867,3.576]],["body/interfaces/UserMeta.html",[0,0.499,2,1.383,3,0.07,4,0.08,5,0.08,7,0.467,8,0.714,13,1.223,14,0.455,15,0.007,16,0.105,19,0.006,20,0.006,56,0.533,172,5.023,681,4.12,697,4.298,736,3.973,862,3.017,2867,6.58,2868,5.379,2869,7.331,2870,5.76,2871,5.379,2872,5.023,2873,6.107]],["title/modules/UserModule.html",[487,1.747,2874,3.576]],["body/modules/UserModule.html",[3,0.054,4,0.061,5,0.061,11,2.492,15,0.007,16,0.061,19,0.005,20,0.005,21,0.868,32,2.059,56,0.783,58,0.594,59,0.513,107,2.367,125,2.937,132,1.835,149,3.278,170,2.725,204,2.3,237,1.759,248,2.042,265,2.361,310,1.452,324,3.278,489,1.759,490,2.866,497,5.953,503,3.007,504,2.189,505,1.996,507,2.676,509,2.509,511,2.509,512,2.618,513,1.833,524,4.212,525,3.142,526,5.499,527,4.102,530,4.844,531,3.613,534,3.774,535,2.815,538,4.212,539,3.022,540,2.913,543,4.467,564,1.658,587,2.564,588,4.12,596,2.492,600,4.051,727,3.774,728,2.815,730,5.135,731,2.641,732,5.135,733,3.83,1136,5.988,1137,4.102,1138,4.467,1139,5.499,1140,4.102,1141,4.102,1144,5.135,1146,5.988,1157,2.815,2581,5.499,2582,4.102,2586,4.467,2874,6.896,2875,4.467,2876,5.019,2877,4.467,2878,5.019,2879,6.729,2880,5.019,2881,5.019,2882,5.988,2883,4.467,2884,5.019]],["title/interfaces/UserOptions.html",[0,0.271,2870,3.374]],["body/interfaces/UserOptions.html",[0,0.402,2,1.458,3,0.074,4,0.084,5,0.084,7,0.493,8,0.737,14,0.48,15,0.007,16,0.1,19,0.006,20,0.006,64,3.028,766,3.182,2351,5.674,2870,5.948,2885,6.177,2886,9.131,2887,8.125,2888,6.177]],["title/modules/UserRoutingModule.html",[487,1.747,583,3.374]],["body/modules/UserRoutingModule.html",[3,0.071,4,0.081,5,0.081,15,0.007,16,0.081,19,0.006,20,0.006,56,0.7,58,0.786,59,0.678,107,2.07,248,2.7,310,1.921,489,2.327,507,2.641,509,2.475,511,2.999,512,3.13,513,2.424,583,5.791,586,3.997,587,4.109,588,4.698,596,3.296,612,2.896,1157,3.723,2385,5.067,2889,6.639,2890,6.639,2891,6.639]],["title/interfaces/UserState.html",[0,0.271,2873,3.576]],["body/interfaces/UserState.html",[0,0.486,2,1.304,3,0.066,4,0.075,5,0.075,7,0.441,8,0.688,13,1.235,14,0.607,15,0.007,16,0.102,19,0.005,20,0.005,56,0.502,172,6.707,681,5.502,697,4.053,736,4.488,862,4.028,2867,6.707,2868,5.072,2869,5.072,2870,6.326,2871,5.072,2872,4.736,2873,6.41]],["title/interfaces/UsersState.html",[0,0.271,2872,3.576]],["body/interfaces/UsersState.html",[0,0.498,2,1.375,3,0.07,4,0.08,5,0.08,7,0.465,8,0.711,13,1.171,14,0.594,15,0.007,16,0.105,19,0.006,20,0.006,56,0.53,172,4.994,681,4.097,697,5.846,736,3.959,791,5.74,862,2.999,2867,6.085,2868,5.349,2869,5.349,2870,5.74,2871,5.349,2872,6.085,2873,6.085]],["title/components/VpnComponent.html",[21,0.81,127,1.548]],["body/components/VpnComponent.html",[3,0.041,4,0.047,5,0.047,7,0.273,15,0.006,16,0.047,19,0.004,20,0.004,21,1.137,22,1.295,23,1.958,24,1.375,25,1.375,26,1.375,28,1.53,29,2.737,30,1.113,31,3.268,32,2.959,33,2.433,35,1.919,38,1.215,39,2.936,43,1.509,44,1.037,51,0.822,52,1.709,56,0.311,58,0.455,59,0.393,67,1.321,68,1.998,69,1.998,70,1.295,71,2.582,72,1.375,73,1.117,74,1.375,75,1.295,76,1.375,77,1.27,78,1.375,79,1.295,80,2.384,81,1.375,82,1.295,83,1.375,84,1.27,85,1.321,86,1.998,87,1.295,88,1.375,89,1.295,90,2.903,91,1.375,92,1.295,93,1.27,94,1.375,95,1.295,96,1.375,97,1.295,98,1.375,99,1.27,100,1.222,101,1.375,102,1.295,103,1.375,104,1.295,105,1.375,106,1.348,107,1.199,108,1.375,109,1.27,110,1.375,111,1.27,112,1.375,113,1.775,114,1.998,115,1.27,116,1.375,117,1.295,118,1.375,119,1.27,120,1.375,121,1.295,122,1.375,123,1.295,124,1.375,125,1.27,126,1.375,127,2.384,128,1.375,129,1.27,130,1.375,131,1.27,132,1.59,133,1.348,134,1.27,135,1.348,136,1.375,138,2.023,141,2.853,202,5.196,342,3.496,677,4.262,750,4.565,856,3.799,1381,4.97,1661,4.565,2409,4.97,2426,4.262,2519,6.424,2892,3.845,2893,6.424,2894,6.577,2895,5.585,2896,3.845,2897,3.845,2898,5.585,2899,4.97,2900,5.585,2901,5.585,2902,5.585,2903,7.999,2904,5.585,2905,5.585,2906,5.585,2907,5.585,2908,5.585,2909,5.585,2910,5.585,2911,5.585,2912,7.219,2913,7.219]],["title/modules/VpnModule.html",[487,1.747,2914,3.576]],["body/modules/VpnModule.html",[3,0.069,4,0.079,5,0.079,15,0.006,16,0.079,19,0.006,20,0.006,56,0.753,58,0.766,59,0.661,127,3.074,489,2.268,490,3.373,503,3.539,504,2.822,505,2.573,507,3.15,509,2.412,511,2.952,512,3.081,513,2.362,534,4.441,535,3.629,538,4.957,539,3.895,540,3.755,727,4.441,728,3.629,2914,7.103,2915,5.757,2916,5.757,2917,6.47,2918,5.757]],["title/modules/VpnRoutingModule.html",[487,1.747,2919,3.83]],["body/modules/VpnRoutingModule.html",[3,0.07,4,0.08,5,0.08,15,0.007,16,0.08,19,0.006,20,0.006,21,1.132,56,0.743,58,0.775,59,0.669,127,2.634,248,2.662,310,1.894,489,2.294,507,2.603,508,3.67,509,2.44,511,2.973,512,3.103,513,2.39,586,3.94,587,4.074,588,4.669,594,5.384,595,4.475,596,3.249,612,2.854,671,4.475,1157,3.67,2893,5.823,2918,5.823,2919,6.517,2920,6.544]],["title/components/WalletComponent.html",[21,0.81,129,1.548]],["body/components/WalletComponent.html",[3,0.03,4,0.034,5,0.034,7,0.199,8,0.392,10,0.787,13,0.969,14,0.512,15,0.007,16,0.034,19,0.003,20,0.003,21,0.938,22,0.943,23,1.54,24,1.001,25,1.001,26,1.001,28,1.203,29,2.256,30,0.81,31,3.174,32,2.869,33,2.709,34,2.463,35,1.509,38,0.956,39,2.498,43,0.642,44,1.424,46,1.423,47,1.248,51,1.159,52,1.879,56,0.439,58,0.331,59,0.286,66,3.352,67,0.961,68,1.571,69,1.571,70,0.943,71,2.197,72,1.001,73,1.42,74,1.001,75,0.943,76,1.001,77,0.924,78,1.001,79,0.943,80,2.028,81,1.001,82,0.943,83,1.001,84,0.924,85,0.961,86,1.571,87,0.943,88,1.001,89,0.943,90,2.77,91,1.001,92,0.943,93,0.924,94,1.001,95,0.943,96,1.001,97,0.943,98,1.001,99,0.924,100,0.889,101,1.001,102,0.943,103,1.001,104,0.943,105,1.001,106,0.981,107,0.873,108,1.001,109,0.924,110,1.001,111,0.924,112,1.001,113,1.396,114,1.571,115,0.924,116,1.001,117,0.943,118,1.001,119,0.924,120,1.001,121,0.943,122,1.001,123,0.943,124,1.001,125,0.924,126,1.001,127,0.924,128,1.001,129,2.028,130,1.001,131,0.924,132,0.677,133,0.981,134,0.924,135,0.981,136,1.001,138,1.473,141,2.244,144,3.033,156,1.001,170,2.384,186,1.007,204,1.283,255,2.868,265,1.316,269,2.644,310,0.81,321,1.473,344,3.352,564,0.924,600,2.644,609,3.352,616,2.136,621,2.853,742,5.33,747,3.708,766,2.485,774,3.352,798,2.136,799,2.015,820,2.015,828,2.015,829,2.136,841,4.01,956,3.162,957,3.909,1043,2.015,1067,3.59,1069,4.686,1085,1.827,1099,3.59,1116,2.287,1282,4.431,1285,5.019,1421,1.519,1474,2.136,1628,2.644,1848,1.914,1849,4.017,1854,1.914,1857,3.909,2041,2.287,2286,6.595,2297,2.287,2299,2.49,2300,2.49,2301,2.49,2302,2.287,2303,2.49,2304,2.49,2306,2.015,2307,2.49,2309,2.49,2311,4.431,2312,2.49,2565,3.909,2921,2.799,2922,5.422,2923,4.392,2924,4.392,2925,2.799,2926,2.799,2927,4.392,2928,2.799,2929,4.392,2930,2.799,2931,2.799,2932,2.799,2933,2.799,2934,2.799,2935,2.799,2936,2.799,2937,2.799,2938,2.49,2939,4.392,2940,4.392,2941,4.392,2942,4.392,2943,3.909,2944,4.392,2945,4.392,2946,4.392,2947,4.392]],["title/injectables/WalletEffects.html",[406,1.381,2948,4.17]],["body/injectables/WalletEffects.html",[3,0.033,4,0.037,5,0.037,7,0.218,8,0.421,9,3.552,10,0.55,13,0.844,14,0.397,15,0.007,16,0.037,19,0.003,20,0.003,33,2.258,43,0.704,44,1.366,46,2.256,47,1.979,48,3.397,56,0.682,58,0.363,59,0.314,73,0.521,156,2.631,175,4.031,186,0.704,189,3.857,224,3.222,237,2.578,251,3.857,252,2.342,255,2.004,256,1.848,260,1.921,333,2.44,406,1.391,407,1.372,435,2.411,454,1.307,505,1.877,518,3.885,520,1.848,766,2.958,826,5.743,831,3.227,841,4.548,848,2.004,1029,4.199,1168,3.599,1189,2.731,1190,2.509,1277,3.601,1352,5.693,1414,3.857,1433,2.342,1434,5.294,1436,6.628,1437,6.462,1441,3.601,1450,2.731,1456,4.199,1457,4.199,1458,4.199,1462,2.731,1463,4.699,1465,3.208,1469,4.199,1470,4.199,1476,2.509,1477,2.099,1478,2.731,1628,3.461,1849,3.885,1854,2.099,2008,3.932,2010,3.397,2014,3.601,2018,3.754,2573,4.199,2796,2.099,2948,4.199,2949,3.069,2950,5.749,2951,5.749,2952,5.749,2953,5.749,2954,4.719,2955,4.719,2956,4.719,2957,4.719,2958,4.719,2959,3.069,2960,4.719,2961,7.355,2962,4.719,2963,3.069,2964,4.719,2965,4.719,2966,3.069,2967,4.719,2968,4.719,2969,6.966,2970,4.719,2971,5.749,2972,6.454,2973,4.719,2974,6.454,2975,6.454,2976,4.719,2977,6.454,2978,4.719,2979,4.719,2980,4.719,2981,4.719,2982,4.719,2983,4.719,2984,3.069,2985,3.069,2986,3.069,2987,3.069,2988,3.069]],["title/modules/WalletModule.html",[487,1.747,2528,3.374]],["body/modules/WalletModule.html",[3,0.046,4,0.052,5,0.052,15,0.007,16,0.052,19,0.004,20,0.004,22,2.797,56,0.788,58,0.509,59,0.439,92,2.797,102,2.797,109,2.743,113,2.639,121,2.797,123,2.797,129,2.743,131,2.743,204,1.971,248,1.749,253,2.589,254,2.589,265,2.846,489,1.508,490,2.577,501,4.999,503,2.705,504,1.876,505,1.711,507,2.407,509,2.256,511,2.256,512,2.355,513,1.57,524,3.788,525,2.692,528,4.138,529,2.941,530,4.356,531,3.096,534,3.394,535,2.412,536,4.618,537,3.282,538,3.788,539,2.589,540,2.496,550,5.385,587,3.091,612,1.876,727,3.394,728,2.412,730,4.618,731,2.263,732,4.618,733,3.282,1030,2.941,1129,4.946,1130,3.788,1131,3.282,1144,4.618,1145,5.385,2528,6.948,2531,4.946,2532,3.515,2581,4.946,2582,3.515,2882,5.385,2883,3.827,2989,3.827,2990,4.301,2991,3.827,2992,4.301,2993,4.301,2994,6.051,2995,4.301,2996,3.827,2997,3.827,2998,4.301,2999,3.827,3000,3.827,3001,6.051,3002,6.051,3003,4.301,3004,4.301,3005,4.301,3006,4.301]],["title/components/WalletNewComponent.html",[21,0.81,131,1.548]],["body/components/WalletNewComponent.html",[3,0.034,4,0.039,5,0.039,7,0.228,8,0.436,10,0.576,14,0.457,15,0.007,16,0.039,19,0.003,20,0.003,21,1.023,22,1.082,23,1.713,24,1.149,25,1.149,26,1.149,28,1.339,29,2.46,30,0.929,31,3.218,32,2.911,33,2.725,35,1.679,38,1.063,39,2.688,43,0.737,44,1.391,51,1.045,52,1.809,56,0.606,58,0.38,59,0.328,67,1.103,68,1.748,69,1.748,70,1.082,71,2.364,72,1.149,73,1.122,74,1.149,75,1.082,76,1.149,77,1.061,78,1.149,79,1.082,80,2.182,81,1.149,82,1.082,83,1.149,84,1.061,85,1.103,86,1.748,87,1.082,88,1.149,89,1.082,90,2.767,91,1.149,92,1.082,93,1.061,94,1.149,95,1.082,96,1.149,97,1.082,98,1.149,99,1.061,100,1.021,101,1.149,102,1.082,103,1.149,104,1.082,105,1.149,106,1.126,107,1.001,108,1.149,109,1.061,110,1.149,111,1.061,112,1.149,113,1.553,114,1.748,115,1.061,116,1.149,117,1.082,118,1.149,119,1.061,120,1.149,121,1.082,122,1.149,123,1.082,124,1.149,125,1.061,126,1.149,127,1.061,128,1.149,129,1.061,130,1.149,131,2.182,132,1.81,133,1.126,134,1.061,135,1.126,136,1.149,156,1.748,167,5.322,173,4.864,186,0.737,190,2.011,248,1.306,435,1.641,454,1.368,731,1.69,766,3.676,1014,5.472,1587,4.315,1849,3.978,1903,3.517,2095,2.858,2097,2.858,2450,2.625,2451,2.858,2453,2.858,2458,5.262,2473,4.348,2474,4.348,2475,5.88,2476,3.993,2701,3.993,2782,4.757,2795,2.625,3007,7.783,3008,3.212,3009,4.886,3010,5.913,3011,3.212,3012,4.886,3013,4.886,3014,3.212,3015,3.212,3016,3.212,3017,3.212,3018,3.212,3019,3.212,3020,3.212,3021,3.212,3022,3.212,3023,3.212,3024,3.212,3025,3.212,3026,3.212,3027,3.212,3028,3.212,3029,4.886,3030,4.886]],["title/modules/WalletRoutingModule.html",[487,1.747,584,3.374]],["body/modules/WalletRoutingModule.html",[3,0.055,4,0.062,5,0.062,11,4.223,15,0.007,16,0.062,19,0.005,20,0.005,21,1.471,33,1.506,56,0.734,58,0.605,59,0.522,109,2.529,113,2.164,129,2.249,131,2.249,149,5.555,170,4.618,237,2.982,248,2.078,310,1.478,324,5.555,489,1.791,507,2.032,508,2.865,509,1.905,511,2.539,512,2.65,513,1.866,564,2.81,584,4.901,586,3.076,587,3.478,588,4.157,594,5.591,595,3.494,596,4.223,612,2.229,671,5.817,1157,2.865,2996,4.546,2997,4.546,2999,4.546,3000,4.546,3031,5.109,3032,5.109,3033,5.109,3034,5.109,3035,5.109,3036,5.109,3037,5.109,3038,5.109,3039,5.109,3040,5.109,3041,5.109,3042,5.109,3043,5.109,3044,5.109,3045,5.109,3046,5.109,3047,5.109,3048,5.109,3049,5.109,3050,5.109,3051,5.109]],["title/injectables/WalletRpcService.html",[406,1.381,2782,3.374]],["body/injectables/WalletRpcService.html",[1,4.905,3,0.018,4,0.021,5,0.021,7,0.275,8,0.264,9,1.871,10,1.483,13,0.735,14,0.6,15,0.007,16,0.021,19,0.002,20,0.002,33,1.655,38,0.643,43,0.396,44,1.621,46,0.56,47,0.491,51,1.997,54,1.279,56,0.454,58,0.205,59,0.177,73,1.405,80,0.976,132,0.418,156,1.386,175,2.413,177,1.244,186,1.897,192,2.649,200,2.022,202,2.128,237,0.606,263,1.413,264,1.319,266,4.639,310,0.856,321,0.91,333,2.545,337,2.788,357,1.822,406,0.871,407,0.773,440,2.416,451,0.91,452,0.91,454,0.736,463,1.129,467,3.447,468,3.447,484,5.718,518,2.76,520,1.041,736,1.468,753,1.244,791,4.042,816,2.416,817,2.788,818,1.244,841,2.529,848,1.129,851,2.631,862,1.355,896,7.71,1166,1.244,1168,1.851,1171,3.166,1188,2.256,1190,1.413,1191,1.413,1192,1.413,1193,1.413,1194,1.413,1195,1.319,1196,1.319,1587,3.918,1591,3.364,1600,3.523,1620,1.716,1626,2.022,1627,3.364,1628,3.613,1844,4.285,1886,1.413,1991,1.413,1993,2.631,1994,4.211,2000,1.413,2004,4.211,2006,1.413,2008,3.523,2018,1.129,2020,3.709,2052,4.211,2056,1.413,2066,4.211,2127,4.211,2428,4.211,2431,1.413,2445,4.32,2637,1.413,2671,1.413,2673,4.211,2675,2.631,2682,1.413,2782,2.128,2790,2.416,2819,3.709,2823,1.319,2851,1.413,3052,1.729,3053,2.956,3054,4.585,3055,2.956,3056,4.08,3057,2.956,3058,4.585,3059,2.956,3060,2.956,3061,2.956,3062,3.873,3063,3.873,3064,2.956,3065,2.956,3066,3.873,3067,4.08,3068,4.585,3069,4.585,3070,2.956,3071,2.956,3072,2.956,3073,1.729,3074,2.956,3075,1.729,3076,2.956,3077,1.729,3078,1.729,3079,2.956,3080,2.956,3081,1.729,3082,1.729,3083,2.956,3084,2.956,3085,1.729,3086,1.729,3087,2.956,3088,1.729,3089,2.956,3090,1.729,3091,2.956,3092,2.956,3093,1.729,3094,1.729,3095,1.729,3096,1.729,3097,1.729,3098,2.956,3099,1.729,3100,2.956,3101,1.729,3102,2.956,3103,5.152,3104,1.729,3105,2.956,3106,1.729,3107,2.956,3108,1.729,3109,2.956,3110,1.729,3111,1.729,3112,1.729,3113,1.729,3114,2.631,3115,1.729,3116,1.729,3117,2.956,3118,1.729,3119,1.729,3120,2.956,3121,1.729,3122,2.956,3123,1.729,3124,2.956,3125,1.729,3126,1.729,3127,1.729,3128,1.729,3129,1.729,3130,1.729,3131,1.729,3132,1.729,3133,1.729,3134,1.729,3135,1.729,3136,1.729,3137,1.729,3138,1.729,3139,1.729,3140,1.729,3141,1.729,3142,1.729,3143,1.729,3144,1.729,3145,1.729,3146,1.729,3147,1.729,3148,1.729,3149,1.729,3150,1.729,3151,1.729,3152,1.729,3153,1.729,3154,1.729,3155,1.729,3156,1.729]],["title/injectables/WalletService.html",[406,1.381,1849,2.821]],["body/injectables/WalletService.html",[3,0.033,4,0.038,5,0.07,7,0.219,8,0.423,9,3.372,10,1.252,13,1.004,14,0.573,15,0.007,16,0.038,19,0.003,20,0.003,33,2.486,34,1.731,38,1.031,43,0.708,44,1.642,46,1.869,47,1.639,48,3.411,51,1.921,52,1.45,55,1.695,56,0.524,58,0.365,59,0.484,63,3.616,73,1.186,132,0.746,144,1.982,156,2.315,184,3.411,186,1.602,200,3.241,202,3.411,266,3.235,283,2.229,333,2.335,342,2.966,406,1.397,407,1.379,423,2.746,424,3.896,426,3.616,449,2.11,450,2.015,451,1.624,452,1.624,454,1.314,484,3.896,564,1.019,621,4.168,676,4.217,715,2.746,841,5.304,848,3.767,1043,2.222,1081,4.813,1349,4.217,1628,4.62,1849,2.853,2008,4.426,2296,5.759,2297,3.873,2310,2.522,2445,5.525,2781,4.217,2782,4.659,2795,2.522,2796,2.11,2807,2.746,2814,4.217,2819,4.659,3056,5.759,3067,5.759,3114,6.214,3157,3.086,3158,5.769,3159,6.472,3160,6.472,3161,6.472,3162,4.739,3163,6.472,3164,4.739,3165,3.086,3166,3.086,3167,3.086,3168,3.086,3169,4.739,3170,3.086,3171,4.739,3172,3.086,3173,4.739,3174,3.086,3175,4.739,3176,3.086,3177,3.086,3178,3.086,3179,4.739,3180,3.086,3181,3.086,3182,3.086,3183,3.086,3184,3.086,3185,3.086,3186,3.086,3187,3.086,3188,3.086,3189,3.086,3190,3.086,3191,3.086,3192,3.086,3193,3.086,3194,4.739,3195,3.086,3196,3.086,3197,4.739,3198,3.086,3199,3.086,3200,3.086,3201,3.086,3202,3.086,3203,3.086,3204,3.086,3205,3.086,3206,3.086,3207,3.086,3208,3.086,3209,3.086]],["title/classes/WalletState.html",[59,0.479,3210,3.83]],["body/classes/WalletState.html",[0,0.404,3,0.057,4,0.064,5,0.064,7,0.376,8,0.622,13,1.179,14,0.539,15,0.007,16,0.101,19,0.005,20,0.005,28,2.136,33,2.538,44,1.448,46,2.526,47,2.215,54,2.175,56,0.564,59,0.713,73,1.185,132,1.281,357,3.28,429,2.108,621,4.361,793,3.317,862,3.197,868,2.972,1279,5.701,1421,2.876,2010,3.814,2018,4.555,2236,4.331,2306,3.814,2316,5.613,2317,4.044,2796,3.624,3210,5.701,3211,4.715,3212,6.373,3213,7.373,3214,7.373,3215,5.299,3216,5.299,3217,5.299,3218,4.715,3219,6.207,3220,6.207,3221,4.715,3222,4.715]],["title/interfaces/WalletsState.html",[0,0.271,3212,3.83]],["body/interfaces/WalletsState.html",[0,0.411,2,1.145,3,0.058,4,0.066,5,0.066,7,0.387,8,0.634,13,1.228,14,0.6,15,0.007,16,0.102,19,0.005,20,0.005,28,1.947,33,2.561,54,2.206,56,0.575,59,0.726,73,1.207,132,1.318,357,3.342,429,2.168,621,4.572,791,5.115,793,3.412,862,3.257,1279,5.807,1421,2.959,2010,3.924,2018,4.64,2236,4.455,2306,3.924,2316,5.691,2796,3.727,3210,4.455,3211,4.85,3212,6.461,3213,7.731,3214,7.731,3218,4.85,3219,6.323,3220,6.323,3221,4.85,3222,4.85]],["title/injectables/WebStorageService.html",[406,1.381,661,3.83]],["body/injectables/WebStorageService.html",[3,0.039,4,0.044,5,0.044,7,0.259,8,0.479,10,1.345,13,1.207,14,0.543,15,0.007,16,0.044,19,0.004,20,0.004,28,0.999,32,1.116,38,1.169,44,1.606,46,2.067,47,2.307,51,1.736,52,1.644,54,1.78,55,2.283,56,0.295,58,0.432,59,0.373,73,1.275,90,1.229,156,3.207,175,2.828,186,1.722,266,3.014,282,3.842,288,3.995,289,3.364,310,1.847,333,2.456,385,5.678,406,1.584,407,1.631,411,5.215,429,3.383,451,1.92,452,1.92,564,1.205,660,3.246,661,4.393,686,5.754,822,4.815,868,4.404,1081,5.554,1421,3.464,1596,4.594,1645,4.393,2072,2.982,3223,8.771,3224,3.648,3225,6.381,3226,7.041,3227,5.375,3228,5.375,3229,5.375,3230,3.648,3231,3.648,3232,5.375,3233,5.375,3234,5.375,3235,3.648,3236,5.375,3237,3.648,3238,3.648,3239,3.648,3240,5.375,3241,3.648,3242,5.375,3243,3.648,3244,5.375,3245,3.648,3246,3.648,3247,3.648,3248,3.648,3249,3.648,3250,7.041,3251,3.648,3252,5.375,3253,5.375,3254,3.648,3255,3.648,3256,3.648,3257,3.648,3258,3.648,3259,3.648,3260,3.648,3261,3.648,3262,3.648,3263,3.648,3264,3.648,3265,3.648,3266,3.246,3267,3.648,3268,3.648,3269,3.648,3270,3.648,3271,3.648,3272,3.648,3273,3.648]],["title/injectables/WebsocketService.html",[406,1.381,1511,3.83]],["body/injectables/WebsocketService.html",[3,0.053,4,0.06,5,0.06,7,0.349,8,0.591,10,0.88,13,0.982,14,0.458,15,0.007,16,0.081,19,0.005,20,0.005,38,1.443,43,1.722,44,1.607,51,1.719,52,2.029,56,0.607,58,0.582,59,0.502,73,0.834,144,2.972,156,2.685,186,1.126,310,1.919,333,1.955,337,3.536,406,1.955,407,2.195,451,2.585,452,2.585,809,6.68,889,3.748,1421,2.666,1474,3.748,1511,5.42,1691,4.37,1696,4.014,1955,4.37,2302,4.014,2311,4.014,2938,4.37,3274,4.911,3275,7.507,3276,8.038,3277,8.038,3278,8.038,3279,6.631,3280,6.631,3281,4.911,3282,4.911,3283,8.394,3284,4.911,3285,6.631,3286,4.911,3287,7.507,3288,6.631,3289,4.911,3290,4.911,3291,7.507,3292,4.911,3293,4.911,3294,4.911,3295,4.911,3296,4.911,3297,4.911,3298,4.911,3299,4.911,3300,7.507,3301,4.911,3302,4.911,3303,4.911,3304,4.911,3305,4.911,3306,4.911,3307,4.911]],["title/dependencies.html",[490,2.404,3308,3.471]],["body/dependencies.html",[15,0.007,19,0.004,20,0.004,58,0.552,175,3.845,181,4.147,204,2.136,248,1.896,249,3.355,250,3.043,253,4.399,254,2.806,256,2.806,260,2.918,265,3.009,273,3.809,345,3.187,412,3.187,413,3.809,414,3.187,447,4.147,448,4.147,490,1.985,513,1.702,539,2.806,540,2.705,546,4.147,548,4.606,553,4.147,554,4.147,636,4.147,637,5.694,731,2.453,884,3.809,1030,3.187,1135,6.428,1171,3.809,1357,4.147,1366,4.147,1367,4.147,1369,4.147,1477,3.187,1529,4.883,1576,4.147,1593,2.918,1594,4.997,1829,4.147,1831,4.147,3266,4.147,3309,4.661,3310,9.013,3311,9.013,3312,4.661,3313,4.661,3314,4.661,3315,4.661,3316,4.661,3317,4.661,3318,4.661,3319,8.722,3320,4.661,3321,4.661,3322,4.661,3323,4.661,3324,4.661,3325,4.661,3326,4.661,3327,4.661,3328,4.661,3329,4.661,3330,4.661,3331,4.661,3332,4.661,3333,4.661,3334,4.661,3335,4.661,3336,6.399,3337,4.661,3338,4.661,3339,4.661,3340,4.661,3341,4.661,3342,6.399,3343,4.661,3344,4.661,3345,4.661,3346,4.661,3347,4.661,3348,4.661,3349,4.661,3350,6.399,3351,4.661,3352,4.661,3353,4.661,3354,4.661,3355,4.661,3356,4.661,3357,4.661,3358,4.661,3359,4.661,3360,4.661,3361,4.661,3362,4.661,3363,4.661,3364,4.661,3365,4.661,3366,4.661]],["title/miscellaneous/enumerations.html",[3367,2.667,3368,5.022]],["body/miscellaneous/enumerations.html",[3,0.072,7,0.48,15,0.007,19,0.006,20,0.006,47,2.571,64,3.546,388,5.523,402,4.864,709,4.412,766,3.097,1097,4.621,1350,5.523,1421,3.668,1439,6.013,1480,6.645,2344,5.523,2348,6.645,2352,5.523,2353,5.523,2354,5.523,2885,6.013,2887,7.235,2888,6.013,3367,4.621,3368,6.013,3369,6.757,3370,6.757,3371,6.013,3372,6.013,3373,6.013,3374,6.757,3375,6.757]],["title/miscellaneous/functions.html",[3367,2.667,3376,5.022]],["body/miscellaneous/functions.html",[7,0.342,10,1.673,14,0.551,15,0.007,19,0.005,20,0.005,51,1.399,73,1.586,186,2.141,506,4.287,510,5.673,518,3.94,559,4.287,561,6.615,570,5.825,618,4.287,628,6.615,649,5.825,650,8.52,653,6.445,678,4.287,1168,3.016,1441,7.331,1480,5.35,1488,4.287,1495,7.967,2410,5.35,2450,5.35,3367,3.295,3371,4.287,3372,4.287,3373,4.287,3376,4.287,3377,4.818,3378,6.545,3379,4.818,3380,4.818,3381,8.799,3382,4.818,3383,6.545,3384,4.818,3385,4.818,3386,4.818,3387,4.818,3388,4.818,3389,4.818,3390,4.818,3391,4.818,3392,4.818,3393,4.818,3394,4.818,3395,4.818,3396,4.818,3397,4.818,3398,4.818,3399,6.545,3400,4.818,3401,4.818,3402,4.818,3403,4.818]],["title/index.html",[7,0.277,2943,3.471,3404,3.901]],["body/index.html",[0,0.363,15,0.005,19,0.005,20,0.005,150,5.583,250,4.097,412,4.291,571,7.512,605,7.512,677,6.92,679,4.517,777,5.128,862,3.561,1539,8.222,1666,5.128,2281,7.851,2408,5.583,2500,5.128,2516,5.583,3405,6.274,3406,8.441,3407,6.274,3408,6.274,3409,6.274,3410,6.274,3411,6.274,3412,6.274,3413,8.441,3414,6.274,3415,6.274,3416,6.274,3417,6.274,3418,6.274,3419,9.463,3420,8.441,3421,6.274,3422,6.274,3423,6.274,3424,6.274,3425,6.274]],["title/modules.html",[489,2.251]],["body/modules.html",[15,0.005,19,0.005,20,0.005,250,6.347,271,7.083,488,4.11,489,1.888,496,3.877,497,3.683,498,3.877,499,3.877,500,3.877,501,3.243,581,3.877,582,3.877,583,3.877,584,3.877,608,4.11,1120,3.877,1125,3.877,1130,3.372,2121,3.877,2193,4.11,2377,3.877,2383,4.402,2523,3.877,2527,3.877,2528,3.877,2576,4.11,2633,4.402,2874,4.11,2899,8.789,2914,4.11,2919,4.402,3426,9.721,3427,9.721,3428,9.281]],["title/overview.html",[3429,5.716]],["body/overview.html",[2,0.562,15,0.007,19,0.003,20,0.003,22,1.774,23,0.938,64,1.85,70,0.902,75,2.452,77,2.404,79,1.774,82,1.774,84,1.74,87,1.774,89,2.452,92,1.774,93,2.404,95,2.452,97,2.452,99,1.74,102,1.774,104,2.452,109,1.74,111,1.74,113,1.904,115,1.74,117,2.452,119,1.74,121,1.774,123,1.774,125,1.74,127,1.74,129,1.74,131,1.74,134,2.568,407,1.197,488,6.783,489,0.938,490,1.807,491,2.382,492,2.382,493,2.382,494,2.382,495,2.382,496,5.85,497,5.317,498,5.435,499,3.792,500,5.435,501,4.383,502,4.02,503,1.896,504,1.168,505,1.065,579,2.382,580,2.382,581,3.792,582,4.702,583,3.792,584,3.792,668,2.382,721,2.382,722,2.382,724,2.382,987,4.098,1097,1.831,1120,6.353,1121,2.382,1122,2.382,1123,2.382,1124,2.382,1125,5.435,1130,5.823,1132,5.24,1320,2.382,1322,2.382,1323,2.382,1580,2.382,1581,2.382,1582,2.382,1878,5.555,1879,1.554,1892,5.555,1985,5.555,2022,5.555,2121,5.002,2122,2.382,2123,2.382,2124,2.382,2193,4.984,2194,2.382,2195,2.382,2196,2.382,2317,2.043,2333,2.382,2334,2.382,2335,2.382,2336,5.555,2337,5.555,2338,5.555,2339,5.555,2377,5.002,2378,2.382,2379,2.382,2380,2.382,2523,6.186,2524,2.382,2525,2.382,2526,2.382,2527,4.702,2528,6.545,2576,5.302,2577,2.382,2578,2.382,2629,2.382,2630,2.382,2663,2.382,2664,2.382,2665,2.382,2874,5.302,2875,2.382,2877,2.382,2914,4.573,2915,2.382,2916,2.382,2989,2.382,2991,2.382,3429,2.382,3430,2.677,3431,2.677,3432,2.677,3433,2.677,3434,2.677,3435,2.677]],["title/properties.html",[8,0.503,3308,3.471]],["body/properties.html",[8,0.677,15,0.006,19,0.006,20,0.006,1010,6.752,3436,7.588]],["title/miscellaneous/typealiases.html",[3367,2.667,3437,5.644]],["body/miscellaneous/typealiases.html",[7,0.518,14,0.504,15,0.006,19,0.006,20,0.006,558,4.568,1686,8.015,3367,4.99,3438,7.297,3439,8.509,3440,9.008,3441,8.509,3442,7.297]]],"invertedIndex":[["",{"_index":15,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["0",{"_index":55,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["0\">{{error",{"_index":2114,"title":{},"body":{"components/LoginComponent.html":{}}}],["0.0.2",{"_index":3436,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":2251,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["0.1.2",{"_index":3341,"title":{},"body":{"dependencies.html":{}}}],["0.1.9",{"_index":3318,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":3366,"title":{},"body":{"dependencies.html":{}}}],["0.24.0",{"_index":3327,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":894,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["0.5.33",{"_index":3346,"title":{},"body":{"dependencies.html":{}}}],["0.8.0",{"_index":3326,"title":{},"body":{"dependencies.html":{}}}],["0000000000000000000000000000000000000000000000000000000000000000",{"_index":18,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["1",{"_index":64,"title":{"injectables/Effects-1.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/SettingsComponent-1.html":{},"components/StatusComponent.html":{},"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1.0.0",{"_index":3331,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":3343,"title":{},"body":{"dependencies.html":{}}}],["1.1.12",{"_index":3362,"title":{},"body":{"dependencies.html":{}}}],["1.25.0",{"_index":3357,"title":{},"body":{"dependencies.html":{}}}],["1.5.9",{"_index":3334,"title":{},"body":{"dependencies.html":{}}}],["1.6.5",{"_index":3348,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":2236,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["100",{"_index":360,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{},"components/StatusComponent.html":{}}}],["1000",{"_index":1226,"title":{},"body":{"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"pipes/HashRatePipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["10000",{"_index":3221,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["100000000",{"_index":1990,"title":{},"body":{"pipes/FromCoinPipe.html":{},"components/TransferComponent.html":{}}}],["100000000).tofixed((8",{"_index":2771,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["100vh",{"_index":358,"title":{},"body":{"components/AppComponent.html":{}}}],["11.1.1",{"_index":3339,"title":{},"body":{"dependencies.html":{}}}],["11px",{"_index":392,"title":{},"body":{"components/AppComponent.html":{}}}],["12.0.0",{"_index":3314,"title":{},"body":{"dependencies.html":{}}}],["12.0.1",{"_index":3352,"title":{},"body":{"dependencies.html":{}}}],["12.5.1",{"_index":3319,"title":{},"body":{"dependencies.html":{}}}],["120",{"_index":2272,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["127.0.0.1:36911",{"_index":575,"title":{},"body":{"modules/AppModule.html":{}}}],["12px",{"_index":1092,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["13",{"_index":1561,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["130",{"_index":373,"title":{},"body":{"components/AppComponent.html":{}}}],["14.0.0",{"_index":3321,"title":{},"body":{"dependencies.html":{}}}],["15",{"_index":2321,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["151",{"_index":374,"title":{},"body":{"components/AppComponent.html":{}}}],["16",{"_index":1597,"title":{},"body":{"interfaces/CreateWallet.html":{},"pipes/HashLinkPipe.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["181",{"_index":371,"title":{},"body":{"components/AppComponent.html":{}}}],["19",{"_index":3433,"title":{},"body":{"overview.html":{}}}],["1c9ea3",{"_index":2263,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["2",{"_index":709,"title":{},"body":{"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/StatusComponent.html":{},"miscellaneous/enumerations.html":{}}}],["2.1.0",{"_index":3358,"title":{},"body":{"dependencies.html":{}}}],["2.29.2",{"_index":3344,"title":{},"body":{"dependencies.html":{}}}],["2.3.0",{"_index":3361,"title":{},"body":{"dependencies.html":{}}}],["2.3.2",{"_index":3364,"title":{},"body":{"dependencies.html":{}}}],["20.0.0",{"_index":3323,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":3027,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["24",{"_index":2760,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["242",{"_index":370,"title":{},"body":{"components/AppComponent.html":{}}}],["242628",{"_index":404,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":1021,"title":{},"body":{"components/BlockLedgerComponent.html":{},"modules/DataModule.html":{}}}],["255",{"_index":2250,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["256",{"_index":1777,"title":{},"body":{"injectables/CryptService.html":{}}}],["25vh",{"_index":1310,"title":{},"body":{"directives/ChartDirective.html":{}}}],["27",{"_index":3431,"title":{},"body":{"overview.html":{}}}],["27.5.1",{"_index":3337,"title":{},"body":{"dependencies.html":{}}}],["29",{"_index":3432,"title":{},"body":{"overview.html":{}}}],["2px",{"_index":394,"title":{},"body":{"components/AppComponent.html":{}}}],["3",{"_index":1097,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["3.6.0",{"_index":3330,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":2323,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["30.416",{"_index":2763,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["30000",{"_index":1280,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["30vh",{"_index":378,"title":{},"body":{"components/AppComponent.html":{}}}],["32",{"_index":1615,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["365",{"_index":2765,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["36963",{"_index":3128,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["39.2.0",{"_index":3324,"title":{},"body":{"dependencies.html":{}}}],["4",{"_index":1044,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["4.1.1",{"_index":3335,"title":{},"body":{"dependencies.html":{}}}],["401",{"_index":293,"title":{},"body":{"components/AppComponent.html":{}}}],["404",{"_index":296,"title":{},"body":{"components/AppComponent.html":{}}}],["4096",{"_index":1782,"title":{},"body":{"injectables/CryptService.html":{}}}],["48px",{"_index":2660,"title":{},"body":{"components/StatusComponent.html":{}}}],["5",{"_index":2820,"title":{},"body":{"components/TransferComponent.html":{}}}],["5.0.0",{"_index":3350,"title":{},"body":{"dependencies.html":{}}}],["5.0.2",{"_index":3317,"title":{},"body":{"dependencies.html":{}}}],["5.58.2",{"_index":3333,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2262,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["545",{"_index":2767,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["54px",{"_index":363,"title":{},"body":{"components/AppComponent.html":{}}}],["57",{"_index":3435,"title":{},"body":{"overview.html":{}}}],["58px",{"_index":395,"title":{},"body":{"components/AppComponent.html":{}}}],["6.0.2",{"_index":3353,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":3329,"title":{},"body":{"dependencies.html":{}}}],["6.1.5",{"_index":3349,"title":{},"body":{"dependencies.html":{}}}],["6.5.5",{"_index":3359,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":2755,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["64",{"_index":1598,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["64px",{"_index":382,"title":{},"body":{"components/AppComponent.html":{}}}],["7",{"_index":1758,"title":{},"body":{"injectables/CryptService.html":{}}}],["7.0.0",{"_index":3322,"title":{},"body":{"dependencies.html":{}}}],["74px",{"_index":383,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":1566,"title":{},"body":{"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["8.0.0",{"_index":3355,"title":{},"body":{"dependencies.html":{}}}],["838488",{"_index":405,"title":{},"body":{"components/AppComponent.html":{}}}],["9",{"_index":3434,"title":{},"body":{"overview.html":{}}}],["_(ツ)_",{"_index":2606,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["above",{"_index":2940,"title":{},"body":{"components/WalletComponent.html":{}}}],["absolute",{"_index":2661,"title":{},"body":{"components/StatusComponent.html":{}}}],["access",{"_index":336,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["access_token",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessibility",{"_index":2601,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["accessors",{"_index":1645,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/WebStorageService.html":{}}}],["account_balance_wallet",{"_index":344,"title":{},"body":{"components/AppComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["accounts",{"_index":1699,"title":{},"body":{"injectables/CryptService.html":{}}}],["action",{"_index":1441,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/WalletEffects.html":{},"miscellaneous/functions.html":{}}}],["actionreducer",{"_index":628,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["actionreducermap",{"_index":629,"title":{},"body":{"interfaces/AppState.html":{}}}],["actions",{"_index":1434,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/Effects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["actionsblocklist",{"_index":1838,"title":{},"body":{"modules/DataModule.html":{}}}],["activatedroute",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["activatedroute.firstchild",{"_index":332,"title":{},"body":{"components/AppComponent.html":{}}}],["activatedroutesnapshot",{"_index":710,"title":{},"body":{"guards/AuthGuard.html":{}}}],["active",{"_index":402,"title":{},"body":{"components/AppComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/RootComponent.html":{},"miscellaneous/enumerations.html":{}}}],["acts",{"_index":688,"title":{},"body":{"guards/AuthGuard.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["adapter",{"_index":1367,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["add",{"_index":34,"title":{},"body":{"components/AddComponent.html":{},"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/FileSystemService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["add'},{'name",{"_index":74,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["add.component.html",{"_index":36,"title":{},"body":{"components/AddComponent.html":{}}}],["add_box",{"_index":65,"title":{},"body":{"components/AddComponent.html":{}}}],["addaddressbook",{"_index":1,"title":{"interfaces/AddAddressBook.html":{}},"body":{"interfaces/AddAddressBook.html":{},"injectables/WalletRpcService.html":{}}}],["addaddressbook(x",{"_index":3072,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["addcomponent",{"_index":22,"title":{"components/AddComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["adding",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{}}}],["addoptions",{"_index":863,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["addoptions(overrides",{"_index":867,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["address",{"_index":9,"title":{"interfaces/Address.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["adds",{"_index":614,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["adduser",{"_index":2698,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["adjust",{"_index":3398,"title":{},"body":{"miscellaneous/functions.html":{}}}],["adjustments",{"_index":1344,"title":{},"body":{"injectables/ChartService.html":{}}}],["aftercontentinit",{"_index":140,"title":{},"body":{"components/AppComponent.html":{}}}],["afterviewinit",{"_index":1282,"title":{},"body":{"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["again",{"_index":2099,"title":{},"body":{"components/LoginComponent.html":{}}}],["alertservice",{"_index":2286,"title":{},"body":{"components/OpenComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{}}}],["alertstyles",{"_index":2824,"title":{},"body":{"components/TransferComponent.html":{}}}],["alertstyles.danger",{"_index":2837,"title":{},"body":{"components/TransferComponent.html":{}}}],["alertstyles.info",{"_index":2832,"title":{},"body":{"components/TransferComponent.html":{}}}],["algorithm",{"_index":1625,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["alias",{"_index":2412,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["aliases",{"_index":3438,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["align",{"_index":384,"title":{},"body":{"components/AppComponent.html":{}}}],["allcolumns",{"_index":990,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["allow",{"_index":1675,"title":{},"body":{"injectables/CryptService.html":{}}}],["alloweddomains",{"_index":573,"title":{},"body":{"modules/AppModule.html":{}}}],["alpha(0.2",{"_index":1390,"title":{},"body":{"injectables/ChartService.html":{}}}],["already",{"_index":2474,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["alt_blocks_count",{"_index":1253,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["always",{"_index":1660,"title":{},"body":{"injectables/CryptService.html":{}}}],["amber",{"_index":1041,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["amfromunix",{"_index":953,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["amount",{"_index":1843,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{}}}],["amtimeago",{"_index":1227,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["angular",{"_index":181,"title":{},"body":{"components/AppComponent.html":{},"dependencies.html":{}}}],["angular/animations",{"_index":3309,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":3312,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":513,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":520,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"interceptors/HeaderInterceptor.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["angular/compiler",{"_index":3313,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":58,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":539,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":731,"title":{},"body":{"modules/AuthModule.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"modules/BlockchainModule.html":{},"components/RestoreComponent.html":{},"modules/RootModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":3316,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":535,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/card",{"_index":728,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/checkbox",{"_index":2883,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/core",{"_index":2880,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/material/dialog",{"_index":1868,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{}}}],["angular/material/divider",{"_index":527,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/expansion",{"_index":2995,"title":{},"body":{"modules/WalletModule.html":{}}}],["angular/material/form",{"_index":1140,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["angular/material/icon",{"_index":525,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/input",{"_index":733,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/list",{"_index":529,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/menu",{"_index":533,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["angular/material/progress",{"_index":1137,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["angular/material/select",{"_index":2582,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/sidenav",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["angular/material/tabs",{"_index":2532,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/toolbar",{"_index":531,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["angular/material/tooltip",{"_index":537,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["angular/platform",{"_index":249,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SpartaComponent.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"dependencies.html":{}}}],["animal",{"_index":1865,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["animation",{"_index":880,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animationduration",{"_index":882,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["animations",{"_index":884,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"dependencies.html":{}}}],["any):string|null",{"_index":3265,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["anything",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["api",{"_index":1955,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/WebsocketService.html":{}}}],["api_url",{"_index":468,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/WalletRpcService.html":{}}}],["apiurl",{"_index":411,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WebStorageService.html":{}}}],["app",{"_index":90,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WebStorageService.html":{}}}],["app'},{'name",{"_index":76,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["app.component",{"_index":541,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":143,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":142,"title":{},"body":{"components/AppComponent.html":{}}}],["app.lthn.chain.desc.no_transactions",{"_index":959,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.table.th.depth",{"_index":1008,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.table.th.reward",{"_index":1006,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.title",{"_index":1086,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["app.lthn.chain.words.alt_blocks_count",{"_index":1248,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.block_size",{"_index":933,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.block_size_limit",{"_index":1250,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.chain_stat",{"_index":1220,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.chain_stat_value",{"_index":1221,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.cumulative_difficulty",{"_index":1235,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.depth",{"_index":935,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.difficulty",{"_index":937,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.grey_peerlist_size",{"_index":1232,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.hash",{"_index":932,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.words.height",{"_index":939,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.incoming_connections_count",{"_index":1237,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.major_version",{"_index":941,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.miner_transaction",{"_index":960,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.minor_version",{"_index":943,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.nonce",{"_index":945,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.orphan_status",{"_index":949,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.words.outgoing_connections_count",{"_index":1244,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.reward",{"_index":954,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.start_time",{"_index":1224,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.status",{"_index":1222,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.target",{"_index":1246,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.target_height",{"_index":1228,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.testnet",{"_index":1242,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.timestamp",{"_index":951,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["app.lthn.chain.words.top_height",{"_index":1229,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.tx_count",{"_index":947,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.tx_pool_size",{"_index":1240,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.chain.words.unlock_time",{"_index":962,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["app.lthn.chain.words.white_peerlist_size",{"_index":1230,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["app.lthn.wallet.button.create",{"_index":3030,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.button.restore",{"_index":2483,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.button.unlock",{"_index":2315,"title":{},"body":{"components/OpenComponent.html":{}}}],["app.lthn.wallet.label.address",{"_index":2477,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.autosave",{"_index":2481,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.filename",{"_index":2473,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.label.restore",{"_index":2480,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.spend",{"_index":2478,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.view",{"_index":2479,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.label.wallet",{"_index":2475,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.titles.new",{"_index":3029,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["app.lthn.wallet.titles.restore",{"_index":2472,"title":{},"body":{"components/RestoreComponent.html":{}}}],["app.lthn.wallet.titles.unlock",{"_index":2313,"title":{},"body":{"components/OpenComponent.html":{}}}],["app_config",{"_index":631,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["app_config.production",{"_index":663,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/DataModule.html":{}}}],["appcomponent",{"_index":75,"title":{"components/AppComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["appconfigservice",{"_index":177,"title":{"injectables/AppConfigService.html":{}},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/WalletRpcService.html":{}}}],["appconfigservice.apiurl",{"_index":466,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.get('lethean",{"_index":467,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/WalletRpcService.html":{}}}],["appconfigservice.config.get(section",{"_index":482,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.parse(data",{"_index":470,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.set(section",{"_index":483,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.config.stringify",{"_index":486,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["appconfigservice.serverpublickey",{"_index":462,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{}}}],["appfilesystem",{"_index":1936,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["application",{"_index":577,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/ProfileState.html":{}}}],["application/json",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{}}}],["application/x",{"_index":1191,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["applies",{"_index":1342,"title":{},"body":{"injectables/ChartService.html":{}}}],["appmodule",{"_index":488,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":496,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["appstate",{"_index":617,"title":{"interfaces/AppState.html":{}},"body":{"interfaces/AppState.html":{}}}],["arg",{"_index":3103,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["armored",{"_index":1787,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredkey",{"_index":1798,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoredmessage",{"_index":1811,"title":{},"body":{"injectables/CryptService.html":{}}}],["armoured",{"_index":1651,"title":{},"body":{"injectables/CryptService.html":{}}}],["around",{"_index":2507,"title":{},"body":{"components/RootComponent.html":{}}}],["array",{"_index":1734,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{}}}],["assets",{"_index":232,"title":{},"body":{"components/AppComponent.html":{}}}],["async",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{}}}],["atob(dat",{"_index":1982,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["atob(data[1",{"_index":1537,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["atob(state",{"_index":657,"title":{},"body":{"interfaces/AppState.html":{}}}],["atomic",{"_index":1845,"title":{},"body":{"interfaces/Destination.html":{},"interfaces/MakeUriIn.html":{}}}],["attach",{"_index":1509,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["attach_file",{"_index":2115,"title":{},"body":{"components/LoginComponent.html":{}}}],["attached",{"_index":2420,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["auth",{"_index":700,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":708,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["auth/auth.service",{"_index":2692,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["auth/login",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["auth0/angular",{"_index":553,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["authenticated",{"_index":687,"title":{},"body":{"guards/AuthGuard.html":{}}}],["authguard",{"_index":594,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["authmodule",{"_index":497,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":1205,"title":{},"body":{"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{}}}],["authservice",{"_index":555,"title":{"injectables/AuthService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["authservice.token",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice.token.access_token",{"_index":1206,"title":{},"body":{"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{}}}],["authservice.token[\"access_token",{"_index":562,"title":{},"body":{"modules/AppModule.html":{}}}],["authservice.token['access_token",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice.token['access_token']?.length",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice.token['refresh_token",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["auto",{"_index":398,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"interfaces/ProfileState.html":{}}}],["automatically",{"_index":1604,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["autosave_current",{"_index":2456,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["available",{"_index":271,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{},"interfaces/IncomingTransfersIn.html":{},"modules.html":{}}}],["avatar",{"_index":2413,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["await",{"_index":283,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/ModalComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["aware",{"_index":1664,"title":{},"body":{"injectables/CryptService.html":{}}}],["away",{"_index":2722,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["axios",{"_index":3266,"title":{},"body":{"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["axios.post(`${this.apiurl}/${cmd",{"_index":3268,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["b",{"_index":1570,"title":{},"body":{"components/ConsoleComponent.html":{},"pipes/EffortPipe.html":{}}}],["backend",{"_index":3226,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd",{"_index":3230,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["backend(cmd:string",{"_index":3264,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["background",{"_index":366,"title":{},"body":{"components/AppComponent.html":{},"components/StatusComponent.html":{}}}],["backgroundcolor",{"_index":2211,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["backup",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{}}}],["balance",{"_index":841,"title":{"interfaces/Balance.html":{}},"body":{"interfaces/Balance.html":{},"components/DetailsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["balance:any",{"_index":1855,"title":{},"body":{"components/DetailsComponent.html":{}}}],["bar",{"_index":1138,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/UserModule.html":{}}}],["basechartconfigservice",{"_index":860,"title":{"injectables/BaseChartConfigService.html":{}},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:12",{"_index":2220,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:121",{"_index":2207,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:16",{"_index":2214,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:17",{"_index":2219,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:18",{"_index":2213,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:31",{"_index":2205,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["basechartconfigservice:61",{"_index":2208,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["before",{"_index":1612,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["below",{"_index":2942,"title":{},"body":{"components/WalletComponent.html":{}}}],["below_amount",{"_index":2676,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["benefit",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["beta",{"_index":335,"title":{},"body":{"components/AppComponent.html":{}}}],["beta.2",{"_index":3351,"title":{},"body":{"dependencies.html":{}}}],["beta.35",{"_index":3315,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":1376,"title":{},"body":{"injectables/ChartService.html":{}}}],["big.js",{"_index":3328,"title":{},"body":{"dependencies.html":{}}}],["bigger",{"_index":1713,"title":{},"body":{"injectables/CryptService.html":{}}}],["biggercontentfont",{"_index":2594,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["binary",{"_index":1789,"title":{},"body":{"injectables/CryptService.html":{}}}],["black",{"_index":1889,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["blank",{"_index":2850,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["bleeding",{"_index":2501,"title":{},"body":{"components/RootComponent.html":{}}}],["block",{"_index":85,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/GetBulkPaymentsIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["block.block_size",{"_index":934,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.depth",{"_index":936,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.difficulty",{"_index":938,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.height",{"_index":940,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.major_version",{"_index":942,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.minor_version",{"_index":944,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.nonce",{"_index":946,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.num_txes",{"_index":948,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.orphan_status",{"_index":950,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.prev_hash",{"_index":958,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.reward",{"_index":955,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block.timestamp",{"_index":952,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["block_height",{"_index":2332,"title":{},"body":{"interfaces/Payment.html":{}}}],["block_id",{"_index":1179,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["block_size",{"_index":975,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["block_size_limit",{"_index":1254,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["blockchain",{"_index":856,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["blockchain.component.html",{"_index":1071,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["blockchaincomponent",{"_index":77,"title":{"components/BlockchainComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockchainconfigcomponent",{"_index":79,"title":{"components/BlockchainConfigComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockchainmodule",{"_index":1120,"title":{"modules/BlockchainModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainroutingmodule",{"_index":581,"title":{"modules/BlockchainRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["blockchainservice",{"_index":176,"title":{"injectables/BlockchainService.html":{}},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/StatusComponent.html":{}}}],["blockchainstatscomponent",{"_index":82,"title":{"components/BlockchainStatsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockdata",{"_index":912,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockdata['miner_tx']['unlock_time",{"_index":967,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockdata['miner_tx']['vout'][0]['amount",{"_index":966,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockdata['miner_tx']['vout'][0]['target']['key",{"_index":965,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockdata[\\'miner_tx\\'][\\'unlock_time",{"_index":973,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockdata[\\'miner_tx\\'][\\'vout\\'][0][\\'amount",{"_index":972,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockdata[\\'miner_tx\\'][\\'vout\\'][0][\\'target\\'][\\'key",{"_index":971,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockdetailscomponent",{"_index":84,"title":{"components/BlockDetailsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blockheader",{"_index":918,"title":{"interfaces/BlockHeader.html":{}},"body":{"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{}}}],["blockid",{"_index":913,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["blockledgercomponent",{"_index":87,"title":{"components/BlockLedgerComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["blocks",{"_index":991,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["blocksearch",{"_index":992,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{}}}],["board",{"_index":235,"title":{},"body":{"components/AppComponent.html":{}}}],["body",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["boolean",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/CreateWallet.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"interfaces/SettingsState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{}}}],["bootstrap",{"_index":510,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ModalComponent.html":{},"miscellaneous/functions.html":{}}}],["bootstrap/ng",{"_index":2156,"title":{},"body":{"components/ModalComponent.html":{}}}],["border",{"_index":387,"title":{},"body":{"components/AppComponent.html":{}}}],["bordercolor",{"_index":2212,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["borderwidth",{"_index":893,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["bottom",{"_index":2228,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["bounds",{"_index":2240,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["brain",{"_index":1704,"title":{},"body":{"injectables/CryptService.html":{}}}],["bring",{"_index":2504,"title":{},"body":{"components/RootComponent.html":{}}}],["browse",{"_index":2899,"title":{},"body":{"components/VpnComponent.html":{},"modules.html":{}}}],["browser",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"pipes/EscapeHtmlPipe.html":{},"modules/TranslateModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":516,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":515,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":514,"title":{},"body":{"modules/AppModule.html":{},"modules/TranslateModule.html":{}}}],["browsermodule.withservertransition({appid",{"_index":563,"title":{},"body":{"modules/AppModule.html":{}}}],["btoa(data",{"_index":1984,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["btoa(res.tostring",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{}}}],["btoa(state",{"_index":654,"title":{},"body":{"interfaces/AppState.html":{}}}],["build",{"_index":3413,"title":{},"body":{"index.html":{}}}],["builddocumentation",{"_index":3423,"title":{},"body":{"index.html":{}}}],["building",{"_index":2863,"title":{},"body":{"components/UserComponent.html":{}}}],["buildtype",{"_index":1072,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["buttonmodule",{"_index":1142,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["bypassed",{"_index":701,"title":{},"body":{"guards/AuthGuard.html":{}}}],["byte/64",{"_index":1616,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["calc(99vh",{"_index":362,"title":{},"body":{"components/AppComponent.html":{}}}],["calculated",{"_index":1605,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["call",{"_index":3233,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["callback",{"_index":898,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["callbacks",{"_index":902,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["called",{"_index":3300,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["canactivate",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["cant",{"_index":704,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canvas",{"_index":1579,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["capital",{"_index":2400,"title":{},"body":{"components/ProfileComponent.html":{}}}],["card",{"_index":376,"title":{},"body":{"components/AppComponent.html":{},"components/StatusComponent.html":{}}}],["cardmodule",{"_index":3001,"title":{},"body":{"modules/WalletModule.html":{}}}],["caretsize",{"_index":2255,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["catch",{"_index":288,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"injectables/WebStorageService.html":{}}}],["catch((e",{"_index":2100,"title":{},"body":{"components/LoginComponent.html":{}}}],["catch((err",{"_index":2309,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["catch(e",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{}}}],["catcherror",{"_index":1478,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["catcherror((error",{"_index":1469,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["center",{"_index":386,"title":{},"body":{"components/AppComponent.html":{}}}],["cert",{"_index":458,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["chain",{"_index":80,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{}}}],["chain'},{'name",{"_index":78,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["chain.chainstate",{"_index":622,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain.reducer",{"_index":648,"title":{},"body":{"interfaces/AppState.html":{}}}],["chain/block/:id",{"_index":1153,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["chaingetinfo",{"_index":213,"title":{"interfaces/ChainGetInfo.html":{}},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/StatusComponent.html":{}}}],["chaininfo",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/StatusComponent.html":{}}}],["chainrpc",{"_index":1159,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chainrpc(method",{"_index":1169,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["chance",{"_index":1809,"title":{},"body":{"injectables/CryptService.html":{}}}],["change",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/SettingsEffects.html":{}}}],["changed",{"_index":2091,"title":{},"body":{"components/LoginComponent.html":{}}}],["changedetection",{"_index":1498,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy",{"_index":1527,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":1499,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changedetectorref",{"_index":1513,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changelanguage",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{}}}],["changelanguage(lang",{"_index":187,"title":{},"body":{"components/AppComponent.html":{}}}],["changestream",{"_index":1507,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel",{"_index":1517,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["changestream(channel:string",{"_index":1545,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["channel",{"_index":1519,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["character",{"_index":1617,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["charged",{"_index":2845,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["charset=utf",{"_index":2623,"title":{},"body":{"components/SpartaComponent.html":{}}}],["chart",{"_index":638,"title":{},"body":{"interfaces/AppState.html":{},"injectables/BaseChartConfigService.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chart(`lthn",{"_index":1402,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.chartseffects",{"_index":665,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.chartsstate",{"_index":623,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.directive",{"_index":1325,"title":{},"body":{"modules/ChartModule.html":{}}}],["chart.js",{"_index":1357,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chart.reducer",{"_index":644,"title":{},"body":{"interfaces/AppState.html":{}}}],["chart.register(...registerables",{"_index":1382,"title":{},"body":{"injectables/ChartService.html":{}}}],["chart.service",{"_index":1301,"title":{},"body":{"directives/ChartDirective.html":{},"modules/ChartModule.html":{}}}],["chartconfiginterface",{"_index":1267,"title":{"interfaces/ChartConfigInterface.html":{}},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartdata",{"_index":1327,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartdifficulty",{"_index":1274,"title":{"interfaces/ChartDifficulty.html":{}},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartsEffects.html":{}}}],["chartdifficultyreducer",{"_index":1492,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultyreducer(state",{"_index":1496,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["chartdifficultystate",{"_index":1278,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{}}}],["chartdirective",{"_index":134,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["chartelement",{"_index":1283,"title":{},"body":{"directives/ChartDirective.html":{}}}],["chartinstances",{"_index":1328,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartjs",{"_index":1366,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["chartmeta",{"_index":1329,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartmodule",{"_index":1125,"title":{"modules/ChartModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules.html":{},"overview.html":{}}}],["chartnetworkdifficulty",{"_index":1473,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultyloadrequested",{"_index":1449,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystartpolling",{"_index":1429,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartnetworkdifficultystoppolling",{"_index":1430,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["charts",{"_index":619,"title":{},"body":{"interfaces/AppState.html":{},"injectables/ChartService.html":{}}}],["charts/network",{"_index":1372,"title":{},"body":{"injectables/ChartService.html":{}}}],["chartsactions",{"_index":1479,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultyloadfailure",{"_index":1471,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadrequested",{"_index":1443,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultyloadsuccess",{"_index":1468,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["chartsactions.chartnetworkdifficultystartpolling",{"_index":2215,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartsactions.chartnetworkdifficultystoppedpolling",{"_index":1446,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartsactions.chartnetworkdifficultystoppolling",{"_index":2217,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["chartseffects",{"_index":1427,"title":{"injectables/ChartsEffects.html":{}},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty",{"_index":1461,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartseffects.pollinguntil$.chartnetworkdifficulty$.next(true",{"_index":1442,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["chartservice",{"_index":987,"title":{"injectables/ChartService.html":{}},"body":{"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"overview.html":{}}}],["chartsstate",{"_index":1487,"title":{"interfaces/ChartsState.html":{}},"body":{"interfaces/ChartsState.html":{}}}],["chartsubscriptions",{"_index":1330,"title":{},"body":{"injectables/ChartService.html":{}}}],["check",{"_index":679,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"index.html":{}}}],["checks",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["child",{"_index":1505,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["circles",{"_index":230,"title":{},"body":{"components/AppComponent.html":{}}}],["circuit",{"_index":234,"title":{},"body":{"components/AppComponent.html":{}}}],["class",{"_index":59,"title":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["classes",{"_index":2317,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"overview.html":{}}}],["clear",{"_index":686,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/WebStorageService.html":{}}}],["cli",{"_index":1539,"title":{},"body":{"components/ConsoleComponent.html":{},"index.html":{}}}],["close",{"_index":1069,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/ModalComponent.html":{},"components/WalletComponent.html":{}}}],["closebuttonlabel",{"_index":2174,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["closeconnection",{"_index":3276,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closed",{"_index":3306,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["closeonoutsideclick",{"_index":1064,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["closewallet",{"_index":3159,"title":{},"body":{"injectables/WalletService.html":{}}}],["cloud",{"_index":2656,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_download",{"_index":66,"title":{},"body":{"components/AddComponent.html":{},"components/BlockchainComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cloud_off",{"_index":2657,"title":{},"body":{"components/StatusComponent.html":{}}}],["cloud_upload",{"_index":1099,"title":{},"body":{"components/BlockchainComponent.html":{},"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["cluster_appmodule",{"_index":491,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":495,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":493,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":494,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":492,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_approutingmodule",{"_index":579,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_approutingmodule_imports",{"_index":580,"title":{},"body":{"modules/AppRoutingModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":721,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":722,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":724,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":723,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_blockchainmodule",{"_index":1121,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_declarations",{"_index":1123,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_exports",{"_index":1124,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_blockchainmodule_imports",{"_index":1122,"title":{},"body":{"modules/BlockchainModule.html":{},"overview.html":{}}}],["cluster_chartmodule",{"_index":1320,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_chartdirective_providers",{"_index":3430,"title":{},"body":{"overview.html":{}}}],["cluster_chartmodule_declarations",{"_index":1322,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_exports",{"_index":1323,"title":{},"body":{"modules/ChartModule.html":{},"overview.html":{}}}],["cluster_chartmodule_providers",{"_index":1321,"title":{},"body":{"modules/ChartModule.html":{}}}],["cluster_consolemodule",{"_index":1580,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_declarations",{"_index":1582,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_consolemodule_exports",{"_index":1581,"title":{},"body":{"modules/ConsoleModule.html":{},"overview.html":{}}}],["cluster_logsmodule",{"_index":2122,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_declarations",{"_index":2124,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_logsmodule_exports",{"_index":2123,"title":{},"body":{"modules/LogsModule.html":{},"overview.html":{}}}],["cluster_modalmodule",{"_index":2194,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_declarations",{"_index":2195,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_modalmodule_exports",{"_index":2196,"title":{},"body":{"modules/ModalModule.html":{},"overview.html":{}}}],["cluster_pipesmodule",{"_index":2333,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_declarations",{"_index":2335,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_pipesmodule_exports",{"_index":2334,"title":{},"body":{"modules/PipesModule.html":{},"overview.html":{}}}],["cluster_postmodule",{"_index":2378,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_declarations",{"_index":2379,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_postmodule_exports",{"_index":2380,"title":{},"body":{"modules/PostModule.html":{},"overview.html":{}}}],["cluster_rootmodule",{"_index":2524,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_declarations",{"_index":2525,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootmodule_imports",{"_index":2526,"title":{},"body":{"modules/RootModule.html":{},"overview.html":{}}}],["cluster_rootroutingmodule",{"_index":2539,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_rootroutingmodule_imports",{"_index":2540,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["cluster_settingsmodule",{"_index":2577,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_declarations",{"_index":2578,"title":{},"body":{"modules/SettingsModule.html":{},"overview.html":{}}}],["cluster_settingsmodule_imports",{"_index":2579,"title":{},"body":{"modules/SettingsModule.html":{}}}],["cluster_spartamodule",{"_index":2629,"title":{},"body":{"modules/SpartaModule.html":{},"overview.html":{}}}],["cluster_spartamodule_declarations",{"_index":2630,"title":{},"body":{"modules/SpartaModule.html":{},"overview.html":{}}}],["cluster_statusmodule",{"_index":2663,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_declarations",{"_index":2665,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_statusmodule_exports",{"_index":2664,"title":{},"body":{"modules/StatusModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":2875,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2877,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2876,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_vpnmodule",{"_index":2915,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_vpnmodule_declarations",{"_index":2916,"title":{},"body":{"modules/VpnModule.html":{},"overview.html":{}}}],["cluster_walletmodule",{"_index":2989,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_declarations",{"_index":2991,"title":{},"body":{"modules/WalletModule.html":{},"overview.html":{}}}],["cluster_walletmodule_imports",{"_index":2990,"title":{},"body":{"modules/WalletModule.html":{}}}],["cmd",{"_index":3234,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["code",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{},"components/RootComponent.html":{}}}],["codeeditormodule",{"_index":1143,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{}}}],["codemirror",{"_index":3332,"title":{},"body":{"dependencies.html":{}}}],["codemirror/mode/properties/properties.js",{"_index":1110,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["col",{"_index":1036,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["col.default",{"_index":1034,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["color",{"_index":403,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["colorlib",{"_index":1368,"title":{},"body":{"injectables/ChartService.html":{}}}],["colors",{"_index":878,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/ProfileComponent.html":{}}}],["colour",{"_index":1343,"title":{},"body":{"injectables/ChartService.html":{}}}],["columnmode",{"_index":993,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/TransactionsComponent.html":{}}}],["columns",{"_index":994,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/TransactionsComponent.html":{}}}],["command",{"_index":1506,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["commonmodule",{"_index":512,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["community",{"_index":2519,"title":{},"body":{"components/RootComponent.html":{},"components/VpnComponent.html":{}}}],["compileroptions",{"_index":3439,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["completed",{"_index":2691,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["component",{"_index":21,"title":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainRoutingModule.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{}}}],["component_template",{"_index":72,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["components",{"_index":23,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["components/transfer/transfer.component",{"_index":3006,"title":{},"body":{"modules/WalletModule.html":{}}}],["conf/app.ini",{"_index":478,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config",{"_index":412,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"components/BlockchainConfigComponent.html":{},"injectables/ChartService.html":{},"dependencies.html":{},"index.html":{}}}],["config'},{'name",{"_index":81,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["config.component.html",{"_index":1102,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["config.helper.ts",{"_index":3440,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["config.interface",{"_index":2224,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["config.interface.ts",{"_index":1269,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:7",{"_index":1273,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.interface.ts:9",{"_index":1272,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["config.service",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["config.service.ts",{"_index":409,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:12",{"_index":903,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:13",{"_index":441,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:14",{"_index":445,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:15",{"_index":446,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:16",{"_index":443,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:17",{"_index":444,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:18",{"_index":425,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:26",{"_index":427,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:36",{"_index":434,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:47",{"_index":436,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:50",{"_index":866,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:57",{"_index":872,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:59",{"_index":871,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:61",{"_index":869,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:7",{"_index":875,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:74",{"_index":431,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:8",{"_index":904,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:84",{"_index":439,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["config.service.ts:9",{"_index":874,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["config.service.ts:92",{"_index":437,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configfile\":\"letheand.conf",{"_index":1198,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["configiniparser",{"_index":442,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configiniparser('\\r\\n",{"_index":472,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configiniparser.errors.errorduplicatesectionerror",{"_index":480,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["configs",{"_index":1379,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurations",{"_index":1362,"title":{},"body":{"injectables/ChartService.html":{}}}],["configurefn",{"_index":3441,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["configureoptions",{"_index":864,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["configures",{"_index":183,"title":{},"body":{"components/AppComponent.html":{}}}],["confirm",{"_index":2476,"title":{},"body":{"components/RestoreComponent.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["connect",{"_index":3277,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["connection",{"_index":3305,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["considered",{"_index":857,"title":{},"body":{"interfaces/Balance.html":{},"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["console",{"_index":1502,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console'},{'name",{"_index":91,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["console.component",{"_index":1584,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["console.component.html",{"_index":1504,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.component.scss",{"_index":1503,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.error('duplicated",{"_index":481,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["console.error(err",{"_index":2310,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["console.error(err)).then",{"_index":2935,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.error(err)).then((data",{"_index":2828,"title":{},"body":{"components/TransferComponent.html":{}}}],["console.error(error",{"_index":1470,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["console.log('cleaning",{"_index":2720,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('complete",{"_index":3304,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('creating",{"_index":2705,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('d",{"_index":2619,"title":{},"body":{"components/SpartaComponent.html":{}}}],["console.log('done",{"_index":2721,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('getitem",{"_index":3257,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('http",{"_index":3273,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('keyboard",{"_index":1551,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log('keys",{"_index":2708,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('loaded",{"_index":1112,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["console.log('message",{"_index":3298,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["console.log('prompt",{"_index":2312,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["console.log('saving",{"_index":2710,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["console.log('setitem",{"_index":3259,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["console.log('settingscomponent",{"_index":2559,"title":{},"body":{"components/SettingsComponent.html":{}}}],["console.log(`cmd:letheand:${this.command.join",{"_index":1562,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(`load",{"_index":465,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["console.log(appconfigservice.serverpublickey",{"_index":464,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["console.log(dat",{"_index":1201,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["console.log(data",{"_index":1043,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["console.log(dirname",{"_index":1979,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log(e",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{}}}],["console.log(err",{"_index":2938,"title":{},"body":{"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["console.log(error",{"_index":1422,"title":{},"body":{"injectables/ChartService.html":{}}}],["console.log(filename",{"_index":1980,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["console.log(name",{"_index":2933,"title":{},"body":{"components/WalletComponent.html":{}}}],["console.log(payload",{"_index":2981,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["console.log(privatekey.getuserids",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(res",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(signatures",{"_index":1806,"title":{},"body":{"injectables/CryptService.html":{}}}],["console.log(this.blockdata",{"_index":930,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["console.log(this.command.join",{"_index":1573,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["console.log(this.rows",{"_index":2808,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["consolecomponent",{"_index":89,"title":{"components/ConsoleComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["consolemodule",{"_index":498,"title":{"modules/ConsoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConsoleModule.html":{},"modules.html":{},"overview.html":{}}}],["const",{"_index":310,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"components/SpartaComponent.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["construction",{"_index":1624,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["constructor",{"_index":43,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["constructor(actions",{"_index":1433,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/Effects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["constructor(appfilesystem",{"_index":1933,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["constructor(authservice",{"_index":2081,"title":{},"body":{"components/LoginComponent.html":{}}}],["constructor(chain",{"_index":914,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["constructor(cryptservice",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{},"components/UserComponent.html":{}}}],["constructor(dialog",{"_index":2647,"title":{},"body":{"components/StatusComponent.html":{}}}],["constructor(dialogref",{"_index":2273,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["constructor(filesystem",{"_index":1647,"title":{},"body":{"injectables/CryptService.html":{}}}],["constructor(fs",{"_index":423,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/WalletService.html":{}}}],["constructor(http",{"_index":1166,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["constructor(modalservice",{"_index":2144,"title":{},"body":{"components/ModalComponent.html":{}}}],["constructor(name",{"_index":3222,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["constructor(private",{"_index":454,"title":{},"body":{"injectables/AppConfigService.html":{},"components/BlockDetailsComponent.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"injectables/Effects.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"components/SpartaComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["constructor(public",{"_index":1085,"title":{},"body":{"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/DetailsComponent.html":{},"components/StatusComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(renderer",{"_index":1286,"title":{},"body":{"directives/ChartDirective.html":{}}}],["constructor(router",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{}}}],["constructor(store",{"_index":1334,"title":{},"body":{"injectables/ChartService.html":{}}}],["constructor(wallet",{"_index":1848,"title":{},"body":{"components/DetailsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{}}}],["constructor(walletrpc",{"_index":3011,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["constructor(ws",{"_index":1510,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["container",{"_index":356,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":321,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashRatePipe.html":{},"components/OpenComponent.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletRpcService.html":{}}}],["content.tofixed(2",{"_index":2033,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["contents",{"_index":1916,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["context",{"_index":1065,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["conversion",{"_index":1659,"title":{},"body":{"injectables/CryptService.html":{}}}],["converted",{"_index":1746,"title":{},"body":{"injectables/CryptService.html":{}}}],["cost",{"_index":2913,"title":{},"body":{"components/VpnComponent.html":{}}}],["count",{"_index":3225,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["create",{"_index":1728,"title":{},"body":{"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"interfaces/RestoreWallet.html":{},"components/UserComponent.html":{}}}],["createchart",{"_index":1331,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchart(name",{"_index":1337,"title":{},"body":{"injectables/ChartService.html":{}}}],["createchartelement",{"_index":1284,"title":{},"body":{"directives/ChartDirective.html":{}}}],["createchartelement(name",{"_index":1294,"title":{},"body":{"directives/ChartDirective.html":{}}}],["created",{"_index":2709,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createeffect",{"_index":1436,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["createopenpgp",{"_index":1631,"title":{},"body":{"injectables/CryptService.html":{}}}],["createopenpgp(username",{"_index":1649,"title":{},"body":{"injectables/CryptService.html":{}}}],["createreducer",{"_index":1489,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["creates",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["createsalt",{"_index":1632,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(input",{"_index":1654,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsalt(username",{"_index":2719,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["createsaltv2",{"_index":1633,"title":{},"body":{"injectables/CryptService.html":{}}}],["createsaltv2(input",{"_index":1681,"title":{},"body":{"injectables/CryptService.html":{}}}],["createwallet",{"_index":1587,"title":{"interfaces/CreateWallet.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{}}}],["createwallet(x",{"_index":3074,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["creation",{"_index":2865,"title":{},"body":{"components/UserComponent.html":{}}}],["crypto",{"_index":413,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/CryptService.html":{},"dependencies.html":{}}}],["crypto.lib.wordarray.random(128",{"_index":1774,"title":{},"body":{"injectables/CryptService.html":{}}}],["crypto.pbkdf2(input",{"_index":1775,"title":{},"body":{"injectables/CryptService.html":{}}}],["cryptservice",{"_index":741,"title":{"injectables/CryptService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["cryptservice.sha256salty(username",{"_index":1707,"title":{},"body":{"injectables/CryptService.html":{}}}],["cumulative_difficulty",{"_index":1255,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["current",{"_index":272,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/RestoreWallet.html":{}}}],["currentflag",{"_index":146,"title":{},"body":{"components/AppComponent.html":{}}}],["currentlanguage",{"_index":147,"title":{},"body":{"components/AppComponent.html":{}}}],["custom",{"_index":1677,"title":{},"body":{"injectables/CryptService.html":{}}}],["d",{"_index":2233,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"pipes/TimeAgoPipe.html":{}}}],["d.gettime",{"_index":2752,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["daemon",{"_index":201,"title":{},"body":{"components/AppComponent.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{},"components/ProfileComponent.html":{},"modules/StatusModule.html":{}}}],["daemon'},{'name",{"_index":101,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["daemon/wallet/json_rpc",{"_index":3124,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["daltonism",{"_index":2595,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["darkmode",{"_index":2596,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["dashboard",{"_index":228,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["dat",{"_index":715,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/WalletService.html":{}}}],["dat.endswith('.keys",{"_index":3202,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.endswith('.txt",{"_index":3203,"title":{},"body":{"injectables/WalletService.html":{}}}],["dat.length",{"_index":716,"title":{},"body":{"guards/AuthGuard.html":{}}}],["dat.map((file",{"_index":717,"title":{},"body":{"guards/AuthGuard.html":{}}}],["data",{"_index":564,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"injectables/CryptService.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/PostComponent.html":{},"interfaces/ProfileState.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["data).catch((err",{"_index":3195,"title":{},"body":{"injectables/WalletService.html":{}}}],["data.address",{"_index":3198,"title":{},"body":{"injectables/WalletService.html":{}}}],["data.data",{"_index":3270,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["data.description",{"_index":318,"title":{},"body":{"components/AppComponent.html":{}}}],["data.fee",{"_index":2833,"title":{},"body":{"components/TransferComponent.html":{}}}],["data.heading",{"_index":317,"title":{},"body":{"components/AppComponent.html":{}}}],["data.length",{"_index":3200,"title":{},"body":{"injectables/WalletService.html":{}}}],["data.map((n",{"_index":2269,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["data.robots",{"_index":323,"title":{},"body":{"components/AppComponent.html":{}}}],["data.tx_hash",{"_index":2834,"title":{},"body":{"components/TransferComponent.html":{}}}],["data.tx_key",{"_index":2835,"title":{},"body":{"components/TransferComponent.html":{}}}],["data/data.module",{"_index":521,"title":{},"body":{"modules/AppModule.html":{}}}],["data/debug.rxjs",{"_index":1481,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["data/interface/pagination",{"_index":3218,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["data['block_header",{"_index":927,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["data['error']['message",{"_index":2838,"title":{},"body":{"components/TransferComponent.html":{}}}],["data['in",{"_index":2803,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data['out",{"_index":2804,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["data[0",{"_index":1536,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["database",{"_index":2427,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["datamap",{"_index":1270,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamap(data",{"_index":1271,"title":{},"body":{"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datamodule",{"_index":499,"title":{"modules/DataModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["dataset",{"_index":2209,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dataset.backgroundcolor",{"_index":1388,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.bordercolor",{"_index":1392,"title":{},"body":{"injectables/ChartService.html":{}}}],["dataset.yaxisid",{"_index":1399,"title":{},"body":{"injectables/ChartService.html":{}}}],["datasets",{"_index":873,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["datastore",{"_index":1351,"title":{},"body":{"injectables/ChartService.html":{}}}],["datatable",{"_index":1030,"title":{},"body":{"components/BlockLedgerComponent.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"components/TransactionsComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["dataupdates",{"_index":3278,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["date",{"_index":2748,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["date(value",{"_index":2747,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["day",{"_index":2232,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["days",{"_index":2758,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["dd",{"_index":2628,"title":{},"body":{"components/SpartaComponent.html":{}}}],["dealing",{"_index":3184,"title":{},"body":{"injectables/WalletService.html":{}}}],["debug",{"_index":1439,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{}}}],["debug(rxjslogginglevel.debug",{"_index":1467,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["decimation",{"_index":2258,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["declarations",{"_index":507,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["decorator",{"_index":2028,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["decorators",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{}}}],["decrypt",{"_index":656,"title":{},"body":{"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["decrypted",{"_index":1802,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryption",{"_index":703,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/ProfileState.html":{}}}],["decryptionkey",{"_index":2869,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["decryptionkeys",{"_index":1805,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgp",{"_index":1634,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgp(message",{"_index":1689,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle",{"_index":1635,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptpgpsingle(id",{"_index":1692,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptprivatekey",{"_index":1636,"title":{},"body":{"injectables/CryptService.html":{}}}],["decryptprivatekey(encryptionkey",{"_index":1708,"title":{},"body":{"injectables/CryptService.html":{}}}],["deep",{"_index":854,"title":{},"body":{"interfaces/Balance.html":{}}}],["default",{"_index":46,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["defaultlanguage",{"_index":567,"title":{},"body":{"modules/AppModule.html":{}}}],["defaults",{"_index":17,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/RestoreWallet.html":{},"interfaces/TransferSplitIn.html":{}}}],["defaultvalue",{"_index":430,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["defined",{"_index":44,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["delete",{"_index":3260,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["deleteaddressbook",{"_index":3053,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["deleteaddressbook(x",{"_index":3076,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dependencies",{"_index":490,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":2904,"title":{},"body":{"components/VpnComponent.html":{}}}],["deprecated",{"_index":453,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["deps",{"_index":571,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["depth",{"_index":976,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["describes",{"_index":1705,"title":{},"body":{"injectables/CryptService.html":{}}}],["describing",{"_index":2136,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["description",{"_index":11,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"interfaces/SweepAllIn.html":{},"modules/UserModule.html":{},"modules/WalletRoutingModule.html":{}}}],["description_short",{"_index":2345,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["desktop",{"_index":2500,"title":{},"body":{"components/RootComponent.html":{},"components/UserComponent.html":{},"index.html":{}}}],["dest.amount",{"_index":2826,"title":{},"body":{"components/TransferComponent.html":{}}}],["destination",{"_index":1589,"title":{"interfaces/Destination.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destinations",{"_index":1601,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["destroy",{"_index":2561,"title":{},"body":{"components/SettingsComponent.html":{}}}],["destroysubscriptions",{"_index":1332,"title":{},"body":{"injectables/ChartService.html":{}}}],["destroysubscriptions(name",{"_index":1345,"title":{},"body":{"injectables/ChartService.html":{}}}],["details",{"_index":910,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["details'},{'name",{"_index":86,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["details.component.html",{"_index":911,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/DetailsComponent.html":{}}}],["detailscomponent",{"_index":92,"title":{"components/DetailsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["dev",{"_index":3414,"title":{},"body":{"index.html":{}}}],["dev:setup",{"_index":3421,"title":{},"body":{"index.html":{}}}],["develop",{"_index":706,"title":{},"body":{"guards/AuthGuard.html":{}}}],["development",{"_index":2509,"title":{},"body":{"components/RootComponent.html":{}}}],["devices",{"_index":1717,"title":{},"body":{"injectables/CryptService.html":{}}}],["devproduction",{"_index":3422,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":1826,"title":{},"body":{"modules/DataModule.html":{}}}],["di",{"_index":1378,"title":{},"body":{"injectables/ChartService.html":{}}}],["dialog",{"_index":2643,"title":{},"body":{"components/StatusComponent.html":{}}}],["dialog/no",{"_index":2669,"title":{},"body":{"modules/StatusModule.html":{}}}],["dialogdata",{"_index":1862,"title":{"interfaces/DialogData.html":{}},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dialogref",{"_index":1870,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["dictionaries",{"_index":2396,"title":{},"body":{"components/ProfileComponent.html":{}}}],["diff",{"_index":1276,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["difficulty",{"_index":977,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChainGetInfo.html":{}}}],["dir",{"_index":1910,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["direction",{"_index":1061,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["directive",{"_index":70,"title":{"directives/ChartDirective.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["directives",{"_index":133,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["directory",{"_index":1939,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["dirname",{"_index":1913,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["disableclosebutton",{"_index":2177,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disabled",{"_index":2352,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["disabledismissbutton",{"_index":2178,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["disablerpclogin",{"_index":3129,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["dismiss",{"_index":2142,"title":{},"body":{"components/ModalComponent.html":{}}}],["dismissbuttonlabel",{"_index":2175,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["dispatch",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["display",{"_index":900,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["displaycolors",{"_index":2257,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["displayformats",{"_index":2231,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["dkey",{"_index":2414,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["dns",{"_index":2521,"title":{},"body":{"components/RootComponent.html":{}}}],["do_not_relay",{"_index":2677,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["doc",{"_index":3424,"title":{},"body":{"index.html":{}}}],["doc:serve",{"_index":3425,"title":{},"body":{"index.html":{}}}],["dom",{"_index":25,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["domsanitizer",{"_index":1897,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["done",{"_index":1068,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["download",{"_index":2278,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["downloadingcli",{"_index":2491,"title":{},"body":{"components/RootComponent.html":{}}}],["drawborder",{"_index":2244,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["drawerdirection",{"_index":1032,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["drawerdirection.left",{"_index":1062,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["drawerservice",{"_index":999,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["dropdown",{"_index":2939,"title":{},"body":{"components/WalletComponent.html":{}}}],["duration",{"_index":883,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["during",{"_index":678,"title":{},"body":{"guards/AuthGuard.html":{},"miscellaneous/functions.html":{}}}],["e",{"_index":289,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"injectables/WebStorageService.html":{}}}],["e.domevent",{"_index":1555,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.domevent.keycode",{"_index":1552,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.key",{"_index":1553,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["e.name",{"_index":291,"title":{},"body":{"components/AppComponent.html":{}}}],["e.status",{"_index":292,"title":{},"body":{"components/AppComponent.html":{}}}],["e.target.result.tostring",{"_index":2107,"title":{},"body":{"components/LoginComponent.html":{}}}],["e2e2e2",{"_index":879,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["each",{"_index":1363,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Destination.html":{}}}],["easier",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["ecc",{"_index":1780,"title":{},"body":{"injectables/CryptService.html":{}}}],["edge",{"_index":2502,"title":{},"body":{"components/RootComponent.html":{}}}],["edges",{"_index":2508,"title":{},"body":{"components/RootComponent.html":{}}}],["editor",{"_index":1688,"title":{},"body":{"injectables/CryptService.html":{}}}],["edittmpl",{"_index":995,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["effects",{"_index":664,"title":{"injectables/Effects.html":{},"injectables/Effects-1.html":{}},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{}}}],["effectsmodule",{"_index":1827,"title":{},"body":{"modules/DataModule.html":{}}}],["effectsmodule.forroot([...effects",{"_index":1839,"title":{},"body":{"modules/DataModule.html":{}}}],["effort",{"_index":1881,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["effortpipe",{"_index":1878,"title":{"pipes/EffortPipe.html":{}},"body":{"pipes/EffortPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["ekey",{"_index":2415,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["element",{"_index":69,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["elementref",{"_index":1289,"title":{},"body":{"directives/ChartDirective.html":{}}}],["elements",{"_index":888,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["elmref",{"_index":1288,"title":{},"body":{"directives/ChartDirective.html":{}}}],["empty",{"_index":693,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["en",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["enable",{"_index":2282,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["enabled",{"_index":2259,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["enabledblocking",{"_index":607,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["encapsulation",{"_index":1500,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["encoded",{"_index":2681,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["encrypt",{"_index":652,"title":{},"body":{"interfaces/AppState.html":{},"injectables/CryptService.html":{}}}],["encrypted",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/ProfileState.html":{}}}],["encryption",{"_index":1731,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/ProfileState.html":{},"components/UserComponent.html":{}}}],["encryptionkey",{"_index":1710,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkey.length",{"_index":1792,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptionkeys",{"_index":1796,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle",{"_index":1637,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpgpsingle(id",{"_index":1711,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpublic",{"_index":1638,"title":{},"body":{"injectables/CryptService.html":{}}}],["encryptpublic(data",{"_index":1723,"title":{},"body":{"injectables/CryptService.html":{}}}],["end_height",{"_index":1056,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{}}}],["engineering",{"_index":2406,"title":{},"body":{"components/ProfileComponent.html":{}}}],["english",{"_index":3024,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["enough",{"_index":855,"title":{},"body":{"interfaces/Balance.html":{}}}],["enter",{"_index":2301,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["entity",{"_index":1833,"title":{},"body":{"modules/DataModule.html":{}}}],["entityconfig",{"_index":1832,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule",{"_index":1830,"title":{},"body":{"modules/DataModule.html":{}}}],["entitydatamodule.forroot(entityconfig",{"_index":1841,"title":{},"body":{"modules/DataModule.html":{}}}],["entries",{"_index":1993,"title":{},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["entropy",{"_index":1685,"title":{},"body":{"injectables/CryptService.html":{}}}],["enum",{"_index":2351,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/UserOptions.html":{}}}],["enumerations",{"_index":3368,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["env/environment",{"_index":632,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["err",{"_index":2311,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["error",{"_index":1421,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["error(`chart",{"_index":1386,"title":{},"body":{"injectables/ChartService.html":{}}}],["error(`failed",{"_index":1793,"title":{},"body":{"injectables/CryptService.html":{}}}],["escapehtmlpipe",{"_index":1892,"title":{"pipes/EscapeHtmlPipe.html":{}},"body":{"pipes/EscapeHtmlPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["etc",{"_index":2422,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["ev",{"_index":1554,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.altkey",{"_index":1557,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.ctrlkey",{"_index":1558,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.keycode",{"_index":1560,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ev.metakey",{"_index":1559,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["even",{"_index":1719,"title":{},"body":{"injectables/CryptService.html":{}}}],["event",{"_index":308,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{}}}],["event.target.files[0",{"_index":2101,"title":{},"body":{"components/LoginComponent.html":{}}}],["exactly",{"_index":2910,"title":{},"body":{"components/VpnComponent.html":{}}}],["exists",{"_index":1903,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["exists(pathname",{"_index":1937,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["exists(type",{"_index":1907,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["exitnode",{"_index":2905,"title":{},"body":{"components/VpnComponent.html":{}}}],["export",{"_index":16,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["exportchain",{"_index":1160,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["exports",{"_index":612,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["expose",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["exsist",{"_index":698,"title":{},"body":{"guards/AuthGuard.html":{}}}],["exsists",{"_index":1911,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["extends",{"_index":2201,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["extra",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["fail",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{}}}],["failed",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{}}}],["fairhash",{"_index":2513,"title":{},"body":{"components/RootComponent.html":{}}}],["false",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"modules/BlockchainRoutingModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RootComponent.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"pipes/ShruggiePipe.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"injectables/WalletEffects.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{}}}],["family",{"_index":1089,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["fastpool",{"_index":2514,"title":{},"body":{"components/RootComponent.html":{}}}],["favourites",{"_index":2902,"title":{},"body":{"components/VpnComponent.html":{}}}],["feature",{"_index":2283,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["fee",{"_index":1602,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["fee_list",{"_index":2853,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["feedback",{"_index":1718,"title":{},"body":{"injectables/CryptService.html":{}}}],["fetch(`http://127.0.0.1:36911/daemon/chain/${url",{"_index":1204,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["fetch(appconfigservice.apiurl",{"_index":457,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{}}}],["fetchedhtml",{"_index":2610,"title":{},"body":{"components/SpartaComponent.html":{}}}],["fetchserverpublickey",{"_index":417,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["field",{"_index":1141,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["file.endswith('.lthn')).includes(true",{"_index":718,"title":{},"body":{"guards/AuthGuard.html":{}}}],["file.name",{"_index":2103,"title":{},"body":{"components/LoginComponent.html":{}}}],["filename",{"_index":435,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/CreateWallet.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{}}}],["filereader",{"_index":2105,"title":{},"body":{"components/LoginComponent.html":{}}}],["files",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FileSystemService.html":{}}}],["filesystem",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/OpenComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["filesystem/file",{"_index":1752,"title":{},"body":{"injectables/CryptService.html":{}}}],["filesysteminterface",{"_index":1900,"title":{"interfaces/FileSystemInterface.html":{}},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{}}}],["filesystemservice",{"_index":424,"title":{"injectables/FileSystemService.html":{}},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"components/BlockchainConfigComponent.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["filesystemwebservice",{"_index":1934,"title":{"injectables/FileSystemWebService.html":{}},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["fill",{"_index":2210,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["filter",{"_index":251,"title":{},"body":{"components/AppComponent.html":{},"interfaces/GetTransfersIn.html":{},"injectables/WalletEffects.html":{}}}],["filter_by_height",{"_index":2011,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["filterednavigationtree",{"_index":148,"title":{},"body":{"components/AppComponent.html":{}}}],["find",{"_index":1375,"title":{},"body":{"injectables/ChartService.html":{}}}],["fired",{"_index":2109,"title":{},"body":{"components/LoginComponent.html":{}}}],["first",{"_index":695,"title":{},"body":{"guards/AuthGuard.html":{}}}],["flexmodule",{"_index":538,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["folder",{"_index":1915,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["follow,index",{"_index":326,"title":{},"body":{"components/AppComponent.html":{}}}],["font",{"_index":1091,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{},"components/StatusComponent.html":{}}}],["form",{"_index":1193,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["format",{"_index":1176,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/CryptService.html":{}}}],["formcontrol",{"_index":1014,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["formcontrol('0",{"_index":2455,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(false",{"_index":2462,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formcontrol(true",{"_index":2457,"title":{},"body":{"components/RestoreComponent.html":{}}}],["formgroup",{"_index":2449,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["forms",{"_index":2941,"title":{},"body":{"components/WalletComponent.html":{}}}],["formsmodule",{"_index":729,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{}}}],["framework",{"_index":182,"title":{},"body":{"components/AppComponent.html":{}}}],["friendly",{"_index":2416,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["fromcoin",{"_index":1987,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["fromcoinpipe",{"_index":1985,"title":{"pipes/FromCoinPipe.html":{}},"body":{"pipes/FromCoinPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["fs",{"_index":426,"title":{},"body":{"injectables/AppConfigService.html":{},"components/BlockchainConfigComponent.html":{},"injectables/FileSystemService.html":{},"injectables/WalletService.html":{}}}],["full",{"_index":599,"title":{},"body":{"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"modules/RootRoutingModule.html":{}}}],["function",{"_index":558,"title":{},"body":{"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartService.html":{},"interfaces/ChartsState.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"miscellaneous/typealiases.html":{}}}],["functionality",{"_index":2279,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["functions",{"_index":3376,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["funds",{"_index":851,"title":{},"body":{"interfaces/Balance.html":{},"injectables/WalletRpcService.html":{}}}],["g",{"_index":1891,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{}}}],["general",{"_index":2558,"title":{},"body":{"components/SettingsComponent.html":{}}}],["generated",{"_index":2417,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["generatekey",{"_index":1639,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatekey(input",{"_index":1726,"title":{},"body":{"injectables/CryptService.html":{}}}],["generatepaymentid",{"_index":1595,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["generating",{"_index":2487,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["generator",{"_index":2404,"title":{},"body":{"components/ProfileComponent.html":{}}}],["get_tx_hex",{"_index":2678,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["get_tx_key",{"_index":1621,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{}}}],["get_tx_keys",{"_index":2679,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["getactiveaddress",{"_index":3160,"title":{},"body":{"injectables/WalletService.html":{}}}],["getaddress",{"_index":3054,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook",{"_index":3055,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbook(x",{"_index":3080,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getaddressbookout",{"_index":1991,"title":{"interfaces/GetAddressBookOut.html":{}},"body":{"interfaces/GetAddressBookOut.html":{},"injectables/WalletRpcService.html":{}}}],["getauthstatus",{"_index":680,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["getbalance",{"_index":3056,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["getblock",{"_index":1161,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getblock(block_id",{"_index":1177,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getblocks",{"_index":997,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/BlockchainService.html":{}}}],["getblocks(start_height",{"_index":1180,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getbulkpayments",{"_index":3057,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpayments(x",{"_index":3084,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsin",{"_index":1994,"title":{"interfaces/GetBulkPaymentsIn.html":{}},"body":{"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getbulkpaymentsout",{"_index":2000,"title":{"interfaces/GetBulkPaymentsOut.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["getchild",{"_index":159,"title":{},"body":{"components/AppComponent.html":{}}}],["getchild(activatedroute",{"_index":194,"title":{},"body":{"components/AppComponent.html":{}}}],["getconfig",{"_index":418,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getconfig(section",{"_index":428,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["getfilesystem",{"_index":1949,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["getheight",{"_index":3058,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getid",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{}}}],["getinfo",{"_index":1162,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["getitem",{"_index":3227,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getitem(key",{"_index":3236,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getkeymap",{"_index":1750,"title":{},"body":{"injectables/CryptService.html":{}}}],["getlatestposts",{"_index":2359,"title":{},"body":{"components/PostComponent.html":{}}}],["getlength",{"_index":3248,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["getpayments",{"_index":3059,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpayments(x",{"_index":3087,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["getpaymentsin",{"_index":2004,"title":{"interfaces/GetPaymentsIn.html":{}},"body":{"interfaces/GetPaymentsIn.html":{},"injectables/WalletRpcService.html":{}}}],["getpaymentsout",{"_index":2006,"title":{"interfaces/GetPaymentsOut.html":{}},"body":{"interfaces/GetPaymentsOut.html":{},"injectables/WalletRpcService.html":{}}}],["gets",{"_index":1349,"title":{},"body":{"injectables/ChartService.html":{},"injectables/WalletService.html":{}}}],["getsub",{"_index":1508,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["getting",{"_index":3404,"title":{"index.html":{}},"body":{}}],["gettransactions",{"_index":1163,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["gettransactions(txshashes",{"_index":1183,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["gettransferbytxid",{"_index":3060,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransferbytxid(x",{"_index":3089,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers",{"_index":3061,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfers(x",{"_index":3092,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["gettransfersin",{"_index":2008,"title":{"interfaces/GetTransfersIn.html":{}},"body":{"interfaces/GetTransfersIn.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["gettransfersout",{"_index":2018,"title":{"interfaces/GetTransfersOut.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["getuser",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["getwalletlist",{"_index":3161,"title":{},"body":{"injectables/WalletService.html":{}}}],["git_repo",{"_index":2346,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["github",{"_index":1666,"title":{},"body":{"injectables/CryptService.html":{},"components/RootComponent.html":{},"index.html":{}}}],["give",{"_index":1045,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"components/StatusComponent.html":{}}}],["global",{"_index":2602,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["global_index",{"_index":2058,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["globalfontsize",{"_index":2597,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["go",{"_index":2723,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["golang",{"_index":3409,"title":{},"body":{"index.html":{}}}],["good",{"_index":1668,"title":{},"body":{"injectables/CryptService.html":{}}}],["gradient(circle",{"_index":368,"title":{},"body":{"components/AppComponent.html":{}}}],["graph",{"_index":3428,"title":{},"body":{"modules.html":{}}}],["grey_peerlist_size",{"_index":1256,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["gridlines",{"_index":2242,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["group",{"_index":2072,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"injectables/WebStorageService.html":{}}}],["guard",{"_index":668,"title":{"guards/AuthGuard.html":{}},"body":{"overview.html":{}}}],["guards",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{}}}],["handles",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happen",{"_index":705,"title":{},"body":{"guards/AuthGuard.html":{}}}],["happens",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["hascli",{"_index":2492,"title":{},"body":{"components/RootComponent.html":{}}}],["hash",{"_index":978,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/TransferOut.html":{}}}],["hashlink",{"_index":1067,"title":{},"body":{"components/BlockLedgerComponent.html":{},"pipes/HashLinkPipe.html":{},"components/WalletComponent.html":{}}}],["hashlinkpipe",{"_index":2022,"title":{"pipes/HashLinkPipe.html":{}},"body":{"pipes/HashLinkPipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashrate",{"_index":1066,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainStatsComponent.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart",{"_index":1373,"title":{},"body":{"injectables/ChartService.html":{}}}],["hashrate.chart.ts",{"_index":2200,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:12",{"_index":2216,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:132",{"_index":2206,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashrate.chart.ts:14",{"_index":2218,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["hashratepipe",{"_index":1132,"title":{"pipes/HashRatePipe.html":{}},"body":{"modules/BlockchainModule.html":{},"pipes/HashRatePipe.html":{},"modules/PipesModule.html":{},"overview.html":{}}}],["hashvault",{"_index":2512,"title":{},"body":{"components/RootComponent.html":{}}}],["headerinterceptor",{"_index":502,"title":{"interceptors/HeaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/HeaderInterceptor.html":{},"overview.html":{}}}],["headers",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["heading",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletRoutingModule.html":{}}}],["healthy",{"_index":1046,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["height",{"_index":357,"title":{"interfaces/Height.html":{}},"body":{"components/AppComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChainGetInfo.html":{},"directives/ChartDirective.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/Height.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/StatusComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["height:40vh",{"_index":1315,"title":{},"body":{"directives/ChartDirective.html":{}}}],["helper",{"_index":196,"title":{},"body":{"components/AppComponent.html":{}}}],["helps",{"_index":2906,"title":{},"body":{"components/VpnComponent.html":{}}}],["here",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/VpnComponent.html":{}}}],["hex",{"_index":1618,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["hexadecimal",{"_index":2134,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["hidden",{"_index":365,"title":{},"body":{"components/AppComponent.html":{}}}],["hideclosebutton",{"_index":2179,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidedismissbutton",{"_index":2180,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["hidenavigation",{"_index":2598,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["highcontrasttext",{"_index":2599,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["hold",{"_index":2840,"title":{},"body":{"components/TransferComponent.html":{}}}],["holds",{"_index":1354,"title":{},"body":{"injectables/ChartService.html":{}}}],["host",{"_index":354,"title":{},"body":{"components/AppComponent.html":{},"components/SettingsComponent.html":{}}}],["hours",{"_index":2756,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["hover",{"_index":881,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hovering",{"_index":885,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["hsm/encrypted",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["html",{"_index":68,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["html.dark",{"_index":399,"title":{},"body":{"components/AppComponent.html":{}}}],["http",{"_index":1168,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["http://127.0.0.1:36911",{"_index":440,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["http://127.0.0.1:36911')}/daemon/wallet/rpc",{"_index":3130,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["http://127.0.0.1:36911/daemon/chain/export",{"_index":1202,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["http://127.0.0.1:36911/daemon/chain/import",{"_index":1203,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["http://127.0.0.1:36911/daemon/chain/start",{"_index":1197,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["http://127.0.0.1:36911/object",{"_index":3244,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["http_interceptors",{"_index":517,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":518,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"miscellaneous/functions.html":{}}}],["httpclientmodule",{"_index":519,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":290,"title":{},"body":{"components/AppComponent.html":{}}}],["httpevent",{"_index":2045,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httphandler",{"_index":2042,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httpheaders",{"_index":1188,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["httpheaders().set('content",{"_index":2621,"title":{},"body":{"components/SpartaComponent.html":{}}}],["httpinterceptor",{"_index":2044,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httploaderfactory",{"_index":570,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httploaderfactory(http",{"_index":559,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["httprequest",{"_index":2040,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["httprequest.clone",{"_index":2048,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1464,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["icon",{"_index":229,"title":{},"body":{"components/AppComponent.html":{},"components/StatusComponent.html":{}}}],["iconmodule",{"_index":549,"title":{},"body":{"modules/AppModule.html":{}}}],["id",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"components/PostComponent.html":{},"components/SpartaComponent.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{}}}],["id's",{"_index":2419,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["idea",{"_index":1669,"title":{},"body":{"injectables/CryptService.html":{}}}],["identifiable",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["identify",{"_index":1619,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["ids",{"_index":1785,"title":{},"body":{"injectables/CryptService.html":{}}}],["if(!appconfigservice.serverpublickey",{"_index":455,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["if(!isauthenticated",{"_index":719,"title":{},"body":{"guards/AuthGuard.html":{}}}],["if(authservice.token.access_token",{"_index":2046,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["if(data",{"_index":2801,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["if(data.fee",{"_index":2829,"title":{},"body":{"components/TransferComponent.html":{}}}],["if(data.status",{"_index":3026,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["if(data[0",{"_index":1538,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(e.status",{"_index":295,"title":{},"body":{"components/AppComponent.html":{}}}],["if(event",{"_index":276,"title":{},"body":{"components/AppComponent.html":{}}}],["if(ret",{"_index":3255,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["if(this.app.getconfig('daemon",{"_index":285,"title":{},"body":{"components/AppComponent.html":{}}}],["if(this.attach",{"_index":1535,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["if(this.child.keyeventinput",{"_index":1549,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ignore",{"_index":1414,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["ignored",{"_index":1603,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["im",{"_index":1663,"title":{},"body":{"injectables/CryptService.html":{}}}],["image",{"_index":2418,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["img",{"_index":377,"title":{},"body":{"components/AppComponent.html":{}}}],["implement",{"_index":3185,"title":{},"body":{"injectables/WalletService.html":{}}}],["implements",{"_index":28,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["import",{"_index":56,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/IntegratedAddress.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"modules/PipesModule.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"modules/TranslateModule.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["import('./logs/logs.module').then((m",{"_index":2587,"title":{},"body":{"modules/SettingsModule.html":{}}}],["import('./settings.module').then",{"_index":2590,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["import('./user.module').then((m",{"_index":2890,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["import('src/app/modules/content/post/post.module').then((m",{"_index":2386,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["important",{"_index":1577,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["importchain",{"_index":1164,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["imports",{"_index":509,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["inactivitythreshold",{"_index":3219,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["included",{"_index":969,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["including",{"_index":1946,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["incoming",{"_index":2064,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["incoming_connections_count",{"_index":1257,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["incomingtransfers",{"_index":3062,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfers(x",{"_index":3094,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["incomingtransfersin",{"_index":2052,"title":{"interfaces/IncomingTransfersIn.html":{}},"body":{"interfaces/IncomingTransfersIn.html":{},"injectables/WalletRpcService.html":{}}}],["incomingtransfersout",{"_index":2056,"title":{"interfaces/IncomingTransfersOut.html":{}},"body":{"interfaces/IncomingTransfersOut.html":{},"injectables/WalletRpcService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/enumerations.html":{}}}],["info.alt_blocks_count",{"_index":1249,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.block_size_limit",{"_index":1251,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.cumulative_difficulty",{"_index":1236,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.difficulty",{"_index":1234,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.grey_peerlist_size",{"_index":1233,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.height",{"_index":1093,"title":{},"body":{"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["info.height/info.target_height",{"_index":1095,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["info.incoming_connections_count",{"_index":1238,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.outgoing_connections_count",{"_index":1245,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.start_time",{"_index":1225,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.status",{"_index":1223,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.target",{"_index":1247,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.target_height",{"_index":1094,"title":{},"body":{"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{}}}],["info.testnet",{"_index":1243,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.tx_count",{"_index":1239,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.tx_pool_size",{"_index":1241,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["info.white_peerlist_size",{"_index":1231,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["inherit",{"_index":2662,"title":{},"body":{"components/StatusComponent.html":{}}}],["inherited",{"_index":2204,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ini",{"_index":447,"title":{},"body":{"injectables/AppConfigService.html":{},"dependencies.html":{}}}],["init",{"_index":2560,"title":{},"body":{"components/SettingsComponent.html":{}}}],["initialnavigation",{"_index":606,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["initialstate",{"_index":1490,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["inject",{"_index":1298,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(mat_dialog_data",{"_index":1871,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["inject(platform_id",{"_index":1302,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["injectable",{"_index":406,"title":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interceptors/HeaderInterceptor.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["injectable({providedin",{"_index":2158,"title":{},"body":{"components/ModalComponent.html":{}}}],["injectables",{"_index":407,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"overview.html":{}}}],["input",{"_index":57,"title":{},"body":{"components/AddComponent.html":{},"components/BlockDetailsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["input.length",{"_index":1765,"title":{},"body":{"injectables/CryptService.html":{}}}],["input[i",{"_index":1769,"title":{},"body":{"injectables/CryptService.html":{}}}],["inputchanged",{"_index":2078,"title":{},"body":{"components/LoginComponent.html":{}}}],["inputmodule",{"_index":734,"title":{},"body":{"modules/AuthModule.html":{}}}],["inputs",{"_index":41,"title":{},"body":{"components/AddComponent.html":{},"components/BlockDetailsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["install",{"_index":2281,"title":{},"body":{"components/NoDaemonRunningDialog.html":{},"index.html":{}}}],["instance",{"_index":1341,"title":{},"body":{"injectables/ChartService.html":{}}}],["instanceof",{"_index":277,"title":{},"body":{"components/AppComponent.html":{}}}],["instances",{"_index":1358,"title":{},"body":{"injectables/ChartService.html":{}}}],["int",{"_index":845,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["integer",{"_index":2132,"title":{},"body":{"interfaces/MakeUriIn.html":{},"interfaces/TransferOut.html":{}}}],["integrated_address",{"_index":2068,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["integratedaddress",{"_index":2066,"title":{"interfaces/IntegratedAddress.html":{}},"body":{"interfaces/IntegratedAddress.html":{},"injectables/WalletRpcService.html":{}}}],["integration",{"_index":3410,"title":{},"body":{"index.html":{}}}],["interact",{"_index":1698,"title":{},"body":{"injectables/CryptService.html":{}}}],["interacts",{"_index":3407,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":2038,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["intercept(httprequest",{"_index":2039,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["interceptor",{"_index":2035,"title":{"interceptors/HeaderInterceptor.html":{}},"body":{}}],["interceptors",{"_index":2036,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{}},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"components/NoDaemonRunningDialog.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"index.html":{}}}],["interface/file",{"_index":1974,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/Address.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/ChartsState.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SettingsState.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"interfaces/WalletsState.html":{},"overview.html":{}}}],["interfaces/difficulty.state",{"_index":1482,"title":{},"body":{"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{}}}],["interfaces/user.options",{"_index":2871,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["internal",{"_index":2062,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["intersect",{"_index":2254,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["interval",{"_index":1029,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/WalletEffects.html":{}}}],["interval(5000).subscribe(async",{"_index":1052,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["isauthenticated",{"_index":712,"title":{},"body":{"guards/AuthGuard.html":{}}}],["isn't",{"_index":270,"title":{},"body":{"components/AppComponent.html":{}}}],["isplatformbrowser",{"_index":1300,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":1303,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["isplatformserver",{"_index":1370,"title":{},"body":{"injectables/ChartService.html":{}}}],["isplatformserver(this.platformid",{"_index":1419,"title":{},"body":{"injectables/ChartService.html":{}}}],["ispollingactivestats",{"_index":2950,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["issue",{"_index":1667,"title":{},"body":{"injectables/CryptService.html":{}}}],["issues",{"_index":1665,"title":{},"body":{"injectables/CryptService.html":{}}}],["it'll",{"_index":1715,"title":{},"body":{"injectables/CryptService.html":{}}}],["item",{"_index":886,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["items",{"_index":385,"title":{},"body":{"components/AppComponent.html":{},"injectables/WebStorageService.html":{}}}],["itself",{"_index":1745,"title":{},"body":{"injectables/CryptService.html":{}}}],["jest",{"_index":3336,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":338,"title":{},"body":{"components/AppComponent.html":{}}}],["js",{"_index":1594,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["json",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["json.parse(await",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{}}}],["json.parse(dat",{"_index":1978,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["json.parse(data['json",{"_index":929,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["json.parse(ret",{"_index":3256,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["json.stringify",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["json.stringify(rpcbody('get_transfers')({in",{"_index":2978,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody('getbalance",{"_index":2973,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["json.stringify(rpcbody(method)(params",{"_index":1207,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["json_rpc",{"_index":1173,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["jszmq",{"_index":3340,"title":{},"body":{"dependencies.html":{}}}],["jwt",{"_index":554,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["jwtmodule",{"_index":552,"title":{},"body":{"modules/AppModule.html":{}}}],["jwtmodule.forroot",{"_index":572,"title":{},"body":{"modules/AppModule.html":{}}}],["k",{"_index":2031,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["keep",{"_index":2900,"title":{},"body":{"components/VpnComponent.html":{}}}],["keephtml",{"_index":1894,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["kept",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":429,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["key(key",{"_index":3238,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key(key:number",{"_index":3251,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["key_type",{"_index":2430,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["keymap",{"_index":1646,"title":{},"body":{"injectables/CryptService.html":{}}}],["keys",{"_index":651,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["keysize",{"_index":1776,"title":{},"body":{"injectables/CryptService.html":{}}}],["kind",{"_index":3303,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["know",{"_index":3179,"title":{},"body":{"injectables/WalletService.html":{}}}],["knowledge",{"_index":1670,"title":{},"body":{"injectables/CryptService.html":{}}}],["known",{"_index":2296,"title":{},"body":{"components/OpenComponent.html":{},"injectables/WalletService.html":{}}}],["known_wallets",{"_index":3213,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["kurkle/color",{"_index":1369,"title":{},"body":{"injectables/ChartService.html":{},"dependencies.html":{}}}],["l",{"_index":1754,"title":{},"body":{"injectables/CryptService.html":{}}}],["l337",{"_index":1658,"title":{},"body":{"injectables/CryptService.html":{}}}],["label",{"_index":1394,"title":{},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["lang",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.de",{"_index":352,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.en",{"_index":348,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.es",{"_index":351,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.fr",{"_index":353,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.ru",{"_index":349,"title":{},"body":{"components/AppComponent.html":{}}}],["lang.zh",{"_index":350,"title":{},"body":{"components/AppComponent.html":{}}}],["language",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletNewComponent.html":{}}}],["last",{"_index":611,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/BlockLedgerComponent.html":{}}}],["last_update_check",{"_index":2349,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["later",{"_index":1680,"title":{},"body":{"injectables/CryptService.html":{}}}],["layout",{"_index":540,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"injectables/NetworkHashrateChart.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["lazy",{"_index":615,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["leave",{"_index":1807,"title":{},"body":{"injectables/CryptService.html":{}}}],["ledger",{"_index":988,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["ledger'},{'name",{"_index":88,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["ledger.component.html",{"_index":989,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["left",{"_index":391,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["legacy",{"_index":605,"title":{},"body":{"modules/AppRoutingModule.html":{},"index.html":{}}}],["legend",{"_index":67,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["length",{"_index":1596,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WebStorageService.html":{}}}],["less",{"_index":1671,"title":{},"body":{"injectables/CryptService.html":{}}}],["lethean",{"_index":600,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"modules/SettingsModule.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{}}}],["lethean/users",{"_index":692,"title":{},"body":{"guards/AuthGuard.html":{}}}],["level",{"_index":3399,"title":{},"body":{"miscellaneous/functions.html":{}}}],["levels",{"_index":3374,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["lighter",{"_index":1683,"title":{},"body":{"injectables/CryptService.html":{}}}],["line",{"_index":891,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/ConsoleComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["linewidth",{"_index":2243,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["lingual",{"_index":211,"title":{},"body":{"components/AppComponent.html":{}}}],["link",{"_index":343,"title":{},"body":{"components/AppComponent.html":{}}}],["list",{"_index":342,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/OpenComponent.html":{},"components/VpnComponent.html":{},"injectables/WalletService.html":{}}}],["list(dirname",{"_index":1965,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["list(type",{"_index":1912,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["listfiles",{"_index":1930,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["listfiles(dirname",{"_index":1940,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["lists",{"_index":2295,"title":{},"body":{"components/OpenComponent.html":{}}}],["lite",{"_index":1657,"title":{},"body":{"injectables/CryptService.html":{}}}],["literal",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"interfaces/WalletsState.html":{}}}],["live",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["load",{"_index":1103,"title":{},"body":{"components/BlockchainConfigComponent.html":{},"injectables/CryptService.html":{}}}],["loadchildren",{"_index":2385,"title":{},"body":{"modules/PostRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/UserRoutingModule.html":{}}}],["loadconfig",{"_index":419,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loadconfig(filename",{"_index":433,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["loaded",{"_index":616,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/OpenComponent.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["loaded_keys",{"_index":2350,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["loaded_wallet",{"_index":3214,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["loader",{"_index":273,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["loadingservice",{"_index":178,"title":{},"body":{"components/AppComponent.html":{},"components/OpenComponent.html":{}}}],["loadingservice.complete",{"_index":279,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpost",{"_index":2360,"title":{},"body":{"components/PostComponent.html":{},"components/SpartaComponent.html":{}}}],["loadpost(slug",{"_index":2363,"title":{},"body":{"components/PostComponent.html":{},"components/SpartaComponent.html":{}}}],["loadrequestedchartdifficulty",{"_index":1431,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["loads",{"_index":1339,"title":{},"body":{"injectables/ChartService.html":{}}}],["loadtransactions",{"_index":2780,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["loadtransfers",{"_index":3162,"title":{},"body":{"injectables/WalletService.html":{}}}],["loadtransfers(opts",{"_index":3169,"title":{},"body":{"injectables/WalletService.html":{}}}],["local",{"_index":2426,"title":{},"body":{"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{}}}],["localhost:36911",{"_index":574,"title":{},"body":{"modules/AppModule.html":{}}}],["localstorage",{"_index":637,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["localstoragesync",{"_index":635,"title":{},"body":{"interfaces/AppState.html":{}}}],["localstoragesyncreducer",{"_index":649,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["localstoragesyncreducer(reducer",{"_index":3385,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lock",{"_index":1614,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["locked",{"_index":2945,"title":{},"body":{"components/WalletComponent.html":{}}}],["log",{"_index":2073,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logentry",{"_index":2070,"title":{"interfaces/LogEntry.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["logged",{"_index":676,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/WalletService.html":{}}}],["logging",{"_index":3373,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["login",{"_index":597,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/UserComponent.html":{}}}],["login'},{'name",{"_index":94,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["login(key",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["login.component",{"_index":726,"title":{},"body":{"modules/AuthModule.html":{}}}],["login.component.html",{"_index":2077,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":2076,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":93,"title":{"components/LoginComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["loginmethod",{"_index":2886,"title":{},"body":{"interfaces/UserOptions.html":{}}}],["loginmethods",{"_index":2887,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["logo",{"_index":389,"title":{},"body":{"components/AppComponent.html":{}}}],["logonly",{"_index":1837,"title":{},"body":{"modules/DataModule.html":{}}}],["logout",{"_index":684,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{}}}],["logs",{"_index":620,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/LogEntry.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"modules/SettingsModule.html":{}}}],["logs'},{'name",{"_index":96,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["logs.component",{"_index":2126,"title":{},"body":{"modules/LogsModule.html":{}}}],["logs.component.html",{"_index":2118,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.component.scss",{"_index":2117,"title":{},"body":{"components/LogsComponent.html":{}}}],["logs.logsstate",{"_index":624,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs.reducer",{"_index":646,"title":{},"body":{"interfaces/AppState.html":{}}}],["logs/logs.module",{"_index":2583,"title":{},"body":{"modules/SettingsModule.html":{}}}],["logscomponent",{"_index":95,"title":{"components/LogsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["logsmodule",{"_index":2121,"title":{"modules/LogsModule.html":{}},"body":{"modules/LogsModule.html":{},"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["logsstate",{"_index":2074,"title":{"interfaces/LogsState.html":{}},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["longer",{"_index":1714,"title":{},"body":{"injectables/CryptService.html":{}}}],["looking",{"_index":1998,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["lthn",{"_index":32,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WebStorageService.html":{}}}],["lthnchart",{"_index":135,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["lts",{"_index":3311,"title":{},"body":{"dependencies.html":{}}}],["lttb",{"_index":2260,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["m",{"_index":2032,"title":{},"body":{"pipes/HashRatePipe.html":{},"modules/SettingsRoutingModule.html":{}}}],["m.logsmodule",{"_index":2588,"title":{},"body":{"modules/SettingsModule.html":{}}}],["m.postmodule",{"_index":2387,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["m.settingsmodule",{"_index":2591,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["m.usermodule",{"_index":2891,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["made",{"_index":401,"title":{},"body":{"components/AppComponent.html":{}}}],["main",{"_index":355,"title":{},"body":{"components/AppComponent.html":{},"components/DetailsComponent.html":{}}}],["maintainaspectratio",{"_index":876,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["major",{"_index":1009,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["major_version",{"_index":979,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["make",{"_index":609,"title":{},"body":{"modules/AppRoutingModule.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"components/WalletComponent.html":{}}}],["makedefault",{"_index":420,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["makeintegratedaddress",{"_index":3063,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddress(x",{"_index":3096,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeintegratedaddressin",{"_index":2127,"title":{"interfaces/MakeIntegratedAddressIn.html":{}},"body":{"interfaces/MakeIntegratedAddressIn.html":{},"injectables/WalletRpcService.html":{}}}],["makes",{"_index":2907,"title":{},"body":{"components/VpnComponent.html":{}}}],["makeuri",{"_index":3064,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuri(x",{"_index":3098,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["makeuriin",{"_index":1591,"title":{"interfaces/MakeUriIn.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["making",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":2565,"title":{},"body":{"components/SettingsComponent-1.html":{},"components/WalletComponent.html":{}}}],["map",{"_index":1352,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["map((payload",{"_index":2980,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["map((res",{"_index":2974,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["margin",{"_index":397,"title":{},"body":{"components/AppComponent.html":{}}}],["markdown",{"_index":1687,"title":{},"body":{"injectables/CryptService.html":{}}}],["marketplace",{"_index":2898,"title":{},"body":{"components/VpnComponent.html":{}}}],["mat",{"_index":375,"title":{},"body":{"components/AppComponent.html":{},"components/StatusComponent.html":{}}}],["mat_dialog_data",{"_index":1866,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matbuttonmodule",{"_index":534,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["matcardmodule",{"_index":727,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{}}}],["match",{"_index":1395,"title":{},"body":{"injectables/ChartService.html":{}}}],["matcheckboxmodule",{"_index":2882,"title":{},"body":{"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matching",{"_index":20,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["matdialog",{"_index":2648,"title":{},"body":{"components/StatusComponent.html":{}}}],["matdialogmodule",{"_index":2668,"title":{},"body":{"modules/StatusModule.html":{}}}],["matdialogref",{"_index":1867,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["matdividermodule",{"_index":526,"title":{},"body":{"modules/AppModule.html":{},"modules/RootModule.html":{},"modules/UserModule.html":{}}}],["matexpansionmodule",{"_index":2994,"title":{},"body":{"modules/WalletModule.html":{}}}],["matformfieldmodule",{"_index":1139,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["math.abs((now.gettime",{"_index":2751,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.floor(n.diff",{"_index":2271,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["math.max(0",{"_index":1059,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["math.round",{"_index":2750,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(days",{"_index":2762,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(hours",{"_index":2759,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(minutes",{"_index":2757,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["math.round(math.abs(seconds",{"_index":2754,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["maticonmodule",{"_index":524,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matinputmodule",{"_index":732,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matlistmodule",{"_index":528,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["matmenumodule",{"_index":532,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{}}}],["matoptionmodule",{"_index":2879,"title":{},"body":{"modules/UserModule.html":{}}}],["matprogressbarmodule",{"_index":1136,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/UserModule.html":{}}}],["matprogressspinnermodule",{"_index":2533,"title":{},"body":{"modules/RootModule.html":{}}}],["matselectmodule",{"_index":2581,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["matsidenav",{"_index":239,"title":{},"body":{"components/AppComponent.html":{}}}],["matsidenavmodule",{"_index":523,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabsmodule",{"_index":2531,"title":{},"body":{"modules/RootModule.html":{},"modules/SettingsModule.html":{},"modules/WalletModule.html":{}}}],["mattoolbarmodule",{"_index":530,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["mattooltipmodule",{"_index":536,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/StatusModule.html":{},"modules/WalletModule.html":{}}}],["max",{"_index":2017,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["max_height",{"_index":2012,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["maxage",{"_index":1836,"title":{},"body":{"modules/DataModule.html":{}}}],["maxlength",{"_index":2025,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["maxrotation",{"_index":2241,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["maybe",{"_index":1674,"title":{},"body":{"injectables/CryptService.html":{}}}],["means",{"_index":1609,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["member",{"_index":2908,"title":{},"body":{"components/VpnComponent.html":{}}}],["menu",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["menu.text.blockchain",{"_index":231,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.dashboard",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.settings",{"_index":346,"title":{},"body":{"components/AppComponent.html":{}}}],["menu.text.wallet",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["merge",{"_index":2969,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["message",{"_index":1691,"title":{},"body":{"injectables/CryptService.html":{},"injectables/WebsocketService.html":{}}}],["meta",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["metadata",{"_index":30,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"modules/DataModule.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["metareducer",{"_index":630,"title":{},"body":{"interfaces/AppState.html":{}}}],["metareducers",{"_index":662,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["metaservice",{"_index":171,"title":{},"body":{"components/AppComponent.html":{}}}],["method",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{}}}],["methods",{"_index":38,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["mid",{"_index":1890,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["min",{"_index":361,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/GetTransfersIn.html":{}}}],["min_block_height",{"_index":1996,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["min_height",{"_index":2013,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["mine",{"_index":2566,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["miner",{"_index":963,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["mining",{"_index":2510,"title":{},"body":{"components/RootComponent.html":{}}}],["minor",{"_index":1011,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["minor_version",{"_index":980,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["minutes",{"_index":2753,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["mirror",{"_index":2248,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["miscellaneous",{"_index":3367,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missed_tx",{"_index":2773,"title":{},"body":{"interfaces/Transactions.html":{}}}],["mix",{"_index":1608,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixin",{"_index":1606,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mixing",{"_index":1610,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["mkdir",{"_index":1904,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(dirname",{"_index":1942,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["mkdir(type",{"_index":1917,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["mmm",{"_index":2234,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["modal",{"_index":2138,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal'},{'name",{"_index":98,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["modal.component.html",{"_index":2139,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcomponent",{"_index":97,"title":{"components/ModalComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"modules/ModalModule.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["modalconfig",{"_index":2143,"title":{"interfaces/ModalConfig.html":{}},"body":{"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{}}}],["modalconfig.closebuttonlabel",{"_index":2172,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.dismissbuttonlabel",{"_index":2171,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalconfig.modaltitle",{"_index":2170,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalcontent",{"_index":2140,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalmodule",{"_index":2193,"title":{"modules/ModalModule.html":{}},"body":{"modules/ModalModule.html":{},"modules.html":{},"overview.html":{}}}],["modalref",{"_index":2141,"title":{},"body":{"components/ModalComponent.html":{}}}],["modalservice",{"_index":2147,"title":{},"body":{"components/ModalComponent.html":{}}}],["modaltitle",{"_index":2176,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["mode",{"_index":2253,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"interfaces/SettingsState.html":{}}}],["module",{"_index":487,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}},"body":{}}],["module/auth/auth.interceptor",{"_index":557,"title":{},"body":{"modules/AppModule.html":{}}}],["module/auth/auth.module",{"_index":543,"title":{},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{}}}],["module/auth/auth.service",{"_index":556,"title":{},"body":{"modules/AppModule.html":{},"injectables/BlockchainService.html":{},"interceptors/HeaderInterceptor.html":{}}}],["module/auth/login.component",{"_index":590,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/auth/route.guard",{"_index":595,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/chain/blockchain",{"_index":591,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/chain/blockchain.component",{"_index":1152,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["module/chain/blockchain.module",{"_index":2536,"title":{},"body":{"modules/RootModule.html":{}}}],["module/chain/blockchain.service",{"_index":261,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/StatusComponent.html":{}}}],["module/chain/components/block/details.component",{"_index":1147,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{}}}],["module/chain/components/block/ledger.component",{"_index":1148,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chain/components/config.component",{"_index":1150,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chain/components/stats.component",{"_index":1149,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chain/interfaces/props/get_info",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/StatusComponent.html":{}}}],["module/chain/interfaces/types/blockheader",{"_index":923,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{}}}],["module/chart/base",{"_index":2222,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart",{"_index":2223,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/chart/chart.module",{"_index":1128,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["module/chart/chart.service",{"_index":1028,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["module/chart/data/actions",{"_index":2221,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["module/console/console.module",{"_index":551,"title":{},"body":{"modules/AppModule.html":{}}}],["module/console/terminal.component",{"_index":2544,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/content/post/post.module",{"_index":2537,"title":{},"body":{"modules/RootModule.html":{}}}],["module/content/sparta/sparta.component",{"_index":2635,"title":{},"body":{"modules/SpartaRoutingModule.html":{}}}],["module/content/sparta/sparta.module",{"_index":2538,"title":{},"body":{"modules/RootModule.html":{}}}],["module/root",{"_index":589,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/root.component",{"_index":2542,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/root.module",{"_index":2543,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["module/settings/data",{"_index":259,"title":{},"body":{"components/AppComponent.html":{}}}],["module/status/status.module",{"_index":522,"title":{},"body":{"modules/AppModule.html":{}}}],["module/user/user",{"_index":593,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/wallet/components/add.component",{"_index":3004,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/details.component",{"_index":3003,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/open.component",{"_index":3005,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/restore.component",{"_index":3000,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/wallet/components/settings.component",{"_index":2999,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/wallet/components/transactions.component",{"_index":2998,"title":{},"body":{"modules/WalletModule.html":{}}}],["module/wallet/components/wallet",{"_index":2996,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["module/wallet/data",{"_index":2798,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["module/wallet/interfaces",{"_index":2796,"title":{},"body":{"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["module/wallet/interfaces/requests/restorewallet",{"_index":3126,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["module/wallet/wallet",{"_index":592,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["module/wallet/wallet.component",{"_index":3032,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["module/wallet/wallet.module",{"_index":2535,"title":{},"body":{"modules/RootModule.html":{}}}],["module/wallet/wallet.service",{"_index":1854,"title":{},"body":{"components/DetailsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["modules",{"_index":489,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/chain/data",{"_index":641,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/chart/data",{"_index":639,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/settings/data",{"_index":633,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/user/data/user",{"_index":634,"title":{},"body":{"interfaces/AppState.html":{}}}],["modules/wallet/data",{"_index":640,"title":{},"body":{"interfaces/AppState.html":{}}}],["moment",{"_index":1135,"title":{},"body":{"modules/BlockchainModule.html":{},"injectables/ChartService.html":{},"dependencies.html":{}}}],["momentmodule",{"_index":1134,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["monero",{"_index":847,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["monospace",{"_index":1090,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["months",{"_index":2761,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["more",{"_index":1393,"title":{},"body":{"injectables/ChartService.html":{}}}],["mostly",{"_index":2061,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["mousetrap",{"_index":3347,"title":{},"body":{"dependencies.html":{}}}],["msg",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WebsocketService.html":{}}}],["multi",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{}}}],["multiple",{"_index":1700,"title":{},"body":{"injectables/CryptService.html":{}}}],["n.ts",{"_index":2270,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["name",{"_index":73,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["name]).catch((err",{"_index":2937,"title":{},"body":{"components/WalletComponent.html":{}}}],["namelist",{"_index":3388,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator",{"_index":2450,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{},"miscellaneous/functions.html":{}}}],["namenottakenvalidator(namelist",{"_index":3387,"title":{},"body":{"miscellaneous/functions.html":{}}}],["namenottakenvalidator(this.wallet.walletlist",{"_index":2453,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["names",{"_index":2397,"title":{},"body":{"components/ProfileComponent.html":{}}}],["nav",{"_index":396,"title":{},"body":{"components/AppComponent.html":{}}}],["navexpanded",{"_index":151,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationend",{"_index":246,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationstart",{"_index":247,"title":{},"body":{"components/AppComponent.html":{}}}],["navigationtree",{"_index":152,"title":{},"body":{"components/AppComponent.html":{}}}],["nbsp",{"_index":1087,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["nbsp;&nbsp",{"_index":347,"title":{},"body":{"components/AppComponent.html":{}}}],["nearest",{"_index":2252,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["need",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{},"components/TransactionsComponent.html":{}}}],["network",{"_index":2909,"title":{},"body":{"components/VpnComponent.html":{}}}],["network/chart/difficulty",{"_index":1466,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["networkdifficulty",{"_index":1359,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"injectables/NetworkHashrateChart.html":{}}}],["networkerror",{"_index":3272,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["networkhashratechart",{"_index":1335,"title":{"injectables/NetworkHashrateChart.html":{}},"body":{"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["new",{"_index":132,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["new.component",{"_index":2997,"title":{},"body":{"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["new.component.html",{"_index":3009,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts",{"_index":3008,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:15",{"_index":3017,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:16",{"_index":3016,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:17",{"_index":3012,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:20",{"_index":3015,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new.component.ts:26",{"_index":3014,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["new_algorithm",{"_index":1623,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["next",{"_index":2041,"title":{},"body":{"interceptors/HeaderInterceptor.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["next.handle",{"_index":2047,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["next.handle(httprequest",{"_index":2050,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["ng",{"_index":1529,"title":{},"body":{"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/ModalComponent.html":{},"dependencies.html":{}}}],["ngaftercontentinit",{"_index":161,"title":{},"body":{"components/AppComponent.html":{}}}],["ngafterviewinit",{"_index":1285,"title":{},"body":{"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/WalletComponent.html":{}}}],["ngbmodal",{"_index":2145,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngbmodalref",{"_index":2155,"title":{},"body":{"components/ModalComponent.html":{}}}],["ngmodule",{"_index":511,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/DataModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/StatusModule.html":{},"modules/TranslateModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["ngondestroy",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/PostComponent.html":{},"components/SettingsComponent.html":{}}}],["ngoninit",{"_index":39,"title":{},"body":{"components/AddComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["ngrx",{"_index":636,"title":{},"body":{"interfaces/AppState.html":{},"dependencies.html":{}}}],["ngrx/component",{"_index":548,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"dependencies.html":{}}}],["ngrx/data",{"_index":1831,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/effects",{"_index":1477,"title":{},"body":{"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"injectables/Effects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":3320,"title":{},"body":{"dependencies.html":{}}}],["ngrx/router",{"_index":1829,"title":{},"body":{"modules/DataModule.html":{},"dependencies.html":{}}}],["ngrx/store",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"modules/DataModule.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["ngterminal",{"_index":1524,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ngterminalmodule",{"_index":1585,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["ngx",{"_index":253,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["ngxdatatablemodule",{"_index":1129,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{}}}],["ngxuimodule",{"_index":550,"title":{},"body":{"modules/AppModule.html":{},"modules/WalletModule.html":{}}}],["nodaemonrunningdialog",{"_index":99,"title":{"components/NoDaemonRunningDialog.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["nodes",{"_index":2409,"title":{},"body":{"components/ProfileComponent.html":{},"components/VpnComponent.html":{}}}],["nofollow,noindex",{"_index":325,"title":{},"body":{"components/AppComponent.html":{}}}],["nonce",{"_index":981,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["none",{"_index":388,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/enumerations.html":{}}}],["normalize.css",{"_index":3354,"title":{},"body":{"dependencies.html":{}}}],["normalized",{"_index":877,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["note",{"_index":2789,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["nothing",{"_index":1808,"title":{},"body":{"injectables/CryptService.html":{}}}],["notificationservice",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationstyletype",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationstyletype.error",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{}}}],["notificationstyletype.success",{"_index":1116,"title":{},"body":{"components/BlockchainConfigComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationtype",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notificationtype.html",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["notify",{"_index":1105,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["now",{"_index":707,"title":{},"body":{"guards/AuthGuard.html":{},"pipes/TimeAgoPipe.html":{}}}],["npm",{"_index":3419,"title":{},"body":{"index.html":{}}}],["null",{"_index":1081,"title":{},"body":{"components/BlockchainComponent.html":{},"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{},"injectables/NetworkHashrateChart.html":{},"pipes/ShruggiePipe.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["num_txes",{"_index":982,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["number",{"_index":54,"title":{},"body":{"components/AddComponent.html":{},"interfaces/Balance.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetTransfersIn.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{}}}],["number):number",{"_index":1989,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["number.isnan(seconds",{"_index":2766,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["number:'1.0",{"_index":2809,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["number:\\'1.0",{"_index":2810,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["o",{"_index":1753,"title":{},"body":{"injectables/CryptService.html":{}}}],["object",{"_index":868,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/NetworkHashrateChart.html":{},"components/SpartaComponent.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{}}}],["object.values(data).flat",{"_index":2807,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["observable",{"_index":1350,"title":{},"body":{"injectables/ChartService.html":{},"interceptors/HeaderInterceptor.html":{},"miscellaneous/enumerations.html":{}}}],["observables",{"_index":1355,"title":{},"body":{"injectables/ChartService.html":{}}}],["of(chartsactions.chartnetworkdifficultyloadfailure({error",{"_index":1486,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["of(walletactions.walletfailure({error",{"_index":2983,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["offline",{"_index":153,"title":{},"body":{"components/AppComponent.html":{}}}],["offsetgridlines",{"_index":2246,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["oftype",{"_index":1476,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["oftype('[settings",{"_index":2572,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["oftype('[wallet",{"_index":2955,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultyloadrequested",{"_index":1448,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystartpolling",{"_index":1438,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(chartsactions.chartnetworkdifficultystoppolling",{"_index":1445,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["oftype(walletactions.walletloaddata",{"_index":2967,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstartpolling",{"_index":2960,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["oftype(walletactions.walletstoppolling",{"_index":2964,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["omit",{"_index":2488,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["on(chartsactions.chartnetworkdifficultyloadfailure",{"_index":1494,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["onclose",{"_index":2181,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["ondestroy",{"_index":909,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/PostComponent.html":{},"components/SettingsComponent.html":{}}}],["ondismiss",{"_index":2182,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["one",{"_index":689,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/ChartService.html":{}}}],["onfileselected",{"_index":2079,"title":{},"body":{"components/LoginComponent.html":{}}}],["onfileselected(event",{"_index":2085,"title":{},"body":{"components/LoginComponent.html":{}}}],["oninit",{"_index":29,"title":{},"body":{"components/AddComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["onnoclick",{"_index":1872,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["open",{"_index":48,"title":{},"body":{"components/AddComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletService.html":{}}}],["open'},{'name",{"_index":103,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["open.component.html",{"_index":2285,"title":{},"body":{"components/OpenComponent.html":{}}}],["opencomponent",{"_index":102,"title":{"components/OpenComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["opendrawer",{"_index":998,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["opendrawer(id",{"_index":1004,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["opened",{"_index":3079,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openedwallet",{"_index":3158,"title":{},"body":{"injectables/WalletService.html":{}}}],["openned",{"_index":3083,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["openpgp",{"_index":414,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"dependencies.html":{}}}],["openpgp.createcleartextmessage",{"_index":1815,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.createmessage",{"_index":1795,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.decrypt",{"_index":1804,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.decrypt(options).then((result",{"_index":1821,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.decryptkey",{"_index":1813,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.encrypt",{"_index":1794,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.encrypt(options",{"_index":1819,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.generatekey",{"_index":1778,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.readkey",{"_index":1797,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.readmessage",{"_index":1810,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.readprivatekey",{"_index":1812,"title":{},"body":{"injectables/CryptService.html":{}}}],["openpgp.sign(options",{"_index":1817,"title":{},"body":{"injectables/CryptService.html":{}}}],["openwallet",{"_index":1628,"title":{"interfaces/OpenWallet.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["openwallet(name",{"_index":2927,"title":{},"body":{"components/WalletComponent.html":{}}}],["openwallet(req",{"_index":3171,"title":{},"body":{"injectables/WalletService.html":{}}}],["openwallet(x",{"_index":3100,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["option",{"_index":1454,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["optional",{"_index":10,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["options",{"_index":862,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"injectables/WalletRpcService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"index.html":{}}}],["options.pollinginterval).pipe",{"_index":1459,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["opts",{"_index":2781,"title":{},"body":{"components/TransactionsComponent.html":{},"injectables/WalletService.html":{}}}],["orchestrates",{"_index":3183,"title":{},"body":{"injectables/WalletService.html":{}}}],["orphan_status",{"_index":983,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["other(method",{"_index":3102,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["otherwise",{"_index":2849,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["out",{"_index":505,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"components/TransactionsComponent.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["outdated",{"_index":2354,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["outgoing_connections_count",{"_index":1258,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["outpouts",{"_index":1607,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["output",{"_index":1788,"title":{},"body":{"injectables/CryptService.html":{}}}],["outputs",{"_index":2842,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["overflow",{"_index":364,"title":{},"body":{"components/AppComponent.html":{}}}],["overrides",{"_index":870,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["overview",{"_index":3429,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":471,"title":{},"body":{"injectables/AppConfigService.html":{},"pipes/HashRatePipe.html":{},"modules/PostRoutingModule.html":{}}}],["p.addsection('daemon",{"_index":473,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.addsection('lethean",{"_index":475,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.set('daemon",{"_index":474,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.set('lethean",{"_index":476,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["p.stringify('\\r\\n",{"_index":479,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["package",{"_index":3308,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":390,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["page",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"components/UserComponent.html":{}}}],["pagenumber",{"_index":1024,"title":{},"body":{"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pages",{"_index":2326,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["pagination",{"_index":3220,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptions",{"_index":2316,"title":{"classes/PaginatorOptions.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["paginatoroptionsinterface",{"_index":2319,"title":{"classes/PaginatorOptionsInterface.html":{}},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["panel",{"_index":2586,"title":{},"body":{"modules/SettingsModule.html":{},"modules/UserModule.html":{}}}],["param",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{}}}],["parameters",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":1170,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["parseint(value",{"_index":2438,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["parser",{"_index":448,"title":{},"body":{"injectables/AppConfigService.html":{},"dependencies.html":{}}}],["parseuri",{"_index":1626,"title":{"interfaces/ParseUri.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["parseuri(x",{"_index":3105,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["parsing",{"_index":2226,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["partial",{"_index":3442,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["pass",{"_index":1784,"title":{},"body":{"injectables/CryptService.html":{}}}],["passphrase",{"_index":1693,"title":{},"body":{"injectables/CryptService.html":{}}}],["password",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"interfaces/UserOptions.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"miscellaneous/enumerations.html":{}}}],["password_confirm",{"_index":2458,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["passwordless",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["passwordrepeat",{"_index":2696,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["path",{"_index":596,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["path(filename",{"_index":1968,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["path(type",{"_index":1920,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["pathmatch",{"_index":598,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{}}}],["pathname",{"_index":1908,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["pay",{"_index":2515,"title":{},"body":{"components/RootComponent.html":{}}}],["payload",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartsEffects.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WebStorageService.html":{}}}],["payload}).then((data",{"_index":3269,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["payment",{"_index":2002,"title":{"interfaces/Payment.html":{}},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/MakeUriIn.html":{},"interfaces/Payment.html":{},"components/TransactionsComponent.html":{}}}],["payment_id",{"_index":12,"title":{},"body":{"interfaces/AddAddressBook.html":{},"interfaces/CreateWallet.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["payment_ids",{"_index":1997,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["payments",{"_index":1999,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["pbkdf2",{"_index":1730,"title":{},"body":{"injectables/CryptService.html":{}}}],["peer",{"_index":3420,"title":{},"body":{"index.html":{}}}],["pending",{"_index":2014,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{}}}],["people",{"_index":1676,"title":{},"body":{"injectables/CryptService.html":{}}}],["percent:'1.2",{"_index":1096,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["percent:\\'1.2",{"_index":1100,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["perform",{"_index":694,"title":{},"body":{"guards/AuthGuard.html":{}}}],["performs",{"_index":3232,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["persist",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["person_add",{"_index":2405,"title":{},"body":{"components/ProfileComponent.html":{}}}],["personality",{"_index":1701,"title":{},"body":{"injectables/CryptService.html":{}}}],["pi4",{"_index":1721,"title":{},"body":{"injectables/CryptService.html":{}}}],["pipe",{"_index":1465,"title":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}},"body":{"injectables/ChartsEffects.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"injectables/WalletEffects.html":{}}}],["pipe(filter((event",{"_index":307,"title":{},"body":{"components/AppComponent.html":{}}}],["pipe/crypto/fromcoin.pipe",{"_index":2342,"title":{},"body":{"modules/PipesModule.html":{}}}],["pipe/crypto/hashrate.pipe",{"_index":1133,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["pipe/index",{"_index":2341,"title":{},"body":{"modules/PipesModule.html":{}}}],["pipe/pipes.module",{"_index":1131,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{}}}],["pipes",{"_index":1879,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["pipesmodule",{"_index":1130,"title":{"modules/PipesModule.html":{}},"body":{"modules/BlockchainModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["pipetransform",{"_index":1887,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["placeholder",{"_index":655,"title":{},"body":{"interfaces/AppState.html":{}}}],["platform_id",{"_index":1299,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["platformid",{"_index":1290,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{}}}],["please",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{}}}],["plugin/../modules/wallet/interfaces",{"_index":3125,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["plugindefinition",{"_index":2343,"title":{"interfaces/PluginDefinition.html":{}},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["plugins",{"_index":185,"title":{"interfaces/Plugins.html":{}},"body":{"components/AppComponent.html":{},"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["pluginstatus",{"_index":2348,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["point",{"_index":889,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WebsocketService.html":{}}}],["polling",{"_index":1457,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["pollinginterval",{"_index":1279,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["pollingstartaction",{"_index":2202,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollingstopaction",{"_index":2203,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["pollinguntil",{"_index":1432,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["polyfill",{"_index":3342,"title":{},"body":{"dependencies.html":{}}}],["pool",{"_index":2015,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{}}}],["pools",{"_index":2511,"title":{},"body":{"components/RootComponent.html":{}}}],["poolstatsstate",{"_index":1491,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["position",{"_index":1313,"title":{},"body":{"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["post",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/PostComponent.html":{},"injectables/WalletRpcService.html":{}}}],["post'},{'name",{"_index":105,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["post(`${this.apiurl}/list",{"_index":1977,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post(`${this.apiurl}/read",{"_index":1981,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["post.component.html",{"_index":2357,"title":{},"body":{"components/PostComponent.html":{}}}],["post.component.scss",{"_index":2356,"title":{},"body":{"components/PostComponent.html":{}}}],["post.title",{"_index":2376,"title":{},"body":{"components/PostComponent.html":{}}}],["postcomponent",{"_index":104,"title":{"components/PostComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["postmodule",{"_index":2377,"title":{"modules/PostModule.html":{}},"body":{"modules/PostModule.html":{},"modules/RootModule.html":{},"modules.html":{},"overview.html":{}}}],["postroutingmodule",{"_index":2383,"title":{"modules/PostRoutingModule.html":{}},"body":{"modules/PostRoutingModule.html":{},"modules.html":{}}}],["posts",{"_index":2358,"title":{},"body":{"components/PostComponent.html":{},"components/RootComponent.html":{}}}],["posts:any",{"_index":2369,"title":{},"body":{"components/PostComponent.html":{}}}],["prefrences",{"_index":2421,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["preset",{"_index":3338,"title":{},"body":{"dependencies.html":{}}}],["press",{"_index":2839,"title":{},"body":{"components/TransferComponent.html":{}}}],["prev_hash",{"_index":984,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["previous",{"_index":957,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/WalletComponent.html":{}}}],["primary",{"_index":2486,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["printable",{"_index":1556,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["priority",{"_index":2680,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["prismjs",{"_index":3356,"title":{},"body":{"dependencies.html":{}}}],["private",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/SettingsEffects.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["privatekey",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pro",{"_index":2238,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["processingform",{"_index":2697,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile",{"_index":2389,"title":{},"body":{"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["profile'},{'name",{"_index":108,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["profile.component.html",{"_index":2391,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":2390,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profilecomponent",{"_index":106,"title":{"components/ProfileComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["profiles",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ProfileComponent.html":{}}}],["profilestate",{"_index":2410,"title":{"interfaces/ProfileState.html":{}},"body":{"interfaces/ProfileState.html":{},"miscellaneous/functions.html":{}}}],["project",{"_index":2516,"title":{},"body":{"components/RootComponent.html":{},"index.html":{}}}],["promise",{"_index":484,"title":{},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"components/OpenComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["promise(resolve",{"_index":2159,"title":{},"body":{"components/ModalComponent.html":{}}}],["prop",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{}}}],["properties",{"_index":8,"title":{"properties.html":{}},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"properties.html":{}}}],["protected",{"_index":1652,"title":{},"body":{"injectables/CryptService.html":{}}}],["protects",{"_index":1786,"title":{},"body":{"injectables/CryptService.html":{}}}],["provide",{"_index":568,"title":{},"body":{"modules/AppModule.html":{},"injectables/CryptService.html":{}}}],["provided",{"_index":1353,"title":{},"body":{"injectables/ChartService.html":{}}}],["providedin",{"_index":451,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["provider",{"_index":2903,"title":{},"body":{"components/VpnComponent.html":{}}}],["providers",{"_index":508,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/BlockLedgerComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["public",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RootComponent.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"injectables/WebsocketService.html":{}}}],["publically",{"_index":2847,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["publickey",{"_index":1724,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["pure",{"_index":1888,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["purposes",{"_index":1732,"title":{},"body":{"injectables/CryptService.html":{}}}],["pwa",{"_index":3405,"title":{},"body":{"index.html":{}}}],["quasi",{"_index":1684,"title":{},"body":{"injectables/CryptService.html":{}}}],["querykey",{"_index":3065,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykey(x",{"_index":3107,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["querykeyin",{"_index":2428,"title":{"interfaces/QueryKeyIn.html":{}},"body":{"interfaces/QueryKeyIn.html":{},"injectables/WalletRpcService.html":{}}}],["querykeyout",{"_index":2431,"title":{"interfaces/QueryKeyOut.html":{}},"body":{"interfaces/QueryKeyOut.html":{},"injectables/WalletRpcService.html":{}}}],["quick",{"_index":1720,"title":{},"body":{"injectables/CryptService.html":{}}}],["r",{"_index":330,"title":{},"body":{"components/AppComponent.html":{},"pipes/EffortPipe.html":{}}}],["radial",{"_index":367,"title":{},"body":{"components/AppComponent.html":{}}}],["radius",{"_index":890,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["random",{"_index":1593,"title":{},"body":{"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"dependencies.html":{}}}],["random.hex(false)(random.nativemath",{"_index":1599,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["randomalias",{"_index":2392,"title":{},"body":{"components/ProfileComponent.html":{}}}],["raw",{"_index":1175,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["reactivecomponentmodule",{"_index":547,"title":{},"body":{"modules/AppModule.html":{},"modules/BlockchainModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{}}}],["reactiveformsmodule",{"_index":730,"title":{},"body":{"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["read",{"_index":1905,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{}}}],["read(filename",{"_index":1970,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["read(type",{"_index":1923,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["reader",{"_index":2104,"title":{},"body":{"components/LoginComponent.html":{}}}],["reader.addeventlistener('error",{"_index":2111,"title":{},"body":{"components/LoginComponent.html":{}}}],["reader.addeventlistener('load",{"_index":2106,"title":{},"body":{"components/LoginComponent.html":{}}}],["reader.readastext(file",{"_index":2113,"title":{},"body":{"components/LoginComponent.html":{}}}],["readfile",{"_index":1931,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["readfile(filename",{"_index":1944,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["reading",{"_index":2110,"title":{},"body":{"components/LoginComponent.html":{}}}],["readkey",{"_index":1640,"title":{},"body":{"injectables/CryptService.html":{}}}],["readkey(encryptionkey",{"_index":1735,"title":{},"body":{"injectables/CryptService.html":{}}}],["readme_list",{"_index":2347,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{}}}],["readmessage",{"_index":1641,"title":{},"body":{"injectables/CryptService.html":{}}}],["readmessage(encrypted",{"_index":1737,"title":{},"body":{"injectables/CryptService.html":{}}}],["readprivatekey",{"_index":1642,"title":{},"body":{"injectables/CryptService.html":{}}}],["readprivatekey(encryptionkey",{"_index":1739,"title":{},"body":{"injectables/CryptService.html":{}}}],["reason",{"_index":1696,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/MakeUriIn.html":{},"injectables/WebsocketService.html":{}}}],["receive",{"_index":2133,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["received",{"_index":3299,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["recent",{"_index":2522,"title":{},"body":{"components/RootComponent.html":{}}}],["recenttxs",{"_index":1073,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["recipient",{"_index":2135,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["recipient_name",{"_index":2130,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["redirected",{"_index":2864,"title":{},"body":{"components/UserComponent.html":{}}}],["redirectto",{"_index":601,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducer",{"_index":650,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["reducer(state",{"_index":1495,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["reducers",{"_index":642,"title":{},"body":{"interfaces/AppState.html":{},"modules/DataModule.html":{}}}],["ref",{"_index":1512,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["reference",{"_index":3411,"title":{},"body":{"index.html":{}}}],["refresh_token",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{}}}],["region",{"_index":2912,"title":{},"body":{"components/VpnComponent.html":{}}}],["register",{"_index":340,"title":{},"body":{"components/AppComponent.html":{}}}],["registerables",{"_index":1365,"title":{},"body":{"injectables/ChartService.html":{}}}],["rehydrate",{"_index":658,"title":{},"body":{"interfaces/AppState.html":{}}}],["relative",{"_index":1314,"title":{},"body":{"directives/ChartDirective.html":{}}}],["relativelinkresolution",{"_index":604,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["remote",{"_index":2408,"title":{},"body":{"components/ProfileComponent.html":{},"index.html":{}}}],["removeitem",{"_index":3228,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeitem(key",{"_index":3240,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["removeonundefined",{"_index":659,"title":{},"body":{"interfaces/AppState.html":{}}}],["removetrailingzero",{"_index":2434,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["removetrailingzerospipe",{"_index":2336,"title":{"pipes/RemoveTrailingZerosPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"overview.html":{}}}],["renderer",{"_index":1292,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderer2",{"_index":1287,"title":{},"body":{"directives/ChartDirective.html":{}}}],["renderwebview",{"_index":2493,"title":{},"body":{"components/RootComponent.html":{}}}],["replace('o",{"_index":1759,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/a/gi",{"_index":1762,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/e/gi",{"_index":1761,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/l/gi",{"_index":1760,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/s/gi",{"_index":1763,"title":{},"body":{"injectables/CryptService.html":{}}}],["replace(/t/gi",{"_index":1764,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducable",{"_index":1747,"title":{},"body":{"injectables/CryptService.html":{}}}],["reproducible",{"_index":1672,"title":{},"body":{"injectables/CryptService.html":{}}}],["req",{"_index":3114,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["req.address",{"_index":2957,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["req.filename",{"_index":3190,"title":{},"body":{"injectables/WalletService.html":{}}}],["req.password",{"_index":2958,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["request",{"_index":192,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/RestoreWallet.html":{},"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["request(this.url)('add_address_book",{"_index":3151,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('create_wallet",{"_index":3154,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('delete_address_book",{"_index":3152,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('generate_from_keys",{"_index":3155,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_address_book",{"_index":3150,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_bulk_payments",{"_index":3140,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_payments",{"_index":3139,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfer_by_txid",{"_index":3142,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('get_transfers",{"_index":3141,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getaddress",{"_index":3132,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getbalance",{"_index":3131,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('getheight",{"_index":3133,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('incoming_transfers",{"_index":3143,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_integrated_address",{"_index":3145,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('make_uri",{"_index":3148,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('open_wallet",{"_index":3153,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('parse_uri",{"_index":3149,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('query_key",{"_index":3144,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('split_integrated_address",{"_index":3146,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('stop_wallet",{"_index":3147,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('store",{"_index":3138,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_all",{"_index":3137,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('sweep_dust",{"_index":3136,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer",{"_index":3134,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)('transfer_split",{"_index":3135,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["request(this.url)(method",{"_index":3156,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["requested",{"_index":1922,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["requestoptions",{"_index":2624,"title":{},"body":{"components/SpartaComponent.html":{}}}],["requestoptions).subscribe((data",{"_index":2626,"title":{},"body":{"components/SpartaComponent.html":{}}}],["require('axios').default",{"_index":3267,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["required",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["requires",{"_index":1695,"title":{},"body":{"injectables/CryptService.html":{},"components/NoDaemonRunningDialog.html":{}}}],["res",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["res.json",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{}}}],["res.result",{"_index":1209,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["res['result",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{},"injectables/WalletEffects.html":{}}}],["reset",{"_index":504,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}],["resolve",{"_index":2163,"title":{},"body":{"components/ModalComponent.html":{}}}],["response",{"_index":1413,"title":{},"body":{"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{}}}],["response.text",{"_index":460,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["responsetype",{"_index":1195,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["responsiveanimationduration",{"_index":887,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["restore",{"_index":63,"title":{},"body":{"components/AddComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletService.html":{}}}],["restore'},{'name",{"_index":110,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["restore.component.html",{"_index":2443,"title":{},"body":{"components/RestoreComponent.html":{}}}],["restore_height",{"_index":2454,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["restorecomponent",{"_index":109,"title":{"components/RestoreComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["restorewallet",{"_index":2445,"title":{"interfaces/RestoreWallet.html":{}},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["restorewallet(req",{"_index":3173,"title":{},"body":{"injectables/WalletService.html":{}}}],["restorewallet(x",{"_index":3109,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["restorewalletform",{"_index":2444,"title":{},"body":{"components/RestoreComponent.html":{}}}],["result",{"_index":1919,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"components/ModalComponent.html":{}}}],["result.data",{"_index":1822,"title":{},"body":{"injectables/CryptService.html":{}}}],["results",{"_index":19,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{}}}],["ret",{"_index":3253,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["ret.data",{"_index":3271,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["return",{"_index":333,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/PostComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"injectables/SettingsEffects.html":{},"pipes/ShruggiePipe.html":{},"interfaces/SweepAllIn.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["returns",{"_index":51,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{}}}],["revocationcertificate",{"_index":2706,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["reward",{"_index":964,"title":{},"body":{"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{}}}],["rgba(21",{"_index":372,"title":{},"body":{"components/AppComponent.html":{}}}],["rgba(255",{"_index":2249,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(255,255,255,0.5",{"_index":2256,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["rgba(8",{"_index":369,"title":{},"body":{"components/AppComponent.html":{}}}],["rgbstring",{"_index":1391,"title":{},"body":{"injectables/ChartService.html":{}}}],["rick's",{"_index":2567,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["rick\\'s",{"_index":2568,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["right",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/NetworkHashrateChart.html":{},"components/StatusComponent.html":{}}}],["robots",{"_index":324,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"modules/WalletRoutingModule.html":{}}}],["root",{"_index":452,"title":{},"body":{"injectables/AppConfigService.html":{},"modules/AppRoutingModule.html":{},"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/ModalComponent.html":{},"components/RootComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["root'},{'name",{"_index":112,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["root.component",{"_index":2530,"title":{},"body":{"modules/RootModule.html":{}}}],["root.component.html",{"_index":2490,"title":{},"body":{"components/RootComponent.html":{}}}],["rootcomponent",{"_index":111,"title":{"components/RootComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["rootmodule",{"_index":2523,"title":{"modules/RootModule.html":{}},"body":{"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rootroutingmodule",{"_index":582,"title":{"modules/RootRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["rough",{"_index":2506,"title":{},"body":{"components/RootComponent.html":{}}}],["route",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["router",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["routermodule",{"_index":587,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":1157,"title":{},"body":{"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":602,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":711,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":588,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/LogsModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["routing",{"_index":613,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{}}}],["routing.module",{"_index":542,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routing.module.ts",{"_index":586,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/BlockchainRoutingModule.html":{},"modules/PostRoutingModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules/SpartaRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules/VpnRoutingModule.html":{},"modules/WalletRoutingModule.html":{}}}],["row",{"_index":380,"title":{},"body":{"components/AppComponent.html":{}}}],["rows",{"_index":2778,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["rpc",{"_index":848,"title":{},"body":{"interfaces/Balance.html":{},"injectables/BlockchainService.html":{},"components/ConsoleComponent.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["rpcbindport",{"_index":3127,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["rpcbody",{"_index":1189,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletEffects.html":{}}}],["rsa",{"_index":1779,"title":{},"body":{"injectables/CryptService.html":{}}}],["rsabits",{"_index":1781,"title":{},"body":{"injectables/CryptService.html":{}}}],["rt",{"_index":311,"title":{},"body":{"components/AppComponent.html":{}}}],["rt.data.subscribe((data",{"_index":313,"title":{},"body":{"components/AppComponent.html":{}}}],["rtl",{"_index":2600,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["run",{"_index":677,"title":{},"body":{"guards/AuthGuard.html":{},"components/ProfileComponent.html":{},"components/VpnComponent.html":{},"index.html":{}}}],["running.component",{"_index":2670,"title":{},"body":{"modules/StatusModule.html":{}}}],["running.component.html",{"_index":1869,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts",{"_index":1864,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:13",{"_index":2274,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:15",{"_index":2277,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:16",{"_index":2276,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["running.component.ts:19",{"_index":2275,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["runtime",{"_index":3400,"title":{},"body":{"miscellaneous/functions.html":{}}}],["rxjs",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"injectables/ChartsEffects.html":{},"interceptors/HeaderInterceptor.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["rxjs/websocket",{"_index":3288,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["rxjslogginglevel",{"_index":1480,"title":{},"body":{"injectables/ChartsEffects.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["rxjslogginglevel.debug",{"_index":1453,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["rxjslogginglevel.info",{"_index":1440,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["s",{"_index":1755,"title":{},"body":{"injectables/CryptService.html":{}}}],["s.unsubscribe",{"_index":281,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["safe",{"_index":858,"title":{},"body":{"interfaces/Balance.html":{}}}],["salt",{"_index":1662,"title":{},"body":{"injectables/CryptService.html":{}}}],["salt.join",{"_index":1770,"title":{},"body":{"injectables/CryptService.html":{}}}],["salt.push(input[i",{"_index":1767,"title":{},"body":{"injectables/CryptService.html":{}}}],["salt:string",{"_index":1766,"title":{},"body":{"injectables/CryptService.html":{}}}],["salted",{"_index":1729,"title":{},"body":{"injectables/CryptService.html":{}}}],["salter",{"_index":1678,"title":{},"body":{"injectables/CryptService.html":{}}}],["salts",{"_index":1673,"title":{},"body":{"injectables/CryptService.html":{}}}],["same",{"_index":1661,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"components/VpnComponent.html":{}}}],["samples",{"_index":2261,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sanitizer",{"_index":1898,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["sans",{"_index":2237,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["save",{"_index":1104,"title":{},"body":{"components/BlockchainConfigComponent.html":{},"interfaces/FileSystemInterface.html":{},"interfaces/ProfileState.html":{},"interfaces/RestoreWallet.html":{}}}],["saveconfig",{"_index":421,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["saved",{"_index":1117,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["scales",{"_index":895,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["screen",{"_index":1578,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["searchable",{"_index":2848,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["searchvalue",{"_index":154,"title":{},"body":{"components/AppComponent.html":{}}}],["seconds",{"_index":2749,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["section",{"_index":432,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["sectionmodule",{"_index":1144,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"modules/UserModule.html":{},"modules/WalletModule.html":{}}}],["seed",{"_index":1629,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/RestoreComponent.html":{},"interfaces/TransferSplitIn.html":{}}}],["select",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/LoginComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{}}}],["select(selectchartdata(this.chartmeta[name].key",{"_index":1409,"title":{},"body":{"injectables/ChartService.html":{}}}],["select(selectchartoptions('networkdifficulty",{"_index":1452,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectchartdata",{"_index":1371,"title":{},"body":{"injectables/ChartService.html":{}}}],["selectchartoptions",{"_index":1483,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selecthashrateminersoptions",{"_index":1455,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectlanguage",{"_index":257,"title":{},"body":{"components/AppComponent.html":{}}}],["selectmodule",{"_index":3002,"title":{},"body":{"modules/WalletModule.html":{}}}],["selector",{"_index":31,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"directives/ChartDirective.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["selectors",{"_index":1484,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["selectwallettransactions",{"_index":2797,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["send",{"_index":1844,"title":{},"body":{"interfaces/Destination.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"injectables/WalletRpcService.html":{}}}],["sending",{"_index":1622,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["sendmessage",{"_index":3279,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendmessage(msg",{"_index":3285,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["sendtransfer",{"_index":2814,"title":{},"body":{"components/TransferComponent.html":{},"injectables/WalletService.html":{}}}],["sendtransfer(opts",{"_index":3175,"title":{},"body":{"injectables/WalletService.html":{}}}],["sent",{"_index":2831,"title":{},"body":{"components/TransferComponent.html":{}}}],["separator",{"_index":2401,"title":{},"body":{"components/ProfileComponent.html":{}}}],["server",{"_index":337,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/RestoreWallet.html":{},"injectables/WalletRpcService.html":{},"injectables/WebsocketService.html":{}}}],["serverpublickey",{"_index":415,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["service",{"_index":202,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"components/VpnComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["service/app",{"_index":263,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/WalletRpcService.html":{}}}],["service/crypt.service",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["service/filesystem/file",{"_index":449,"title":{},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"components/BlockchainConfigComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["service/json",{"_index":1190,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{}}}],["service/ui/modal/modal.component",{"_index":2198,"title":{},"body":{"modules/ModalModule.html":{}}}],["service/ui/modal/modalconfig",{"_index":2157,"title":{},"body":{"components/ModalComponent.html":{}}}],["service/wallet.rpc.service",{"_index":2795,"title":{},"body":{"components/TransactionsComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletService.html":{}}}],["service/websocket.service",{"_index":1530,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["services",{"_index":1381,"title":{},"body":{"injectables/ChartService.html":{},"components/VpnComponent.html":{}}}],["session",{"_index":849,"title":{},"body":{"interfaces/Balance.html":{}}}],["sessionstorage.getitem('access_token",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.getitem('refresh_token",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('access_token",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{}}}],["sessionstorage.setitem('refresh_token",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{}}}],["set",{"_index":683,"title":{},"body":{"guards/AuthGuard.html":{},"components/BlockLedgerComponent.html":{},"injectables/CryptService.html":{},"components/StatusComponent.html":{}}}],["setconfig",{"_index":422,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["setconfig(section",{"_index":438,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["setheaders",{"_index":2049,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["setinterval",{"_index":1532,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["setitem",{"_index":3229,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setitem(key",{"_index":3242,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["setrxjslogginglevel",{"_index":3383,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(0",{"_index":3402,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(4",{"_index":3401,"title":{},"body":{"miscellaneous/functions.html":{}}}],["setrxjslogginglevel(level",{"_index":3397,"title":{},"body":{"miscellaneous/functions.html":{}}}],["settargettabindex",{"_index":40,"title":{},"body":{"components/AddComponent.html":{}}}],["setting",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["setting_tab",{"_index":2554,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings",{"_index":416,"title":{},"body":{"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{}}}],["settings'},{'name",{"_index":114,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["settings.component",{"_index":2584,"title":{},"body":{"modules/SettingsModule.html":{}}}],["settings.component.html",{"_index":2553,"title":{},"body":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}}}],["settings.component.scss",{"_index":2552,"title":{},"body":{"components/SettingsComponent.html":{}}}],["settings.reducer",{"_index":643,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingseffects",{"_index":666,"title":{},"body":{"interfaces/AppState.html":{}}}],["settings.settingsstate",{"_index":625,"title":{},"body":{"interfaces/AppState.html":{}}}],["settingscomponent",{"_index":113,"title":{"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"modules/SettingsModule.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["settingseffects",{"_index":2569,"title":{"injectables/SettingsEffects.html":{}},"body":{"injectables/SettingsEffects.html":{}}}],["settingsmodule",{"_index":2576,"title":{"modules/SettingsModule.html":{}},"body":{"modules/SettingsModule.html":{},"modules.html":{},"overview.html":{}}}],["settingsroutingmodule",{"_index":608,"title":{"modules/SettingsRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/SettingsRoutingModule.html":{},"modules.html":{}}}],["settingsstate",{"_index":2592,"title":{"interfaces/SettingsState.html":{}},"body":{"interfaces/SettingsState.html":{}}}],["setup",{"_index":298,"title":{},"body":{"components/AppComponent.html":{}}}],["setupcallbacks",{"_index":865,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"interfaces/ChartConfigInterface.html":{},"injectables/NetworkHashrateChart.html":{}}}],["setupdatasubscription",{"_index":1333,"title":{},"body":{"injectables/ChartService.html":{}}}],["setupdatasubscription(name",{"_index":1347,"title":{},"body":{"injectables/ChartService.html":{}}}],["several",{"_index":2063,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["sha256",{"_index":1743,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256(input",{"_index":1771,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty",{"_index":1643,"title":{},"body":{"injectables/CryptService.html":{}}}],["sha256salty(input",{"_index":1741,"title":{},"body":{"injectables/CryptService.html":{}}}],["share",{"_index":2065,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["shared",{"_index":2425,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["shell/bootstrap",{"_index":578,"title":{},"body":{"modules/AppModule.html":{}}}],["shouldclose",{"_index":2183,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shoulddismiss",{"_index":2184,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["shrug",{"_index":2604,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["shruggiepipe",{"_index":2337,"title":{"pipes/ShruggiePipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ShruggiePipe.html":{},"overview.html":{}}}],["sidenav",{"_index":155,"title":{},"body":{"components/AppComponent.html":{}}}],["sign",{"_index":1644,"title":{},"body":{"injectables/CryptService.html":{}}}],["sign(data",{"_index":1748,"title":{},"body":{"injectables/CryptService.html":{}}}],["signals",{"_index":3302,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["signatures",{"_index":1803,"title":{},"body":{"injectables/CryptService.html":{}}}],["signingkeys",{"_index":1816,"title":{},"body":{"injectables/CryptService.html":{}}}],["simply",{"_index":685,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":381,"title":{},"body":{"components/AppComponent.html":{}}}],["size",{"_index":1007,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/NetworkHashrateChart.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/SettingsState.html":{},"components/StatusComponent.html":{}}}],["slow",{"_index":1716,"title":{},"body":{"injectables/CryptService.html":{}}}],["slug",{"_index":2365,"title":{},"body":{"components/PostComponent.html":{},"components/SpartaComponent.html":{}}}],["socket",{"_index":3275,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["software",{"_index":2280,"title":{},"body":{"components/NoDaemonRunningDialog.html":{}}}],["something",{"_index":1679,"title":{},"body":{"injectables/CryptService.html":{}}}],["soon",{"_index":2866,"title":{},"body":{"components/UserComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/BlockchainRoutingModule.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"modules/ChartModule.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"modules/DataModule.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"injectables/Effects-1.html":{},"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"modules/LogsModule.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"modules/ModalModule.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"modules/PipesModule.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"modules/PostModule.html":{},"modules/PostRoutingModule.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"injectables/SettingsEffects.html":{},"modules/SettingsModule.html":{},"modules/SettingsRoutingModule.html":{},"interfaces/SettingsState.html":{},"pipes/ShruggiePipe.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"interfaces/StoreOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"modules/TranslateModule.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"modules/UserModule.html":{},"interfaces/UserOptions.html":{},"modules/UserRoutingModule.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["spangaps",{"_index":2227,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["sparta",{"_index":339,"title":{},"body":{"components/AppComponent.html":{},"components/RootComponent.html":{},"components/SpartaComponent.html":{}}}],["sparta'},{'name",{"_index":116,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["sparta.component",{"_index":2632,"title":{},"body":{"modules/SpartaModule.html":{}}}],["sparta.component.html",{"_index":2609,"title":{},"body":{"components/SpartaComponent.html":{}}}],["sparta.component.scss",{"_index":2608,"title":{},"body":{"components/SpartaComponent.html":{}}}],["sparta/:slug/:id",{"_index":2636,"title":{},"body":{"modules/SpartaRoutingModule.html":{}}}],["spartacomponent",{"_index":115,"title":{"components/SpartaComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"modules/SpartaModule.html":{},"modules/SpartaRoutingModule.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["spartamodule",{"_index":2527,"title":{"modules/SpartaModule.html":{}},"body":{"modules/RootModule.html":{},"modules/SpartaModule.html":{},"modules.html":{},"overview.html":{}}}],["spartaroutingmodule",{"_index":2633,"title":{"modules/SpartaRoutingModule.html":{}},"body":{"modules/SpartaRoutingModule.html":{},"modules.html":{}}}],["spend",{"_index":859,"title":{},"body":{"interfaces/Balance.html":{},"components/DetailsComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spendkey",{"_index":2459,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["spent",{"_index":1613,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["spinner",{"_index":2534,"title":{},"body":{"modules/RootModule.html":{}}}],["split",{"_index":1703,"title":{},"body":{"injectables/CryptService.html":{}}}],["splitintegratedaddress",{"_index":3066,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddress(x",{"_index":3111,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["splitintegratedaddressout",{"_index":2637,"title":{"interfaces/SplitIntegratedAddressOut.html":{}},"body":{"interfaces/SplitIntegratedAddressOut.html":{},"injectables/WalletRpcService.html":{}}}],["sponsor",{"_index":3417,"title":{},"body":{"index.html":{}}}],["src/.../app.module.ts",{"_index":3378,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../debug.rxjs.ts",{"_index":3371,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/.../index.ts",{"_index":3379,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../main.ts",{"_index":3377,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../reducer.ts",{"_index":3381,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../settings.reducer.ts",{"_index":3382,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../state.ts",{"_index":3370,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../user.options.ts",{"_index":3369,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../validators.ts",{"_index":3380,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/app",{"_index":585,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":139,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:132",{"_index":188,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:139",{"_index":205,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:146",{"_index":207,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:189",{"_index":199,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:206",{"_index":195,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:21",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:22",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":242,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":215,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":217,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":225,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":238,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":243,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":236,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:51",{"_index":179,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:93",{"_index":198,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:97",{"_index":197,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":506,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["src/app/data/data.module.ts",{"_index":1823,"title":{},"body":{"modules/DataModule.html":{}}}],["src/app/data/debug.rxjs.ts",{"_index":3372,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["src/app/data/interface/pagination.ts",{"_index":2318,"title":{},"body":{"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:10",{"_index":2327,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:14",{"_index":2322,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:15",{"_index":2324,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:16",{"_index":2325,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:17",{"_index":2320,"title":{},"body":{"classes/PaginatorOptions.html":{}}}],["src/app/data/interface/pagination.ts:4",{"_index":2328,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:6",{"_index":2329,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/interface/pagination.ts:8",{"_index":2330,"title":{},"body":{"classes/PaginatorOptionsInterface.html":{}}}],["src/app/data/logs/reducer.ts",{"_index":3390,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/logs/state.ts",{"_index":2071,"title":{},"body":{"interfaces/LogEntry.html":{},"interfaces/LogsState.html":{}}}],["src/app/data/plugins/reducer.ts",{"_index":3391,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/data/plugins/state.ts",{"_index":2344,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/data/reducers/index.ts",{"_index":618,"title":{},"body":{"interfaces/AppState.html":{},"miscellaneous/functions.html":{}}}],["src/app/interfaces/file",{"_index":1901,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["src/app/modules/auth/auth.interceptor.ts",{"_index":2037,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["src/app/modules/auth/auth.interceptor.ts:8",{"_index":2043,"title":{},"body":{"interceptors/HeaderInterceptor.html":{}}}],["src/app/modules/auth/auth.module.ts",{"_index":725,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/app/modules/auth/auth.service.ts",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:10",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:104",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:108",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:11",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:112",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:12",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:15",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:35",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/auth.service.ts:58",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/modules/auth/login.component.ts",{"_index":2075,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:12",{"_index":2090,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:13",{"_index":2088,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:14",{"_index":2089,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:15",{"_index":2082,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:21",{"_index":2083,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:26",{"_index":2087,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:48",{"_index":2084,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/login.component.ts:52",{"_index":2086,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/modules/auth/route.guard.ts",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:35",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/auth/route.guard.ts:7",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/modules/chain/blockchain",{"_index":1151,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["src/app/modules/chain/blockchain.component",{"_index":1127,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/modules/chain/blockchain.component.ts",{"_index":1070,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:13",{"_index":1076,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:14",{"_index":1080,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:16",{"_index":1082,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:17",{"_index":1078,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:18",{"_index":1084,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:19",{"_index":1077,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:20",{"_index":1083,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:21",{"_index":1074,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:23",{"_index":1079,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.component.ts:29",{"_index":1075,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["src/app/modules/chain/blockchain.module.ts",{"_index":1126,"title":{},"body":{"modules/BlockchainModule.html":{}}}],["src/app/modules/chain/blockchain.service.ts",{"_index":1158,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:10",{"_index":1167,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:101",{"_index":1181,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:14",{"_index":1187,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:35",{"_index":1174,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:56",{"_index":1186,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:73",{"_index":1172,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:86",{"_index":1182,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:90",{"_index":1184,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/blockchain.service.ts:96",{"_index":1178,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["src/app/modules/chain/components/block/details.component.ts",{"_index":908,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:12",{"_index":921,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:13",{"_index":922,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:14",{"_index":919,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:15",{"_index":920,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:16",{"_index":915,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:22",{"_index":917,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/details.component.ts:34",{"_index":916,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts",{"_index":986,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:100",{"_index":1005,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:18",{"_index":1017,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:20",{"_index":1025,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:27",{"_index":1012,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:42",{"_index":1016,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:43",{"_index":1013,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:44",{"_index":1015,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:45",{"_index":1020,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:46",{"_index":1027,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:48",{"_index":1026,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:49",{"_index":1000,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:66",{"_index":1003,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:89",{"_index":1001,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/block/ledger.component.ts:97",{"_index":1002,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts",{"_index":1101,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:12",{"_index":1106,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:14",{"_index":1109,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:18",{"_index":1108,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/config.component.ts:27",{"_index":1107,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["src/app/modules/chain/components/stats.component.ts",{"_index":1215,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["src/app/modules/chain/components/stats.component.ts:12",{"_index":1218,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["src/app/modules/chain/components/stats.component.ts:14",{"_index":1219,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["src/app/modules/chain/data/reducer.ts",{"_index":3392,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/chain/interfaces/props/get_info.ts",{"_index":1252,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["src/app/modules/chain/interfaces/props/transactions.ts",{"_index":2772,"title":{},"body":{"interfaces/Transactions.html":{}}}],["src/app/modules/chain/interfaces/types/blockheader.ts",{"_index":974,"title":{},"body":{"interfaces/BlockHeader.html":{}}}],["src/app/modules/chart/base",{"_index":861,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["src/app/modules/chart/chart",{"_index":1268,"title":{},"body":{"interfaces/ChartConfigInterface.html":{}}}],["src/app/modules/chart/chart.directive.ts",{"_index":1281,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:10",{"_index":1293,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:11",{"_index":1291,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:21",{"_index":1296,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:28",{"_index":1295,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.directive.ts:46",{"_index":1297,"title":{},"body":{"directives/ChartDirective.html":{}}}],["src/app/modules/chart/chart.module.ts",{"_index":1324,"title":{},"body":{"modules/ChartModule.html":{}}}],["src/app/modules/chart/chart.service.ts",{"_index":1326,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:126",{"_index":1346,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:19",{"_index":1356,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:20",{"_index":1364,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:26",{"_index":1361,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:34",{"_index":1336,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:54",{"_index":1338,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/chart.service.ts:98",{"_index":1348,"title":{},"body":{"injectables/ChartService.html":{}}}],["src/app/modules/chart/charts/network",{"_index":2199,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["src/app/modules/chart/data/effects.ts",{"_index":1428,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:100",{"_index":1444,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:113",{"_index":1447,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:125",{"_index":1435,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:14",{"_index":1475,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/effects.ts:39",{"_index":1472,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["src/app/modules/chart/data/interfaces/difficulty.state.ts",{"_index":1275,"title":{},"body":{"interfaces/ChartDifficulty.html":{}}}],["src/app/modules/chart/data/reducer.ts",{"_index":1488,"title":{},"body":{"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["src/app/modules/console/console.component.ts",{"_index":1497,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:16",{"_index":1526,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:18",{"_index":1516,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:19",{"_index":1514,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:29",{"_index":1523,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:50",{"_index":1520,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:54",{"_index":1518,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:59",{"_index":1521,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.component.ts:93",{"_index":1522,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["src/app/modules/console/console.module.ts",{"_index":1583,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/modules/console/terminal.component",{"_index":1586,"title":{},"body":{"modules/ConsoleModule.html":{}}}],["src/app/modules/console/terminal.component.ts",{"_index":2724,"title":{},"body":{"components/TerminalComponent.html":{}}}],["src/app/modules/console/terminal.component.ts:12",{"_index":2728,"title":{},"body":{"components/TerminalComponent.html":{}}}],["src/app/modules/console/terminal.component.ts:8",{"_index":2727,"title":{},"body":{"components/TerminalComponent.html":{}}}],["src/app/modules/content/post/post",{"_index":2384,"title":{},"body":{"modules/PostRoutingModule.html":{}}}],["src/app/modules/content/post/post.component",{"_index":2382,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/modules/content/post/post.component.ts",{"_index":2355,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:10",{"_index":2368,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:11",{"_index":2361,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:15",{"_index":2367,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:22",{"_index":2362,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:26",{"_index":2364,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.component.ts:32",{"_index":2366,"title":{},"body":{"components/PostComponent.html":{}}}],["src/app/modules/content/post/post.module.ts",{"_index":2381,"title":{},"body":{"modules/PostModule.html":{}}}],["src/app/modules/content/sparta/sparta",{"_index":2634,"title":{},"body":{"modules/SpartaRoutingModule.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts",{"_index":2607,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:11",{"_index":2614,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:12",{"_index":2615,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:13",{"_index":2611,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:16",{"_index":2613,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.component.ts:24",{"_index":2612,"title":{},"body":{"components/SpartaComponent.html":{}}}],["src/app/modules/content/sparta/sparta.module.ts",{"_index":2631,"title":{},"body":{"modules/SpartaModule.html":{}}}],["src/app/modules/root",{"_index":2541,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["src/app/modules/root.component.ts",{"_index":2489,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:10",{"_index":2498,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:11",{"_index":2496,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:12",{"_index":2494,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:16",{"_index":2495,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:7",{"_index":2499,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.component.ts:9",{"_index":2497,"title":{},"body":{"components/RootComponent.html":{}}}],["src/app/modules/root.module.ts",{"_index":2529,"title":{},"body":{"modules/RootModule.html":{}}}],["src/app/modules/settings/data/settings.effects.ts",{"_index":2570,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:17",{"_index":2571,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.effects.ts:8",{"_index":2575,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["src/app/modules/settings/data/settings.reducer.ts",{"_index":3393,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/settings/data/settingsstate.ts",{"_index":2593,"title":{},"body":{"interfaces/SettingsState.html":{}}}],["src/app/modules/settings/logs/logs.component.ts",{"_index":2116,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:11",{"_index":2120,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.component.ts:8",{"_index":2119,"title":{},"body":{"components/LogsComponent.html":{}}}],["src/app/modules/settings/logs/logs.module.ts",{"_index":2125,"title":{},"body":{"modules/LogsModule.html":{}}}],["src/app/modules/settings/settings",{"_index":2589,"title":{},"body":{"modules/SettingsRoutingModule.html":{}}}],["src/app/modules/settings/settings.component.ts",{"_index":2551,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:13",{"_index":2557,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:17",{"_index":2556,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.component.ts:9",{"_index":2555,"title":{},"body":{"components/SettingsComponent.html":{}}}],["src/app/modules/settings/settings.module.ts",{"_index":2580,"title":{},"body":{"modules/SettingsModule.html":{}}}],["src/app/modules/status/dialog/no",{"_index":1863,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["src/app/modules/status/status.component.ts",{"_index":2640,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:12",{"_index":2653,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:13",{"_index":2655,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:14",{"_index":2654,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:15",{"_index":2652,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:16",{"_index":2649,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:18",{"_index":2651,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.component.ts:20",{"_index":2650,"title":{},"body":{"components/StatusComponent.html":{}}}],["src/app/modules/status/status.module.ts",{"_index":2666,"title":{},"body":{"modules/StatusModule.html":{}}}],["src/app/modules/user/data/profile/effects.ts",{"_index":1874,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/effects.ts:5",{"_index":1875,"title":{},"body":{"injectables/Effects.html":{}}}],["src/app/modules/user/data/profile/reducer.ts",{"_index":3395,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/profile/state.ts",{"_index":2411,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["src/app/modules/user/data/user/effects.ts",{"_index":1876,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/effects.ts:4",{"_index":1877,"title":{},"body":{"injectables/Effects-1.html":{}}}],["src/app/modules/user/data/user/interfaces/user.options.ts",{"_index":2885,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/modules/user/data/user/reducer.ts",{"_index":3396,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/user/data/user/state.ts",{"_index":2868,"title":{},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["src/app/modules/user/profile.component.ts",{"_index":2388,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:10",{"_index":2402,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:14",{"_index":2393,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile.component.ts:18",{"_index":2394,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/user",{"_index":2889,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/modules/user/user.component.ts",{"_index":2690,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:20",{"_index":2860,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:26",{"_index":2861,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:32",{"_index":2862,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:33",{"_index":2858,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:34",{"_index":2859,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:35",{"_index":2856,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.component.ts:45",{"_index":2857,"title":{},"body":{"components/UserComponent.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":2878,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/modules/vpn/vpn",{"_index":2920,"title":{},"body":{"modules/VpnRoutingModule.html":{}}}],["src/app/modules/vpn/vpn.component",{"_index":2918,"title":{},"body":{"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{}}}],["src/app/modules/vpn/vpn.component.ts",{"_index":2892,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/modules/vpn/vpn.component.ts:11",{"_index":2897,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/modules/vpn/vpn.component.ts:8",{"_index":2896,"title":{},"body":{"components/VpnComponent.html":{}}}],["src/app/modules/vpn/vpn.module.ts",{"_index":2917,"title":{},"body":{"modules/VpnModule.html":{}}}],["src/app/modules/wallet/components/add.component.ts",{"_index":27,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:13",{"_index":50,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:17",{"_index":53,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:8",{"_index":49,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/add.component.ts:9",{"_index":45,"title":{},"body":{"components/AddComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts",{"_index":1847,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:10",{"_index":1850,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:11",{"_index":1853,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:16",{"_index":1852,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/details.component.ts:9",{"_index":1851,"title":{},"body":{"components/DetailsComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts",{"_index":2284,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:11",{"_index":2289,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:18",{"_index":2288,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:21",{"_index":2294,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:28",{"_index":2290,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/open.component.ts:37",{"_index":2292,"title":{},"body":{"components/OpenComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts",{"_index":2442,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts:12",{"_index":2446,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts:17",{"_index":2447,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/restore.component.ts:31",{"_index":2448,"title":{},"body":{"components/RestoreComponent.html":{}}}],["src/app/modules/wallet/components/settings.component.ts",{"_index":2562,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/modules/wallet/components/settings.component.ts:10",{"_index":2564,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/modules/wallet/components/settings.component.ts:7",{"_index":2563,"title":{},"body":{"components/SettingsComponent-1.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts",{"_index":2776,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:17",{"_index":2784,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:18",{"_index":2785,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:26",{"_index":2792,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:27",{"_index":2793,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:29",{"_index":2794,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:33",{"_index":2791,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:37",{"_index":2788,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:38",{"_index":2783,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:43",{"_index":2787,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transactions.component.ts:52",{"_index":2786,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts",{"_index":2812,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:12",{"_index":2822,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:23",{"_index":2815,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:25",{"_index":2818,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:27",{"_index":2816,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/transfer/transfer.component.ts:30",{"_index":2817,"title":{},"body":{"components/TransferComponent.html":{}}}],["src/app/modules/wallet/components/wallet",{"_index":3007,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["src/app/modules/wallet/data/actions",{"_index":2986,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts",{"_index":2949,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:102",{"_index":2954,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:15",{"_index":2959,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:30",{"_index":2984,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:85",{"_index":2963,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/effects.ts:93",{"_index":2966,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/reducer.ts",{"_index":3394,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/wallet/data/selectors",{"_index":2988,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["src/app/modules/wallet/data/state.ts",{"_index":3211,"title":{},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["src/app/modules/wallet/data/state.ts:12",{"_index":3216,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/modules/wallet/data/state.ts:13",{"_index":3215,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/modules/wallet/data/state.ts:14",{"_index":3217,"title":{},"body":{"classes/WalletState.html":{}}}],["src/app/modules/wallet/interfaces/dto/getaddressbookout.ts",{"_index":1992,"title":{},"body":{"interfaces/GetAddressBookOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/getbulkpaymentsin.ts",{"_index":1995,"title":{},"body":{"interfaces/GetBulkPaymentsIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/getbulkpaymentsout.ts",{"_index":2001,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/getpaymentsin.ts",{"_index":2005,"title":{},"body":{"interfaces/GetPaymentsIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/getpaymentsout.ts",{"_index":2007,"title":{},"body":{"interfaces/GetPaymentsOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/gettransfersin.ts",{"_index":2009,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/gettransfersout.ts",{"_index":2019,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/incomingtransfersin.ts",{"_index":2053,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/incomingtransfersout.ts",{"_index":2057,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/makeintegratedaddressin.ts",{"_index":2128,"title":{},"body":{"interfaces/MakeIntegratedAddressIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/makeuriin",{"_index":1592,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/makeuriin.ts",{"_index":2129,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/querykeyin.ts",{"_index":2429,"title":{},"body":{"interfaces/QueryKeyIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/querykeyout.ts",{"_index":2432,"title":{},"body":{"interfaces/QueryKeyOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/splitintegratedaddressout.ts",{"_index":2638,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/storeout.ts",{"_index":2672,"title":{},"body":{"interfaces/StoreOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/sweepallin.ts",{"_index":2674,"title":{},"body":{"interfaces/SweepAllIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/sweepallout.ts",{"_index":2683,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/sweepdustout.ts",{"_index":2688,"title":{},"body":{"interfaces/SweepDustOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/transferin.ts",{"_index":2841,"title":{},"body":{"interfaces/TransferIn.html":{}}}],["src/app/modules/wallet/interfaces/dto/transferout.ts",{"_index":2843,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["src/app/modules/wallet/interfaces/dto/transfersplitout.ts",{"_index":2852,"title":{},"body":{"interfaces/TransferSplitOut.html":{}}}],["src/app/modules/wallet/interfaces/requests/restorewallet.ts",{"_index":2484,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["src/app/modules/wallet/interfaces/types/addaddressbook.ts",{"_index":6,"title":{},"body":{"interfaces/AddAddressBook.html":{}}}],["src/app/modules/wallet/interfaces/types/address",{"_index":2069,"title":{},"body":{"interfaces/IntegratedAddress.html":{},"interfaces/MakeUriIn.html":{},"interfaces/SplitIntegratedAddressOut.html":{}}}],["src/app/modules/wallet/interfaces/types/address.ts",{"_index":137,"title":{},"body":{"interfaces/Address.html":{}}}],["src/app/modules/wallet/interfaces/types/balance.ts",{"_index":842,"title":{},"body":{"interfaces/Balance.html":{}}}],["src/app/modules/wallet/interfaces/types/destination",{"_index":1590,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/GetTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/modules/wallet/interfaces/types/destination.ts",{"_index":1842,"title":{},"body":{"interfaces/Destination.html":{}}}],["src/app/modules/wallet/interfaces/types/height.ts",{"_index":2051,"title":{},"body":{"interfaces/Height.html":{}}}],["src/app/modules/wallet/interfaces/types/integratedaddress.ts",{"_index":2067,"title":{},"body":{"interfaces/IntegratedAddress.html":{}}}],["src/app/modules/wallet/interfaces/types/payment",{"_index":2003,"title":{},"body":{"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsOut.html":{}}}],["src/app/modules/wallet/interfaces/types/payment.ts",{"_index":2331,"title":{},"body":{"interfaces/Payment.html":{}}}],["src/app/modules/wallet/interfaces/types/transfer",{"_index":2021,"title":{},"body":{"interfaces/GetTransfersOut.html":{}}}],["src/app/modules/wallet/interfaces/types/transfer.ts",{"_index":2811,"title":{},"body":{"interfaces/Transfer.html":{}}}],["src/app/modules/wallet/interfaces/types/uri.ts",{"_index":2855,"title":{},"body":{"interfaces/Uri.html":{}}}],["src/app/modules/wallet/interfaces/wallet.ts",{"_index":1588,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{}}}],["src/app/modules/wallet/validators",{"_index":2451,"title":{},"body":{"components/RestoreComponent.html":{},"components/WalletNewComponent.html":{}}}],["src/app/modules/wallet/validators.ts",{"_index":3386,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app/modules/wallet/wallet",{"_index":3031,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["src/app/modules/wallet/wallet.component",{"_index":2993,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/modules/wallet/wallet.component.ts",{"_index":2921,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:12",{"_index":2930,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:13",{"_index":2924,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:14",{"_index":2929,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:17",{"_index":2925,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:21",{"_index":2926,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.component.ts:26",{"_index":2928,"title":{},"body":{"components/WalletComponent.html":{}}}],["src/app/modules/wallet/wallet.module.ts",{"_index":2992,"title":{},"body":{"modules/WalletModule.html":{}}}],["src/app/modules/wallet/wallet.service",{"_index":3018,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["src/app/modules/wallet/wallet.service.ts",{"_index":3157,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:101",{"_index":3170,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:105",{"_index":3165,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:111",{"_index":3176,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:13",{"_index":3182,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:15",{"_index":3181,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:16",{"_index":3180,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:17",{"_index":3164,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:27",{"_index":3177,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:39",{"_index":3174,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:49",{"_index":3172,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:63",{"_index":3167,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:70",{"_index":3166,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:76",{"_index":3168,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/modules/wallet/wallet.service.ts:94",{"_index":3178,"title":{},"body":{"injectables/WalletService.html":{}}}],["src/app/pipes/content/html.pipe.ts",{"_index":1893,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/html.pipe.ts:8",{"_index":1896,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts",{"_index":2603,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/content/shruggie.pipe.ts:5",{"_index":2605,"title":{},"body":{"pipes/ShruggiePipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts",{"_index":1880,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/effort.pipe.ts:7",{"_index":1885,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["src/app/pipes/crypto/fromcoin.pipe.ts",{"_index":1986,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["src/app/pipes/crypto/fromcoin.pipe.ts:7",{"_index":1988,"title":{},"body":{"pipes/FromCoinPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts",{"_index":2023,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashlink.pipe.ts:7",{"_index":2026,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts",{"_index":2027,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/hashrate.pipe.ts:7",{"_index":2029,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts",{"_index":2769,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/crypto/tocoin.pipe.ts:7",{"_index":2770,"title":{},"body":{"pipes/ToCoinPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts",{"_index":2729,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:28",{"_index":2731,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/date/timeago.pipe.ts:9",{"_index":2733,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts",{"_index":2433,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/math/removetrailingzeros.pipe.ts:7",{"_index":2435,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["src/app/pipes/pipes.module.ts",{"_index":2340,"title":{},"body":{"modules/PipesModule.html":{}}}],["src/app/services/app",{"_index":408,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["src/app/services/crypt.service.ts",{"_index":1630,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:10",{"_index":1648,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:103",{"_index":1650,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:124",{"_index":1712,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:153",{"_index":1694,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:16",{"_index":1751,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:183",{"_index":1738,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:189",{"_index":1740,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:194",{"_index":1736,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:200",{"_index":1709,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:207",{"_index":1749,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:216",{"_index":1725,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:231",{"_index":1690,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:37",{"_index":1655,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:56",{"_index":1682,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:76",{"_index":1742,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/crypt.service.ts:88",{"_index":1727,"title":{},"body":{"injectables/CryptService.html":{}}}],["src/app/services/filesystem/file",{"_index":1928,"title":{},"body":{"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["src/app/services/i18n/translate/translate.module.ts",{"_index":2854,"title":{},"body":{"modules/TranslateModule.html":{}}}],["src/app/services/ui/modal/modal.component.ts",{"_index":2137,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:12",{"_index":2148,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:14",{"_index":2154,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:15",{"_index":2146,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:19",{"_index":2151,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:21",{"_index":2152,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:28",{"_index":2149,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.component.ts:35",{"_index":2150,"title":{},"body":{"components/ModalComponent.html":{}}}],["src/app/services/ui/modal/modal.module.ts",{"_index":2197,"title":{},"body":{"modules/ModalModule.html":{}}}],["src/app/services/ui/modal/modalconfig.ts",{"_index":2173,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:10",{"_index":2189,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:12",{"_index":2190,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:14",{"_index":2185,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:16",{"_index":2186,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:18",{"_index":2187,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:20",{"_index":2188,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:6",{"_index":2191,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/ui/modal/modalconfig.ts:8",{"_index":2192,"title":{},"body":{"interfaces/ModalConfig.html":{}}}],["src/app/services/wallet.rpc.service.ts",{"_index":3052,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:105",{"_index":3116,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:114",{"_index":3088,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:123",{"_index":3085,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:13",{"_index":3071,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:132",{"_index":3093,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:142",{"_index":3090,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:151",{"_index":3095,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:162",{"_index":3108,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:171",{"_index":3097,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:182",{"_index":3112,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:192",{"_index":3115,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:201",{"_index":3099,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:21",{"_index":3113,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:210",{"_index":3106,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:219",{"_index":3081,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:228",{"_index":3073,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:237",{"_index":3077,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:246",{"_index":3101,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:255",{"_index":3075,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:264",{"_index":3110,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:274",{"_index":3104,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:43",{"_index":3082,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:52",{"_index":3078,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:61",{"_index":3086,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:71",{"_index":3121,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:80",{"_index":3123,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:88",{"_index":3119,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/wallet.rpc.service.ts:97",{"_index":3118,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["src/app/services/web",{"_index":3223,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["src/app/services/websocket.service.ts",{"_index":3274,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:11",{"_index":3280,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:15",{"_index":3282,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:22",{"_index":3284,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:26",{"_index":3281,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/app/services/websocket.service.ts:30",{"_index":3286,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["src/main.ts",{"_index":3384,"title":{},"body":{"miscellaneous/functions.html":{}}}],["ssh_pem",{"_index":2888,"title":{},"body":{"interfaces/UserOptions.html":{},"miscellaneous/enumerations.html":{}}}],["ssl",{"_index":2520,"title":{},"body":{"components/RootComponent.html":{}}}],["standard_address",{"_index":2639,"title":{},"body":{"interfaces/SplitIntegratedAddressOut.html":{}}}],["start",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartsEffects.html":{},"injectables/CryptService.html":{},"interfaces/GetBulkPaymentsIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["start_height",{"_index":1053,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"injectables/BlockchainService.html":{}}}],["start_on_boot",{"_index":286,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{}}}],["start_time",{"_index":1259,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["startchain",{"_index":163,"title":{},"body":{"components/AppComponent.html":{}}}],["startdaemon",{"_index":1165,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["started",{"_index":2943,"title":{"index.html":{}},"body":{"components/WalletComponent.html":{}}}],["startpollingwallet",{"_index":2951,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["starts",{"_index":180,"title":{},"body":{"components/AppComponent.html":{}}}],["startwalletservice",{"_index":3067,"title":{},"body":{"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["starwars",{"_index":2398,"title":{},"body":{"components/ProfileComponent.html":{}}}],["state",{"_index":653,"title":{},"body":{"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"miscellaneous/functions.html":{}}}],["state.networkdifficulty",{"_index":1493,"title":{},"body":{"interfaces/ChartsState.html":{}}}],["static",{"_index":410,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["stats",{"_index":1216,"title":{},"body":{"components/BlockchainStatsComponent.html":{},"modules/SettingsModule.html":{}}}],["stats'},{'name",{"_index":83,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["stats.component.html",{"_index":1217,"title":{},"body":{"components/BlockchainStatsComponent.html":{}}}],["status",{"_index":100,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["status'},{'name",{"_index":118,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["status.component",{"_index":2667,"title":{},"body":{"modules/StatusModule.html":{}}}],["status.component.html",{"_index":2642,"title":{},"body":{"components/StatusComponent.html":{}}}],["status.component.scss",{"_index":2641,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_annon",{"_index":2644,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_daemon",{"_index":996,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/StatusComponent.html":{}}}],["status_private",{"_index":2645,"title":{},"body":{"components/StatusComponent.html":{}}}],["status_secure",{"_index":2646,"title":{},"body":{"components/StatusComponent.html":{}}}],["statuscomponent",{"_index":117,"title":{"components/StatusComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"modules/StatusModule.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["statusmodule",{"_index":500,"title":{"modules/StatusModule.html":{}},"body":{"modules/AppModule.html":{},"modules/StatusModule.html":{},"modules.html":{},"overview.html":{}}}],["stoppollingwallet",{"_index":2952,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["stopwallet",{"_index":3068,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["storage",{"_index":660,"title":{},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["storage.service.ts",{"_index":3224,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:10",{"_index":3245,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:12",{"_index":3249,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:16",{"_index":3239,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:20",{"_index":3237,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:32",{"_index":3243,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:43",{"_index":3241,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:49",{"_index":3235,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:63",{"_index":3231,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:8",{"_index":3247,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["storage.service.ts:9",{"_index":3246,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["store",{"_index":175,"title":{},"body":{"components/AppComponent.html":{},"interfaces/AppState.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"modules/DataModule.html":{},"interfaces/ProfileState.html":{},"components/RootComponent.html":{},"components/TransactionsComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WebStorageService.html":{},"dependencies.html":{}}}],["stored",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["storedevtoolsmodule",{"_index":1825,"title":{},"body":{"modules/DataModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":1835,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule",{"_index":1824,"title":{},"body":{"modules/DataModule.html":{}}}],["storemodule.forroot(reducers",{"_index":1834,"title":{},"body":{"modules/DataModule.html":{}}}],["storeout",{"_index":2671,"title":{"interfaces/StoreOut.html":{}},"body":{"interfaces/StoreOut.html":{},"injectables/WalletRpcService.html":{}}}],["storerouterconnectingmodule",{"_index":1828,"title":{},"body":{"modules/DataModule.html":{}}}],["storerouterconnectingmodule.forroot",{"_index":1840,"title":{},"body":{"modules/DataModule.html":{}}}],["string",{"_index":13,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetPaymentsIn.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"interfaces/RestoreWallet.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["style",{"_index":2399,"title":{},"body":{"components/ProfileComponent.html":{},"components/TransferComponent.html":{}}}],["style=\"font",{"_index":1088,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["styles",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["styletype",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{},"components/BlockchainConfigComponent.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["styleurls",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/SettingsComponent.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{}}}],["sub",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"injectables/CryptService.html":{},"components/PostComponent.html":{}}}],["subject",{"_index":1474,"title":{},"body":{"injectables/ChartsEffects.html":{},"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["subject.subscribe",{"_index":2302,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WebsocketService.html":{}}}],["submit",{"_index":2080,"title":{},"body":{"components/LoginComponent.html":{}}}],["subs",{"_index":2779,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["subscribe",{"_index":309,"title":{},"body":{"components/AppComponent.html":{}}}],["subscribe((data",{"_index":2372,"title":{},"body":{"components/PostComponent.html":{},"pipes/TimeAgoPipe.html":{}}}],["subscription",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"injectables/ChartService.html":{},"components/TransactionsComponent.html":{}}}],["subscriptions",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["sufficiently",{"_index":853,"title":{},"body":{"interfaces/Balance.html":{}}}],["supplied",{"_index":1653,"title":{},"body":{"injectables/CryptService.html":{}}}],["support",{"_index":3426,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":610,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["svg",{"_index":3427,"title":{},"body":{"modules.html":{}}}],["sweepall",{"_index":2675,"title":{},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepall(x",{"_index":3117,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepallin",{"_index":2673,"title":{"interfaces/SweepAllIn.html":{}},"body":{"interfaces/SweepAllIn.html":{},"injectables/WalletRpcService.html":{}}}],["sweepallout",{"_index":2682,"title":{"interfaces/SweepAllOut.html":{}},"body":{"interfaces/SweepAllOut.html":{},"injectables/WalletRpcService.html":{}}}],["sweepdust",{"_index":3069,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["sweepdustout",{"_index":2687,"title":{"interfaces/SweepDustOut.html":{}},"body":{"interfaces/SweepDustOut.html":{}}}],["swimlane/ngx",{"_index":265,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"modules/RootModule.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["switchmap",{"_index":1463,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap(([action",{"_index":1456,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["switchmap((req",{"_index":2573,"title":{},"body":{"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["sync",{"_index":565,"title":{},"body":{"modules/AppModule.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["synchronized",{"_index":1098,"title":{},"body":{"components/BlockchainComponent.html":{}}}],["syndrome",{"_index":1702,"title":{},"body":{"injectables/CryptService.html":{}}}],["system",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletService.html":{}}}],["system.interface",{"_index":1975,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["system.interface.ts",{"_index":1902,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:16",{"_index":1924,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:25",{"_index":1926,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:33",{"_index":1914,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:41",{"_index":1918,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:49",{"_index":1909,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.interface.ts:8",{"_index":1921,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["system.service",{"_index":450,"title":{},"body":{"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"components/BlockchainConfigComponent.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"injectables/WalletService.html":{}}}],["system.service.ts",{"_index":1929,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:17",{"_index":1950,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:27",{"_index":1941,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:41",{"_index":1945,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:51",{"_index":1948,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:61",{"_index":1943,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:71",{"_index":1938,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["system.service.ts:8",{"_index":1935,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["t",{"_index":1757,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["tabsmodule",{"_index":1145,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/WalletModule.html":{}}}],["take",{"_index":699,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/CryptService.html":{}}}],["takes",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["takeuntil",{"_index":1460,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["takewhile",{"_index":2971,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["talks",{"_index":1040,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["target",{"_index":1260,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["target_height",{"_index":1261,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["targetaddform",{"_index":42,"title":{},"body":{"components/AddComponent.html":{}}}],["targettabindex",{"_index":37,"title":{},"body":{"components/AddComponent.html":{}}}],["task",{"_index":2689,"title":{"interfaces/Task.html":{}},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["technologies",{"_index":2503,"title":{},"body":{"components/RootComponent.html":{}}}],["template",{"_index":24,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["templateref",{"_index":1018,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/ModalComponent.html":{}}}],["templates",{"_index":3412,"title":{},"body":{"index.html":{}}}],["templateurl",{"_index":35,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["tension",{"_index":892,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["terminal",{"_index":345,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"modules/RootRoutingModule.html":{},"components/TerminalComponent.html":{},"dependencies.html":{}}}],["terminal'},{'name",{"_index":120,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["terminal.component.html",{"_index":2726,"title":{},"body":{"components/TerminalComponent.html":{}}}],["terminal.component.scss",{"_index":2725,"title":{},"body":{"components/TerminalComponent.html":{}}}],["terminalcomponent",{"_index":119,"title":{"components/TerminalComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"modules/ConsoleModule.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"modules/RootRoutingModule.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["test",{"_index":1686,"title":{},"body":{"injectables/CryptService.html":{},"miscellaneous/typealiases.html":{}}}],["testnet",{"_index":1262,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["text",{"_index":463,"title":{},"body":{"injectables/AppConfigService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/SpartaComponent.html":{},"injectables/WalletRpcService.html":{}}}],["text/plain",{"_index":2622,"title":{},"body":{"components/SpartaComponent.html":{}}}],["that.key",{"_index":2108,"title":{},"body":{"components/LoginComponent.html":{}}}],["that.notificationservice.create",{"_index":2112,"title":{},"body":{"components/LoginComponent.html":{}}}],["that.ref.markforcheck",{"_index":1542,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["that.ws.sendmessage(`cmd:letheand:${this.command.join('')}\\n",{"_index":1563,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["theme",{"_index":400,"title":{},"body":{"components/AppComponent.html":{}}}],["themselves",{"_index":1380,"title":{},"body":{"injectables/ChartService.html":{}}}],["then((dat",{"_index":1200,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{}}}],["then((data",{"_index":3025,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["then((res",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(async",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(res",{"_index":1208,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["then(response",{"_index":459,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["then(text",{"_index":461,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.actions$.pipe",{"_index":1437,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/SettingsEffects.html":{},"injectables/WalletEffects.html":{}}}],["this.addoptions",{"_index":2225,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.address",{"_index":3197,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.alertservice.alert({title",{"_index":2830,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.alertservice.prompt",{"_index":2300,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.allcolumns.foreach((col",{"_index":1033,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.apiurl",{"_index":1976,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.apiurl}/write",{"_index":1983,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["this.app.loadconfig('conf/app.ini",{"_index":284,"title":{},"body":{"components/AppComponent.html":{}}}],["this.app.makedefault",{"_index":297,"title":{},"body":{"components/AppComponent.html":{}}}],["this.appfilesystem",{"_index":1956,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.authservice.getauthstatus",{"_index":713,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["this.authservice.login(privatekey",{"_index":2094,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.authservice.login(this.key",{"_index":2096,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.backend('clear",{"_index":3263,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('get",{"_index":3254,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('remove",{"_index":3261,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.backend('set",{"_index":3258,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.balance",{"_index":3194,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.block",{"_index":926,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.blockdata",{"_index":928,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.blocks",{"_index":1057,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.blocksearch",{"_index":1037,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.blockui.stop",{"_index":328,"title":{},"body":{"components/AppComponent.html":{}}}],["this.chain.getblock(this.id",{"_index":925,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.chain.getblocks(math.max(0",{"_index":1058,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.chain.getinfo",{"_index":331,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["this.chain.startdaemon().then",{"_index":327,"title":{},"body":{"components/AppComponent.html":{}}}],["this.chaininfo",{"_index":1039,"title":{},"body":{"components/BlockLedgerComponent.html":{},"injectables/BlockchainService.html":{},"components/StatusComponent.html":{}}}],["this.chaininfo.height",{"_index":1047,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["this.chaininfo.target_height",{"_index":1048,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["this.chainrpc('get_info",{"_index":1210,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('getblock",{"_index":1213,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('getblockheadersrange",{"_index":1214,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.chainrpc('gettransactions",{"_index":1211,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["this.changestream(this.attach",{"_index":1543,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.chartdata$[name",{"_index":1407,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartdata$[name].subscribe",{"_index":1412,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartelement",{"_index":1306,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartinstances[name",{"_index":1426,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets.map((item",{"_index":1415,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].data.datasets[i].data",{"_index":1416,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].destroy",{"_index":1425,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartinstances[name].update",{"_index":1418,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartmeta[name].datamap(response",{"_index":1417,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartservice.createchart(this.lthnchart",{"_index":1305,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartservice.destroysubscriptions(this.lthnchart",{"_index":1319,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.chartsubscriptions[name",{"_index":1411,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.chartsubscriptions[name].unsubscribe",{"_index":1424,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.child.keyeventinput.subscribe((e",{"_index":1550,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.buffer.active.cursorx",{"_index":1568,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.write('\\b",{"_index":1569,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln",{"_index":1565,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(data[1",{"_index":1540,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.underlying.writeln(line.trim",{"_index":1541,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write",{"_index":1548,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.child.write(e.key",{"_index":1572,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.columns.push",{"_index":1035,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.command",{"_index":1564,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.pop",{"_index":1567,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.command.push(e.key",{"_index":1571,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.config",{"_index":1114,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.configureoptions",{"_index":905,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.connect().asobservable",{"_index":3294,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.connect().complete",{"_index":3295,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.count",{"_index":3250,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.createchartelement(this.lthnchart",{"_index":1304,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.createsalt(input",{"_index":1772,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.cryptservice",{"_index":2718,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.createopenpgp(usernamehash",{"_index":2707,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.decryptpgp(atob(res['result",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.decryptprivatekey(key",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.encryptpgpsingle",{"_index":2716,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.encryptpublic(await",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.cryptservice.generatekey",{"_index":2717,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sha256salty(username",{"_index":2704,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.cryptservice.sign(`{\"id\":\"${privatekey.getuserids()[0",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.currentlanguage",{"_index":300,"title":{},"body":{"components/AppComponent.html":{}}}],["this.decryptprivatekey",{"_index":1800,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.destroysubscriptions(name",{"_index":1420,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.dialogref.close",{"_index":1873,"title":{},"body":{"interfaces/DialogData.html":{},"components/NoDaemonRunningDialog.html":{}}}],["this.drawerservice.create",{"_index":1060,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.edittmpl",{"_index":1063,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.elmref.nativeelement",{"_index":1312,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.error",{"_index":2092,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.fetchedhtml",{"_index":2627,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.fetchserverpublickey",{"_index":456,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.filename",{"_index":2102,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.filesystem.exists(pathname",{"_index":1961,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.list(dirname",{"_index":1957,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.listfiles('users').then(async",{"_index":714,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.filesystem.mkdir(dirname",{"_index":1960,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.read(filename",{"_index":1958,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.readfile",{"_index":1790,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.filesystem.write(filename",{"_index":1959,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["this.filesystem.writefile",{"_index":2711,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.fs.listfiles('/wallets').then((data",{"_index":3199,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.fs.readfile('conf/letheand.conf",{"_index":1118,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.fs.readfile(filename).then((data",{"_index":469,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.fs.writefile",{"_index":477,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.fs.writefile('conf/app.ini",{"_index":485,"title":{},"body":{"injectables/AppConfigService.html":{}}}],["this.fs.writefile('conf/letheand.conf",{"_index":1113,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.getactiveaddress",{"_index":3192,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getauthstatus",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getbalance",{"_index":3191,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.getblocks",{"_index":1050,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.getchild(activatedroute.firstchild",{"_index":334,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getchild(this.activatedroute",{"_index":312,"title":{},"body":{"components/AppComponent.html":{}}}],["this.getlatestposts",{"_index":2371,"title":{},"body":{"components/PostComponent.html":{}}}],["this.getwalletlist",{"_index":3206,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.heading",{"_index":316,"title":{},"body":{"components/AppComponent.html":{}}}],["this.http",{"_index":1196,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/ChartsEffects.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["this.http.get(\"https://sparta.lt.hn/latest.json",{"_index":2374,"title":{},"body":{"components/PostComponent.html":{}}}],["this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty",{"_index":1485,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.http.get(`https://sparta.lt.hn/${slug}/${id}.json`).subscribe((data",{"_index":2375,"title":{},"body":{"components/PostComponent.html":{}}}],["this.http.get(`https://sparta.lt.hn/t/${slug}/${id",{"_index":2625,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc",{"_index":2972,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.id",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{},"components/SpartaComponent.html":{}}}],["this.id.length",{"_index":924,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["this.ispollingactivestats",{"_index":2961,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.items",{"_index":3262,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.items[key",{"_index":3252,"title":{},"body":{"injectables/WebStorageService.html":{}}}],["this.key",{"_index":2093,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.keymap[i",{"_index":1768,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.load().then",{"_index":1111,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.loadingservice.complete",{"_index":2308,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.loadingservice.start",{"_index":278,"title":{},"body":{"components/AppComponent.html":{},"components/OpenComponent.html":{}}}],["this.loadpost(this.slug",{"_index":2620,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.loadtransactions().catch((err",{"_index":2805,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.metaservice.removetag('name=\\'description",{"_index":322,"title":{},"body":{"components/AppComponent.html":{}}}],["this.metaservice.updatetag",{"_index":320,"title":{},"body":{"components/AppComponent.html":{}}}],["this.modalconfig.onclose",{"_index":2165,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.ondismiss",{"_index":2168,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shouldclose",{"_index":2164,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalconfig.shoulddismiss",{"_index":2167,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref",{"_index":2160,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.close(result",{"_index":2166,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.dismiss(result",{"_index":2169,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalref.result.then(resolve",{"_index":2162,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.modalservice.open(this.modalcontent",{"_index":2161,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.name",{"_index":2306,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["this.networkhashratechart",{"_index":1360,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.notificationservice.create",{"_index":2307,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.notificationservice.create({type",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notify.create",{"_index":1115,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["this.offline",{"_index":294,"title":{},"body":{"components/AppComponent.html":{}}}],["this.openedwallet",{"_index":3189,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.options",{"_index":907,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.options.plugins.tooltip.callbacks",{"_index":2267,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.options.scales.y.ticks.callback",{"_index":2264,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["this.page.pagenumber",{"_index":1054,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.page.size",{"_index":1055,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.page.totalelements",{"_index":1049,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.password",{"_index":2097,"title":{},"body":{"components/LoginComponent.html":{},"components/WalletNewComponent.html":{}}}],["this.password.value",{"_index":2701,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{},"components/WalletNewComponent.html":{}}}],["this.password_confirm",{"_index":3020,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.password_confirm.value",{"_index":3021,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.passwordrepeat.value",{"_index":2702,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.posts",{"_index":2373,"title":{},"body":{"components/PostComponent.html":{}}}],["this.processingform",{"_index":2699,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.readkey(publickey",{"_index":1818,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.readmessage(encrypted",{"_index":1801,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.readmessage(message",{"_index":1820,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.readprivatekey",{"_index":1814,"title":{},"body":{"injectables/CryptService.html":{}}}],["this.ref.detach",{"_index":1531,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.detectchanges",{"_index":1533,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ref.markforcheck",{"_index":1547,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.renderer.appendchild(this.elmref.nativeelement",{"_index":1317,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.createelement('canvas",{"_index":1307,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.removechild",{"_index":1318,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setattribute",{"_index":1308,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle",{"_index":1311,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.renderer.setstyle(this.elmref.nativeelement",{"_index":1309,"title":{},"body":{"directives/ChartDirective.html":{}}}],["this.restorewalletform",{"_index":2452,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.address",{"_index":2465,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.autosave_current",{"_index":2467,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.filename",{"_index":2464,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.password",{"_index":2468,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.restore_height",{"_index":2466,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.spendkey",{"_index":2470,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewkey",{"_index":2471,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.restorewalletform.value.viewonly_wallet",{"_index":2469,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.route.snapshot.parammap.get('id",{"_index":2616,"title":{},"body":{"components/SpartaComponent.html":{},"components/TransactionsComponent.html":{}}}],["this.route.snapshot.parammap.get('slug",{"_index":2618,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.router.events",{"_index":306,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":275,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.navigate",{"_index":2095,"title":{},"body":{"components/LoginComponent.html":{},"components/WalletNewComponent.html":{}}}],["this.router.navigate(['/','wallet','details",{"_index":2936,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.router.navigate(['/login",{"_index":720,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.router.navigatebyurl",{"_index":2098,"title":{},"body":{"components/LoginComponent.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.rows",{"_index":2802,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.rpc.getaddress().then((data",{"_index":3196,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.getbalance().then((data",{"_index":3193,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.gettransfers(opts).then((data",{"_index":3207,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.openwallet(req).then(async",{"_index":3188,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.restorewallet(req",{"_index":3187,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.startwalletservice().subscribe((data",{"_index":3186,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.stopwallet",{"_index":3208,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.rpc.transfer(opts",{"_index":3209,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.sanitizer.bypasssecuritytrusthtml(content",{"_index":1899,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{}}}],["this.settargettabindex",{"_index":60,"title":{},"body":{"components/AddComponent.html":{}}}],["this.setupcallbacks",{"_index":906,"title":{},"body":{"injectables/BaseChartConfigService.html":{}}}],["this.slug",{"_index":2617,"title":{},"body":{"components/SpartaComponent.html":{}}}],["this.socket",{"_index":3291,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.closed",{"_index":3292,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.socket$.next(msg",{"_index":3296,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["this.startchain",{"_index":287,"title":{},"body":{"components/AppComponent.html":{}}}],["this.status_daemon",{"_index":1042,"title":{},"body":{"components/BlockLedgerComponent.html":{},"components/StatusComponent.html":{}}}],["this.store$.pipe",{"_index":1451,"title":{},"body":{"injectables/ChartsEffects.html":{}}}],["this.store.dispatch",{"_index":2975,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.store.dispatch(changelanguage({language",{"_index":304,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstartaction",{"_index":1410,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(this.chartmeta[name].pollingstopaction",{"_index":1423,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.dispatch(togglehidenavigation",{"_index":305,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe",{"_index":1408,"title":{},"body":{"injectables/ChartService.html":{}}}],["this.store.pipe(select(selectlanguage)).subscribe((lang",{"_index":301,"title":{},"body":{"components/AppComponent.html":{}}}],["this.store.pipe(select(selectwallettransactions)).subscribe((data",{"_index":2800,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.sub",{"_index":2370,"title":{},"body":{"components/PostComponent.html":{}}}],["this.sub.foreach((s",{"_index":280,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{}}}],["this.sub.unsubscribe",{"_index":931,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/PostComponent.html":{}}}],["this.sub['interval",{"_index":1051,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["this.subs$['txn",{"_index":2799,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.targetaddform",{"_index":61,"title":{},"body":{"components/AddComponent.html":{}}}],["this.targettabindex",{"_index":62,"title":{},"body":{"components/AddComponent.html":{}}}],["this.titleservice.settitle(res",{"_index":315,"title":{},"body":{"components/AppComponent.html":{}}}],["this.transfer",{"_index":2836,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.transfer.destinations.map((dest",{"_index":2825,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.translate.get(data.description).subscribe",{"_index":319,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.get(data.title).subscribe((res",{"_index":314,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.getstreamontranslationchange",{"_index":2734,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["this.translate.use(lang",{"_index":302,"title":{},"body":{"components/AppComponent.html":{}}}],["this.translate.use(req.language",{"_index":2574,"title":{},"body":{"injectables/SettingsEffects.html":{}}}],["this.updatemeta",{"_index":303,"title":{},"body":{"components/AppComponent.html":{}}}],["this.user",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.user.length",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.username.value",{"_index":2700,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["this.wallet.getactiveaddress",{"_index":2932,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet.getbalance",{"_index":1856,"title":{},"body":{"components/DetailsComponent.html":{}}}],["this.wallet.gettransfers(this.opts).then((data",{"_index":2806,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["this.wallet.getwalletlist",{"_index":2298,"title":{},"body":{"components/OpenComponent.html":{}}}],["this.wallet.openwallet",{"_index":2956,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["this.wallet.openwallet({filename",{"_index":2304,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.wallet.restorewallet",{"_index":2463,"title":{},"body":{"components/RestoreComponent.html":{}}}],["this.wallet.sendtransfer(this.transfer).catch((err",{"_index":2827,"title":{},"body":{"components/TransferComponent.html":{}}}],["this.wallet.startwallet().then(r",{"_index":329,"title":{},"body":{"components/AppComponent.html":{}}}],["this.wallet.startwalletservice",{"_index":2299,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["this.wallet.walletlist",{"_index":2931,"title":{},"body":{"components/WalletComponent.html":{}}}],["this.wallet_name",{"_index":3019,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.wallet_name.value",{"_index":3023,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.wallet_name.value]).catch(console.error",{"_index":3028,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.walletrpc.createwallet",{"_index":3022,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["this.wallets",{"_index":2297,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{}}}],["this.wallets.includes(dat",{"_index":3201,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.length",{"_index":3205,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.wallets.push(dat",{"_index":3204,"title":{},"body":{"injectables/WalletService.html":{}}}],["this.ws.closeconnection",{"_index":1574,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect",{"_index":1544,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.connect().subscribe((data",{"_index":1534,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["this.ws.sendmessage(channel",{"_index":1546,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["those",{"_index":852,"title":{},"body":{"interfaces/Balance.html":{}}}],["throw",{"_index":1385,"title":{},"body":{"injectables/ChartService.html":{},"injectables/CryptService.html":{}}}],["tickmarklength",{"_index":2247,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["ticks",{"_index":897,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["ticks.color",{"_index":1400,"title":{},"body":{"injectables/ChartService.html":{}}}],["time",{"_index":2229,"title":{},"body":{"injectables/NetworkHashrateChart.html":{},"components/TransactionsComponent.html":{}}}],["timeago",{"_index":2730,"title":{},"body":{"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{}}}],["timeagopipe",{"_index":2338,"title":{"pipes/TimeAgoPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/TimeAgoPipe.html":{},"overview.html":{}}}],["timeagopipe.translations",{"_index":2746,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["timeagopipe.translations['words.time.past.years",{"_index":2768,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["timed",{"_index":2353,"title":{},"body":{"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"miscellaneous/enumerations.html":{}}}],["timer",{"_index":1462,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timer(0",{"_index":1458,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["timeseries",{"_index":2230,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["timestamp",{"_index":985,"title":{},"body":{"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{}}}],["timezone",{"_index":3345,"title":{},"body":{"dependencies.html":{}}}],["title",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainRoutingModule.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletRoutingModule.html":{}}}],["titleservice",{"_index":169,"title":{},"body":{"components/AppComponent.html":{}}}],["tmi",{"_index":3403,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tocoin",{"_index":956,"title":{},"body":{"components/BlockDetailsComponent.html":{},"components/DetailsComponent.html":{},"pipes/ToCoinPipe.html":{},"components/TransactionsComponent.html":{},"components/WalletComponent.html":{}}}],["tocoinpipe",{"_index":2339,"title":{"pipes/ToCoinPipe.html":{}},"body":{"modules/PipesModule.html":{},"pipes/ToCoinPipe.html":{},"overview.html":{}}}],["todo",{"_index":1374,"title":{},"body":{"injectables/ChartService.html":{},"injectables/FileSystemService.html":{}}}],["toggle",{"_index":206,"title":{},"body":{"components/AppComponent.html":{}}}],["togglehidenavigation",{"_index":258,"title":{},"body":{"components/AppComponent.html":{}}}],["togglemenu",{"_index":164,"title":{},"body":{"components/AppComponent.html":{}}}],["token",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokengetter",{"_index":561,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/functions.html":{}}}],["toolbar",{"_index":379,"title":{},"body":{"components/AppComponent.html":{}}}],["toolbarmodule",{"_index":1146,"title":{},"body":{"modules/BlockchainModule.html":{},"modules/UserModule.html":{}}}],["tooltip",{"_index":901,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top",{"_index":393,"title":{},"body":{"components/AppComponent.html":{},"injectables/NetworkHashrateChart.html":{}}}],["top_block_hash",{"_index":1263,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["topromise",{"_index":1199,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{}}}],["torrents",{"_index":2911,"title":{},"body":{"components/VpnComponent.html":{}}}],["tostring",{"_index":1773,"title":{},"body":{"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["tot",{"_index":1927,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["total",{"_index":846,"title":{},"body":{"interfaces/Balance.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalelements",{"_index":1022,"title":{},"body":{"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["totalpages",{"_index":1023,"title":{},"body":{"components/BlockLedgerComponent.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{}}}],["trace",{"_index":3375,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["track",{"_index":2901,"title":{},"body":{"components/VpnComponent.html":{}}}],["transactin",{"_index":3091,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transaction",{"_index":1620,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["transactions",{"_index":968,"title":{"interfaces/Transactions.html":{}},"body":{"components/BlockDetailsComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{}}}],["transactions'},{'name",{"_index":122,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["transactions.component.html",{"_index":2777,"title":{},"body":{"components/TransactionsComponent.html":{}}}],["transactionscomponent",{"_index":121,"title":{"components/TransactionsComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["transfer",{"_index":2020,"title":{"interfaces/Transfer.html":{}},"body":{"interfaces/GetTransfersOut.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"injectables/WalletRpcService.html":{}}}],["transfer'},{'name",{"_index":124,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["transfer(x",{"_index":3120,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfer.component.html",{"_index":2813,"title":{},"body":{"components/TransferComponent.html":{}}}],["transfer_type",{"_index":2054,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["transfercomponent",{"_index":123,"title":{"components/TransferComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["transferin",{"_index":2819,"title":{"interfaces/TransferIn.html":{}},"body":{"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["transferout",{"_index":2823,"title":{"interfaces/TransferOut.html":{}},"body":{"components/TransferComponent.html":{},"interfaces/TransferOut.html":{},"injectables/WalletRpcService.html":{}}}],["transfers",{"_index":2010,"title":{},"body":{"interfaces/GetTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"injectables/WalletEffects.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["transfersplit",{"_index":3070,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplit(x",{"_index":3122,"title":{},"body":{"injectables/WalletRpcService.html":{}}}],["transfersplitin",{"_index":1600,"title":{"interfaces/TransferSplitIn.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"injectables/WalletRpcService.html":{}}}],["transfersplitout",{"_index":2851,"title":{"interfaces/TransferSplitOut.html":{}},"body":{"interfaces/TransferSplitOut.html":{},"injectables/WalletRpcService.html":{}}}],["transform",{"_index":1882,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(content",{"_index":1895,"title":{},"body":{"pipes/EscapeHtmlPipe.html":{},"pipes/FromCoinPipe.html":{},"pipes/HashRatePipe.html":{},"pipes/ShruggiePipe.html":{},"pipes/ToCoinPipe.html":{}}}],["transform(string",{"_index":2024,"title":{},"body":{"pipes/HashLinkPipe.html":{}}}],["transform(value",{"_index":1883,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"pipes/TimeAgoPipe.html":{}}}],["transforms",{"_index":1656,"title":{},"body":{"injectables/CryptService.html":{}}}],["translate",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"components/WalletNewComponent.html":{}}}],["translate.getbrowserlang",{"_index":268,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.setdefaultlang('en",{"_index":267,"title":{},"body":{"components/AppComponent.html":{}}}],["translate.use(lang",{"_index":274,"title":{},"body":{"components/AppComponent.html":{}}}],["translate/core",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["translate/http",{"_index":546,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["translatehttploader",{"_index":545,"title":{},"body":{"modules/AppModule.html":{}}}],["translatehttploader(http",{"_index":560,"title":{},"body":{"modules/AppModule.html":{}}}],["translateloader",{"_index":544,"title":{},"body":{"modules/AppModule.html":{}}}],["translatemodule",{"_index":501,"title":{"modules/TranslateModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/RootModule.html":{},"modules/TranslateModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["translatemodule.forroot",{"_index":566,"title":{},"body":{"modules/AppModule.html":{}}}],["translateservice",{"_index":174,"title":{},"body":{"components/AppComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{}}}],["translations",{"_index":2732,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["tree",{"_index":26,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["tries",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{}}}],["true",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/NetworkHashrateChart.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"interfaces/RestoreWallet.html":{},"modules/RootRoutingModule.html":{},"interfaces/Task.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"components/UserComponent.html":{},"injectables/WalletEffects.html":{}}}],["try",{"_index":282,"title":{},"body":{"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/ChartService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"components/LoginComponent.html":{},"injectables/WebStorageService.html":{}}}],["ts",{"_index":1277,"title":{},"body":{"interfaces/ChartDifficulty.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["tslib",{"_index":3360,"title":{},"body":{"dependencies.html":{}}}],["two",{"_index":690,"title":{},"body":{"guards/AuthGuard.html":{}}}],["tx",{"_index":970,"title":{},"body":{"components/BlockDetailsComponent.html":{},"interfaces/MakeUriIn.html":{},"components/TransferComponent.html":{}}}],["tx's",{"_index":2016,"title":{},"body":{"interfaces/GetTransfersIn.html":{}}}],["tx_blob_list",{"_index":2684,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_count",{"_index":1264,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_description",{"_index":2131,"title":{},"body":{"interfaces/MakeUriIn.html":{}}}],["tx_hash",{"_index":2059,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{},"interfaces/Payment.html":{},"interfaces/TransferOut.html":{}}}],["tx_hash_list",{"_index":2685,"title":{},"body":{"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/TransferSplitOut.html":{}}}],["tx_key",{"_index":2844,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["tx_key_list",{"_index":2686,"title":{},"body":{"interfaces/SweepAllOut.html":{}}}],["tx_pool_size",{"_index":1265,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["tx_size",{"_index":2060,"title":{},"body":{"interfaces/IncomingTransfersOut.html":{}}}],["txid",{"_index":2790,"title":{},"body":{"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"injectables/WalletRpcService.html":{}}}],["txn",{"_index":2846,"title":{},"body":{"interfaces/TransferOut.html":{}}}],["txs_as_hex",{"_index":2774,"title":{},"body":{"interfaces/Transactions.html":{}}}],["txs_as_json",{"_index":2775,"title":{},"body":{"interfaces/Transactions.html":{}}}],["txs_hashes",{"_index":1212,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["txshashes",{"_index":1185,"title":{},"body":{"injectables/BlockchainService.html":{}}}],["type",{"_index":14,"title":{},"body":{"interfaces/AddAddressBook.html":{},"components/AddComponent.html":{},"interfaces/Address.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"interfaces/Balance.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"interfaces/BlockHeader.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"components/BlockchainStatsComponent.html":{},"interfaces/ChainGetInfo.html":{},"interfaces/ChartConfigInterface.html":{},"interfaces/ChartDifficulty.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"interfaces/ChartsState.html":{},"components/ConsoleComponent.html":{},"interfaces/CreateWallet.html":{},"injectables/CryptService.html":{},"interfaces/Destination.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"injectables/Effects.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/FromCoinPipe.html":{},"interfaces/GetAddressBookOut.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/GetBulkPaymentsOut.html":{},"interfaces/GetPaymentsIn.html":{},"interfaces/GetPaymentsOut.html":{},"interfaces/GetTransfersIn.html":{},"interfaces/GetTransfersOut.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"interceptors/HeaderInterceptor.html":{},"interfaces/Height.html":{},"interfaces/IncomingTransfersIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/IntegratedAddress.html":{},"interfaces/LogEntry.html":{},"components/LoginComponent.html":{},"interfaces/LogsState.html":{},"interfaces/MakeIntegratedAddressIn.html":{},"interfaces/MakeUriIn.html":{},"components/ModalComponent.html":{},"interfaces/ModalConfig.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"classes/PaginatorOptions.html":{},"classes/PaginatorOptionsInterface.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/PluginDefinition.html":{},"interfaces/Plugins.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"interfaces/QueryKeyIn.html":{},"interfaces/QueryKeyOut.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"interfaces/SettingsState.html":{},"components/SpartaComponent.html":{},"interfaces/SplitIntegratedAddressOut.html":{},"components/StatusComponent.html":{},"interfaces/SweepAllIn.html":{},"interfaces/SweepAllOut.html":{},"interfaces/SweepDustOut.html":{},"interfaces/Task.html":{},"pipes/TimeAgoPipe.html":{},"pipes/ToCoinPipe.html":{},"interfaces/Transactions.html":{},"components/TransactionsComponent.html":{},"interfaces/Transfer.html":{},"components/TransferComponent.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferOut.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/TransferSplitOut.html":{},"interfaces/Uri.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":3437,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2030,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["ui",{"_index":204,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainConfigComponent.html":{},"modules/BlockchainModule.html":{},"modules/ConsoleModule.html":{},"injectables/CryptService.html":{},"components/LoginComponent.html":{},"components/OpenComponent.html":{},"modules/RootModule.html":{},"interfaces/SettingsState.html":{},"components/TransferComponent.html":{},"modules/UserModule.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"dependencies.html":{}}}],["unavailable",{"_index":2055,"title":{},"body":{"interfaces/IncomingTransfersIn.html":{}}}],["unblock",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["undefined",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"injectables/ChartService.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/TransferComponent.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["under",{"_index":1722,"title":{},"body":{"injectables/CryptService.html":{}}}],["unified",{"_index":2585,"title":{},"body":{"modules/SettingsModule.html":{}}}],["unique",{"_index":2403,"title":{},"body":{"components/ProfileComponent.html":{}}}],["uniquenamesgenerator",{"_index":2395,"title":{},"body":{"components/ProfileComponent.html":{}}}],["unit",{"_index":2235,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["units",{"_index":1846,"title":{},"body":{"interfaces/Destination.html":{},"pipes/HashRatePipe.html":{},"interfaces/MakeUriIn.html":{}}}],["units[i]}h",{"_index":2034,"title":{},"body":{"pipes/HashRatePipe.html":{}}}],["unknown",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BlockchainService.html":{},"injectables/CryptService.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["unlock",{"_index":2293,"title":{},"body":{"components/OpenComponent.html":{},"components/TransactionsComponent.html":{}}}],["unlock_time",{"_index":1611,"title":{},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/Payment.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["unlock_time:0",{"_index":2821,"title":{},"body":{"components/TransferComponent.html":{}}}],["unlocked",{"_index":850,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlocked_balance",{"_index":843,"title":{},"body":{"interfaces/Balance.html":{}}}],["unlockwallet",{"_index":2287,"title":{},"body":{"components/OpenComponent.html":{}}}],["unlockwallet(name",{"_index":2291,"title":{},"body":{"components/OpenComponent.html":{}}}],["unsigned",{"_index":844,"title":{},"body":{"interfaces/Balance.html":{},"interfaces/CreateWallet.html":{},"interfaces/Destination.html":{},"interfaces/GetBulkPaymentsIn.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/SweepAllIn.html":{},"interfaces/TransferIn.html":{},"interfaces/TransferSplitIn.html":{}}}],["up",{"_index":1340,"title":{},"body":{"injectables/ChartService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["update",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{},"components/ConsoleComponent.html":{},"index.html":{}}}],["updatemeta",{"_index":165,"title":{},"body":{"components/AppComponent.html":{}}}],["uri",{"_index":1627,"title":{"interfaces/Uri.html":{}},"body":{"interfaces/CreateWallet.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"interfaces/TransferSplitIn.html":{},"interfaces/Uri.html":{},"injectables/WalletRpcService.html":{}}}],["url",{"_index":1171,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/WalletRpcService.html":{},"dependencies.html":{}}}],["urlencoded",{"_index":1194,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["use",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"injectables/ChartService.html":{},"interfaces/CreateWallet.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{}}}],["useclass",{"_index":576,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":2423,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["usefactory",{"_index":569,"title":{},"body":{"modules/AppModule.html":{}}}],["usehash",{"_index":603,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["user",{"_index":107,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"injectables/CryptService.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["user'},{'name",{"_index":126,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["user.component",{"_index":2881,"title":{},"body":{"modules/UserModule.html":{}}}],["user.component.html",{"_index":2693,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.component.scss",{"_index":2694,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["user.reducer",{"_index":645,"title":{},"body":{"interfaces/AppState.html":{}}}],["user.usersstate",{"_index":626,"title":{},"body":{"interfaces/AppState.html":{}}}],["usercomponent",{"_index":125,"title":{"components/UserComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"interfaces/Task.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"modules/UserModule.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["userform",{"_index":2695,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["userids",{"_index":1783,"title":{},"body":{"injectables/CryptService.html":{}}}],["usermeta",{"_index":2867,"title":{"interfaces/UserMeta.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usermodule",{"_index":2874,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":681,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/Task.html":{},"components/UserComponent.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["usernamehash",{"_index":2703,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["useroptions",{"_index":2870,"title":{"interfaces/UserOptions.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserOptions.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userroutingmodule",{"_index":583,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["users",{"_index":697,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CryptService.html":{},"interfaces/IncomingTransfersOut.html":{},"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["users/${id}.lthn.key",{"_index":1799,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${id}.lthn.pub",{"_index":1791,"title":{},"body":{"injectables/CryptService.html":{}}}],["users/${usernamehash}.lthn",{"_index":2715,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.key",{"_index":2712,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.pub",{"_index":2713,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["users/${usernamehash}.lthn.rev",{"_index":2714,"title":{},"body":{"interfaces/Task.html":{},"components/UserComponent.html":{}}}],["usersstate",{"_index":2872,"title":{"interfaces/UsersState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["userstate",{"_index":2873,"title":{"interfaces/UserState.html":{}},"body":{"interfaces/UserMeta.html":{},"interfaces/UserState.html":{},"interfaces/UsersState.html":{}}}],["uses",{"_index":1744,"title":{},"body":{"injectables/CryptService.html":{}}}],["using",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{},"components/RootComponent.html":{},"components/WalletComponent.html":{}}}],["v",{"_index":2303,"title":{},"body":{"components/OpenComponent.html":{},"components/WalletComponent.html":{}}}],["v.data.data}).then(async",{"_index":2305,"title":{},"body":{"components/OpenComponent.html":{}}}],["v.data}).then(async",{"_index":2934,"title":{},"body":{"components/WalletComponent.html":{}}}],["v12",{"_index":3310,"title":{},"body":{"dependencies.html":{}}}],["valid",{"_index":1884,"title":{},"body":{"pipes/EffortPipe.html":{}}}],["validatorfn",{"_index":3389,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validators",{"_index":1031,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["validators.required",{"_index":1038,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["value",{"_index":47,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"injectables/BlockchainService.html":{},"injectables/ChartService.html":{},"injectables/ChartsEffects.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"pipes/EffortPipe.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{},"pipes/HashLinkPipe.html":{},"pipes/HashRatePipe.html":{},"components/LoginComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/OpenComponent.html":{},"classes/PaginatorOptions.html":{},"components/ProfileComponent.html":{},"pipes/RemoveTrailingZerosPipe.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"injectables/SettingsEffects.html":{},"pipes/TimeAgoPipe.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"interfaces/TransferOut.html":{},"components/UserComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"injectables/WebStorageService.html":{},"miscellaneous/enumerations.html":{}}}],["value.indexof",{"_index":2437,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.length",{"_index":2441,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.slice",{"_index":2439,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.substr(0",{"_index":2440,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["value.tostring",{"_index":2436,"title":{},"body":{"pipes/RemoveTrailingZerosPipe.html":{}}}],["values",{"_index":2265,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["var",{"_index":71,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["variable",{"_index":682,"title":{},"body":{"guards/AuthGuard.html":{}}}],["verified_user",{"_index":2659,"title":{},"body":{"components/StatusComponent.html":{}}}],["version",{"_index":1010,"title":{},"body":{"components/BlockLedgerComponent.html":{},"properties.html":{}}}],["view",{"_index":2482,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/TransferComponent.html":{}}}],["view.chain.description",{"_index":1156,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["view.chain.heading",{"_index":1155,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["view.chain.title",{"_index":1154,"title":{},"body":{"modules/BlockchainRoutingModule.html":{}}}],["view.dashboard.description",{"_index":2547,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.heading",{"_index":2546,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.dashboard.title",{"_index":2545,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.terminal.description",{"_index":2550,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.terminal.heading",{"_index":2549,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.terminal.title",{"_index":2548,"title":{},"body":{"modules/RootRoutingModule.html":{}}}],["view.wallets.backup.description",{"_index":3043,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.backup.heading",{"_index":3042,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.backup.title",{"_index":3041,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.description",{"_index":3035,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.heading",{"_index":3034,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.new.description",{"_index":3039,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.new.heading",{"_index":3038,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.new.title",{"_index":3037,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.restore.description",{"_index":3047,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.restore.heading",{"_index":3046,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.restore.title",{"_index":3045,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.settings.description",{"_index":3051,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.settings.heading",{"_index":3050,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.settings.title",{"_index":3049,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["view.wallets.title",{"_index":3033,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["viewchild",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/BlockLedgerComponent.html":{},"components/ConsoleComponent.html":{},"components/ModalComponent.html":{}}}],["viewchild('edittmpl",{"_index":1019,"title":{},"body":{"components/BlockLedgerComponent.html":{}}}],["viewchild('modal",{"_index":2153,"title":{},"body":{"components/ModalComponent.html":{}}}],["viewchild('sidenav",{"_index":241,"title":{},"body":{"components/AppComponent.html":{}}}],["viewchild('term",{"_index":1525,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation",{"_index":1528,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewencapsulation.none",{"_index":1501,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["viewkey",{"_index":2460,"title":{},"body":{"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{}}}],["viewonly_wallet",{"_index":2461,"title":{},"body":{"components/RestoreComponent.html":{}}}],["viewport",{"_index":1576,"title":{},"body":{"components/ConsoleComponent.html":{},"dependencies.html":{}}}],["visibility_off",{"_index":2658,"title":{},"body":{"components/StatusComponent.html":{}}}],["vm",{"_index":1383,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartinstances[name",{"_index":1401,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name",{"_index":1384,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data",{"_index":1404,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.length",{"_index":1396,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].data.datasets.map((dataset",{"_index":1387,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options",{"_index":1405,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.colors[i",{"_index":1389,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales",{"_index":1398,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].options.scales[dataset.yaxisid",{"_index":1397,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.chartmeta[name].type",{"_index":1403,"title":{},"body":{"injectables/ChartService.html":{}}}],["vm.hashratepipe.transform(context.parsed.y",{"_index":2268,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.hashratepipe.transform(value",{"_index":2266,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["vm.setupdatasubscription(name",{"_index":1406,"title":{},"body":{"injectables/ChartService.html":{}}}],["void",{"_index":52,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"injectables/AppConfigService.html":{},"injectables/AuthService.html":{},"injectables/BaseChartConfigService.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"interfaces/ChartConfigInterface.html":{},"directives/ChartDirective.html":{},"injectables/ChartService.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/DialogData.html":{},"interfaces/FileSystemInterface.html":{},"injectables/FileSystemWebService.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"injectables/NetworkHashrateChart.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletService.html":{},"injectables/WebStorageService.html":{},"injectables/WebsocketService.html":{}}}],["vpn",{"_index":2893,"title":{},"body":{"components/VpnComponent.html":{},"modules/VpnRoutingModule.html":{}}}],["vpn'},{'name",{"_index":128,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["vpn.component.html",{"_index":2895,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpn.component.scss",{"_index":2894,"title":{},"body":{"components/VpnComponent.html":{}}}],["vpncomponent",{"_index":127,"title":{"components/VpnComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"modules/VpnModule.html":{},"modules/VpnRoutingModule.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{},"overview.html":{}}}],["vpnmodule",{"_index":2914,"title":{"modules/VpnModule.html":{}},"body":{"modules/VpnModule.html":{},"modules.html":{},"overview.html":{}}}],["vpnroutingmodule",{"_index":2919,"title":{"modules/VpnRoutingModule.html":{}},"body":{"modules/VpnRoutingModule.html":{},"modules.html":{}}}],["wails",{"_index":3406,"title":{},"body":{"index.html":{}}}],["wails.io",{"_index":3416,"title":{},"body":{"index.html":{}}}],["wailsdevelopment",{"_index":3418,"title":{},"body":{"index.html":{}}}],["waiting",{"_index":341,"title":{},"body":{"components/AppComponent.html":{}}}],["wall",{"_index":2314,"title":{},"body":{"components/OpenComponent.html":{}}}],["wallet",{"_index":33,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"interfaces/AppState.html":{},"interfaces/Balance.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"interfaces/GetTransfersIn.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"interfaces/RestoreWallet.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["wallet's",{"_index":2485,"title":{},"body":{"interfaces/RestoreWallet.html":{}}}],["wallet'},{'name",{"_index":130,"title":{},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"components/WalletNewComponent.html":{}}}],["wallet.address",{"_index":1857,"title":{},"body":{"components/DetailsComponent.html":{},"components/WalletComponent.html":{}}}],["wallet.balance.balance",{"_index":2946,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.balance.unlocked_balance",{"_index":2944,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.balance.unlocked_balance|tocoin",{"_index":2947,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.balance['balance",{"_index":1858,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.balance['unlocked_balance",{"_index":1859,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.balance[\\'balance",{"_index":1860,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.balance[\\'unlocked_balance",{"_index":1861,"title":{},"body":{"components/DetailsComponent.html":{}}}],["wallet.component.html",{"_index":2923,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.component.scss",{"_index":2922,"title":{},"body":{"components/WalletComponent.html":{}}}],["wallet.name",{"_index":2977,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.options.pollinginterval).pipe",{"_index":2970,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["wallet.reducer",{"_index":647,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.walleteffects",{"_index":667,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet.walletsstate",{"_index":627,"title":{},"body":{"interfaces/AppState.html":{}}}],["wallet/backup",{"_index":3040,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet/new",{"_index":3036,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet/restore",{"_index":3044,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet/settings",{"_index":3048,"title":{},"body":{"modules/WalletRoutingModule.html":{}}}],["wallet_name",{"_index":3010,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["walletactions",{"_index":2985,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletbalance",{"_index":2976,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaddata",{"_index":2962,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletloaded",{"_index":2982,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.walletstoppedpolling",{"_index":2965,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletactions.wallettransfers",{"_index":2979,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletcomponent",{"_index":129,"title":{"components/WalletComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["walleteffects",{"_index":2948,"title":{"injectables/WalletEffects.html":{}},"body":{"injectables/WalletEffects.html":{}}}],["walletlist",{"_index":3163,"title":{},"body":{"injectables/WalletService.html":{}}}],["walletloaddata",{"_index":2953,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletmodule",{"_index":2528,"title":{"modules/WalletModule.html":{}},"body":{"modules/RootModule.html":{},"modules/WalletModule.html":{},"modules.html":{},"overview.html":{}}}],["walletnewcomponent",{"_index":131,"title":{"components/WalletNewComponent.html":{}},"body":{"components/AddComponent.html":{},"components/AppComponent.html":{},"components/BlockDetailsComponent.html":{},"components/BlockLedgerComponent.html":{},"components/BlockchainComponent.html":{},"components/BlockchainConfigComponent.html":{},"components/BlockchainStatsComponent.html":{},"components/ConsoleComponent.html":{},"components/DetailsComponent.html":{},"components/LoginComponent.html":{},"components/LogsComponent.html":{},"components/ModalComponent.html":{},"components/NoDaemonRunningDialog.html":{},"components/OpenComponent.html":{},"components/PostComponent.html":{},"components/ProfileComponent.html":{},"components/RestoreComponent.html":{},"components/RootComponent.html":{},"components/SettingsComponent.html":{},"components/SettingsComponent-1.html":{},"components/SpartaComponent.html":{},"components/StatusComponent.html":{},"components/TerminalComponent.html":{},"components/TransactionsComponent.html":{},"components/TransferComponent.html":{},"components/UserComponent.html":{},"components/VpnComponent.html":{},"components/WalletComponent.html":{},"modules/WalletModule.html":{},"components/WalletNewComponent.html":{},"modules/WalletRoutingModule.html":{},"overview.html":{}}}],["walletroutingmodule",{"_index":584,"title":{"modules/WalletRoutingModule.html":{}},"body":{"modules/AppRoutingModule.html":{},"modules/WalletRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["walletrpc",{"_index":3013,"title":{},"body":{"components/WalletNewComponent.html":{}}}],["walletrpcservice",{"_index":2782,"title":{"injectables/WalletRpcService.html":{}},"body":{"components/TransactionsComponent.html":{},"components/WalletNewComponent.html":{},"injectables/WalletRpcService.html":{},"injectables/WalletService.html":{}}}],["wallets",{"_index":621,"title":{},"body":{"interfaces/AppState.html":{},"interfaces/CreateWallet.html":{},"components/OpenComponent.html":{},"interfaces/OpenWallet.html":{},"interfaces/ParseUri.html":{},"components/ProfileComponent.html":{},"interfaces/ProfileState.html":{},"components/SettingsComponent-1.html":{},"interfaces/TransferSplitIn.html":{},"components/WalletComponent.html":{},"injectables/WalletService.html":{},"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletselectors",{"_index":2987,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["walletservice",{"_index":1849,"title":{"injectables/WalletService.html":{}},"body":{"components/DetailsComponent.html":{},"components/OpenComponent.html":{},"components/RestoreComponent.html":{},"components/TransferComponent.html":{},"components/WalletComponent.html":{},"injectables/WalletEffects.html":{},"components/WalletNewComponent.html":{},"injectables/WalletService.html":{}}}],["walletsstate",{"_index":3212,"title":{"interfaces/WalletsState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["walletstate",{"_index":3210,"title":{"classes/WalletState.html":{}},"body":{"classes/WalletState.html":{},"interfaces/WalletsState.html":{}}}],["want",{"_index":1697,"title":{},"body":{"injectables/CryptService.html":{}}}],["watcher",{"_index":299,"title":{},"body":{"components/AppComponent.html":{}}}],["way",{"_index":1377,"title":{},"body":{"injectables/ChartService.html":{}}}],["ways",{"_index":691,"title":{},"body":{"guards/AuthGuard.html":{}}}],["web",{"_index":3363,"title":{},"body":{"dependencies.html":{}}}],["web.service",{"_index":1953,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["web.service.ts",{"_index":1962,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:10",{"_index":1963,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:17",{"_index":1964,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:21",{"_index":1966,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:34",{"_index":1967,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:38",{"_index":1969,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:43",{"_index":1971,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web.service.ts:56",{"_index":1973,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["web3",{"_index":2505,"title":{},"body":{"components/RootComponent.html":{}}}],["webfilesystem",{"_index":1954,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["website",{"_index":2518,"title":{},"body":{"components/RootComponent.html":{}}}],["websites",{"_index":2517,"title":{},"body":{"components/RootComponent.html":{}}}],["websocket",{"_index":3287,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(\"ws://127.0.0.1:8081",{"_index":3297,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocket(ws_endpoint",{"_index":3293,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["websocketservice",{"_index":1511,"title":{"injectables/WebsocketService.html":{}},"body":{"components/ConsoleComponent.html":{},"injectables/WebsocketService.html":{}}}],["websocketsubject",{"_index":3283,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["webstorageservice",{"_index":661,"title":{"injectables/WebStorageService.html":{}},"body":{"interfaces/AppState.html":{},"injectables/WebStorageService.html":{}}}],["webview2",{"_index":3408,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":696,"title":{},"body":{"guards/AuthGuard.html":{},"components/RootComponent.html":{}}}],["well",{"_index":1706,"title":{},"body":{"injectables/CryptService.html":{}}}],["whatever",{"_index":3307,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["whenever",{"_index":3301,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["white",{"_index":2239,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["white_peerlist_size",{"_index":1266,"title":{},"body":{"interfaces/ChainGetInfo.html":{}}}],["width",{"_index":359,"title":{},"body":{"components/AppComponent.html":{},"components/ConsoleComponent.html":{},"components/StatusComponent.html":{}}}],["width:80vw",{"_index":1316,"title":{},"body":{"directives/ChartDirective.html":{}}}],["window",{"_index":3415,"title":{},"body":{"index.html":{}}}],["within",{"_index":2424,"title":{},"body":{"interfaces/ProfileState.html":{}}}],["withlatestfrom",{"_index":1450,"title":{},"body":{"injectables/ChartsEffects.html":{},"injectables/WalletEffects.html":{}}}],["withlatestfrom(this.store.pipe(select(walletselectors.selectopenedwalletdata",{"_index":2968,"title":{},"body":{"injectables/WalletEffects.html":{}}}],["without",{"_index":702,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wizard",{"_index":2884,"title":{},"body":{"modules/UserModule.html":{}}}],["wont",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CryptService.html":{}}}],["word",{"_index":1733,"title":{},"body":{"injectables/CryptService.html":{}}}],["words.actions.save",{"_index":1119,"title":{},"body":{"components/BlockchainConfigComponent.html":{}}}],["words.things.type",{"_index":961,"title":{},"body":{"components/BlockDetailsComponent.html":{}}}],["words.time.past.day",{"_index":2740,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.days",{"_index":2741,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.hour",{"_index":2738,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.hours",{"_index":2739,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.minute",{"_index":2736,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.minutes",{"_index":2737,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.month",{"_index":2742,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.months",{"_index":2743,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.seconds",{"_index":2735,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.year",{"_index":2744,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["words.time.past.years",{"_index":2745,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["working",{"_index":1951,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["works",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["worst",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["wrapper",{"_index":1952,"title":{},"body":{"injectables/FileSystemService.html":{},"components/StatusComponent.html":{}}}],["write",{"_index":1906,"title":{},"body":{"interfaces/FileSystemInterface.html":{},"injectables/FileSystemService.html":{},"injectables/FileSystemWebService.html":{}}}],["write(filename",{"_index":1972,"title":{},"body":{"injectables/FileSystemWebService.html":{}}}],["write(type",{"_index":1925,"title":{},"body":{"interfaces/FileSystemInterface.html":{}}}],["writefile",{"_index":1932,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["writefile(filename",{"_index":1947,"title":{},"body":{"injectables/FileSystemService.html":{}}}],["ws",{"_index":1515,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["ws://127.0.0.1:36909",{"_index":3290,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["ws_endpoint",{"_index":3289,"title":{},"body":{"injectables/WebsocketService.html":{}}}],["www",{"_index":1192,"title":{},"body":{"injectables/BlockchainService.html":{},"injectables/FileSystemWebService.html":{},"injectables/WalletRpcService.html":{}}}],["x",{"_index":896,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{},"injectables/WalletRpcService.html":{}}}],["xmldom/xmldom",{"_index":3325,"title":{},"body":{"dependencies.html":{}}}],["xterm",{"_index":1575,"title":{},"body":{"components/ConsoleComponent.html":{}}}],["y",{"_index":899,"title":{},"body":{"injectables/BaseChartConfigService.html":{},"injectables/NetworkHashrateChart.html":{}}}],["years",{"_index":2764,"title":{},"body":{"pipes/TimeAgoPipe.html":{}}}],["yes",{"_index":1886,"title":{},"body":{"pipes/EffortPipe.html":{},"pipes/HashRatePipe.html":{},"injectables/WalletRpcService.html":{}}}],["yes/no",{"_index":2407,"title":{},"body":{"components/ProfileComponent.html":{}}}],["z",{"_index":1756,"title":{},"body":{"injectables/CryptService.html":{},"pipes/HashRatePipe.html":{}}}],["zerolinewidth",{"_index":2245,"title":{},"body":{"injectables/NetworkHashrateChart.html":{}}}],["zone.js",{"_index":3365,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":503,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/AuthModule.html":{},"modules/BlockchainModule.html":{},"modules/ChartModule.html":{},"modules/ConsoleModule.html":{},"modules/LogsModule.html":{},"modules/ModalModule.html":{},"modules/PipesModule.html":{},"modules/PostModule.html":{},"modules/RootModule.html":{},"modules/RootRoutingModule.html":{},"modules/SettingsModule.html":{},"modules/SpartaModule.html":{},"modules/StatusModule.html":{},"modules/UserModule.html":{},"modules/VpnModule.html":{},"modules/WalletModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/AddAddressBook.html":{"url":"interfaces/AddAddressBook.html","title":"interface - AddAddressBook","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AddAddressBook\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/addAddressBook.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AddAddressBook {\n\taddress: string;\n\tpayment_id?: string; // (optional) string, defaults to \"0000000000000000000000000000000000000000000000000000000000000000\";\n\tdescription?: string; // (optional) string, defaults to \"\";\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AddComponent.html":{"url":"components/AddComponent.html","title":"component - AddComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AddComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/add.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-add\n            \n\n\n\n\n            \n                templateUrl\n                ./add.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                targetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setTargetTabIndex\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                targetAddForm\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/add.component.ts:9\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        targetAddForm\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'open'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/add.component.ts:8\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/add.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTargetTabIndex\n                        \n                    \n                \n            \n            \n                \nsetTargetTabIndex()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/add.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        targetTabIndex\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/add.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-wallet-add',\n\ttemplateUrl: './add.component.html'\n})\nexport class AddComponent implements OnInit {\n\t@Input() targetAddForm: string = 'open';\n\ttargetTabIndex: number = 0;\n\n\tconstructor() { }\n\n\tngOnInit(): void {\n\t\tthis.setTargetTabIndex();\n\t}\n\n\tsetTargetTabIndex(): void {\n\t\tif (this.targetAddForm === \"open\") {\n\t\t\tthis.targetTabIndex = 0;\n\t\t}else if (this.targetAddForm === \"restore\") {\n\t\t\tthis.targetTabIndex = 1;\n\t\t}else{\n\t\t\tthis.targetTabIndex = 0;\n\t\t}\n\t}\n\n\n\n}\n\n    \n\n    \n        \n\n\t\n\t\t\n\t\t\t\n\t\t\t\tadd_box\n\t\t\t\n\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\t\n\t\t\t\tcloud_download\n\t\t\t\n\t\t\n\t\t\n\t\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t\t\t\t\tadd_box\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcloud_download\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AddComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/address.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Address {\n\taddress: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chainInfo\n                            \n                            \n                                    Public\n                                currentFlag\n                            \n                            \n                                    Public\n                                currentLanguage\n                            \n                            \n                                    Public\n                                currentLanguage$\n                            \n                            \n                                filteredNavigationTree\n                            \n                            \n                                    Public\n                                heading\n                            \n                            \n                                    Public\n                                menu\n                            \n                            \n                                    Public\n                                navExpanded\n                            \n                            \n                                navigationTree\n                            \n                            \n                                    Public\n                                offline\n                            \n                            \n                                searchValue\n                            \n                            \n                                    Public\n                                sidenav\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage\n                            \n                            \n                                getChild\n                            \n                            \n                                    Public\n                                    Async\n                                ngAfterContentInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                startChain\n                            \n                            \n                                toggleMenu\n                            \n                            \n                                updateMeta\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, activatedRoute: ActivatedRoute, titleService: Title, metaService: Meta, translate: TranslateService, store: Store, chain: BlockchainService, app: AppConfigService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:51\n                            \n                        \n\n                \n                    \n                            Starts the Angular framework and configures system plugins\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        activatedRoute\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                        Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                        Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                        AppConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                    LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage\n                        \n                    \n                \n            \n            \n                \nchangeLanguage(lang: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:132\n                \n            \n\n\n            \n                \n                    Dispatch a language change request\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    lang\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getChild\n                        \n                    \n                \n            \n            \n                \ngetChild(activatedRoute: ActivatedRoute)\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:206\n                \n            \n\n\n            \n                \n                    Angular router helper\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    activatedRoute\n                                    \n                                                ActivatedRoute\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        ngAfterContentInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterContentInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startChain\n                        \n                    \n                \n            \n            \n                \nstartChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:189\n                \n            \n\n\n            \n                \n                    Start chain daemon and wallet service\nunblock UI\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleMenu\n                        \n                    \n                \n            \n            \n                \ntoggleMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:139\n                \n            \n\n\n            \n                \n                    Dispatch a Menu toggle request\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateMeta\n                        \n                    \n                \n            \n            \n                \nupdateMeta()\n                \n            \n\n\n            \n                \n                    Defined in src/app/app.component.ts:146\n                \n            \n\n\n            \n                \n                    creates subscriptions for multi lingual page meta\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentFlag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'en'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        currentLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredNavigationTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        heading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        menu\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        navExpanded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigationTree\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{\n\t\t\tname: 'menu.text.dashboard',\n\t\t\troute: 'dashboard',\n\t\t\ticon: 'circles'\n\n\t\t},\n\t\t{\n\t\t\tname: 'menu.text.blockchain',\n\t\t\troute: 'chain',\n\t\t\ticon: 'assets'\n\t\t},\n\t\t{\n\t\t\tname: 'menu.text.wallet',\n\t\t\troute: 'wallet',\n\t\t\ticon: 'circuit-board'\n\t\t}\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        offline\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchValue\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        sidenav\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSidenav\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('sidenav')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterContentInit, Component, ViewChild} from '@angular/core';\nimport {MatSidenav} from '@angular/material/sidenav';\nimport {ActivatedRoute, NavigationEnd, NavigationStart, Router} from '@angular/router';\nimport {Meta, Title} from '@angular/platform-browser';\nimport {filter} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\nimport {select, Store} from '@ngrx/store';\nimport {changeLanguage, selectLanguage, toggleHideNavigation} from '@module/settings/data';\nimport { Subscription} from 'rxjs';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {AppConfigService} from '@service/app-config.service';\nimport { LoadingService } from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-app',\n\ttemplateUrl: './app.component.html',\n\tstyleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterContentInit {\n\tpublic menu: boolean;\n\tpublic heading = '';\n\n\t@ViewChild('sidenav') public sidenav: MatSidenav;\n\tpublic currentFlag: any;\n\tpublic currentLanguage$: Subscription;\n\tpublic currentLanguage: string = 'en';\n\tpublic navExpanded: boolean = true;\n\tsearchValue = '';\n\tfilteredNavigationTree: any[];\n\tprivate sub: Subscription[] = [];\n\tpublic chainInfo: ChainGetInfo;\n\tnavigationTree: any[] = [\n\t\t{\n\t\t\tname: 'menu.text.dashboard',\n\t\t\troute: 'dashboard',\n\t\t\ticon: 'circles'\n\n\t\t},\n\t\t{\n\t\t\tname: 'menu.text.blockchain',\n\t\t\troute: 'chain',\n\t\t\ticon: 'assets'\n\t\t},\n\t\t{\n\t\t\tname: 'menu.text.wallet',\n\t\t\troute: 'wallet',\n\t\t\ticon: 'circuit-board'\n\t\t}\n\t];\n\tpublic offline: boolean = false;\n\n\t/**\n\t * Starts the Angular framework and configures system plugins\n\t *\n\t * @param {Router} router\n\t * @param {ActivatedRoute} activatedRoute\n\t * @param {Title} titleService\n\t * @param {Meta} metaService\n\t * @param {TranslateService} translate\n\t * @param {Store} store\n\t * @param {BlockchainService} chain\n\t * @param app\n\t * @param loadingService\n\t */\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate activatedRoute: ActivatedRoute,\n\t\tprivate titleService: Title,\n\t\tprivate metaService: Meta,\n\t\tprivate translate: TranslateService,\n\t\tprivate store: Store,\n\t\tprivate chain: BlockchainService,\n\t\tprivate app: AppConfigService,\n\t\tprivate loadingService: LoadingService\n\t) {\n\n\t\ttranslate.setDefaultLang('en');\n\t\tlet lang = translate.getBrowserLang();\n\t\t// the lang to use, if the lang isn't available, it will use the current loader to get them\n\t\ttranslate.use(lang ? lang : 'en');\n\n\t\tthis.router.events.subscribe((event) => {\n\t\t\tif(event instanceof NavigationStart) {\n\t\t\t\tthis.loadingService.start();\n\t\t\t} else if(event instanceof NavigationEnd) {\n\t\t\t\tloadingService.complete();\n\t\t\t}\n\t\t});\n\n\t}\n\n\tpublic ngOnDestroy() {\n\t\tthis.sub.forEach((s) => s.unsubscribe());\n\t}\n\n\tpublic async ngAfterContentInit() {\n\t\ttry {\n\t\t\tawait this.app.loadConfig('conf/app.ini')\n\n\t\t\tif(this.app.getConfig('daemon', 'start_on_boot', false)){\n\t\t\t\tthis.startChain();\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif ('HttpErrorResponse' === e.name) {\n\t\t\t\tif (e.status === 401) {\n\t\t\t\t\tthis.offline = false;\n\t\t\t\t}else if(e.status === 404){\n\t\t\t\t\tawait this.app.makeDefault()\n\t\t\t\t\tawait this.app.loadConfig('conf/app.ini')\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t//this.offline = true\n\t\t\t}\n\n\t\t}\n\n\t\t// setup language watcher\n\t\tthis.currentLanguage$ = this.store.pipe(select(selectLanguage)).subscribe((lang) => {\n\t\t\tthis.currentLanguage = lang;\n\t\t\tthis.translate.use(lang);\n\t\t});\n\n\t\tthis.updateMeta();\n\t}\n\n\t/**\n\t * Dispatch a language change request\n\t *\n\t * @param {string} lang\n\t */\n\tchangeLanguage(lang: string) {\n\t\tthis.store.dispatch(changeLanguage({language: lang}));\n\t}\n\n\t/**\n\t * Dispatch a Menu toggle request\n\t */\n\ttoggleMenu() {\n\t\tthis.store.dispatch(toggleHideNavigation());\n\t}\n\n\t/**\n\t * creates subscriptions for multi lingual page meta\n\t */\n\tupdateMeta() {\n\t\tthis.router.events\n\t\t\t.pipe(filter((event) => event instanceof NavigationEnd))\n\t\t\t.subscribe(() => {\n\t\t\t\tconst rt = this.getChild(this.activatedRoute);\n\t\t\t\trt.data.subscribe((data) => {\n\t\t\t\t\tthis.translate.get(data.title).subscribe((res: string) => {\n\t\t\t\t\t\tthis.titleService.setTitle(res);\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.heading = data.heading;\n\t\t\t\t\tif (data.description) {\n\n\t\t\t\t\t\tthis.translate.get(data.description).subscribe(() => {\n\t\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\t\tname: 'description',\n\t\t\t\t\t\t\t\tcontent: data.description\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t});\n\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.removeTag('name=\\'description\\'');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!data.robots) {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'nofollow,noindex'\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.metaService.updateTag({\n\t\t\t\t\t\t\tname: 'robots',\n\t\t\t\t\t\t\tcontent: 'follow,index'\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\t/**\n\t * Start chain daemon and wallet service\n\t * unblock UI\n\t */\n\tstartChain() {\n\n\t\tthis.chain.startDaemon().then(() => {\n\t\t\t//this.blockUI.stop();\n\t\t\t//this.wallet.startWallet().then(r => r);\n\t\t});\n\n\t\tthis.chain.getInfo()\n\n\t}\n\n\t/**\n\t * Angular router helper\n\t *\n\t * @param {ActivatedRoute} activatedRoute\n\t * @returns {any}\n\t */\n\tgetChild(activatedRoute: ActivatedRoute) {\n\t\tif (activatedRoute.firstChild) {\n\t\t\treturn this.getChild(activatedRoute.firstChild);\n\t\t} else {\n\t\t\treturn activatedRoute;\n\t\t}\n\t}\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    You are offline, if you have Beta access start your server, join Sparta to register for the waiting list.\n                \n            \n        \n\n    \n\n\n    \n        \n            \n                \n            \n        \n\n        \n        \n            \n                dashboard\n            \n            \n                link\n            \n            {{ 'menu.text.blockchain' | translate }}-->\n                         account_balance_wallet\n terminal-->\n            {{ 'menu.text.settings' | translate }}-->\n        \n        \n        \n    \n    \n\n\n        \n             \n            \n                \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.en' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.ru' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.zh' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.es' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.de' | translate }}\n                        \n                    \n                    \n                        \n                            &nbsp;&nbsp;{{ 'lang.fr' | translate }}\n                        \n                    \n\n\n                \n            \n\n            \n                \n            \n\n        \n        \n\n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                :host {\n  .main-container {\n    height: 100vh;\n    width: 100%;\n    min-height: calc(99vh - 54px);\n    overflow: hidden;\n    background: radial-gradient(circle, rgba(8, 242, 181, 1) 0%, rgba(21, 130, 151, 1) 100%);\n\n    mat-card {\n      mat-card-content {\n        img {\n          height: 30vh;\n        }\n      }\n    }\n  }\n\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: 64px;\n  }\n\n  mat-sidenav {\n    width: 74px;\n    align-items: center;\n    border: none;\n    .logo {\n      padding-left: 11px;\n      padding-top: 2px;\n      height: 58px;\n    }\n    .mat-nav-list {\n      padding-top: 0;\n      .mat-icon{\n        margin: 0 auto;\n      }\n    }\n  }\n\n  html.dark-theme .made-by {\n    --active-background-color: #242628;\n    color: #838488;\n  }\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            You are offline, if you have Beta access start your server, join Sparta to register for the waiting list.                                                                                                                                                dashboard                                        link                        {{ \\'menu.text.blockchain\\' | translate }}-->                         account_balance_wallet terminal-->            {{ \\'menu.text.settings\\' | translate }}-->                                                                                                                                                           {{ \\'lang.en\\' | translate }}                                                                                                                      {{ \\'lang.ru\\' | translate }}                                                                                                                      {{ \\'lang.zh\\' | translate }}                                                                                                                      {{ \\'lang.es\\' | translate }}                                                                                                                      {{ \\'lang.de\\' | translate }}                                                                                                                      {{ \\'lang.fr\\' | translate }}                                                                                                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppConfigService.html":{"url":"injectables/AppConfigService.html","title":"injectable - AppConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/app-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                apiUrl\n                            \n                            \n                                    Static\n                                config\n                            \n                            \n                                crypto\n                            \n                            \n                                openpgp\n                            \n                            \n                                    Static\n                                serverPublicKey\n                            \n                            \n                                    Static\n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                fetchServerPublicKey\n                            \n                            \n                                getConfig\n                            \n                            \n                                loadConfig\n                            \n                            \n                                    Async\n                                makeDefault\n                            \n                            \n                                saveConfig\n                            \n                            \n                                setConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/app-config.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        fetchServerPublicKey\n                        \n                    \n                \n            \n            \n                \nfetchServerPublicKey()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getConfig\n                        \n                    \n                \n            \n            \n                \ngetConfig(section: string, key: string, defaultValue: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:74\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    section\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    defaultValue\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadConfig\n                        \n                    \n                \n            \n            \n                \nloadConfig(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        makeDefault\n                        \n                    \n                \n            \n            \n                \n                    \n                    makeDefault()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        saveConfig\n                        \n                    \n                \n            \n            \n                \nsaveConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:92\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setConfig\n                        \n                    \n                \n            \n            \n                \nsetConfig(section: string, key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/app-config.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    section\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://127.0.0.1:36911'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ConfigIniParser\n\n                    \n                \n                \n                    \n                        Default value : new ConfigIniParser()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        crypto\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openpgp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        serverPublicKey\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        settings\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/app-config.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {ConfigIniParser} from 'config-ini-parser';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root',\n})\n/**\n * @deprecated\n */\nexport class AppConfigService {\n\n\tpublic static apiUrl: string = 'http://127.0.0.1:36911';\n\tpublic static serverPublicKey;\n\tpublic static settings: any;\n\tpublic static config: ConfigIniParser = new ConfigIniParser();\n\topenpgp: any;\n\tcrypto: any;\n\n\tconstructor(private fs: FileSystemService) {\n\t\tif(!AppConfigService.serverPublicKey){\n\t\t\tthis.fetchServerPublicKey()\n\t\t}\n\t}\n\n\tfetchServerPublicKey(){\n\t\tfetch(AppConfigService.apiUrl + '/cert')\n\t\t\t.then(response => response.text())\n\t\t\t.then(text => {\n\t\t\t\tAppConfigService.serverPublicKey = text;\n\t\t\t\t//console.log(AppConfigService.serverPublicKey);\n\t\t\t});\n\t}\n\n\n\tloadConfig(filename: string = '') {\n\t\tconsole.log(`Load Config: ${filename}`)\n\t\tif( filename === ''){ return false }\n\t\tAppConfigService.apiUrl = AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911')\n\n\t\t\treturn this.fs.readFile(filename).then((data) => {\n\t\t\t\tAppConfigService.config.parse(data)\n\t\t\t})\n\n\t}\n\n\tasync makeDefault() {\n\t\tconst p = new ConfigIniParser('\\r\\n');\n\t\ttry {\n\t\t\tp.addSection('daemon');\n\t\t\tp.set('daemon', 'start_on_boot', 'true');\n\n\t\t\tp.addSection('lethean-server');\n\t\t\tp.set('lethean-server', 'api_url', 'http://127.0.0.1:36911')\n\n\t\t\tawait this.fs.writeFile(\n\t\t\t\t'conf/app.ini',\n\t\t\t\tp.stringify('\\r\\n')\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tif (e === ConfigIniParser.Errors.ErrorDuplicateSectionError) {\n\t\t\t\tconsole.error('Duplicated section');\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t *\n\t * @param {string} section\n\t * @param {string} key\n\t * @param {string} defaultValue\n\t * @returns {any}\n\t */\n\tgetConfig(section: string, key: string, defaultValue: any = '') {\n\t\treturn AppConfigService.config.get(section, key, defaultValue)\n\t}\n\n\t/**\n\t *\n\t * @param {string} section\n\t * @param {string} key\n\t * @param {string} value\n\t */\n\tsetConfig(section: string, key: string, value: string) {\n\t\tAppConfigService.config.set(section, key, value)\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tsaveConfig() {\n\t\treturn this.fs.writeFile('conf/app.ini', AppConfigService.config.stringify())\n\t}\n\n\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\n\n\nHeaderInterceptor\n\nHeaderInterceptor\n\nAppModule -->\n\nHeaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            HeaderInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            ConsoleModule\n                        \n                        \n                            DataModule\n                        \n                        \n                            StatusModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {HTTP_INTERCEPTORS, HttpClient, HttpClientModule} from '@angular/common/http';\nimport {DataModule} from '@data/data.module';\nimport {StatusModule} from '@module/status/status.module';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {FlexModule} from '@angular/flex-layout';\nimport {AppComponent} from './app.component';\nimport {AppRoutingModule} from './app-routing.module';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {TranslateLoader, TranslateModule} from '@ngx-translate/core';\nimport {TranslateHttpLoader} from '@ngx-translate/http-loader';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {IconModule, NgxUIModule} from '@swimlane/ngx-ui';\nimport {ConsoleModule} from '@module/console/console.module';\nimport {JwtModule} from '@auth0/angular-jwt';\nimport {AuthService} from '@module/auth/auth.service';\nimport {HeaderInterceptor} from '@module/auth/auth.interceptor';\n\nexport function HttpLoaderFactory(http: HttpClient) {\n\treturn new TranslateHttpLoader(http);\n}\n\nexport function tokenGetter() {\n\treturn AuthService.token[\"access_token\"];\n}\n\n@NgModule({\n\tdeclarations: [AppComponent],\n\timports: [\n\t\tCommonModule,\n\t\tBrowserModule.withServerTransition({appId: 'lthn-data-sync'}),\n\t\tBrowserAnimationsModule,\n\t\tHttpClientModule,\n\t\tTranslateModule.forRoot({\n\t\t\tdefaultLanguage: 'en',\n\t\t\tloader: {\n\t\t\t\tprovide: TranslateLoader,\n\t\t\t\tuseFactory: HttpLoaderFactory,\n\t\t\t\tdeps: [HttpClient]\n\t\t\t}\n\t\t}),\n\t\tJwtModule.forRoot({\n\t\t\tconfig: {\n\t\t\t\ttokenGetter: tokenGetter,\n\t\t\t\tallowedDomains: [\"localhost:36911\", \"127.0.0.1:36911\"],\n\t\t\t},\n\t\t}),\n\t\tAppRoutingModule,\n\t\tDataModule,\n\t\tStatusModule,\n\t\tMatSidenavModule,\n\t\tMatIconModule,\n\t\tMatDividerModule,\n\t\tMatListModule,\n\t\tMatToolbarModule,\n\t\tMatMenuModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule,\n\t\tFlexModule,\n\t\tAuthModule,\n\t\tReactiveComponentModule,\n\t\tNgxUIModule,\n\t\tIconModule,\n\t\tConsoleModule\n\n\t],\n\tbootstrap: [AppComponent],\n\tproviders: [\n\t\t{ provide: HTTP_INTERCEPTORS, useClass: HeaderInterceptor, multi: true }\n\t]\n})\n/**\n * Application shell/bootstrap\n */\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            BlockchainRoutingModule\n                        \n                        \n                            RootRoutingModule\n                        \n                        \n                            UserRoutingModule\n                        \n                        \n                            WalletRoutingModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootRoutingModule} from '@module/root-routing.module';\nimport {LoginComponent} from '@module/auth/login.component';\nimport {BlockchainRoutingModule} from '@module/chain/blockchain-routing.module';\nimport {WalletRoutingModule} from '@module/wallet/wallet-routing.module';\nimport {UserRoutingModule} from '@module/user/user-routing.module';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'login',\n\t\tcomponent: LoginComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'Login - Lethean (LTHN)',\n\t\t\theading: 'Login',\n\t\t\tdescription: 'Lethean (LTHN) Login',\n\t\t\trobots: true\n\t\t}\n\t},\n\t{\n\t\tpath: \"\",\n\t\tredirectTo: 'dashboard',\n\t}\n];\n\n@NgModule({\n\timports: [\n\t\tRouterModule.forRoot(routes, { useHash: true, relativeLinkResolution: 'legacy', initialNavigation: 'enabledBlocking' }),\n\t\tBlockchainRoutingModule,\n\t\tUserRoutingModule,\n\t\t//SettingsRoutingModule,\n\t\tWalletRoutingModule,\n\t\t// Make sure Root is the last in the list, it has a catch all\n\t\tRootRoutingModule\n\t],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\n/**\n * Application routing bootstrap file, adds all routes as lazy loaded modules\n */\nexport class AppRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AppState.html":{"url":"interfaces/AppState.html","title":"interface - AppState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AppState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/reducers/index.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            chain\n                                        \n                                \n                                \n                                        \n                                            charts\n                                        \n                                \n                                \n                                        \n                                            logs\n                                        \n                                \n                                \n                                        \n                                            settings\n                                        \n                                \n                                \n                                        \n                                            user\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        chain\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        chain:     Chain.ChainState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Chain.ChainState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        charts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        charts:         Chart.ChartsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Chart.ChartsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:         Logs.LogsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Logs.LogsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        settings\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        settings:         Settings.SettingsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Settings.SettingsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        user\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        user:         User.UsersState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         User.UsersState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         Wallet.WalletsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Wallet.WalletsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {ActionReducer, ActionReducerMap, MetaReducer} from '@ngrx/store';\nimport {APP_CONFIG} from '@env/environment';\nimport * as Settings from '../../modules/settings/data';\nimport * as User from '../../modules/user/data/user';\nimport {localStorageSync} from 'ngrx-store-localstorage';\nimport * as Chart from '../../modules/chart/data';\nimport * as Wallet from '../../modules/wallet/data';\nimport * as Chain from '../../modules/chain/data';\nimport * as Logs from '../logs';\n\nexport interface AppState {\n\tsettings: Settings.SettingsState;\n\tcharts: Chart.ChartsState;\n\tuser: User.UsersState;\n\tlogs: Logs.LogsState;\n\twallets: Wallet.WalletsState;\n\tchain: Chain.ChainState\n}\n\nexport const reducers: ActionReducerMap = {\n\tsettings: Settings.reducer,\n\tcharts: Chart.reducer,\n\tuser: User.reducer,\n\tlogs: Logs.reducer,\n\twallets: Wallet.reducer,\n\tchain: Chain.reducer\n};\n\nexport function localStorageSyncReducer(\n\treducer: ActionReducer\n): ActionReducer {\n\treturn localStorageSync({\n\t\tkeys: [\n\t\t\t'settings',\n\t\t\t'wallets',\n\t\t\t{\n\t\t\t\tuser: {\n\t\t\t\t\tencrypt: (state: string) => btoa(state), // placeholder\n\t\t\t\t\tdecrypt: (state: string) => atob(state) // placeholder\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\trehydrate: true,\n\t\tremoveOnUndefined: true,\n\t\t//storage:  new WebStorageService()\n\t})(reducer);\n}\n\nexport const metaReducers: MetaReducer[] = !APP_CONFIG.production\n\t? []\n\t: [localStorageSyncReducer];\n\nexport const effects = [Chart.ChartsEffects, Settings.SettingsEffects, Wallet.WalletEffects ];\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/auth/route.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, authService: AuthService, fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/route.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                    \n                    canActivate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/route.guard.ts:35\n                \n            \n\n\n            \n                \n                    Handles logged out access\nRun during routing to check if the user is logged in or not, we do this check if\ngetAuthStatus() returns true, the username variable is set, to logout simply clear the username\nIf the user is not authenticated this function acts in one of two ways\n\nif ~/Lethean/users is empty perform first run / welcome\nif users do exsist, take to the /login page\n\nif APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\nyou may or may not have to login to develop, for now at least\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {CanActivate, Router} from '@angular/router';\nimport {AuthService} from './auth.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n\n\tconstructor(\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService,\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\n\t/**\n\t * Handles logged out access\n\t * Run during routing to check if the user is logged in or not, we do this check if\n\t * getAuthStatus() returns true, the username variable is set, to logout simply clear the username\n\t *\n\t * If the user is not authenticated this function acts in one of two ways\n\t *\n\t * 1) if ~/Lethean/users is empty perform first run / welcome\n\t * 2) if users do exsist, take to the /login page\n\t *\n\t * if APP_CONFIG.production === false auth check is bypassed, but without login decryption cant happen\n\t * you may or may not have to login to develop, for now at least\n\t *\n\t * @param {ActivatedRouteSnapshot} route\n\t * @param {RouterStateSnapshot} state\n\t * @returns {boolean | Promise}\n\t */\n\tasync canActivate(): Promise {\n\t\t//return true\n\t\tlet isAuthenticated = this.authService.getAuthStatus();\n\n\t\tif (!isAuthenticated) {\n\n\t\t\ttry {\n\t\t\t\tisAuthenticated = await this.fileSystem.listFiles('users').then(async (dat: any) => {\n\t\t\t\t\treturn dat.length > 0 && !dat.map((file: string) => file.endsWith('.lthn')).includes(true);\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tisAuthenticated = false\n\t\t\t}\n\n\t\t}\n\n\t\tif(!isAuthenticated){\n\t\t\tawait this.router.navigate(['/login']);\n\t\t}\n\n\t\treturn isAuthenticated;\n\t}\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAuthModule -->\n\nTranslateModule->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LoginComponent} from './login.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatButtonModule} from '@angular/material/button';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatIconModule} from '@angular/material/icon';\nimport {InputModule} from '@swimlane/ngx-ui';\n\n@NgModule({\n\tdeclarations: [LoginComponent],\n\texports: [\n\t\tLoginComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tReactiveFormsModule,\n\t\tMatInputModule,\n\t\tMatButtonModule,\n\t\tTranslateModule,\n\t\tMatIconModule,\n\t\tInputModule,\n\t\tFormsModule\n\t]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                id\n                            \n                            \n                                    Static\n                                token\n                            \n                            \n                                    Private\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthStatus\n                            \n                            \n                                getId\n                            \n                            \n                                getUser\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/auth.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthStatus\n                        \n                    \n                \n            \n            \n                \ngetAuthStatus()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:35\n                \n            \n\n\n            \n                \n                    User auth check is (this.user.length > 0) we only need to store how to access the data.\nPlease do not add identifiable data or anything here, data like that should live in the users encrypted\njson profiles.\nIf extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\nnot because it would just be easier to code\n\n\n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getId\n                        \n                    \n                \n            \n            \n                \ngetId()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:108\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:112\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(key, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:58\n                \n            \n\n\n            \n                \n                    Takes a username and password and tries to decrypt data files with a name id matching\nIt either works and that was the right password, or it does not and then it wont.\nWe are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\nso if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.service.ts:104\n                \n            \n\n\n            \n                \n                    Clear the user prop by setting to a empty string, making auth checks fail.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Static\n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\taccess_token: undefined,\n\t\trefresh_token: undefined\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/auth.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {CryptService} from '@service/crypt.service';\nimport {AppConfigService} from '@service/app-config.service';\nimport {NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class AuthService {\n\tprivate user = '';\n\tprivate id = '';\n\tpublic static token: { access_token: string, refresh_token: string } = {\n\t\taccess_token: undefined,\n\t\trefresh_token: undefined\n\t};\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate notificationService: NotificationService\n\t) {\nthis.getAuthStatus()\n\t}\n\n\t/**\n\t * User auth check is (this.user.length > 0) we only need to store how to access the data.\n\t *\n\t * Please do not add identifiable data or anything here, data like that should live in the users encrypted\n\t * json profiles.\n\t *\n\t * If extra data is required here, it should be kept to a min, not expose, not persist and only be for user benefit\n\t * not because it would just be easier to code\n\t *\n\t * @returns {boolean}\n\t */\n\tgetAuthStatus() {\n\t\tif (AuthService.token['access_token'] == undefined) {\n\t\t\tAuthService.token['access_token'] = sessionStorage.getItem('access_token')\n\t\t}\n\n\t\tif (AuthService.token['refresh_token'] == undefined) {\n\t\t\tAuthService.token['refresh_token'] = sessionStorage.getItem('refresh_token')\n\t\t}\n\t\treturn AuthService.token['access_token']?.length > 0\n\t}\n\n\t/**\n\t * Takes a username and password and tries to decrypt data files with a name id matching\n\t *\n\t * It either works and that was the right password, or it does not and then it wont.\n\t *\n\t * We are using OpenPGP so adding a backup key that can decrypt the current password, that we update using the public key.\n\t * so if the worst happens, they can decrypt using a HSM/encrypted file stored passwordless private key\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync login(key, password) {\n\n\t\ttry {\n\n\t\t\tlet privateKey = await this.cryptService.decryptPrivateKey(key, password);\n\t\t\tif (privateKey) {\n\n\t\t\t\t//console.log(privateKey.getUserIDs())\n\t\t\t\tconst msg = await this.cryptService.encryptPublic(await this.cryptService.sign(`{\"id\":\"${privateKey.getUserIDs()[0]}\"}`, privateKey), AppConfigService.serverPublicKey)\n\t\t\t\t\t.then((res) => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t\treturn btoa(res.toString())\n\t\t\t\t\t});\n\n\t\t\t\treturn fetch(AppConfigService.apiUrl + '/auth/login', {\n\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t\t},\n\t\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\t\tpayload: msg\n\t\t\t\t\t})\n\t\t\t\t}).then((res) => res.json())\n\t\t\t\t\t.then(async res => {\n\t\t\t\t\t\tconsole.log(res)\n\t\t\t\t\t\tif (res['result'] == false) {\n\t\t\t\t\t\t\tthis.notificationService.create({type: NotificationType.html, styleType: NotificationStyleType.error, body: 'Failed to login'});\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tAuthService.token = JSON.parse(await this.cryptService.decryptPGP(atob(res['result']), privateKey))\n\n\t\t\t\t\t\t\tsessionStorage.setItem('access_token', AuthService.token['access_token']);\n\t\t\t\t\t\t\tsessionStorage.setItem('refresh_token', AuthService.token['refresh_token']);\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t});\n\t\t\t}\n\t\t} catch(e){ console.log(e)}\n\t\treturn false;\n\t}\n\n\t/**\n\t * Clear the user prop by setting to a empty string, making auth checks fail.\n\t */\n\tlogout() {\n\t\tthis.user = '';\n\t}\n\n\tgetId(){\n\t\treturn this.id;\n\t}\n\n\tgetUser(){\n\t\treturn this.user;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Balance.html":{"url":"interfaces/Balance.html","title":"interface - Balance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Balance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/balance.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            balance\n                                        \n                                \n                                \n                                        \n                                            unlocked_balance\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlocked_balance\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlocked_balance:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Balance {\n\tbalance: number; // - unsigned int; The total balance of the current monero-wallet-rpc in session.\n\tunlocked_balance: number; // - unsigned int; Unlocked funds are those funds that are sufficiently deep enough in the Monero blockchain to be considered safe to spend.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BaseChartConfigService.html":{"url":"injectables/BaseChartConfigService.html","title":"injectable - BaseChartConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BaseChartConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/base-chart-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                options\n                            \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addOptions\n                            \n                            \n                                configureOptions\n                            \n                            \n                                setupCallbacks\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:50\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/base-chart-config.service.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: []\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/base-chart-config.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class BaseChartConfigService {\n\tpublic key = '';\n\tpublic type = '';\n\tpublic data: any = {\n\t\tdatasets: []\n\t};\n\tpublic options = {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t};\n\n\tconstructor() {\n\t\tthis.configureOptions();\n\t\tthis.setupCallbacks();\n\t}\n\n\tsetupCallbacks() {}\n\n\tconfigureOptions() {}\n\n\taddOptions(overrides: object) {\n\t\tthis.options = { ...this.options, ...overrides };\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockDetailsComponent.html":{"url":"components/BlockDetailsComponent.html","title":"component - BlockDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/block/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain-block-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                block\n                            \n                            \n                                blockData\n                            \n                            \n                                blockID\n                            \n                            \n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/block/details.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        id\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chain/components/block/details.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/details.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/details.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        block\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockHeader\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/details.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from 'rxjs';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {BlockHeader} from '@module/chain/interfaces/types/blockHeader';\n\n@Component({\n\tselector: 'lthn-chain-block-details',\n\ttemplateUrl: './details.component.html'\n})\nexport class BlockDetailsComponent implements OnInit, OnDestroy {\n\n\tblockID: string;\n\tsub: Subscription;\n\tblock: BlockHeader;\n\tblockData: any;\n\t@Input() id: string = '';\n\n\n\tconstructor(private chain: BlockchainService) {\n\t}\n\n\tasync ngOnInit() {\n\n\t\tif (this.id.length > 0) {\n\t\t\tconst data = await this.chain.getBlock(this.id);\n\t\t\tthis.block = data['block_header'];\n\t\t\tthis.blockData = JSON.parse(data['json']);\n\t\t\tconsole.log(this.blockData);\n\t\t}\n\n\t}\n\n\n\tngOnDestroy(): void {\n\t\tthis.sub.unsubscribe();\n\t}\n\n}\n\n    \n\n    \n        \n    \n        \n            {{'app.lthn.chain.words.hash' | translate}}: {{ id }}\n            {{'app.lthn.chain.words.block_size' | translate}}: {{ block.block_size }}\n            {{'app.lthn.chain.words.depth' | translate}}: {{ block.depth }}\n            {{'app.lthn.chain.words.difficulty' | translate}}: {{ block.difficulty }}\n            {{'app.lthn.chain.words.height' | translate}}: {{ block.height }}\n            {{'app.lthn.chain.words.major_version' | translate}}: {{ block.major_version}}\n            {{'app.lthn.chain.words.minor_version' | translate}}: {{ block.minor_version}}\n            {{'app.lthn.chain.words.nonce' | translate}}: {{ block.nonce}}\n            {{'app.lthn.chain.words.tx_count' | translate}}: {{ block.num_txes}}\n            {{'app.lthn.chain.words.orphan_status' | translate}}: {{ block.orphan_status }}\n            {{'app.lthn.chain.words.timestamp' | translate}}: {{ block.timestamp  | amFromUnix }}\n            {{'app.lthn.chain.words.reward' | translate}}: {{ block.reward |toCoin }}\n            Previous block: {{ block.prev_hash }}-->\n        \n    \n    \n        \n            {{'app.lthn.chain.desc.no_transactions' | translate}}\n            \n                {{'app.lthn.chain.words.miner_transaction' | translate}}\n                \n                \n                    {{'words.things.type' | translate}}\n                    {{'app.lthn.chain.words.hash' | translate}}\n                    {{'app.lthn.chain.words.reward' | translate}}\n                    {{'app.lthn.chain.words.unlock_time' | translate}}\n                \n                \n                \n                \n                    Block Miner Reward\n                    {{ blockData['miner_tx']['vout'][0]['target']['key'] }}\n                    {{ blockData['miner_tx']['vout'][0]['amount'] | toCoin }}\n                    {{ blockData['miner_tx']['unlock_time'] }}\n                \n                \n\n            \n\n            Block Transactions\n            \n                Included Transactions\n                \n                \n                    Tx {{'app.lthn.chain.words.hash' | translate}}\n                \n                \n                \n                \n                    {{ tx }}\n                \n                \n\n            \n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{\\'app.lthn.chain.words.hash\\' | translate}}: {{ id }}            {{\\'app.lthn.chain.words.block_size\\' | translate}}: {{ block.block_size }}            {{\\'app.lthn.chain.words.depth\\' | translate}}: {{ block.depth }}            {{\\'app.lthn.chain.words.difficulty\\' | translate}}: {{ block.difficulty }}            {{\\'app.lthn.chain.words.height\\' | translate}}: {{ block.height }}            {{\\'app.lthn.chain.words.major_version\\' | translate}}: {{ block.major_version}}            {{\\'app.lthn.chain.words.minor_version\\' | translate}}: {{ block.minor_version}}            {{\\'app.lthn.chain.words.nonce\\' | translate}}: {{ block.nonce}}            {{\\'app.lthn.chain.words.tx_count\\' | translate}}: {{ block.num_txes}}            {{\\'app.lthn.chain.words.orphan_status\\' | translate}}: {{ block.orphan_status }}            {{\\'app.lthn.chain.words.timestamp\\' | translate}}: {{ block.timestamp  | amFromUnix }}            {{\\'app.lthn.chain.words.reward\\' | translate}}: {{ block.reward |toCoin }}            Previous block: {{ block.prev_hash }}-->                                    {{\\'app.lthn.chain.desc.no_transactions\\' | translate}}                            {{\\'app.lthn.chain.words.miner_transaction\\' | translate}}                                                    {{\\'words.things.type\\' | translate}}                    {{\\'app.lthn.chain.words.hash\\' | translate}}                    {{\\'app.lthn.chain.words.reward\\' | translate}}                    {{\\'app.lthn.chain.words.unlock_time\\' | translate}}                                                                                    Block Miner Reward                    {{ blockData[\\'miner_tx\\'][\\'vout\\'][0][\\'target\\'][\\'key\\'] }}                    {{ blockData[\\'miner_tx\\'][\\'vout\\'][0][\\'amount\\'] | toCoin }}                    {{ blockData[\\'miner_tx\\'][\\'unlock_time\\'] }}                                                        Block Transactions                            Included Transactions                                                    Tx {{\\'app.lthn.chain.words.hash\\' | translate}}                                                                                    {{ tx }}                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/BlockHeader.html":{"url":"interfaces/BlockHeader.html","title":"interface - BlockHeader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  BlockHeader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/interfaces/types/blockHeader.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            block_size\n                                        \n                                \n                                \n                                        \n                                            depth\n                                        \n                                \n                                \n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                        \n                                            hash\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            major_version\n                                        \n                                \n                                \n                                        \n                                            minor_version\n                                        \n                                \n                                \n                                        \n                                            nonce\n                                        \n                                \n                                \n                                        \n                                            num_txes\n                                        \n                                \n                                \n                                        \n                                            orphan_status\n                                        \n                                \n                                \n                                        \n                                            prev_hash\n                                        \n                                \n                                \n                                        \n                                            reward\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        block_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        depth\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        depth:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        major_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        major_version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minor_version\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minor_version:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nonce\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nonce:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        num_txes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        num_txes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        orphan_status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        orphan_status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        prev_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        prev_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        reward\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        reward:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface BlockHeader {\n\tblock_size: number;\n\tdepth: number;\n\tdifficulty: number;\n\thash: string;\n\theight: number;\n\tmajor_version: number;\n\tminor_version: number;\n\tnonce: number;\n\tnum_txes: number;\n\torphan_status: boolean;\n\tprev_hash: string;\n\treward: number;\n\ttimestamp: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockLedgerComponent.html":{"url":"components/BlockLedgerComponent.html","title":"component - BlockLedgerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockLedgerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/block/ledger.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                                ChartService\n                \n            \n\n\n            \n                selector\n                lthn-chain-ledger\n            \n\n\n\n\n            \n                templateUrl\n                ./ledger.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                allColumns\n                            \n                            \n                                blocks\n                            \n                            \n                                blockSearch\n                            \n                            \n                                chainInfo\n                            \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                editTmpl\n                            \n                            \n                                page\n                            \n                            \n                                status_daemon\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getBlocks\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                openDrawer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService, drawerService: DrawerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        drawerService\n                                                  \n                                                        \n                                                                    DrawerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:89\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:97\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDrawer\n                        \n                    \n                \n            \n            \n                \nopenDrawer(id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/block/ledger.component.ts:100\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        allColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{prop: 'height', name: 'app.lthn.chain.words.height', default: true},\n\t\t{prop: 'difficulty', name: 'app.lthn.chain.words.difficulty', default: true},\n\t\t{prop: 'hash', name: 'app.lthn.chain.words.hash', default: true},\n\t\t{prop: 'orphan_status', name: 'app.lthn.chain.words.orphan_status', default: true},\n\t\t//{ prop: 'reward', name: 'app.lthn.chain.table.th.reward', default: true },\n\t\t{prop: 'timestamp', name: 'app.lthn.chain.words.timestamp', default: true},\n\t\t//\t{ prop: 'block_size', name: 'Block Size', default: true },\n\t\t//{ prop: 'depth', name: 'app.lthn.chain.table.th.depth', default: true },\n\t\t//{ prop: 'major_version', name: 'Block Major Version', default: true },\n\t\t//\t{ prop: 'minor_version', name: 'Block Minor Version', default: false },\n\t\t//\t{ prop: 'nonce', name: 'Block Nonce', default: false },\n\t\t\t{ prop: 'num_txes', name: 'app.lthn.chain.words.tx_count', default: true },\n\t\t//\t{ prop: 'prev_hash', name: 'Last Hash', default: true },\n\t]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockHeader[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:49\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editTmpl\n                        \n                    \n                \n            \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('editTmpl', {static: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tsize: 25,\n\t\ttotalElements: 0,\n\t\ttotalPages: 0,\n\t\tpageNumber: 0\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:48\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/block/ledger.component.ts:46\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {ChartService} from '@module/chart/chart.service';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {interval, Subscription} from 'rxjs';\nimport {BlockHeader} from '@module/chain/interfaces/types/blockHeader';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {FormControl, Validators} from '@angular/forms';\nimport {DrawerDirection, DrawerService} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-chain-ledger',\n\ttemplateUrl: './ledger.component.html',\n\tproviders: [ChartService]\n})\nexport class BlockLedgerComponent implements OnInit, OnDestroy {\n\n\tcolumns: any = [];\n\n\tpage = {\n\t\tsize: 25,\n\t\ttotalElements: 0,\n\t\ttotalPages: 0,\n\t\tpageNumber: 0\n\t};\n\n\tallColumns = [\n\t\t{prop: 'height', name: 'app.lthn.chain.words.height', default: true},\n\t\t{prop: 'difficulty', name: 'app.lthn.chain.words.difficulty', default: true},\n\t\t{prop: 'hash', name: 'app.lthn.chain.words.hash', default: true},\n\t\t{prop: 'orphan_status', name: 'app.lthn.chain.words.orphan_status', default: true},\n\t\t//{ prop: 'reward', name: 'app.lthn.chain.table.th.reward', default: true },\n\t\t{prop: 'timestamp', name: 'app.lthn.chain.words.timestamp', default: true},\n\t\t//\t{ prop: 'block_size', name: 'Block Size', default: true },\n\t\t//{ prop: 'depth', name: 'app.lthn.chain.table.th.depth', default: true },\n\t\t//{ prop: 'major_version', name: 'Block Major Version', default: true },\n\t\t//\t{ prop: 'minor_version', name: 'Block Minor Version', default: false },\n\t\t//\t{ prop: 'nonce', name: 'Block Nonce', default: false },\n\t\t\t{ prop: 'num_txes', name: 'app.lthn.chain.words.tx_count', default: true },\n\t\t//\t{ prop: 'prev_hash', name: 'Last Hash', default: true },\n\t];\n\tColumnMode = ColumnMode;\n\tblocks: BlockHeader[] ;\n\tchainInfo: ChainGetInfo;\n\t@ViewChild('editTmpl', { static: false }) editTmpl: TemplateRef;\n\tprivate sub: Subscription[] = [];\n\n\tstatus_daemon: number = 0;\n\tblockSearch: FormControl;\n\n\tconstructor(\n\t\tprivate chain: BlockchainService,\n\t\tprivate drawerService: DrawerService) {\n\n\t\tthis.allColumns.forEach((col) => {\n\t\t\tif (col.default) {\n\n\t\t\t\tthis.columns.push(\n\t\t\t\t\tcol\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\t}\n\n\n\tasync ngOnInit() {\n\t\tthis.blockSearch = new FormControl('', [Validators.required]);\n\n\t\t//this.chain.getInfo()\n\t\tthis.chainInfo = await this.chain.getInfo();\n\t\tif (this.chainInfo) {\n\t\t\t// we have chain data, and it talks to us set to amber\n\t\t\tthis.status_daemon = 1;\n\t\t\t//console.log(data)\n\t\t\t// if chain height + 4 to give 2~ blocks to be considered healthy\n\t\t\tif (this.chainInfo.height + 4 > this.chainInfo.target_height) {\n\t\t\t\tthis.status_daemon = 2;\n\t\t\t}\n\t\t\tthis.page.totalElements = this.chainInfo.height\n\t\t} else {\n\t\t\tthis.status_daemon = 0;\n\t\t}\n\t\tawait this.getBlocks()\n\n\t\tthis.sub['interval'] = interval(5000).subscribe(async () => this.chainInfo = await this.chain.getInfo());\n\n\t}\n\n\tasync getBlocks() {\n\t\tlet start_height = this.page.totalElements - this.page.pageNumber * this.page.size - 1\n\t\tlet end_height = this.page.totalElements - this.page.size - this.page.pageNumber * this.page.size\n\n\t\tthis.blocks = await this.chain.getBlocks(Math.max(0, end_height), Math.max(0, start_height));\n\t}\n\n\n\tpublic ngOnDestroy() {\n\t\tthis.sub.forEach((s) => s.unsubscribe());\n\t}\n\topenDrawer(id) {\n\t\tthis.drawerService.create({\n\t\t\tdirection: DrawerDirection.Left,\n\t\t\ttemplate: this.editTmpl,\n\t\t\tcloseOnOutsideClick: true,\n\t\t\tcontext: { id}\n\n\t\t});\n\t}\n\n}\n\n    \n\n    \n        \n\n\n    \n\n        \n            {{ value | hashrate}}\n            {{ value | number }}\n            {{ value | hashLink }}-->\n            {{ value | hashLink }}\n            \n                                done\n                                close\n                              \n            {{ value | amFromUnix }}\n            {{ value | number }}\n            {{ value | number }}\n            {{ value  }}\n            {{ value | number }}\n            {{ value  }}\n            {{ value | number }}\n            {{ value }}\n        \n\n    \n\n    \n        \n        \n        \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        {{ value | hashrate}}            {{ value | number }}            {{ value | hashLink }}-->            {{ value | hashLink }}                                            done                                close                                          {{ value | amFromUnix }}            {{ value | number }}            {{ value | number }}            {{ value  }}            {{ value | number }}            {{ value  }}            {{ value | number }}            {{ value }}                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockLedgerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainComponent.html":{"url":"components/BlockchainComponent.html","title":"component - BlockchainComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/blockchain.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain\n            \n\n\n\n\n            \n                templateUrl\n                ./blockchain.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                blocks\n                            \n                            \n                                blockSearch\n                            \n                            \n                                buildType\n                            \n                            \n                                    Public\n                                chain\n                            \n                            \n                                chainInfo\n                            \n                            \n                                end_height\n                            \n                            \n                                recentTxs\n                            \n                            \n                                start_height\n                            \n                            \n                                status_daemon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/blockchain.component.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        blocks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockHeader[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        blockSearch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        buildType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        end_height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recentTxs\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        start_height\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {BlockHeader} from '@module/chain/interfaces/types/blockHeader';\nimport {FormControl} from '@angular/forms';\nimport {BlockchainService} from '@module/chain/blockchain.service';\n\n@Component({\n\tselector: 'lthn-chain',\n\ttemplateUrl: './blockchain.component.html'\n})\nexport class BlockchainComponent {\n\n\tblocks: BlockHeader[];\n\tchainInfo: ChainGetInfo;\n\n\trecentTxs: any;\n\tbuildType: string;\n\tstatus_daemon: number = 0;\n\tblockSearch: FormControl;\n\tstart_height: number = null;\n\tend_height: number = null;\n\n\tconstructor(public chain: BlockchainService) {\n\n\n\t}\n\n\n\tasync ngOnInit() {\n\n\t}\n\n\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{ 'app.lthn.chain.title' | translate }}\n                &nbsp;\n                     0\" style=\"font-family: monospace; font-size: 12px;\">\n                    ({{info.height | number }}/{{info.target_height | number}} = {{ (info.height/info.target_height) | percent:'1.2-3' }})\n                \n                    \n                    Synchronized\n                \n                \n                \n                -->\n                account_balance_wallet-->\n                -->\n                -->\n                cloud_download-->\n                -->\n                -->\n                cloud_upload-->\n                -->\n-->\nclose-->\n-->\n            \n        \n\n\n        \n            \n                \n                    \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n                \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{ \\'app.lthn.chain.title\\' | translate }}                                      0\" style=\"font-family: monospace; font-size: 12px;\">                    ({{info.height | number }}/{{info.target_height | number}} = {{ (info.height/info.target_height) | percent:\\'1.2-3\\' }})                                                        Synchronized                                                                -->                account_balance_wallet-->                -->                -->                cloud_download-->                -->                -->                cloud_upload-->                -->-->close-->-->                                                                                                                                                                                                                                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainConfigComponent.html":{"url":"components/BlockchainConfigComponent.html","title":"component - BlockchainConfigComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainConfigComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/config.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain-config\n            \n\n\n\n\n            \n                templateUrl\n                ./config.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chain\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                load\n                            \n                            \n                                    Async\n                                save\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService, fs: FileSystemService, notify: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/config.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notify\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        load\n                        \n                    \n                \n            \n            \n                \n                    \n                    load()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/config.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        save\n                        \n                    \n                \n            \n            \n                \n                    \n                    save()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/components/config.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/config.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/config.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {BlockchainService} from '@module/chain/blockchain.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\nimport 'codemirror/mode/properties/properties.js';\n@Component({\n\tselector: 'lthn-chain-config',\n\ttemplateUrl: './config.component.html'\n})\nexport class BlockchainConfigComponent {\n\n\tpublic config = ''\n\n\tconstructor(public chain: BlockchainService, private fs: FileSystemService, private notify: NotificationService) {\n\t\tthis.load().then(() => console.log('loaded'));\n\t}\n\n\tasync save() {\n\t\tawait this.fs.writeFile('conf/letheand.conf', this.config)\n\t\tthis.notify.create({\n\t\t\ttype: NotificationType.html,\n\t\t\tstyleType: NotificationStyleType.success,\n\t\t\ttitle: 'Saved Config File'\n\t\t})\n\t}\n\n\tasync load() {\n\t\tthis.config = await this.fs.readFile('conf/letheand.conf')\n\t}\n\n}\n\n    \n\n    \n        \n    \n    {{ 'words.actions.save' | translate}}\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{ \\'words.actions.save\\' | translate}}'\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainConfigComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainModule.html":{"url":"modules/BlockchainModule.html","title":"module - BlockchainModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_exports\n\n\n\n\nBlockDetailsComponent\n\nBlockDetailsComponent\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nBlockDetailsComponent->BlockchainModule\n\n\n\n\n\nBlockLedgerComponent\n\nBlockLedgerComponent\n\nBlockchainModule -->\n\nBlockLedgerComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nBlockchainConfigComponent\n\nBlockchainConfigComponent\n\nBlockchainModule -->\n\nBlockchainConfigComponent->BlockchainModule\n\n\n\n\n\nBlockchainStatsComponent\n\nBlockchainStatsComponent\n\nBlockchainModule -->\n\nBlockchainStatsComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent \n\nBlockchainComponent \n\nBlockchainComponent  -->\n\nBlockchainModule->BlockchainComponent \n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chain/blockchain.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            BlockDetailsComponent\n                        \n                        \n                            BlockLedgerComponent\n                        \n                        \n                            BlockchainComponent\n                        \n                        \n                            BlockchainConfigComponent\n                        \n                        \n                            BlockchainStatsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ChartModule\n                        \n                        \n                            TranslateModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            BlockchainComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BlockchainComponent} from 'src/app/modules/chain/blockchain.component';\nimport {ChartModule} from '@module/chart/chart.module';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {HashRatePipe} from '@pipe/crypto/hashrate.pipe';\nimport {MomentModule} from 'ngx-moment';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {RouterModule} from \"@angular/router\";\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {ButtonModule, CodeEditorModule, SectionModule, TabsModule, ToolbarModule} from '@swimlane/ngx-ui';\nimport {BlockDetailsComponent} from '@module/chain/components/block/details.component';\nimport {BlockLedgerComponent} from '@module/chain/components/block/ledger.component';\nimport { BlockchainStatsComponent} from '@module/chain/components/stats.component';\nimport {BlockchainConfigComponent} from '@module/chain/components/config.component';\n\n@NgModule({\n\tdeclarations: [BlockchainComponent, BlockDetailsComponent, BlockLedgerComponent, BlockchainStatsComponent, BlockchainConfigComponent],\n\timports: [\n\t\tCommonModule,\n\t\tChartModule,\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tTranslateModule,\n\t\tNgxDatatableModule,\n\t\tReactiveComponentModule,\n\t\tPipesModule,\n\t\tMatIconModule,\n\t\tMatToolbarModule,\n\t\tMatTooltipModule,\n\t\tMatMenuModule,\n\t\tMomentModule,\n\t\tMatProgressBarModule,\n\t\tRouterModule,\n\t\tMatFormFieldModule,\n\t\tMatInputModule,\n\t\tReactiveFormsModule,\n\t\tSectionModule,\n\t\tToolbarModule,\n\t\tTabsModule,\n\t\tCodeEditorModule,\n\t\tFormsModule,\n\t\tButtonModule\n\t],\n\texports: [ BlockchainComponent],\n\tproviders: [HashRatePipe]\n})\nexport class BlockchainModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BlockchainRoutingModule.html":{"url":"modules/BlockchainRoutingModule.html","title":"module - BlockchainRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    BlockchainRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chain/blockchain-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {BlockchainComponent} from '@module/chain/blockchain.component';\nimport {BlockDetailsComponent} from \"@module/chain/components/block/details.component\";\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'chain/block/:id',\n\t\tcomponent: BlockDetailsComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'chain',\n\t\tcomponent: BlockchainComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.chain.title',\n\t\t\theading: 'view.chain.heading',\n\t\t\tdescription: 'view.chain.description',\n\t\t\trobots: false\n\t\t}\n\t}\n\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class BlockchainRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BlockchainService.html":{"url":"injectables/BlockchainService.html","title":"injectable - BlockchainService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BlockchainService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/blockchain.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chainInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                chainRpc\n                            \n                            \n                                exportChain\n                            \n                            \n                                    Async\n                                getBlock\n                            \n                            \n                                    Async\n                                getBlocks\n                            \n                            \n                                    Async\n                                getInfo\n                            \n                            \n                                    Async\n                                getTransactions\n                            \n                            \n                                importChain\n                            \n                            \n                                startDaemon\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/blockchain.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        chainRpc\n                        \n                    \n                \n            \n            \n                \nchainRpc(method: string, params: any, url: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    params\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        ''\n                                    \n\n                                \n                                \n                                    url\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        'json_rpc'\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exportChain\n                        \n                    \n                \n            \n            \n                \nexportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:35\n                \n            \n\n\n            \n                \n                    Export chain to a raw format\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBlock\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlock(block_id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    block_id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getBlocks\n                        \n                    \n                \n            \n            \n                \n                    \n                    getBlocks(start_height: number, end_height: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    start_height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    end_height\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:86\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransactions(txsHashes: string[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    txsHashes\n                                    \n                                            string[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        importChain\n                        \n                    \n                \n            \n            \n                \nimportChain()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:56\n                \n            \n\n\n            \n                \n                    Import raw chain data file\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startDaemon\n                        \n                    \n                \n            \n            \n                \nstartDaemon()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chain/blockchain.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/blockchain.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {AuthService} from '@module/auth/auth.service';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BlockchainService {\n    public chainInfo: any;\n    constructor(private http: HttpClient) {\n    }\n\n    startDaemon() {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            responseType: 'text' as 'json',\n        };\n        return this.http\n            .post(\n                `http://127.0.0.1:36911/daemon/chain/start`,\n                {\"configFile\":\"letheand.conf\"},\n                options\n            )\n            .toPromise()\n            .then((dat) => console.log(dat));\n    }\n\n    /**\n     * Export chain to a raw format\n     *\n     */\n    exportChain() {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            responseType: 'text' as 'json'\n        };\n        return this.http\n            .post(\n                `http://127.0.0.1:36911/daemon/chain/export`,\n                {},\n                options\n            )\n            .toPromise()\n            .then((dat) => console.log(dat));\n    }\n\n    /**\n     * Import raw chain data file\n     *\n     */\n    importChain() {\n        const options = {\n            headers: new HttpHeaders({\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }),\n            responseType: 'text' as 'json'\n        };\n        return this.http\n            .post(\n                `http://127.0.0.1:36911/daemon/chain/import`,\n                {},\n                options\n            )\n            .toPromise()\n            .then((dat) => console.log(dat));\n    }\n\n    chainRpc(method: string, params: any = '', url: string = 'json_rpc') {\n        return fetch(`http://127.0.0.1:36911/daemon/chain/${url}`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization':  AuthService.token.access_token\n            },\n            body: JSON.stringify(rpcBody(method)(params))\n        })\n            .then(res => res.json())\n            .then(res => res.result)\n    }\n\n    async getInfo() {\n        return this.chainInfo = await this.chainRpc('get_info')\n    }\n\n    async getTransactions(txsHashes: string[]) {\n\n        return await this.chainRpc('gettransactions', {txs_hashes: txsHashes});\n    }\n\n\n    async getBlock(block_id: string) {\n\n        return await this.chainRpc('getblock', {hash: block_id})\n    }\n\n    async getBlocks(start_height: number, end_height: number) {\n\n        return await this.chainRpc('getblockheadersrange', {\n            start_height: start_height,\n            end_height: end_height\n        })\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/BlockchainStatsComponent.html":{"url":"components/BlockchainStatsComponent.html","title":"component - BlockchainStatsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  BlockchainStatsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/chain/components/stats.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-chain-stats\n            \n\n\n\n\n            \n                templateUrl\n                ./stats.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                chain\n                            \n                            \n                                chainInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chain/components/stats.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        chain\n                        \n                    \n                \n            \n                \n                    \n                        Type :         BlockchainService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/stats.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chain/components/stats.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {BlockchainService} from '@module/chain/blockchain.service';\n\n@Component({\n\tselector: 'lthn-chain-stats',\n\ttemplateUrl: './stats.component.html'\n})\nexport class BlockchainStatsComponent {\n\n\n\tchainInfo: ChainGetInfo;\n\n\tconstructor(public chain: BlockchainService) {}\n\n}\n\n    \n\n    \n        \n    \n    \n        {{ 'app.lthn.chain.words.chain_stat' | translate}}\n        {{ 'app.lthn.chain.words.chain_stat_value' | translate}}\n    \n    \n    \n    \n        {{ 'app.lthn.chain.words.status' | translate}}\n        {{ info.status }}\n    \n    \n        {{ 'app.lthn.chain.words.height' | translate}}\n        {{ info.height | number }}\n    \n    \n        {{ 'app.lthn.chain.words.start_time' | translate}}\n        {{info.start_time * 1000 | amTimeAgo }}\n    \n    \n        {{ 'app.lthn.chain.words.target_height' | translate}}\n        {{info.target_height }}\n    \n    \n        {{ 'app.lthn.chain.words.top_height' | translate}}\n        \n    \n    \n        {{ 'app.lthn.chain.words.white_peerlist_size' | translate}}\n        {{info.white_peerlist_size }}\n    \n    \n        {{ 'app.lthn.chain.words.grey_peerlist_size' | translate}}\n        {{info.grey_peerlist_size }}\n    \n    \n        {{ 'app.lthn.chain.words.difficulty' | translate}}\n        {{info.difficulty | hashrate }}\n    \n    \n        {{ 'app.lthn.chain.words.cumulative_difficulty' | translate}}\n        {{info.cumulative_difficulty | hashrate }}\n    \n    \n        {{ 'app.lthn.chain.words.incoming_connections_count' | translate}}\n        {{info.incoming_connections_count }}\n    \n    \n        {{ 'app.lthn.chain.words.tx_count' | translate}}\n        {{info.tx_count }}\n    \n    \n        {{ 'app.lthn.chain.words.tx_pool_size' | translate}}\n        {{info.tx_pool_size }}\n    \n    \n        {{ 'app.lthn.chain.words.testnet' | translate}}\n        {{info.testnet }}\n    \n    \n        {{ 'app.lthn.chain.words.outgoing_connections_count' | translate}}\n        {{info.outgoing_connections_count }}\n    \n    \n        {{ 'app.lthn.chain.words.target' | translate}}\n        {{info.target }}\n    \n    \n        {{ 'app.lthn.chain.words.alt_blocks_count' | translate}}\n        {{info.alt_blocks_count }}\n    \n    \n        {{ 'app.lthn.chain.words.block_size_limit' | translate}}\n        {{info.block_size_limit }}\n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ \\'app.lthn.chain.words.chain_stat\\' | translate}}        {{ \\'app.lthn.chain.words.chain_stat_value\\' | translate}}                        {{ \\'app.lthn.chain.words.status\\' | translate}}        {{ info.status }}                {{ \\'app.lthn.chain.words.height\\' | translate}}        {{ info.height | number }}                {{ \\'app.lthn.chain.words.start_time\\' | translate}}        {{info.start_time * 1000 | amTimeAgo }}                {{ \\'app.lthn.chain.words.target_height\\' | translate}}        {{info.target_height }}                {{ \\'app.lthn.chain.words.top_height\\' | translate}}                        {{ \\'app.lthn.chain.words.white_peerlist_size\\' | translate}}        {{info.white_peerlist_size }}                {{ \\'app.lthn.chain.words.grey_peerlist_size\\' | translate}}        {{info.grey_peerlist_size }}                {{ \\'app.lthn.chain.words.difficulty\\' | translate}}        {{info.difficulty | hashrate }}                {{ \\'app.lthn.chain.words.cumulative_difficulty\\' | translate}}        {{info.cumulative_difficulty | hashrate }}                {{ \\'app.lthn.chain.words.incoming_connections_count\\' | translate}}        {{info.incoming_connections_count }}                {{ \\'app.lthn.chain.words.tx_count\\' | translate}}        {{info.tx_count }}                {{ \\'app.lthn.chain.words.tx_pool_size\\' | translate}}        {{info.tx_pool_size }}                {{ \\'app.lthn.chain.words.testnet\\' | translate}}        {{info.testnet }}                {{ \\'app.lthn.chain.words.outgoing_connections_count\\' | translate}}        {{info.outgoing_connections_count }}                {{ \\'app.lthn.chain.words.target\\' | translate}}        {{info.target }}                {{ \\'app.lthn.chain.words.alt_blocks_count\\' | translate}}        {{info.alt_blocks_count }}                {{ \\'app.lthn.chain.words.block_size_limit\\' | translate}}        {{info.block_size_limit }}        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'BlockchainStatsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChainGetInfo.html":{"url":"interfaces/ChainGetInfo.html","title":"interface - ChainGetInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChainGetInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/interfaces/props/get_info.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alt_blocks_count\n                                        \n                                \n                                \n                                        \n                                            block_size_limit\n                                        \n                                \n                                \n                                        \n                                            cumulative_difficulty\n                                        \n                                \n                                \n                                        \n                                            difficulty\n                                        \n                                \n                                \n                                        \n                                            grey_peerlist_size\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            incoming_connections_count\n                                        \n                                \n                                \n                                        \n                                            outgoing_connections_count\n                                        \n                                \n                                \n                                        \n                                            start_time\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                        \n                                            target\n                                        \n                                \n                                \n                                        \n                                            target_height\n                                        \n                                \n                                \n                                        \n                                            testnet\n                                        \n                                \n                                \n                                        \n                                            top_block_hash\n                                        \n                                \n                                \n                                        \n                                            tx_count\n                                        \n                                \n                                \n                                        \n                                            tx_pool_size\n                                        \n                                \n                                \n                                        \n                                            white_peerlist_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alt_blocks_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alt_blocks_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_size_limit\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_size_limit:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cumulative_difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cumulative_difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        difficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        difficulty:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        grey_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        grey_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        incoming_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        incoming_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        outgoing_connections_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        outgoing_connections_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        start_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        start_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        target_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        target_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        testnet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        testnet:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        top_block_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        top_block_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_count\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_count:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_pool_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_pool_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        white_peerlist_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        white_peerlist_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChainGetInfo {\n\talt_blocks_count: number;\n\tdifficulty: number;\n\tgrey_peerlist_size: number;\n\theight: number;\n\tincoming_connections_count: number;\n\toutgoing_connections_count: number;\n\tstatus: string;\n\ttarget: number;\n\ttarget_height: number;\n\ttestnet: boolean;\n\ttop_block_hash: string;\n\ttx_count: number;\n\ttx_pool_size: number;\n\twhite_peerlist_size: number;\n\tstart_time: number;\n\tcumulative_difficulty: number;\n\tblock_size_limit: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartConfigInterface.html":{"url":"interfaces/ChartConfigInterface.html","title":"interface - ChartConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            key\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        dataMap\n                                    \n                                \n                                \n                                    \n                                        setupCallbacks\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data: any, i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart-config.interface.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         object\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartConfigInterface {\n\tkey: string;\n\ttype: string;\n\tdata: object;\n\toptions: object;\n\n\tsetupCallbacks(): void;\n\n\tdataMap(data: any, i: number): any;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartDifficulty.html":{"url":"interfaces/ChartDifficulty.html","title":"interface - ChartDifficulty","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartDifficulty\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/interfaces/difficulty.state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            diff\n                                        \n                                \n                                \n                                        \n                                            ts\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        diff\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        diff:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ts\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ts:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ChartDifficultyState {\n\toptions: {\n\t\tpollingInterval: number;\n\t};\n\tdata: ChartDifficulty[];\n}\n\nexport class ChartDifficultyState implements ChartDifficultyState {\n\tdata: ChartDifficulty[] = [];\n\toptions: { pollingInterval: number } = { pollingInterval: 30000 };\n}\n\nexport interface ChartDifficulty {\n\tts: string;\n\tdiff: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ChartDirective.html":{"url":"directives/ChartDirective.html","title":"directive - ChartDirective","body":"\n                   \n\n\n\n\n\n\n\n\n  Directives\n  ChartDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.directive.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AfterViewInit\n                            OnDestroy\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Providers\n                        \n                            \n                                ChartService\n                            \n                        \n                    \n\n                    \n                        Selector\n                        [lthnChart]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartElement\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChartElement\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                lthnChart\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(renderer: Renderer2, elmRef: ElementRef, chartService: ChartService, platformId: Object)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        renderer\n                                                  \n                                                        \n                                                                        Renderer2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elmRef\n                                                  \n                                                        \n                                                                        ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chartService\n                                                  \n                                                        \n                                                                        ChartService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        lthnChart\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/chart/chart.directive.ts:10\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChartElement\n                        \n                    \n                \n            \n            \n                \ncreateChartElement(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.directive.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartElement\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.directive.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n    \n\n\n    \n        import {AfterViewInit, Directive, ElementRef, Inject, Input, OnDestroy, PLATFORM_ID, Renderer2} from '@angular/core';\nimport {isPlatformBrowser} from '@angular/common';\nimport {ChartService} from './chart.service';\n\n@Directive({\n\tselector: '[lthnChart]',\n\tproviders: [ChartService]\n})\nexport class ChartDirective implements AfterViewInit, OnDestroy {\n\t@Input() lthnChart: string;\n\tprivate chartElement: any;\n\n\tconstructor(\n\t\tprivate renderer: Renderer2,\n\t\tprivate elmRef: ElementRef,\n\t\tprivate chartService: ChartService,\n\t\t@Inject(PLATFORM_ID) private platformId: Object\n\t) {\n\t}\n\n\tngAfterViewInit() {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.createChartElement(this.lthnChart);\n\t\t\tthis.chartService.createChart(this.lthnChart);\n\t\t}\n\t}\n\n\tcreateChartElement(name: string) {\n\t\tthis.chartElement = this.renderer.createElement('canvas');\n\t\tthis.renderer.setAttribute(\n\t\t\tthis.chartElement,\n\t\t\t'id',\n\t\t\t`lthn-chart-${name}`\n\t\t);\n\t\tthis.renderer.setStyle(this.elmRef.nativeElement, 'height', '25vh');\n\t\tthis.renderer.setStyle(\n\t\t\tthis.elmRef.nativeElement,\n\t\t\t'position',\n\t\t\t'relative'\n\t\t);\n\n\t\t// position: relative; height:40vh; width:80vw\n\t\tthis.renderer.appendChild(this.elmRef.nativeElement, this.chartElement);\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.renderer.removeChild(\n\t\t\t\tthis.elmRef.nativeElement,\n\t\t\t\tthis.chartElement\n\t\t\t);\n\t\t}\n\t\tthis.chartService.destroySubscriptions(this.lthnChart);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ChartModule.html":{"url":"modules/ChartModule.html","title":"module - ChartModule","body":"\n                   \n\n\n\n\n    Modules\n    ChartModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_providers\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_exports\n\n\n\n\nChartDirective\n\nChartDirective\n\n\n\nChartModule\n\nChartModule\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartService\n\nChartService\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/chart/chart.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ChartService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ChartDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {ChartDirective} from './chart.directive';\nimport {ChartService} from './chart.service';\n\n@NgModule({\n\tdeclarations: [ChartDirective],\n\timports: [CommonModule],\n\tproviders: [ChartService],\n\texports: [ChartDirective]\n})\nexport class ChartModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartService.html":{"url":"injectables/ChartService.html","title":"injectable - ChartService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/chart.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chartData$\n                            \n                            \n                                    Private\n                                chartInstances\n                            \n                            \n                                    Private\n                                chartMeta\n                            \n                            \n                                    Private\n                                chartSubscriptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createChart\n                            \n                            \n                                destroySubscriptions\n                            \n                            \n                                setupDataSubscription\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store, platformId: Object, NetworkHashrateChart: NetworkHashrateChart)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        NetworkHashrateChart\n                                                  \n                                                        \n                                                                        NetworkHashrateChart\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createChart\n                        \n                    \n                \n            \n            \n                \ncreateChart(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:54\n                \n            \n\n\n            \n                \n                    Loads up a new chart instance,\napplies colour adjustments\ncreates data subscription\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        destroySubscriptions\n                        \n                    \n                \n            \n            \n                \ndestroySubscriptions(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:126\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupDataSubscription\n                        \n                    \n                \n            \n            \n                \nsetupDataSubscription(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/chart.service.ts:98\n                \n            \n\n\n            \n                \n                    Gets the observable for the chart key from the datastore\ncreates the data subscription, the map function is provided by the\nchart config service as a function dataMap(data)\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartData$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:34\n                        \n                    \n\n            \n                \n                    holds all the data observables for all charts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartInstances\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:19\n                        \n                    \n\n            \n                \n                    holds the chart.js instances\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartMeta\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:26\n                        \n                    \n\n            \n                \n                    holds the configurations for each chart type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chartSubscriptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/chart.service.ts:20\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Inject, Injectable, PLATFORM_ID} from '@angular/core';\nimport {Chart, registerables} from 'chart.js';\nimport 'chartjs-adapter-moment';\nimport {select, Store} from '@ngrx/store';\nimport colorLib from '@kurkle/color';\nimport {isPlatformBrowser, isPlatformServer} from '@angular/common';\nimport {selectChartData} from './data';\nimport {NetworkHashrateChart} from './charts/network-hashrate.chart';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ChartService {\n\t/**\n\t * holds the chart.js instances\n\t *\n\t * @private\n\t */\n\tprivate chartInstances: object = {};\n\tprivate chartSubscriptions: object = {};\n\t/**\n\t * holds the configurations for each chart type\n\t *\n\t * @private\n\t */\n\tprivate chartMeta = {\n\t\tnetworkDifficulty: this.NetworkHashrateChart\n\t};\n\t/**\n\t * holds all the data observables for all charts\n\t *\n\t * @private\n\t */\n\tprivate chartData$: object = {};\n\n\tconstructor(\n\t\tprivate store: Store,\n\t\t@Inject(PLATFORM_ID) private platformId: Object,\n\t\t//@TODO try and find a better way than get DI to give us configs, so they can themselves use services\n\t\tprivate NetworkHashrateChart: NetworkHashrateChart\n\t) {\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tChart.register(...registerables);\n\t\t}\n\t}\n\n\t/**\n\t * Loads up a new chart instance,\n\t * applies colour adjustments\n\t * creates data subscription\n\t *\n\t * @param name\n\t */\n\tcreateChart(name: string) {\n\t\tconst vm = this;\n\t\tif (!vm.chartMeta[name]) {\n\t\t\tthrow new Error(`Chart Not Defined: ${name}`);\n\t\t}\n\n\t\tvm.chartMeta[name].data.datasets.map((dataset, i) => {\n\t\t\tdataset.backgroundColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t)\n\t\t\t\t.alpha(0.2)\n\t\t\t\t.rgbString();\n\t\t\tdataset.borderColor = colorLib(\n\t\t\t\tvm.chartMeta[name].options.colors[i]\n\t\t\t).rgbString();\n\t\t\t// if we have more than one data point, change label colors to match data\n\t\t\tif (vm.chartMeta[name].data.datasets.length > 1) {\n\t\t\t\tif (\n\t\t\t\t\tvm.chartMeta[name].options.scales[dataset.yAxisID]\n\t\t\t\t\t\t.position === 'right'\n\t\t\t\t) {\n\t\t\t\t\tvm.chartMeta[name].options.scales[\n\t\t\t\t\t\tdataset.yAxisID\n\t\t\t\t\t\t].ticks.color = dataset.borderColor;\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvm.chartInstances[name] = new Chart(`lthn-chart-${name}`, {\n\t\t\ttype: vm.chartMeta[name].type,\n\t\t\tdata: vm.chartMeta[name].data,\n\t\t\toptions: vm.chartMeta[name].options\n\t\t});\n\n\t\tvm.setupDataSubscription(name);\n\t}\n\n\t/**\n\t * Gets the observable for the chart key from the datastore\n\t * creates the data subscription, the map function is provided by the\n\t * chart config service as a function dataMap(data)\n\t *\n\t * @param name\n\t */\n\tsetupDataSubscription(name: string) {\n\t\t//let vm = this\n\t\tthis.chartData$[name] = this.store.pipe(\n\t\t\tselect(selectChartData(this.chartMeta[name].key))\n\t\t);\n\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStartAction);\n\n\t\tthis.chartSubscriptions[name] = this.chartData$[name].subscribe(\n\t\t\t(response) => {\n\t\t\t\tif (response != undefined) {\n\t\t\t\t\t//@ts-ignore\n\t\t\t\t\tthis.chartInstances[name].data.datasets.map((item, i) => {\n\t\t\t\t\t\tthis.chartInstances[name].data.datasets[i].data =\n\t\t\t\t\t\t\tthis.chartMeta[name].dataMap(response, i);\n\t\t\t\t\t});\n\t\t\t\t\tthis.chartInstances[name].update();\n\t\t\t\t\tif (isPlatformServer(this.platformId)) {\n\t\t\t\t\t\tthis.destroySubscriptions(name);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(error);\n\t\t\t}\n\t\t);\n\t}\n\n\tdestroySubscriptions(name: string): void {\n\t\tthis.store.dispatch(this.chartMeta[name].pollingStopAction);\n\n\t\tif (isPlatformBrowser(this.platformId)) {\n\t\t\tthis.chartSubscriptions[name].unsubscribe();\n\t\t\tthis.chartInstances[name].destroy();\n\t\t\tthis.chartInstances[name] = void 0;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ChartsEffects.html":{"url":"injectables/ChartsEffects.html","title":"injectable - ChartsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ChartsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ChartNetworkDifficultyStartPolling$\n                            \n                            \n                                ChartNetworkDifficultyStopPolling$\n                            \n                            \n                                LoadRequestedChartDifficulty$\n                            \n                            \n                                    Private\n                                    Static\n                                pollingUntil$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, store$: Store>, http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/chart/data/effects.ts:125\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store$\n                                                  \n                                                        \n                                                                    Store>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStartPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:100\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ChartNetworkDifficultyStopPolling$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:113\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        LoadRequestedChartDifficulty$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\t//@ts-ignore\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        pollingUntil$\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tChartNetworkDifficulty$: new Subject()\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/data/effects.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeUntil, withLatestFrom} from 'rxjs/operators';\nimport * as ChartsActions from './actions';\nimport {of, Subject, timer} from 'rxjs';\nimport {select, State, Store} from '@ngrx/store';\nimport {HttpClient} from '@angular/common/http';\nimport {debug, RxJsLoggingLevel} from '@data/debug.rxjs';\nimport {ChartDifficulty} from './interfaces/difficulty.state';\nimport {selectChartOptions} from './selectors';\n\n@Injectable()\nexport class ChartsEffects {\n\tprivate static pollingUntil$ = {\n\t\tChartNetworkDifficulty$: new Subject()\n\t};\n\t// LoadRequestedChartDifficulty$ = createEffect(() =>\n\t//     this.actions$.pipe(\n\t//         ofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t//         switchMap(() =>\n\t//             this.http.get(`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`)\n\t//                 .pipe(\n\t//                     map(\n\t//                         (networkDifficulty) => ChartsActions.chartNetworkDifficultyLoadSuccess({\n\t//                                 networkDifficulty,\n\t//                             }\n\t//                         ),\n\t//                         catchError((error) => {\n\t//                                 console.error(error);\n\t//                                 return of(ChartsActions.chartNetworkDifficultyLoadFailure({error}));\n\t//                             }\n\t//                         )\n\t//                     )\n\t//                 )\n\t//         )\n\t//     )\n\t// );\n\n\tLoadRequestedChartDifficulty$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyLoadRequested),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyLoadRequested'\n\t\t\t),\n\t\t\twithLatestFrom(\n\t\t\t\tthis.store$.pipe(\n\t\t\t\t\tselect(selectChartOptions('networkDifficulty'))\n\t\t\t\t)\n\t\t\t),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.DEBUG,\n\t\t\t\t'RxJs Option: selectHashrateMinersOptions'\n\t\t\t),\n\t\t\t//@ts-ignore\n\t\t\tswitchMap(([action, options]) =>\n\t\t\t\t// Start polling\n\t\t\t\ttimer(0, options.pollingInterval).pipe(\n\t\t\t\t\ttakeUntil(\n\t\t\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$\n\t\t\t\t\t),\n\t\t\t\t\tdebug(\n\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t'RxJs Timer: ChartNetworkDifficultyLoadRequested'\n\t\t\t\t\t),\n\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\tthis.http\n\t\t\t\t\t\t\t.get(\n\t\t\t\t\t\t\t\t`https://api.hashvault.pro/v3/lethean/network/chart/difficulty`\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\tdebug(\n\t\t\t\t\t\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t\t\t\t\t\t'/network/chart/difficulty HTTP Response:'\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\tdebug(RxJsLoggingLevel.DEBUG, ''),\n\t\t\t\t\t\t\t\tmap(\n\t\t\t\t\t\t\t\t\t(payload) =>\n\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadSuccess(\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\tnetworkDifficulty: payload\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\tcatchError((error) =>\n\t\t\t\t\t\t\t\t\t\t//console.error(error);\n\t\t\t\t\t\t\t\t\t\tof(\n\t\t\t\t\t\t\t\t\t\t\tChartsActions.chartNetworkDifficultyLoadFailure(\n\t\t\t\t\t\t\t\t\t\t\t\t{error}\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t)\n\t\t)\n\t);\n\n\tChartNetworkDifficultyStartPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStartPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStartPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyLoadRequested();\n\t\t\t})\n\t\t)\n\t);\n\tChartNetworkDifficultyStopPolling$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(ChartsActions.chartNetworkDifficultyStopPolling),\n\t\t\tdebug(\n\t\t\t\tRxJsLoggingLevel.INFO,\n\t\t\t\t'RxJs Action: ChartNetworkDifficultyStopPolling'\n\t\t\t),\n\t\t\tmap(() => {\n\t\t\t\tChartsEffects.pollingUntil$.ChartNetworkDifficulty$.next(true);\n\t\t\t\treturn ChartsActions.chartNetworkDifficultyStoppedPolling();\n\t\t\t})\n\t\t)\n\t);\n\n\tconstructor(\n\t\tprivate actions$: Actions,\n\t\tprivate store$: Store>,\n\t\tprivate http: HttpClient\n\t) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ChartsState.html":{"url":"interfaces/ChartsState.html","title":"interface - ChartsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ChartsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/data/reducer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            networkDifficulty\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        networkDifficulty\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        networkDifficulty:         ChartDifficultyState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ChartDifficultyState\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {createReducer, on} from '@ngrx/store';\nimport * as ChartsActions from './actions';\nimport {ChartDifficultyState} from './interfaces/difficulty.state';\n\n// export const initialState = PoolStatsState;\nexport const initialState: ChartsState = {\n\tnetworkDifficulty: new ChartDifficultyState()\n};\n\nconst chartDifficultyReducer = createReducer(\n\tinitialState,\n\ton(\n\t\tChartsActions.chartNetworkDifficultyLoadSuccess,\n\t\t(state: any, {networkDifficulty}) => ({\n\t\t\t...state,\n\t\t\tnetworkDifficulty: {\n\t\t\t\t...state.networkDifficulty,\n\t\t\t\tdata: networkDifficulty\n\t\t\t}\n\t\t})\n\t),\n\ton(ChartsActions.chartNetworkDifficultyLoadFailure, (state) => ({\n\t\t...state,\n\t\terror: true\n\t}))\n);\n\nexport function reducer(state, action) {\n\treturn chartDifficultyReducer(state, action);\n}\n\nexport interface ChartsState {\n\tnetworkDifficulty?: ChartDifficultyState;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConsoleComponent.html":{"url":"components/ConsoleComponent.html","title":"component - ConsoleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConsoleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/console/console.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-console\n            \n\n            \n                styleUrls\n                ./console.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./console.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                child\n                            \n                            \n                                    Private\n                                command\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changeStream\n                            \n                            \n                                getSub\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                attach\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(ws: WebsocketService, ref: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/console/console.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        ws\n                                                  \n                                                        \n                                                                        WebsocketService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ref\n                                                  \n                                                        \n                                                                        ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        attach\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'lethean-wallet-rpc'\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/console/console.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        changeStream\n                        \n                    \n                \n            \n            \n                \nchangeStream(channel: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    channel\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getSub\n                        \n                    \n                \n            \n            \n                \ngetSub()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \nngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/console.component.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        child\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgTerminal\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('term', {static: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/console/console.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        command\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/console/console.component.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnDestroy, OnInit, ViewChild, ViewEncapsulation} from '@angular/core';\nimport {NgTerminal} from 'ng-terminal';\nimport {WebsocketService} from '@service/websocket.service';\n\n\n@Component({\n\tselector: 'lthn-app-console',\n\ttemplateUrl: './console.component.html',\n\tstyleUrls: ['./console.component.scss'],\n\tencapsulation: ViewEncapsulation.None,\n\tchangeDetection: ChangeDetectionStrategy.OnPush\n\n\n})\nexport class ConsoleComponent implements OnInit, AfterViewInit, OnDestroy {\n\t@ViewChild('term', { static: true }) child: NgTerminal;\n\n\t@Input() attach  = 'lethean-wallet-rpc';\n\tprivate command: string[] = []\n\n\tconstructor(private ws: WebsocketService, private ref: ChangeDetectorRef) {\n\t\tthis.ref.detach()\n\t\tsetInterval(() => {\n\t\t\tthis.ref.detectChanges();\n\t\t}, 1000);\n\n\t}\n\n\tngOnInit(): void {\n\t\tlet that = this;\n\n\t\tthis.ref.detectChanges();\n\t\tthis.ws.connect().subscribe((data) => {\n\t\t\tif(this.attach === data[0]) {\n\t\t\t\tlet line  = atob(data[1]);\n\t\t\t\tif(data[0] === 'update-cli'){\n\t\t\t\t\tthis.child.underlying.writeln(data[1]);\n\t\t\t\t}else{\n\t\t\t\t\tthis.child.underlying.writeln(line.trim());\n\t\t\t\t}\n\n\t\t\t\tthat.ref.markForCheck()\n\t\t\t}\n\n\t\t})\n\n\t\t\tthis.changeStream(this.attach)\n    }\n\n\tgetSub(){\n\t\treturn this.ws.connect();\n\t}\n\n\tchangeStream(channel:string){\n\t\tthis.ws.sendMessage(channel)\n\t\tthis.ref.markForCheck()\n\t}\n\n\tngAfterViewInit() {\n\t\tconst that = this;\n\t\tthis.child.write('$ ');\n\t\tif(this.child.keyEventInput) {\n\n\t\t\tthis.child.keyEventInput.subscribe((e) => {\n\t\t\t\t//console.log('keyboard event:' + e.domEvent.keyCode + ', ' + e.key);\n\n\t\t\t\tconst ev = e.domEvent;\n\t\t\t\tconst printable = !ev.altKey && !ev.ctrlKey && !ev.metaKey;\n\n\t\t\t\tif (ev.keyCode === 13) {\n\n\t\t\t\t\t//console.log(`cmd:letheand:${this.command.join('')}`)\n\t\t\t\t\tthat.ws.sendMessage(`cmd:letheand:${this.command.join('')}\\n`)\n\t\t\t\t\tthis.command = []\n\t\t\t\t\tthis.child.underlying.writeln(\"$\");\n\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t} else if (ev.keyCode === 8) {\n\t\t\t\t\t this.command.pop()\n\t\t\t\t\tif (this.child.underlying.buffer.active.cursorX > 0) {\n\t\t\t\t\t\tthis.child.underlying.write('\\b \\b');\n\t\t\t\t\t//\tthis.ref.detectChanges();\n\t\t\t\t\t}\n\t\t\t\t} else if (printable) {\n\t\t\t\t\tthis.command.push(e.key);\n\t\t\t\t\tthis.child.write(e.key);\n\t\t\t\t\t//this.ref.detectChanges();\n\t\t\t\t}\n\t\t\t\t//console.log(this.command.join(\"\"))\n\t\t\t});\n\t\t}\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.ws.closeConnection()\n\t}\n}\n\n    \n\n    \n        \n    \n\n\n\n\n\n    \n\n    \n                \n                    ./console.component.scss\n                \n                //.xterm-viewport {\n//\twidth: auto !important;\n//}\n//\n//.xterm-screen {\n//\twidth: auto !important;\n//\t> canvas {\n//\t\twidth: 100% !important;\n//\t}\n//}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ConsoleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConsoleModule.html":{"url":"modules/ConsoleModule.html","title":"module - ConsoleModule","body":"\n                   \n\n\n\n\n    Modules\n    ConsoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\n\n\nConsoleModule\n\nConsoleModule\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nTerminalComponent\n\nTerminalComponent\n\nConsoleModule -->\n\nTerminalComponent->ConsoleModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/console/console.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ConsoleComponent\n                        \n                        \n                            TerminalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConsoleComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConsoleComponent } from './console.component';\nimport { MatCardModule } from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {NgTerminalModule} from 'ng-terminal';\nimport {FlexModule} from '@angular/flex-layout';\nimport { TerminalComponent } from 'src/app/modules/console/terminal.component';\nimport {SectionModule} from '@swimlane/ngx-ui';\n\n\n@NgModule({\n\tdeclarations: [ConsoleComponent, TerminalComponent],\n\texports: [\n\t\tConsoleComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tNgTerminalModule,\n\t\tFlexModule,\n\t\tSectionModule\n\t]\n})\nexport class ConsoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CreateWallet.html":{"url":"interfaces/CreateWallet.html","title":"interface - CreateWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CreateWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CryptService.html":{"url":"injectables/CryptService.html","title":"injectable - CryptService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CryptService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/crypt.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createOpenPGP\n                            \n                            \n                                createSalt\n                            \n                            \n                                createSaltV2\n                            \n                            \n                                    Async\n                                decryptPGP\n                            \n                            \n                                    Async\n                                decryptPGPSingle\n                            \n                            \n                                    Async\n                                decryptPrivateKey\n                            \n                            \n                                    Async\n                                encryptPGPSingle\n                            \n                            \n                                    Async\n                                encryptPublic\n                            \n                            \n                                generateKey\n                            \n                            \n                                    Async\n                                readKey\n                            \n                            \n                                    Async\n                                readMessage\n                            \n                            \n                                    Async\n                                readPrivateKey\n                            \n                            \n                                sha256Salty\n                            \n                            \n                                    Async\n                                sign\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    keyMap\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fileSystem: FileSystemService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/crypt.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createOpenPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    createOpenPGP(username, password)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:103\n                \n            \n\n\n            \n                \n                    Creates a Armoured OpenPGP key for the username protected with the password supplied\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSalt\n                        \n                    \n                \n            \n            \n                \ncreateSalt(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:37\n                \n            \n\n\n            \n                \n                    Transforms the input string with a lite l337 conversion\nthis will always give you the same salt, im aware of the issues here\nPlease start a GitHub issue if you have a good idea for knowledge-less reproducible salts\nMaybe allow people to set a custom salter? something for later.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createSaltV2\n                        \n                    \n                \n            \n            \n                \ncreateSaltV2(input: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:56\n                \n            \n\n\n            \n                \n                    lighter quasi-entropy salt, to test, when on on a markdown editor\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGP\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGP(message: string, privateKey: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    privateKey\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPGPSingle(id: string, passphrase: string, encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:153\n                \n            \n\n\n            \n                \n                    Requires the users password, for this reason, you might want to make or interact with profiles\nthey are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        decryptPrivateKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    decryptPrivateKey(encryptionKey: string, passphrase: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:200\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encryptionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passphrase\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPGPSingle\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPGPSingle(id: string, data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:124\n                \n            \n\n\n            \n                \n                    Using a Lethean user public key, encrypt the supplied data\nBigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\"quick for you\" it wont be on a Pi4 under load\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        cryptService.sha256Salty(username)\n\n                                    \n                                \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        encryptPublic\n                        \n                    \n                \n            \n            \n                \n                    \n                    encryptPublic(data: any, publicKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:216\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    publicKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generateKey\n                        \n                    \n                \n            \n            \n                \ngenerateKey(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:88\n                \n            \n\n\n            \n                \n                    Create a salted PBKDF2 key for encryption purposes using a random word array\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    readKey(encryptionKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:194\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encryptionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readMessage\n                        \n                    \n                \n            \n            \n                \n                    \n                    readMessage(encrypted: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:183\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encrypted\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readPrivateKey\n                        \n                    \n                \n            \n            \n                \n                    \n                    readPrivateKey(encryptionKey: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:189\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    encryptionKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sha256Salty\n                        \n                    \n                \n            \n            \n                \nsha256Salty(input)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:76\n                \n            \n\n\n            \n                \n                    sha256 hash that uses itself converted as a reproducable salt\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    input\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sign\n                        \n                    \n                \n            \n            \n                \n                    \n                    sign(data: string, privateKey: PrivateKey)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/crypt.service.ts:207\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    privateKey\n                                    \n                                            PrivateKey\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        keyMap\n                    \n                \n\n                \n                    \n                        getkeyMap()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/crypt.service.ts:16\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemService} from './filesystem/file-system.service';\nimport * as openpgp from 'openpgp';\nimport * as crypto from 'crypto-js';\nimport {PrivateKey} from 'openpgp';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class CryptService {\n\tconstructor(\n\t\tprivate fileSystem: FileSystemService\n\t) {\n\t}\n\n\tget keyMap() {\n\t\treturn {\n\t\t\t'o': '0',\n\t\t\t'l': \"1\",\n\t\t\t'e': \"3\",\n\t\t\t'a': \"4\",\n\t\t\t's': \"z\",\n\t\t\t't': \"7\",\n\t\t}\n\t}\n\n\t/**\n\t * Transforms the input string with a lite l337 conversion\n\t * this will always give you the same salt, im aware of the issues here\n\t * Please start a GitHub issue if you have a good idea for knowledge-less reproducible salts\n\t *\n\t * Maybe allow people to set a custom salter? something for later.\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSalt(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\t\treturn input\n\t\t\t.replace('o', '0')\n\t\t\t.replace(/l/gi, '1')\n\t\t\t.replace(/e/gi, '3')\n\t\t\t.replace(/a/gi, '4')\n\t\t\t.replace(/s/gi, 'z')\n\t\t\t.replace(/t/gi, '7');\n\t}\n\n\t/**\n\t * lighter quasi-entropy salt, to test, when on on a markdown editor\n\t *\n\t * @param {string} input\n\t * @returns {string}\n\t */\n\tcreateSaltV2(input: string): string {\n\t\tif (!input) {\n\t\t\treturn '';\n\t\t}\n\n\t\tlet i: number = input.length;\n\t\tlet salt:string[] = []\n\t\twhile (i--) {\n\t\t\tsalt.push(input[i] === this.keyMap[i] ? this.keyMap[i] : input[i]);\n\t\t}\n\n\t\treturn salt.join('');\n\t}\n\n\t/**\n\t * sha256 hash that uses itself converted as a reproducable salt\n\t *\n\t * @param input\n\t * @returns {string}\n\t */\n\tsha256Salty(input): string {\n\t\treturn crypto\n\t\t\t.SHA256(input + this.createSalt(input))\n\t\t\t.toString();\n\t}\n\n\t/**\n\t * Create a salted PBKDF2 key for encryption purposes using a random word array\n\t *\n\t * @param input\n\t * @returns {any}\n\t */\n\tgenerateKey(input) {\n\t\tconst salt = crypto.lib.WordArray.random(128 / 8);\n\t\treturn crypto.PBKDF2(input, salt, {\n\t\t\tkeySize: 256 / 32\n\t\t});\n\t}\n\n\n\t/**\n\t * Creates a Armoured OpenPGP key for the username protected with the password supplied\n\t *\n\t * @param username\n\t * @param password\n\t * @returns {Promise}\n\t */\n\tasync createOpenPGP(username, password) {\n\t\treturn await openpgp.generateKey({\n\t\t\ttype: 'rsa', // Type of the key, defaults to ECC\n\t\t\trsaBits: 4096,\n\t\t\tuserIDs: [{name: username}], // you can pass multiple user IDs\n\t\t\tpassphrase: password, // protects the private key\n\t\t\tformat: 'armored' // output key format, defaults to 'armored' (other options: 'binary' or 'object')\n\t\t});\n\t}\n\n\n\t/**\n\t * Using a Lethean user public key, encrypt the supplied data\n\t *\n\t * Bigger the string, longer it'll take on slow devices... please provide UI feedback even if its\n\t * \"quick for you\" it wont be on a Pi4 under load\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} data\n\t * @returns {Promise}\n\t */\n\tasync encryptPGPSingle(id: string, data: string) {\n\t\tconst encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.pub`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\tconst encrypted = await openpgp.encrypt({\n\t\t\tmessage: await openpgp.createMessage({\n\t\t\t\ttext: data\n\t\t\t}), // input as Message object\n\t\t\tencryptionKeys: await openpgp.readKey({\n\t\t\t\tarmoredKey: encryptionKey\n\t\t\t})\n\t\t});\n\n\t\treturn encrypted;\n\t}\n\n\t/**\n\t * Requires the users password, for this reason, you might want to make or interact with profiles\n\t * they are like sub accounts, but not, multiple personality syndrome with split brain describes it well.\n\t *\n\t * @param {string} id cryptService.sha256Salty(username)\n\t * @param {string} passphrase\n\t * @param {string} encrypted\n\t * @returns {Promise}\n\t */\n\tasync decryptPGPSingle(id: string, passphrase: string, encrypted: string) {\n\t\t/**\n\t\t * @type string OpenPGP Armoured private key\n\t\t */\n\t\tlet encryptionKey = await this.fileSystem.readFile(\n\t\t\t`users/${id}.lthn.key`\n\t\t);\n\n\t\tif (encryptionKey.length === 0) {\n\t\t\tthrow new Error(`Failed to load encryption key id: ${id}`);\n\t\t}\n\t\t// decrypt the private key\n\t\tlet privateKey = await this.decryptPrivateKey( encryptionKey, passphrase);\n\n\t\tlet message = await this.readMessage(encrypted);\n\n\t\tconst {data: decrypted, signatures} =\n\t\t\tawait openpgp.decrypt({\n\t\t\t\tmessage,\n\t\t\t\tdecryptionKeys: privateKey\n\t\t\t});\n\t\tconsole.log(signatures)\n\t\t// Leave nothing to chance\n\t\tprivateKey = null\n\t\tencryptionKey = ''\n\t\tmessage = null\n\n\t\treturn decrypted;\n\t}\n\n\tasync readMessage(encrypted: string ) {\n\t\treturn await openpgp.readMessage({\n\t\t\tarmoredMessage: encrypted\n\t\t})\n\t}\n\n\tasync readPrivateKey(encryptionKey: string){\n\t\treturn await openpgp.readPrivateKey({\n\t\t\tarmoredKey: encryptionKey\n\t\t})\n\t}\n\tasync readKey(encryptionKey: string){\n\t\treturn await openpgp.readKey({\n\t\t\tarmoredKey: encryptionKey\n\t\t})\n\t}\n\n\tasync decryptPrivateKey(encryptionKey: string, passphrase: string){\n\t\treturn await openpgp.decryptKey({\n\t\t\tprivateKey: await this.readPrivateKey( encryptionKey),\n\t\t\tpassphrase\n\t\t});\n\t}\n\n\tasync sign(data: string, privateKey: PrivateKey) {\n\t\tconst options: any = {\n\t\t\tmessage: await openpgp.createCleartextMessage({ text: data }),\n\t\t\tsigningKeys: privateKey,\n\t\t};\n\n\t\treturn await openpgp.sign(options);\n\t}\n\n\tasync encryptPublic(data: any, publicKey: string) {\n\n\t\ttry {\n\t\t\tconst options: any = {\n\t\t\t\tmessage: await openpgp.createMessage({ text: data }),\n\t\t\t\tencryptionKeys:  await this.readKey(publicKey),\n\t\t\t};\n\n\t\t\treturn await openpgp.encrypt(options);\n\t\t}catch (e) {\n\t\t\treturn false\n\t\t}\n\n\t}\n\n\tasync decryptPGP(\n\t\tmessage: string,\n\t\tprivateKey: any\n\t): Promise {\n\n\t\tlet options: any = {\n\t\t\tmessage: await this.readMessage(message),\n\t\t\tdecryptionKeys: privateKey,\n\t\t};\n\n\t\treturn await openpgp.decrypt(options).then((result: any) => {\n\t\t\treturn result.data;\n\t\t});\n\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/data/data.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {StoreModule} from '@ngrx/store';\nimport {effects, metaReducers, reducers} from './reducers';\nimport {StoreDevtoolsModule} from '@ngrx/store-devtools';\nimport {APP_CONFIG} from '@env/environment';\nimport {EffectsModule} from '@ngrx/effects';\nimport {StoreRouterConnectingModule} from '@ngrx/router-store';\nimport {EntityDataModule} from '@ngrx/data';\nimport {entityConfig} from './entity-metadata';\n\n@NgModule({\n\tdeclarations: [],\n\timports: [\n\t\tStoreModule.forRoot(reducers, {\n\t\t\tmetaReducers\n\t\t}),\n\t\tStoreDevtoolsModule.instrument({\n\t\t\tmaxAge: 25,\n\t\t\tlogOnly: APP_CONFIG.production,\n\t\t\tactionsBlocklist: ['@ngrx/router*']\n\t\t}),\n\t\tEffectsModule.forRoot([...effects]),\n\t\tStoreRouterConnectingModule.forRoot(),\n\t\tEntityDataModule.forRoot(entityConfig)\n\t]\n})\nexport class DataModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Destination.html":{"url":"interfaces/Destination.html","title":"interface - Destination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Destination\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/destination.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                        \n                                            amount\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Destination {\n\tamount: number; // - unsigned int; Amount to send to each destination, in atomic units.\n\taddress: string; // - string; Destination public address.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DetailsComponent.html":{"url":"components/DetailsComponent.html","title":"component - DetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/details.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-details\n            \n\n\n\n\n            \n                templateUrl\n                ./details.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                balance\n                            \n                            \n                                    Public\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/details.component.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/details.component.ts:9\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/details.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/details.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WalletService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/details.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\nimport {WalletService} from '@module/wallet/wallet.service';\n\n@Component({\n  selector: 'lthn-wallet-details',\n  templateUrl: './details.component.html'\n})\nexport class DetailsComponent implements OnInit{\n  @Input() name?: string = '';\n  balance:any\n  constructor(public wallet: WalletService) {\n\n\n  }\n\n  public ngOnInit(): void {\n    this.wallet.getBalance()\n  }\n\n\n}\n\n    \n\n    \n        \n    \n        Main Address\n        {{wallet.address}}\n        Balance\n        {{ wallet.balance['balance'] | toCoin }}\n        Available to spend\n        {{ wallet.balance['unlocked_balance'] | toCoin }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Main Address        {{wallet.address}}        Balance        {{ wallet.balance[\\'balance\\'] | toCoin }}        Available to spend        {{ wallet.balance[\\'unlocked_balance\\'] | toCoin }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'DetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/DialogData.html":{"url":"interfaces/DialogData.html","title":"interface - DialogData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  DialogData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/status/dialog/no-daemon-running.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            animal\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        animal\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        animal:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects.html":{"url":"injectables/Effects.html","title":"injectable - Effects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/profile/effects.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions} from '@ngrx/effects';\n\n@Injectable()\nexport class Effects {\n\tconstructor(private actions$: Actions) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/Effects-1.html":{"url":"injectables/Effects-1.html","title":"injectable - Effects-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  Effects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/effects.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/data/user/effects.ts:4\n                            \n                        \n\n            \n        \n\n\n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class Effects {\n\tconstructor() {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EffortPipe.html":{"url":"pipes/EffortPipe.html","title":"pipe - EffortPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EffortPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/effort.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        effort\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value, valid?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/effort.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    valid\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'effort', pure: false })\nexport class EffortPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value, valid?: boolean) {\n\t\tif (valid === false) {\n\t\t\treturn 'black';\n\t\t}\n\t\tconst mid = 100;\n\t\tlet r = 0;\n\t\tlet g = 0;\n\t\tconst b = 0;\n\t\tif (value \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/EscapeHtmlPipe.html":{"url":"pipes/EscapeHtmlPipe.html","title":"pipe - EscapeHtmlPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  EscapeHtmlPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/html.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        keepHtml\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/html.pipe.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {DomSanitizer} from '@angular/platform-browser';\n\n@Pipe({ name: 'keepHtml', pure: false })\nexport class EscapeHtmlPipe implements PipeTransform {\n\tconstructor(private sanitizer: DomSanitizer) {}\n\n\ttransform(content) {\n\t\treturn this.sanitizer.bypassSecurityTrustHtml(content);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileSystemInterface.html":{"url":"interfaces/FileSystemInterface.html","title":"interface - FileSystemInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FileSystemInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/interfaces/file-system.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        exists\n                                    \n                                \n                                \n                                    \n                                        list\n                                    \n                                \n                                \n                                    \n                                        mkdir\n                                    \n                                \n                                \n                                    \n                                        path\n                                    \n                                \n                                \n                                    \n                                        read\n                                    \n                                \n                                \n                                    \n                                        write\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(type, pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:49\n                \n            \n\n\n            \n                \n                    check if a path.. dir or filename exsists in the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        list\n                        \n                    \n                \n            \n            \n                \nlist(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:33\n                \n            \n\n\n            \n                \n                    returns a json list of folder contents\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkdir\n                        \n                    \n                \n            \n            \n                \nmkdir(type, dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:41\n                \n            \n\n\n            \n                \n                    make a dir, return result as a boolean\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        path\n                        \n                    \n                \n            \n            \n                \npath(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:8\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        read\n                        \n                    \n                \n            \n            \n                \nread(type, filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:16\n                \n            \n\n\n            \n                \n                    Return the string data of the requested filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        write\n                        \n                    \n                \n            \n            \n                \nwrite(type, filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/interfaces/file-system.interface.ts:25\n                \n            \n\n\n            \n                \n                    write the string value tot he request filename\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    type\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        full system path\n\n                                    \n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        string value to save\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        export interface FileSystemInterface {\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tpath(type, filename);\n\n\t/**\n\t * Return the string data of the requested filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t */\n\tread(type, filename);\n\n\t/**\n\t * write the string value tot he request filename\n\t *\n\t * @param type\n\t * @param filename full system path\n\t * @param data string value to save\n\t */\n\twrite(type, filename, data): void;\n\n\t/**\n\t * returns a json list of folder contents\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tlist(type, dirname): any;\n\n\t/**\n\t * make a dir, return result as a boolean\n\t *\n\t * @param type\n\t * @param dirname full system path\n\t */\n\tmkdir(type, dirname): void;\n\n\t/**\n\t * check if a path.. dir or filename exsists in the filesystem\n\t *\n\t * @param type\n\t * @param pathname full system path\n\t */\n\texists(type, pathname): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemService.html":{"url":"injectables/FileSystemService.html","title":"injectable - FileSystemService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                exists\n                            \n                            \n                                    Async\n                                listFiles\n                            \n                            \n                                mkDir\n                            \n                            \n                                    Async\n                                readFile\n                            \n                            \n                                writeFile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    fileSystem\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(appFilesystem: FileSystemWebService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        appFilesystem\n                                                  \n                                                        \n                                                                        FileSystemWebService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        exists\n                        \n                    \n                \n            \n            \n                \nexists(pathname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:71\n                \n            \n\n\n            \n                \n                    check if a file or directory exists\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        listFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    listFiles(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:27\n                \n            \n\n\n            \n                \n                    List files in the directory\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mkDir\n                        \n                    \n                \n            \n            \n                \nmkDir(dirname: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:61\n                \n            \n\n\n            \n                \n                    Create a directory on the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        readFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    readFile(filename: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:41\n                \n            \n\n\n            \n                \n                    Returns the string value of a file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Including system path\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        writeFile\n                        \n                    \n                \n            \n            \n                \nwriteFile(filename: string, data: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system.service.ts:51\n                \n            \n\n\n            \n                \n                    write a file to the filesystem\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        fileSystem\n                    \n                \n\n                \n                    \n                        getfileSystem()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/filesystem/file-system.service.ts:17\n                                \n                            \n                    \n                        \n                                returns a working FS wrapper\n\n\n                                \n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {FileSystemWebService} from './file-system-web.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class FileSystemService {\n\tpublic type: string;\n\n\tconstructor(private appFilesystem: FileSystemWebService) {\n\t}\n\n\t/**\n\t * returns a working FS wrapper\n\t * @todo add WebFileSystem API wrapper\n\t */\n\tget fileSystem() {\n\t\treturn this.appFilesystem;\n\t}\n\n\t/**\n\t * List files in the directory\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tasync listFiles(dirname) {\n\t\ttry {\n\t\t\treturn await this.fileSystem.list(dirname);\n\t\t} catch (e) {\n\t\t\treturn []\n\t\t}\n\n\t}\n\n\t/**\n\t * Returns the string value of a file\n\t *\n\t * @param filename Including system path\n\t */\n\tasync readFile(filename: string) {\n\t\treturn await this.fileSystem.read(filename);\n\t}\n\n\t/**\n\t * write a file to the filesystem\n\t *\n\t * @param filename\n\t * @param data\n\t */\n\twriteFile(filename: string, data: any) {\n\t\treturn this.fileSystem.write(filename, data);\n\t}\n\n\t/**\n\t * Create a directory on the filesystem\n\t *\n\t * @param dirname\n\t * @returns\n\t */\n\tmkDir(dirname: string) {\n\t\treturn this.fileSystem.mkdir(dirname);\n\t}\n\n\t/**\n\t * check if a file or directory exists\n\t *\n\t * @param pathname\n\t * @returns\n\t */\n\texists(pathname: string) {\n\t\treturn this.fileSystem.exists(pathname);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FileSystemWebService.html":{"url":"injectables/FileSystemWebService.html","title":"injectable - FileSystemWebService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FileSystemWebService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/filesystem/file-system-web.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                apiUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                exists\n                            \n                            \n                                    Public\n                                    Async\n                                list\n                            \n                            \n                                    Public\n                                mkdir\n                            \n                            \n                                    Public\n                                path\n                            \n                            \n                                    Public\n                                    Async\n                                read\n                            \n                            \n                                    Public\n                                    Async\n                                write\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(pathname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pathname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        list\n                        \n                    \n                \n            \n            \n                \n                    \n                    list(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        mkdir\n                        \n                    \n                \n            \n            \n                \n                    \n                    mkdir(dirname)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dirname\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        path\n                        \n                    \n                \n            \n            \n                \n                    \n                    path(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        read\n                        \n                    \n                \n            \n            \n                \n                    \n                    read(filename)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        write\n                        \n                    \n                \n            \n            \n                \n                    \n                    write(filename, data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/filesystem/file-system-web.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    filename\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://127.0.0.1:36911'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/filesystem/file-system-web.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {FileSystemInterface} from '@interface/file-system.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class FileSystemWebService implements FileSystemInterface {\n\n\tpublic apiUrl: string = 'http://127.0.0.1:36911';\n\n\n\tconstructor(private http: HttpClient) {\n\t\tthis.apiUrl = this.apiUrl + '/filesystem'\n\t}\n\n\tpublic exists(pathname): boolean {\n\t\treturn pathname;\n\t}\n\n\tpublic async list(dirname) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/list`, {path: dirname}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => JSON.parse(dat));\n\t}\n\n\tpublic mkdir(dirname): void {\n\t\tconsole.log(dirname)\n\t}\n\n\tpublic path(filename) {\n\t\tconsole.log(filename)\n\t}\n\n\n\tpublic async read(filename) {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/json'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\t\treturn await this.http\n\t\t\t.post(`${this.apiUrl}/read`, {path: filename}, options)\n\t\t\t.toPromise()\n\t\t\t.then((dat) => atob(dat));\n\t}\n\n\tpublic async write(filename, data) {\n\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t})\n\t\t};\n\n\t\treturn await this.http\n\t\t\t.post(\n\t\t\t\t`${this.apiUrl}/write`,\n\t\t\t\t{path: filename, data: btoa(data)},\n\t\t\t\toptions\n\t\t\t)\n\t\t\t.toPromise();\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/FromCoinPipe.html":{"url":"pipes/FromCoinPipe.html","title":"pipe - FromCoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  FromCoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/fromCoin.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        fromCoin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/fromCoin.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'fromCoin', pure: false })\nexport class FromCoinPipe implements PipeTransform {\n\n\n  transform (content: number):number {\n    return (content * 100000000)\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetAddressBookOut.html":{"url":"interfaces/GetAddressBookOut.html","title":"interface - GetAddressBookOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetAddressBookOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getAddressBookOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            entries\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        entries\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        entries:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetAddressBookOut {\n\tentries: {\n\t\taddress: string;\n\t\tdescription: string;\n\t\tindex: number;\n\t\tpayment_id: string;\n\t};\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsIn.html":{"url":"interfaces/GetBulkPaymentsIn.html","title":"interface - GetBulkPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getBulkPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            min_block_height\n                                        \n                                \n                                \n                                        \n                                            payment_ids\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        min_block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_ids\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_ids:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetBulkPaymentsIn {\n\tpayment_ids: string[]; // - array of: string\n\tmin_block_height: number; // - unsigned int; The block height at which to start looking for payments.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetBulkPaymentsOut.html":{"url":"interfaces/GetBulkPaymentsOut.html","title":"interface - GetBulkPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetBulkPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getBulkPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from 'src/app/modules/wallet/interfaces/types/payment';\n\nexport interface GetBulkPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsIn.html":{"url":"interfaces/GetPaymentsIn.html","title":"interface - GetPaymentsIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getPaymentsIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GetPaymentsIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetPaymentsOut.html":{"url":"interfaces/GetPaymentsOut.html","title":"interface - GetPaymentsOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetPaymentsOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getPaymentsOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payments:         Payment[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Payment[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Payment} from 'src/app/modules/wallet/interfaces/types/payment';\n\nexport interface GetPaymentsOut {\n\tpayments: Payment[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersIn.html":{"url":"interfaces/GetTransfersIn.html","title":"interface - GetTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getTransfersIn.ts\n        \n\n\n            \n                Description\n            \n            \n                Get wallet transfers request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            filter_by_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            max_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            min_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers FAILED\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter_by_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filter_by_height:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Filter TX's\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers IN\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        max_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        max_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    max height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        min_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        min_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    min height\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers OUT\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers PENDING\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    transfers POOL\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface GetTransfersIn {\n\t/** transfers IN */\n\tin?: boolean;\n\t/** transfers OUT */\n\tout?: boolean;\n\t/** transfers PENDING */\n\tpending?: boolean;\n\t/** transfers FAILED */\n\tfailed?: boolean;\n\t/** transfers POOL */\n\tpool?: boolean;\n\t/** Filter TX's */\n\tfilter_by_height?: boolean;\n\t/** min height */\n\tmin_height?: number;\n\t/** max height */\n\tmax_height?: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GetTransfersOut.html":{"url":"interfaces/GetTransfersOut.html","title":"interface - GetTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GetTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/getTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            failed\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            in\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            out\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pending\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pool\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        failed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        failed:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        in\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        in:     \n\n                                    \n                                \n\n\n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        out\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        out:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pending\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pending:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pool\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pool:         Transfer[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Transfer[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Transfer} from 'src/app/modules/wallet/interfaces/types/transfer';\nimport {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\n\nexport interface GetTransfersOut {\n\tin?: Transfer[] & Destination[]; // - boolean;\n\tout?: Transfer[]; // - boolean;\n\tpending?: Transfer[]; // - boolean;\n\tfailed?: Transfer[]; // - boolean;\n\tpool?: Transfer[]; // - boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashLinkPipe.html":{"url":"pipes/HashLinkPipe.html","title":"pipe - HashLinkPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashLinkPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashLink.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashLink\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(string, maxLength: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashLink.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    string\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                    \n\n                                \n                                \n                                    maxLength\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        16\n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: \"hashLink\", pure: false })\nexport class HashLinkPipe implements PipeTransform {\n  constructor() {}\n\n  transform(string, maxLength = 16) {\n    if (!string) return string;\n    if (maxLength \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/HashRatePipe.html":{"url":"pipes/HashRatePipe.html","title":"pipe - HashRatePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  HashRatePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/hashrate.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        hashrate\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number | string, decorator?: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/hashrate.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Default value\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                            number | string\n                                    \n\n                                    \n                                        No\n                                    \n\n                                    \n                                        0\n                                    \n\n                                \n                                \n                                    decorator\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        Yes\n                                    \n\n                                    \n                                    \n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'hashrate', pure: false })\nexport class HashRatePipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(content: number | string = 0, decorator?: boolean) {\n\t\tif (typeof content == 'string' || content === null) {\n\t\t\tcontent = 0;\n\t\t}\n\t\tlet i = 0;\n\t\tconst units = ['', 'K', 'M', 'G', 'T', 'P', 'E', 'Z'];\n\t\twhile (content > 1000) {\n\t\t\tcontent /= 1000;\n\t\t\ti++;\n\t\t}\n\t\tif (decorator === false) {\n\t\t\treturn content.toFixed(2);\n\t\t} else {\n\t\t\treturn `${content.toFixed(2)} ${units[i]}H`;\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/HeaderInterceptor.html":{"url":"interceptors/HeaderInterceptor.html","title":"interceptor - HeaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  HeaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/auth/auth.interceptor.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(httpRequest: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/auth.interceptor.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    httpRequest\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpEvent, HttpRequest, HttpHandler } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport {AuthService} from '@module/auth/auth.service';\n\n@Injectable()\nexport class HeaderInterceptor implements HttpInterceptor {\n\tintercept(httpRequest: HttpRequest, next: HttpHandler): Observable> {\n\n\t\tif(AuthService.token.access_token) {\n\t\t\treturn next.handle( httpRequest.clone({\n\t\t\t\tsetHeaders: { 'Authorization': AuthService.token.access_token }\n\t\t\t}));\n\t\t}\n\t\treturn next.handle(httpRequest);\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Height.html":{"url":"interfaces/Height.html","title":"interface - Height","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Height\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/height.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            height\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Height {\n\theight: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersIn.html":{"url":"interfaces/IncomingTransfersIn.html","title":"interface - IncomingTransfersIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/incomingTransfersIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            transfer_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        transfer_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transfer_type:     \"all\" | \"available\" | \"unavailable\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"all\" | \"available\" | \"unavailable\"\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersIn {\n\ttransfer_type: 'all' | 'available' | 'unavailable';\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IncomingTransfersOut.html":{"url":"interfaces/IncomingTransfersOut.html","title":"interface - IncomingTransfersOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IncomingTransfersOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/incomingTransfersOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            global_index\n                                        \n                                \n                                \n                                        \n                                            spent\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_size\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        global_index\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        global_index:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spent\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spent:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_size\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_size:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface IncomingTransfersOut {\n\tamount: number; // - unsigned int\n\tspent: boolean; // - boolean\n\tglobal_index: number; // - unsigned int; Mostly internal use, can be ignored by most users.\n\ttx_hash: string; // - string; Several incoming transfers may share the same hash if they were in the same transaction.\n\ttx_size: number; // - unsigned int\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IntegratedAddress.html":{"url":"interfaces/IntegratedAddress.html","title":"interface - IntegratedAddress","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IntegratedAddress\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/integratedAddress.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            integrated_address\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        integrated_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        integrated_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from 'src/app/modules/wallet/interfaces/types/address';\n\nexport interface IntegratedAddress {\n\tintegrated_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogEntry.html":{"url":"interfaces/LogEntry.html","title":"interface - LogEntry","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogEntry\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            group\n                                        \n                                \n                                \n                                        \n                                            log\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        group\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        log\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        log:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/auth/login.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-login\n            \n\n            \n                styleUrls\n                ./login.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                fileName\n                            \n                            \n                                key\n                            \n                            \n                                    Public\n                                password\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                inputChanged\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                    Async\n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService, router: Router, notificationService: NotificationService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/auth/login.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        inputChanged\n                        \n                    \n                \n            \n            \n                \ninputChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        submit\n                        \n                    \n                \n            \n            \n                \n                    \n                    submit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/auth/login.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fileName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/auth/login.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {AuthService} from './auth.service';\nimport {Router} from '@angular/router';\nimport {NotificationService, NotificationType} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-login',\n\ttemplateUrl: './login.component.html',\n\tstyleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\tkey: string;\n\terror = '';\n\tfileName = '';\n\tpublic password: any;\n\n\tconstructor(private authService: AuthService, private router: Router, private notificationService: NotificationService) {\n\n\t}\n\n\tinputChanged() {\n\t\t// Reset error after inputs are changed\n\t\tthis.error = '';\n\t}\n\n\tasync submit() {\n\n\t\tif (this.key) {\n\n\t\t\t//this.authService.login(privateKey);\n\t\t\t//this.router.navigate(['/']);\n\n\t\t\t this.authService.login(this.key, this.password)\n\t\t\t\t.then(() => {\n\t\t\t\t\tif (this.authService.getAuthStatus()) {\n\t\t\t\t\t\tthis.router.navigateByUrl('/');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.error = 'Login Failed, try again.';\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.catch((e) => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t\tthis.error = 'Login Failed, try again.';\n\t\t\t\t});\n\t\t}\n\t}\n\n\tpublic ngOnInit(): void {\n\n\t}\n\n\tonFileSelected(event) {\n\n\t\tconst file: File = event.target.files[0];\n\n\t\tconst that = this;\n\t\tif (file) {\n\n\t\t\tthis.fileName = file.name;\n\n\t\t\tlet reader = new FileReader();\n\n\t\t\treader.addEventListener('load', async function (e) {\n\t\t\t\tlet text = e.target.result.toString();\n\t\t\t\ttry {\n\t\t\t\t\tthat.key = text;\n\t\t\t\t} catch (e) {\n\n\t\t\t\t}\n\n\t\t\t});\n\n\t\t\t// event fired when file reading failed\n\t\t\treader.addEventListener('error', function () {\n\t\t\t\tthat.notificationService.create({\n\t\t\t\t\ttitle: 'Error',\n\t\t\t\t\tbody: 'Could not read file',\n\t\t\t\t\ttype: NotificationType.html\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// read file as text file\n\t\t\treader.readAsText(file);\n\n\t\t}\n\t}\n}\n\n    \n\n    \n         0\">{{error}}\n\n    \n        {{fileName || \"Select private key.\"}}\n        \n        \n            attach_file\n        \n    \n    \n        \n        \n    \n    \n        Login\n    \n\n\n\n\n\n\n\n\n    \n\n    \n                \n                    ./login.component.scss\n                \n                .file-input {\n  display: none;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ' 0\">{{error}}            {{fileName || \"Select private key.\"}}                            attach_file                                                Login    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LogsComponent.html":{"url":"components/LogsComponent.html","title":"component - LogsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LogsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/logs/logs.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-logs\n            \n\n            \n                styleUrls\n                ./logs.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/logs/logs.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/logs/logs.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-logs',\n\ttemplateUrl: './logs.component.html',\n\tstyleUrls: ['./logs.component.scss']\n})\nexport class LogsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./logs.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'LogsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LogsModule.html":{"url":"modules/LogsModule.html","title":"module - LogsModule","body":"\n                   \n\n\n\n\n    Modules\n    LogsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_LogsModule_declarations\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/logs/logs.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {LogsComponent} from './logs.component';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'logs',\n\t\tcomponent: LogsComponent\n\t}\n];\n\n@NgModule({\n\tdeclarations: [LogsComponent],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule, LogsComponent]\n})\nexport class LogsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LogsState.html":{"url":"interfaces/LogsState.html","title":"interface - LogsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LogsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/logs/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logs\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logs\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logs:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LogsState {\n\tlogs: string[];\n}\n\nexport interface LogEntry {\n\tgroup: string;\n\tlog: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeIntegratedAddressIn.html":{"url":"interfaces/MakeIntegratedAddressIn.html","title":"interface - MakeIntegratedAddressIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeIntegratedAddressIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/makeIntegratedAddressIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface MakeIntegratedAddressIn {\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/MakeUriIn.html":{"url":"interfaces/MakeUriIn.html","title":"interface - MakeUriIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  MakeUriIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/makeUriIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            recipient_name\n                                        \n                                \n                                \n                                        \n                                            tx_description\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        recipient_name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        recipient_name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from 'src/app/modules/wallet/interfaces/types/address';\n\nexport interface MakeUriIn {\n\taddress: Address;\n\tamount?: number; // (optional) - the integer amount to receive, in atomic units\n\tpayment_id?: string; // (optional) - 16 or 64 character hexadecimal payment id string\n\trecipient_name?: string; // (optional) - string name of the payment recipient\n\ttx_description: string; // (optional) - string describing the reason for the tx\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/services/ui/modal/modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                modalContent\n                            \n                            \n                                    Private\n                                modalRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                close\n                            \n                            \n                                    Async\n                                dismiss\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                modalConfig\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modalService: NgbModal)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modalService\n                                                  \n                                                        \n                                                                    NgbModal\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        modalConfig\n                    \n                \n                \n                    \n                        Type :         ModalConfig\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/services/ui/modal/modal.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        close\n                        \n                    \n                \n            \n            \n                \n                    \n                    close()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        dismiss\n                        \n                    \n                \n            \n            \n                \n                    \n                    dismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open\n                        \n                    \n                \n            \n            \n                \nopen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modal.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalContent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TemplateRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('modal')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        modalRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :     NgbModalRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/ui/modal/modal.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Injectable, Input, OnInit, TemplateRef, ViewChild} from '@angular/core';\nimport {NgbModal, NgbModalRef} from '@ng-bootstrap/ng-bootstrap';\nimport {ModalConfig} from '@service/ui/modal/modalConfig';\n\n@Component({\n\tselector: 'modal',\n\ttemplateUrl: './modal.component.html'\n})\n@Injectable({providedIn: 'root'})\nexport class ModalComponent implements OnInit {\n\n\t@Input() public modalConfig: ModalConfig\n\n\t@ViewChild('modal') private modalContent: TemplateRef\n\tprivate modalRef: NgbModalRef\n\n\tconstructor(private modalService: NgbModal) { }\n\n\tngOnInit(): void { }\n\n\topen(): Promise {\n\t\treturn new Promise(resolve => {\n\t\t\tthis.modalRef = this.modalService.open(this.modalContent)\n\t\t\tthis.modalRef.result.then(resolve, resolve)\n\t\t})\n\t}\n\n\tasync close(): Promise {\n\t\tif (this.modalConfig.shouldClose === undefined || (await this.modalConfig.shouldClose())) {\n\t\t\tconst result = this.modalConfig.onClose === undefined || (await this.modalConfig.onClose())\n\t\t\tthis.modalRef.close(result)\n\t\t}\n\t}\n\n\tasync dismiss(): Promise {\n\t\tif (this.modalConfig.shouldDismiss === undefined || (await this.modalConfig.shouldDismiss())) {\n\t\t\tconst result = this.modalConfig.onDismiss === undefined || (await this.modalConfig.onDismiss())\n\t\t\tthis.modalRef.dismiss(result)\n\t\t}\n\t}\n}\n\n\n\n\n\n\n    \n\n    \n        \n    \n        {{ modalConfig.modalTitle }}\n    \n    \n        \n    \n    \n        \n            {{ modalConfig.dismissButtonLabel }}\n        \n        \n            {{ modalConfig.closeButtonLabel }}\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{ modalConfig.modalTitle }}                                            {{ modalConfig.dismissButtonLabel }}                            {{ modalConfig.closeButtonLabel }}            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModalConfig.html":{"url":"interfaces/ModalConfig.html","title":"interface - ModalConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ModalConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/ui/modal/modalConfig.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            closeButtonLabel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            dismissButtonLabel\n                                        \n                                \n                                \n                                        \n                                            modalTitle\n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                        Optional\n                                    \n                                        disableCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        disableDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideCloseButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        hideDismissButton\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        onDismiss\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldClose\n                                    \n                                \n                                \n                                        Optional\n                                    \n                                        shouldDismiss\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableCloseButton\n                        \n                    \n                \n            \n            \n                \ndisableCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        disableDismissButton\n                        \n                    \n                \n            \n            \n                \ndisableDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideCloseButton\n                        \n                    \n                \n            \n            \n                \nhideCloseButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        hideDismissButton\n                        \n                    \n                \n            \n            \n                \nhideDismissButton()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onClose\n                        \n                    \n                \n            \n            \n                \nonClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        onDismiss\n                        \n                    \n                \n            \n            \n                \nonDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldClose\n                        \n                    \n                \n            \n            \n                \nshouldClose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Optional\n                        shouldDismiss\n                        \n                    \n                \n            \n            \n                \nshouldDismiss()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/ui/modal/modalConfig.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise | boolean\n\n                    \n                \n            \n        \n    \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        closeButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        closeButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dismissButtonLabel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dismissButtonLabel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        modalTitle\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        modalTitle:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ModalConfig {\n\tmodalTitle: string;\n\tdismissButtonLabel?: string;\n\tcloseButtonLabel?: string;\n\n\tshouldClose?(): Promise | boolean;\n\n\tshouldDismiss?(): Promise | boolean;\n\n\tonClose?(): Promise | boolean;\n\n\tonDismiss?(): Promise | boolean;\n\n\tdisableCloseButton?(): boolean;\n\n\tdisableDismissButton?(): boolean;\n\n\thideCloseButton?(): boolean;\n\n\thideDismissButton?(): boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ModalModule.html":{"url":"modules/ModalModule.html","title":"module - ModalModule","body":"\n                   \n\n\n\n\n    Modules\n    ModalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/ui/modal/modal.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {ModalComponent} from '@service/ui/modal/modal.component';\n\n\n\n@NgModule({\n  declarations: [ModalComponent],\n  exports: [\n    ModalComponent\n  ],\n  imports: [\n    CommonModule\n  ]\n})\nexport class ModalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NetworkHashrateChart.html":{"url":"injectables/NetworkHashrateChart.html","title":"injectable - NetworkHashrateChart","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  NetworkHashrateChart\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chart/charts/network-hashrate.chart.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        BaseChartConfigService\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                key\n                            \n                            \n                                    Public\n                                pollingStartAction\n                            \n                            \n                                    Public\n                                pollingStopAction\n                            \n                            \n                                    Public\n                                type\n                            \n                            \n                                    Public\n                                options\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                configureOptions\n                            \n                            \n                                dataMap\n                            \n                            \n                                setupCallbacks\n                            \n                            \n                                addOptions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configureOptions\n                        \n                    \n                \n            \n            \n                \nconfigureOptions()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:31\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataMap\n                        \n                    \n                \n            \n            \n                \ndataMap(data)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/chart/charts/network-hashrate.chart.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setupCallbacks\n                        \n                    \n                \n            \n            \n                \nsetupCallbacks()\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:121\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        addOptions\n                        \n                    \n                \n            \n            \n                \naddOptions(overrides: object)\n                \n            \n\n\n            \n                \n                    Inherited from         BaseChartConfigService\n\n                \n            \n            \n                \n                        Defined in         BaseChartConfigService:61\n\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    overrides\n                                    \n                                                object\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:18\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'networkDifficulty'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStartAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStartPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/charts/network-hashrate.chart.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pollingStopAction\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ChartsActions.chartNetworkDifficultyStopPolling()\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/chart/charts/network-hashrate.chart.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'line'\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:17\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        options\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tmaintainAspectRatio: false,\n\t\t//normalized: true,\n\t\tcolors: ['e2e2e2'],\n\t\tanimation: false,\n\t\thover: {\n\t\t\tanimationDuration: 0 // duration of animations when hovering an item\n\t\t},\n\t\tresponsiveAnimationDuration: 0,\n\t\telements: {\n\t\t\tpoint: {\n\t\t\t\tradius: 0\n\t\t\t},\n\t\t\tline: {\n\t\t\t\ttension: 0,\n\t\t\t\tborderWidth: 0.5\n\t\t\t}\n\t\t},\n\t\tscales: {\n\t\t\tx: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t},\n\t\t\ty: {\n\t\t\t\tticks: {\n\t\t\t\t\tcallback: undefined\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tplugins: {\n\t\t\tlegend: {\n\t\t\t\tdisplay: true\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\tcallbacks: {}\n\t\t\t}\n\t\t}\n\t}\n                    \n                \n                        \n                            \n                                Inherited from         BaseChartConfigService\n\n                            \n                        \n                    \n                        \n                                Defined in         BaseChartConfigService:12\n\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport * as ChartsActions from '@module/chart/data/actions';\nimport {BaseChartConfigService} from '@module/chart/base-chart-config.service';\nimport {ChartConfigInterface} from '@module/chart/chart-config.interface';\n\n@Injectable({\n\tprovidedIn: 'any'\n})\nexport class NetworkHashrateChart\n\textends BaseChartConfigService\n\timplements ChartConfigInterface {\n\tpublic pollingStartAction =\n\t\tChartsActions.chartNetworkDifficultyStartPolling();\n\tpublic pollingStopAction =\n\t\tChartsActions.chartNetworkDifficultyStopPolling();\n\tpublic key = 'networkDifficulty';\n\tpublic type = 'line';\n\tpublic data = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tlabel: 'Dataset with string point data',\n\t\t\t\tfill: true,\n\t\t\t\tbackgroundColor: null,\n\t\t\t\tborderColor: null,\n\t\t\t\tcolor: null,\n\t\t\t\tdata: []\n\t\t\t}\n\t\t]\n\t};\n\n\tconfigureOptions() {\n\t\tthis.addOptions({\n\t\t\tparsing: false,\n\t\t\tspanGaps: true,\n\t\t\tlayout: {\n\t\t\t\tpadding: {\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tright: 0,\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbottom: 0\n\t\t\t\t}\n\t\t\t},\n\t\t\tscales: {\n\t\t\t\tx: {\n\t\t\t\t\ttitle: 'time',\n\t\t\t\t\ttype: 'timeseries',\n\t\t\t\t\ttime: {\n\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\tday: 'D MMM'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tunit: 'day'\n\t\t\t\t\t},\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tsource: 'data',\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tsize: 10,\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro'\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tpadding: 2,\n\t\t\t\t\t\tbounds: 'data',\n\t\t\t\t\t\tmaxRotation: 0\n\t\t\t\t\t},\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: false,\n\t\t\t\t\t\tlineWidth: 0,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\toffsetGridLines: false,\n\t\t\t\t\t\ttickMarkLength: 0\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\ty: {\n\t\t\t\t\ttitle: 'hashrate',\n\t\t\t\t\tticks: {\n\t\t\t\t\t\tcallback: null,\n\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\tfamily: 'Source Sans Pro',\n\t\t\t\t\t\t\tsize: 10\n\t\t\t\t\t\t},\n\t\t\t\t\t\tcolor: 'white',\n\t\t\t\t\t\tmirror: true,\n\t\t\t\t\t\tpadding: 4\n\t\t\t\t\t},\n\t\t\t\t\tposition: 'left',\n\t\t\t\t\tgridLines: {\n\t\t\t\t\t\tdisplay: true,\n\t\t\t\t\t\tlineWidth: 1,\n\t\t\t\t\t\tdrawBorder: false,\n\t\t\t\t\t\tzeroLineWidth: 0,\n\t\t\t\t\t\ttickMarkLength: 0,\n\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.1)'\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tplugins: {\n\t\t\t\tlegend: {\n\t\t\t\t\tdisplay: false\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\tposition: 'nearest',\n\t\t\t\t\tmode: 'index',\n\t\t\t\t\tintersect: false,\n\t\t\t\t\tcaretSize: 4,\n\t\t\t\t\tbackgroundColor: 'e2e2e2',\n\t\t\t\t\tborderColor: 'rgba(255,255,255,0.5)',\n\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\tcallbacks: {}\n\t\t\t\t},\n\t\t\t\tdecimation: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\talgorithm: 'lttb',\n\t\t\t\t\tsamples: 50\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolors: ['#1c9ea3']\n\t\t});\n\t}\n\n\tsetupCallbacks() {\n\n\t\t// this.options.scales.y.ticks.callback = function (value, index, values) {\n\t\t//     return vm.hashratePipe.transform(value);\n\t\t// };\n\t\t//\n\t\t// this.options.plugins.tooltip.callbacks = {\n\t\t//     label: context => `Hashrate: ${vm.hashratePipe.transform(context.parsed.y)}`\n\t\t// };\n\t}\n\n\tdataMap(data) {\n\t\treturn data.map((n: any) => ({\n\t\t\tx: n.ts,\n\t\t\ty: Math.floor(n.diff / 120)\n\t\t}));\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NoDaemonRunningDialog.html":{"url":"components/NoDaemonRunningDialog.html","title":"component - NoDaemonRunningDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NoDaemonRunningDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/dialog/no-daemon-running.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status-no-daemon\n            \n\n\n\n\n            \n                templateUrl\n                no-daemon-running.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                data\n                            \n                            \n                                    Public\n                                dialogRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onNoClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialogRef: MatDialogRef, data: DialogData)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        DialogData\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onNoClick\n                        \n                    \n                \n            \n            \n                \nonNoClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         DialogData\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/dialog/no-daemon-running.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\n\nexport interface DialogData {\n\tanimal: string;\n\tname: string;\n}\n\n@Component({\n\tselector: 'lthn-app-status-no-daemon',\n\ttemplateUrl: 'no-daemon-running.component.html'\n})\nexport class NoDaemonRunningDialog {\n\tconstructor(\n\t\tpublic dialogRef: MatDialogRef,\n\t\t@Inject(MAT_DIALOG_DATA) public data: DialogData\n\t) {}\n\n\tonNoClick(): void {\n\t\tthis.dialogRef.close();\n\t}\n}\n\n    \n\n    \n        \n  Please Download Our App\n  \n    The blockchain functionality requires extra software, please install our app to enable this feature.\n  \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Please Download Our App      The blockchain functionality requires extra software, please install our app to enable this feature.  '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'NoDaemonRunningDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OpenComponent.html":{"url":"components/OpenComponent.html","title":"component - OpenComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  OpenComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/open.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-open\n            \n\n\n\n\n            \n                templateUrl\n                ./open.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                    Public\n                                loadingService\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                unlockWallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, notificationService: NotificationService, alertService: AlertService, loadingService: LoadingService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/open.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                    LoadingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/open.component.ts:11\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/open.component.ts:28\n                \n            \n\n\n            \n                \n                    get list of filesystem wallets\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        unlockWallet\n                        \n                    \n                \n            \n            \n                \nunlockWallet(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/open.component.ts:37\n                \n            \n\n\n            \n                \n                    Unlock wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/open.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loadingService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LoadingService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/open.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/open.component.ts:18\n                        \n                    \n\n            \n                \n                    Lists the wallets known\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {AlertService, LoadingService, NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-wallet-open',\n\ttemplateUrl: './open.component.html'\n})\nexport class OpenComponent implements OnInit {\n\t@Input() name?: string = '';\n\n\t/**\n\t * Lists the wallets known\n\t *\n\t * @type {string[]}\n\t */\n\tpublic wallets: string[];\n\n\n\tconstructor(private wallet: WalletService, private notificationService: NotificationService, public alertService: AlertService, public loadingService: LoadingService) {\n\n\t}\n\n\t/**\n\t * get list of filesystem wallets\n\t */\n\tngOnInit(): void {\n\t\tthis.wallets = this.wallet.getWalletList()\n\t}\n\n\t/**\n\t * Unlock wallet\n\t *\n\t * @returns {Promise>}\n\t */\n\tunlockWallet(name: string) {\n\t\tthis.wallet.startWalletService()\n\t\tconst subject = this.alertService.prompt({\n\t\t\ttitle: 'Wallet Password',\n\t\t\tcontent: 'Please enter the wallet password.'\n\t\t});\n\t\tsubject.subscribe({\n\t\t\tnext: (v) => {\n\t\t\t\tthis.loadingService.start()\n\t\t\t\tthis.wallet.openWallet({filename: name, password: v.data.data}).then(async () => {\n\t\t\t\t\tthis.name = name;\n\t\t\t\t\tthis.notificationService.create({\n\t\t\t\t\t\ttype: NotificationType.html,\n\t\t\t\t\t\tstyleType: NotificationStyleType.success,\n\t\t\t\t\t\ttitle: 'Loaded Wallet!',\n\t\t\t\t\t\tbody: name\n\t\t\t\t\t})\n\t\t\t\t\tthis.loadingService.complete()\n\t\t\t\t}).catch((err) => console.error(err))\n\t\t\t},\n\t\t\terror: (err) => console.log('Prompt err', err)\n\t\t});\n\n\t}\n\n\n}\n\n    \n\n    \n        \n    {{ 'app.lthn.wallet.titles.unlock-wallet' | translate }}\n\n        \n            \n            \n                {{wall}}\n                \n                    {{ 'app.lthn.wallet.button.unlock-wallet' | translate }}\n\n                \n            \n            \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'app.lthn.wallet.titles.unlock-wallet\\' | translate }}                                                {{wall}}                                    {{ \\'app.lthn.wallet.button.unlock-wallet\\' | translate }}                                                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'OpenComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/OpenWallet.html":{"url":"interfaces/OpenWallet.html","title":"interface - OpenWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  OpenWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptions.html":{"url":"classes/PaginatorOptions.html","title":"class - PaginatorOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            PaginatorOptionsInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 15\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 30\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginatorOptionsInterface.html":{"url":"classes/PaginatorOptionsInterface.html","title":"class - PaginatorOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginatorOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/interface/pagination.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageNumber\n                            \n                            \n                                size\n                            \n                            \n                                totalElements\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        pageNumber\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        size\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalElements\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalPages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/data/interface/pagination.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class PaginatorOptionsInterface {\n\t// The number of elements in the page\n\tsize: number;\n\t// The total number of elements\n\ttotalElements: number;\n\t// The total number of pages\n\ttotalPages: number;\n\t// The current page number\n\tpageNumber: number;\n}\n\nexport class PaginatorOptions implements PaginatorOptionsInterface{\n\tsize = 15;\n\ttotalElements = 30;\n\ttotalPages = 1;\n\tpageNumber = 1;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ParseUri.html":{"url":"interfaces/ParseUri.html","title":"interface - ParseUri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ParseUri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         MakeUriIn\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         MakeUriIn\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Payment.html":{"url":"interfaces/Payment.html","title":"interface - Payment","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Payment\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/payment.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            block_height\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        block_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        block_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Payment {\n\tamount: number;\n\tblock_height: number;\n\tpayment_id: string;\n\ttx_hash: string;\n\tunlock_time: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PipesModule.html":{"url":"modules/PipesModule.html","title":"module - PipesModule","body":"\n                   \n\n\n\n\n    Modules\n    PipesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PipesModule_declarations\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nFromCoinPipe\n\nFromCoinPipe\n\nPipesModule -->\n\nFromCoinPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nFromCoinPipe \n\nFromCoinPipe \n\nFromCoinPipe  -->\n\nPipesModule->FromCoinPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/pipes.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            FromCoinPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            EffortPipe\n                        \n                        \n                            EscapeHtmlPipe\n                        \n                        \n                            FromCoinPipe\n                        \n                        \n                            HashLinkPipe\n                        \n                        \n                            HashRatePipe\n                        \n                        \n                            RemoveTrailingZerosPipe\n                        \n                        \n                            ShruggiePipe\n                        \n                        \n                            TimeAgoPipe\n                        \n                        \n                            ToCoinPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {EffortPipe, EscapeHtmlPipe, HashLinkPipe, HashRatePipe, RemoveTrailingZerosPipe, ShruggiePipe, TimeAgoPipe, ToCoinPipe} from '@pipe/index';\nimport {FromCoinPipe} from '@pipe/crypto/fromCoin.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tToCoinPipe,\n\t\tFromCoinPipe,\n\t\tHashLinkPipe\n\t],\n\texports: [\n\t\tHashRatePipe,\n\t\tEffortPipe,\n\t\tTimeAgoPipe,\n\t\tEscapeHtmlPipe,\n\t\tShruggiePipe,\n\t\tRemoveTrailingZerosPipe,\n\t\tToCoinPipe,\n\t\tHashLinkPipe,\n\t\tFromCoinPipe\n\t],\n\timports: [CommonModule]\n})\nexport class PipesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PluginDefinition.html":{"url":"interfaces/PluginDefinition.html","title":"interface - PluginDefinition","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  PluginDefinition\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description_short\n                                        \n                                \n                                \n                                        \n                                            git_repo\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            readme_list\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description_short\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description_short:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        git_repo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        git_repo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readme_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readme_list:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         PluginStatus\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginStatus\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Plugins.html":{"url":"interfaces/Plugins.html","title":"interface - Plugins","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Plugins\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/data/plugins/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            last_update_check\n                                        \n                                \n                                \n                                        \n                                            loaded_keys\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        last_update_check\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        last_update_check:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_keys:         PluginDefinition[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         PluginDefinition[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Plugins {\n\tlast_update_check: number\n\tloaded_keys: PluginDefinition[];\n}\n\nexport interface PluginDefinition {\n\tname: string;\n\tdescription_short: string;\n\treadme_list: string;\n\tgit_repo: string;\n\tstatus: PluginStatus\n}\n\nexport enum PluginStatus {\n\tDISABLED = 0,\n\tACTIVE = 1,\n\tTIMED = 2,\n\tOUTDATED = 3\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PostComponent.html":{"url":"components/PostComponent.html","title":"component - PostComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PostComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/post/post.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-post\n            \n\n            \n                styleUrls\n                ./post.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./post.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                posts\n                            \n                            \n                                    Private\n                                sub\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLatestPosts\n                            \n                            \n                                loadPost\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/post/post.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLatestPosts\n                        \n                    \n                \n            \n            \n                \ngetLatestPosts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadPost\n                        \n                    \n                \n            \n            \n                \nloadPost(slug, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/post/post.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/post/post.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        sub\n                        \n                    \n                \n            \n                    \n                        \n                                Defined in src/app/modules/content/post/post.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\n\n@Component({\n\tselector: 'lthn-app-post',\n\ttemplateUrl: './post.component.html',\n\tstyleUrls: ['./post.component.scss']\n})\nexport class PostComponent implements OnInit, OnDestroy {\n\tpublic posts:any;\n\tprivate sub;\n\n\tconstructor(private http: HttpClient) {}\n\n\tngOnInit(): void {\n\n\t\tthis.sub = this.getLatestPosts()\n\t\t\t.subscribe((data: any) => this.posts = data);\n\t}\n\n\n\tgetLatestPosts() {\n\t\treturn this.http.get(\"https://sparta.lt.hn/latest.json\");\n\t}\n\n\tloadPost(slug, id){\n\t\tthis.http.get(`https://sparta.lt.hn/${slug}/${id}.json`).subscribe((data: any) => {\n\t\t\tthis.posts = data\n\t\t});\n\t}\n\n\tpublic ngOnDestroy(): void {\n\t\tthis.sub.unsubscribe();\n\t}\n}\n\n    \n\n    \n        \n    \n        {{post.title }}\n    \n\n\n\n\n\n    \n\n    \n                \n                    ./post.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{post.title }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'PostComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostModule.html":{"url":"modules/PostModule.html","title":"module - PostModule","body":"\n                   \n\n\n\n\n    Modules\n    PostModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_PostModule_exports\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nPostComponent \n\nPostComponent \n\nPostComponent  -->\n\nPostModule->PostComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/post/post.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PostComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {PostComponent} from 'src/app/modules/content/post/post.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {MatListModule} from '@angular/material/list';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {MatButtonModule} from '@angular/material/button';\n\n\n\n@NgModule({\n\tdeclarations: [PostComponent],\n\texports: [\n\t\tPostComponent\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tPipesModule,\n\t\tMatListModule,\n\t\tReactiveComponentModule,\n\t\tMatButtonModule\n\t]\n})\nexport class PostModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostRoutingModule.html":{"url":"modules/PostRoutingModule.html","title":"module - PostRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    PostRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/post/post-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'p',\n\t\tloadChildren: () => \"import('src/app/modules/content/post/post.module').then((m) => m.PostModule)\"\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class PostRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user-profile\n            \n\n            \n                styleUrls\n                ./profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                randomAlias\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/profile.component.ts:14\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/profile.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        randomAlias\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {colors, names, starWars, uniqueNamesGenerator} from 'unique-names-generator';\n\n@Component({\n\tselector: 'lthn-user-profile',\n\ttemplateUrl: './profile.component.html',\n\tstyleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\tpublic randomAlias: string = uniqueNamesGenerator({\n\t\tdictionaries: [names, colors, starWars],\n\t\tstyle: 'capital',\n\t\tseparator: ' '\n\t});\n\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            Profiles\n            \n              Profile 1\n              -->\n              \n              -->\n            \n          \n\n          \n          \n            \n              person_add\n            \n          \n          \n            engineering\n          \n        \n      \n\n\n    \n    \n    \n      \n        Profile\n        \n          \n            Name\n          \n        \n      \n      \n        Blockchain Settings\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n      \n        Wallets\n        \n          Run Lethean Chain Daemon\n          yes/no\n          Use Remote Nodes\n          yes/no\n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                          Profiles                          Profile 1              -->                            -->                                                                    person_add                                            engineering                                                  Profile                              Name                                      Blockchain Settings                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                            Wallets                  Run Lethean Chain Daemon          yes/no          Use Remote Nodes          yes/no                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ProfileState.html":{"url":"interfaces/ProfileState.html","title":"interface - ProfileState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ProfileState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/profile/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            alias\n                                        \n                                \n                                \n                                        \n                                            avatar\n                                        \n                                \n                                \n                                        \n                                            dkey\n                                        \n                                \n                                \n                                        \n                                            ekey\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alias\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        alias:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        avatar\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        avatar:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ekey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        ekey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ProfileState {\n\t// Friendly name for the profile\n\talias: string;\n\t// auto generated image from the friendly name\n\tavatar: string;\n\t// id's to attached wallets\n\twallets: any;\n\t// application prefrences etc\n\toptions: any;\n\t// Decryption Key, used to store profile data encrypted within a shared local database\n\tdkey: string;\n\t// Encryption Key, to save data\n\tekey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyIn.html":{"url":"interfaces/QueryKeyIn.html","title":"interface - QueryKeyIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/queryKeyIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key_type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key_type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key_type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyIn {\n\tkey_type: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/QueryKeyOut.html":{"url":"interfaces/QueryKeyOut.html","title":"interface - QueryKeyOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  QueryKeyOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/queryKeyOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface QueryKeyOut {\n\tkey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/RemoveTrailingZerosPipe.html":{"url":"pipes/RemoveTrailingZerosPipe.html","title":"pipe - RemoveTrailingZerosPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  RemoveTrailingZerosPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/math/removeTrailingZeros.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        removeTrailingZero\n                    \n                    \n                        Pure\n                        true\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/math/removeTrailingZeros.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'removeTrailingZero', pure: true })\nexport class RemoveTrailingZerosPipe implements PipeTransform {\n\tconstructor() {}\n\n\ttransform(value) {\n\t\tvalue = value.toString();\n\t\tif (value.indexOf('.') === -1) {\n\t\t\treturn parseInt(value);\n\t\t}\n\t\twhile (\n\t\t\t(value.slice(-1) === '0' || value.slice(-1) === '.') &&\n\t\t\tvalue.indexOf('.') !== -1\n\t\t) {\n\t\t\tvalue = value.substr(0, value.length - 1);\n\t\t}\n\t\treturn value;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RestoreComponent.html":{"url":"components/RestoreComponent.html","title":"component - RestoreComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RestoreComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/restore.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-restore\n            \n\n\n\n\n            \n                templateUrl\n                ./restore.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                restoreWalletForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                restoreWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/restore.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/restore.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/restore.component.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWalletForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/restore.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {nameNotTakenValidator} from 'src/app/modules/wallet/validators';\n\n@Component({\n\tselector: 'lthn-wallet-restore',\n\ttemplateUrl: './restore.component.html'\n})\n\nexport class RestoreComponent implements OnInit {\n\trestoreWalletForm : FormGroup;\n\n\tconstructor(private wallet: WalletService) {\n\t}\n\n\tngOnInit(): void {\n\t\tthis.restoreWalletForm = new FormGroup({\n\t\t\tfilename: new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]),\n\t\t\taddress: new FormControl(''),\n\t\t\trestore_height: new FormControl('0'),\n\t\t\tautosave_current: new FormControl(true),\n\t\t\tpassword: new FormControl(''),\n\t\t\tpassword_confirm: new FormControl(''),\n\t\t\tspendkey: new FormControl(''),\n\t\t\tviewkey: new FormControl(''),\n\t\t\tviewonly_wallet: new FormControl(false),\n\t\t});\n\t}\n\n\trestoreWallet() {\n\n\t\tthis.wallet.restoreWallet({\n\t\t\tfilename: this.restoreWalletForm.value.filename,\n\t\t\taddress: this.restoreWalletForm.value.address,\n\t\t\trestore_height: this.restoreWalletForm.value.restore_height,\n\t\t\tautosave_current: this.restoreWalletForm.value.autosave_current,\n\t\t\tpassword: this.restoreWalletForm.value.password,\n\t\t\tspendkey:\n\t\t\t(\n\t\t\t\tthis.restoreWalletForm.value.viewonly_wallet ?\n\t\t\t\t\t'' : this.restoreWalletForm.value.spendkey\n\t\t\t)\n\t\t\t,\n\t\t\tviewkey: this.restoreWalletForm.value.viewkey\n\t\t});\n\t}\n}\n\n    \n\n    \n        \n    {{ 'app.lthn.wallet.titles.restore-seed' | translate }}\n    \n        \n            \n                \n                    {{ 'app.lthn.wallet.label.filename' | translate }}\n                    \n\t\t\t\t\tWallet already exists\n                \n                \n                    {{ 'app.lthn.wallet.label.wallet-password' | translate }}\n                    \n                \n                \n                    {{ 'app.lthn.wallet.label.wallet-password-confirm' | translate }}\n                    \n                \n            \n\n            \n                \n                    {{ 'app.lthn.wallet.label.address' | translate }}\n                    \n                \n            \n\n\n\n            \n                {{ 'app.lthn.wallet.label.spend-key' | translate }}\n                \n            \n\n            \n                {{ 'app.lthn.wallet.label.view-key' | translate }}\n                \n            \n\n            \n\n                \n                    \n                        Optional parameters\n                    \n                \n\n                \n                    {{ 'app.lthn.wallet.label.restore-height' | translate }}\n                    \n                \n\n                \n                    {{ 'app.lthn.wallet.label.autosave' | translate }}\n                \n\n                \n                    View only wallet\n                \n\n            \n\n            \n                {{ 'app.lthn.wallet.button.restore-wallet' | translate }}\n            \n\n        \n    \n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'app.lthn.wallet.titles.restore-seed\\' | translate }}                                                            {{ \\'app.lthn.wallet.label.filename\\' | translate }}                    \t\t\t\t\tWallet already exists                                                    {{ \\'app.lthn.wallet.label.wallet-password\\' | translate }}                                                                        {{ \\'app.lthn.wallet.label.wallet-password-confirm\\' | translate }}                                                                                                {{ \\'app.lthn.wallet.label.address\\' | translate }}                                                                            {{ \\'app.lthn.wallet.label.spend-key\\' | translate }}                                                        {{ \\'app.lthn.wallet.label.view-key\\' | translate }}                                                                                                    Optional parameters                                                                        {{ \\'app.lthn.wallet.label.restore-height\\' | translate }}                                                                        {{ \\'app.lthn.wallet.label.autosave\\' | translate }}                                                    View only wallet                                                        {{ \\'app.lthn.wallet.button.restore-wallet\\' | translate }}                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RestoreComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RestoreWallet.html":{"url":"interfaces/RestoreWallet.html","title":"interface - RestoreWallet","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RestoreWallet\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/requests/restoreWallet.ts\n        \n\n\n            \n                Description\n            \n            \n                Restore Wallet request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            autosave_current\n                                        \n                                \n                                \n                                        \n                                            filename\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            restore_height\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            spendkey\n                                        \n                                \n                                \n                                        \n                                            viewkey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's primary address.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autosave_current\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        autosave_current:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Defaults to true) If true, save the current wallet before generating the new wallet.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filename\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        filename:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's file name on the RPC server.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's password.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        restore_height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        restore_height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; defaults to 0) The block height to restore the wallet from.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        spendkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        spendkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        viewkey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        viewkey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The wallet's private view key.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface RestoreWallet {\n\n\t/**\n\t * The wallet's file name on the RPC server.\n\t */\n\tfilename: string;\n\n\t/**\n\t * (Optional; defaults to 0) The block height to restore the wallet from.\n\t */\n\trestore_height?: number;\n\n\t/**\n\t * The wallet's primary address.\n\t */\n\taddress: string;\n\n\t/**\n\t * (Optional; omit to create a view-only wallet) The wallet's private spend key.\n\t */\n\tspendkey?: string;\n\n\t/**\n\t * The wallet's private view key.\n\t */\n\tviewkey: string;\n\n\t/**\n\t * The wallet's password.\n\t */\n\tpassword: string;\n\n\t/**\n\t * (Defaults to true) If true, save the current wallet before generating the new wallet.\n\t */\n\tautosave_current?: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RootComponent.html":{"url":"components/RootComponent.html","title":"component - RootComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RootComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/root.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-root\n            \n\n\n\n\n            \n                templateUrl\n                ./root.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                code\n                            \n                            \n                                    Public\n                                downloadingCLI\n                            \n                            \n                                    Public\n                                hasCLI\n                            \n                            \n                                    Public\n                                loaded\n                            \n                            \n                                    Public\n                                posts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                renderWebView\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/root.component.ts:12\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        renderWebView\n                        \n                    \n                \n            \n            \n                \nrenderWebView()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/root.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        code\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        downloadingCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        hasCLI\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        posts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/root.component.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\n@Component({\n\tselector: 'lthn-root',\n\ttemplateUrl: './root.component.html'\n})\nexport class RootComponent {\n\tpublic posts: any = [];\n\n\tpublic hasCLI: boolean;\n\tpublic loaded: boolean = false;\n\tpublic downloadingCLI: boolean;\n\tpublic code: any;\n\n\tconstructor() {}\n\n\trenderWebView() {\n\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                Welcome to Lethean Desktop!\n                \n                    This app is using bleeding edge technologies to bring Web3 to you, it is rough around the edges and in active development\n                \n\n            \n            \n                \n                    Mining Pools\n                    \n                        \n                            \n                                HashVault\n                            \n                            \n                                FairHash\n                            \n                            \n                                FastPool\n                            \n                            \n                                Pool Pay\n                            \n                        \n                    \n                \n                \n                    Project Websites\n                    \n                        \n                            \n                                Website\n                            \n                            \n                                Community Website\n                            \n                            \n                                SSL & DNS Store\n                            \n                            \n                                GitHub\n                            \n                        \n                    \n                \n            \n        \n        \n            \n                Recent posts on Sparta \n                \n                    \n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Welcome to Lethean Desktop!                                    This app is using bleeding edge technologies to bring Web3 to you, it is rough around the edges and in active development                                                                            Mining Pools                                                                                                        HashVault                                                                                        FairHash                                                                                        FastPool                                                                                        Pool Pay                                                                                                                            Project Websites                                                                                                        Website                                                                                        Community Website                                                                                        SSL & DNS Store                                                                                        GitHub                                                                                                                                                Recent posts on Sparta                                                                             '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'RootComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootModule.html":{"url":"modules/RootModule.html","title":"module - RootModule","body":"\n                   \n\n\n\n\n    Modules\n    RootModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\n\nRootComponent\n\nRootComponent\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nRootModule -->\n\nBlockchainModule->RootModule\n\n\n\n\n\nPostModule\n\nPostModule\n\nRootModule -->\n\nPostModule->RootModule\n\n\n\n\n\nSpartaModule\n\nSpartaModule\n\nRootModule -->\n\nSpartaModule->RootModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            RootComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            BlockchainModule\n                        \n                        \n                            PostModule\n                        \n                        \n                            SpartaModule\n                        \n                        \n                            TranslateModule\n                        \n                        \n                            WalletModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RootComponent} from './root.component';\nimport {MatButtonModule} from '@angular/material/button';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatListModule} from '@angular/material/list';\nimport {ReactiveComponentModule} from '@ngrx/component';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatIconModule} from '@angular/material/icon';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {MatCardModule} from '@angular/material/card';\nimport {WalletModule} from '@module/wallet/wallet.module';\nimport {BlockchainModule} from '@module/chain/blockchain.module';\nimport {PostModule} from '@module/content/post/post.module';\nimport {SpartaModule} from '@module/content/sparta/sparta.module';\nimport {CodeEditorModule} from '@swimlane/ngx-ui';\nimport {FormsModule} from '@angular/forms';\n\n@NgModule({\n\tdeclarations: [RootComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatButtonModule,\n\t\tFlexModule,\n\t\tMatTabsModule,\n\t\tWalletModule,\n\t\tTranslateModule,\n\t\tMatDividerModule,\n\t\tMatProgressSpinnerModule,\n\t\tMatListModule,\n\t\tReactiveComponentModule,\n\t\tPipesModule,\n\t\tNgxDatatableModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tBlockchainModule,\n\t\tPostModule,\n\t\tSpartaModule,\n\t\tCodeEditorModule,\n\t\tFormsModule\n\t]\n})\nexport class RootModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RootRoutingModule.html":{"url":"modules/RootRoutingModule.html","title":"module - RootRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    RootRoutingModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RootRoutingModule\n\n\n\ncluster_RootRoutingModule_imports\n\n\n\n\nRootModule\n\nRootModule\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/root-routing.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            RootModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {RootComponent} from '@module/root.component';\nimport {RootModule} from '@module/root.module';\nimport {TerminalComponent} from '@module/console/terminal.component';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'dashboard',\n\t\tcomponent: RootComponent,\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.dashboard.title',\n\t\t\theading: 'view.dashboard.heading',\n\t\t\tdescription: 'view.dashboard.description',\n\t\t\trobots: true\n\t\t}\n\t},\n\t{\n\t\tpath: 'terminal',\n\t\tcomponent: TerminalComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tpathMatch: 'full',\n\t\tdata: {\n\t\t\ttitle: 'view.terminal.title',\n\t\t\theading: 'view.terminal.heading',\n\t\t\tdescription: 'view.terminal.description',\n\t\t\trobots: true\n\t\t}\n\t},\n\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule,\n\t\tRootModule,\n\t\tRouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class RootRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent.html":{"url":"components/SettingsComponent.html","title":"component - SettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/settings/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-settings\n            \n\n            \n                styleUrls\n                ./settings.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                setting_tab\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/settings/settings.component.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        setting_tab\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'general'\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/settings.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-settings',\n\ttemplateUrl: './settings.component.html',\n\tstyleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit, OnDestroy {\n\tsetting_tab = 'general';\n\n\tconstructor() {}\n\n\tngOnInit(): void {\n\t\tconsole.log('SettingsComponent INIT');\n\t}\n\n\tngOnDestroy(): void {\n\t\tconsole.log('SettingsComponent DESTROY');\n\t}\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          \n            \n          \n        \n      \n\n    \n  \n\n\n\n    \n\n    \n                \n                    ./settings.component.scss\n                \n                :host {\n\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SettingsComponent-1.html":{"url":"components/SettingsComponent-1.html","title":"component - SettingsComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/settings.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-settings\n            \n\n\n\n\n            \n                templateUrl\n                ./settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/settings.component.ts:7\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/settings.component.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-app-settings',\n\ttemplateUrl: './settings.component.html'\n})\nexport class SettingsComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      \n        Wallet Manager\n        \n        \n          account_balance_wallet\n        \n        \n          cloud_download\n        \n        \n          cloud_upload\n        \n        \n          settings\n        \n      \n    \n    \n      \n        \n          Wallets\n          \n            \n              Mine\n              Rick's\n              My other\n            \n          \n        \n      \n      \n        \n          Options\n        \n      \n    \n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Wallet Manager                          account_balance_wallet                          cloud_download                          cloud_upload                          settings                                              Wallets                                    Mine              Rick\\'s              My other                                                            Options                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SettingsComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SettingsEffects.html":{"url":"injectables/SettingsEffects.html","title":"injectable - SettingsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SettingsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settings.effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                changeLanguage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, translate: TranslateService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/settings/data/settings.effects.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        translate\n                                                  \n                                                        \n                                                                    TranslateService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        changeLanguage$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/settings/data/settings.effects.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {switchMap} from 'rxjs/operators';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Injectable()\nexport class SettingsEffects {\n\tchangeLanguage$ = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Settings] Change Language'),\n\t\t\t\tswitchMap((req: { language: string; type: string }) => {\n\t\t\t\t\treturn this.translate.use(req.language)\n\t\t\t\t})\n\t\t\t),\n\t\t{ dispatch: false }\n\t);\n\n\tconstructor(private actions$: Actions, private translate: TranslateService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsModule.html":{"url":"modules/SettingsModule.html","title":"module - SettingsModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SettingsModule_imports\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nLogsModule\n\nLogsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SettingsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LogsModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatListModule} from '@angular/material/list';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {LogsModule} from './logs/logs.module';\nimport {SettingsComponent} from './settings.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: SettingsComponent,\n\t\tdata: {\n\t\t\ttitle: 'Settings',\n\t\t\theading: 'Unified Settings Panel',\n\t\t\tdescription: 'Lethean (LTHN) Blockchain Stats',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'logs',\n\t\tloadChildren: () =>\n\t\t\t\"import('./logs/logs.module').then((m) => m.LogsModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [SettingsComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatCardModule,\n\t\tMatListModule,\n\t\tFlexModule,\n\t\tMatToolbarModule,\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatButtonModule,\n\t\tMatIconModule,\n\t\tMatTabsModule,\n\t\tLogsModule\n\t],\n\texports: [RouterModule]\n})\nexport class SettingsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SettingsRoutingModule.html":{"url":"modules/SettingsRoutingModule.html","title":"module - SettingsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SettingsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/settings/settings-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'settings',\n\t\tcanActivate: [AuthGuard],\n\t\tloadChildren: () =>\n\t\t\t\"import('./settings.module').then(\\\n\t\t\t\t(m) => m.SettingsModule\\\n\t\t\t)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class SettingsRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SettingsState.html":{"url":"interfaces/SettingsState.html","title":"interface - SettingsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SettingsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/settings/data/settingsState.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            biggerContentFont\n                                        \n                                \n                                \n                                        \n                                            daltonism\n                                        \n                                \n                                \n                                        \n                                            darkMode\n                                        \n                                \n                                \n                                        \n                                            globalFontSize\n                                        \n                                \n                                \n                                        \n                                            hideNavigation\n                                        \n                                \n                                \n                                        \n                                            highContrastText\n                                        \n                                \n                                \n                                        \n                                            language\n                                        \n                                \n                                \n                                        \n                                            rtl\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        biggerContentFont\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        biggerContentFont:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        daltonism\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        daltonism:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        darkMode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        darkMode:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        globalFontSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        globalFontSize:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideNavigation\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hideNavigation:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        highContrastText\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        highContrastText:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rtl\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rtl:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SettingsState {\n\thideNavigation: boolean;\n\t// accessibility\n\tbiggerContentFont: boolean;\n\thighContrastText: boolean;\n\tdaltonism: boolean;\n\trtl: boolean;\n\t// global font size\n\tglobalFontSize: string;\n\t// UI Language\n\tlanguage: string;\n\t// UI mode\n\tdarkMode: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ShruggiePipe.html":{"url":"pipes/ShruggiePipe.html","title":"pipe - ShruggiePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ShruggiePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/content/shruggie.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        shrug\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/content/shruggie.pipe.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'shrug', pure: false })\nexport class ShruggiePipe implements PipeTransform {\n\ttransform(content) {\n\t\tif (content === null || content === '') {\n\t\t\treturn '¯\\\\_(ツ)_/¯';\n\t\t}\n\t\treturn content;\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SpartaComponent.html":{"url":"components/SpartaComponent.html","title":"component - SpartaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SpartaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/content/sparta/sparta.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-sparta\n            \n\n            \n                styleUrls\n                ./sparta.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./sparta.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fetchedHtml\n                            \n                            \n                                id\n                            \n                            \n                                slug\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadPost\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loadPost\n                        \n                    \n                \n            \n            \n                \nloadPost(slug, id)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/sparta/sparta.component.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    slug\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/content/sparta/sparta.component.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchedHtml\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/content/sparta/sparta.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n  selector: 'lthn-app-sparta',\n  templateUrl: './sparta.component.html',\n  styleUrls: ['./sparta.component.scss']\n})\nexport class SpartaComponent implements OnInit {\n  public fetchedHtml: any;\n  id: string\n  slug: string\n  constructor(private http: HttpClient, private route: ActivatedRoute) { }\n\n  ngOnInit(): void {\n    this.id = this.route.snapshot.paramMap.get('id')\n    this.slug = this.route.snapshot.paramMap.get('slug')\nconsole.log('d')\n    this.loadPost(this.slug, this.id)\n\n  }\n\n  loadPost(slug, id){\n    const headers = new HttpHeaders().set('Content-Type', 'text/plain; charset=utf-8');\n    const requestOptions: Object = {\n      headers: headers,\n      responseType: 'text'\n    }\n    this.http.get(`https://sparta.lt.hn/t/${slug}/${id}`, requestOptions).subscribe((data: any) => {\n      this.fetchedHtml = data\n    });\n  }\n\n}\n\n    \n\n    \n        dd\n\n    \n        \n    \n\n\n\n    \n\n    \n                \n                    ./sparta.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'dd                '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'SpartaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpartaModule.html":{"url":"modules/SpartaModule.html","title":"module - SpartaModule","body":"\n                   \n\n\n\n\n    Modules\n    SpartaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SpartaModule\n\n\n\ncluster_SpartaModule_declarations\n\n\n\n\nSpartaComponent\n\nSpartaComponent\n\n\n\nSpartaModule\n\nSpartaModule\n\nSpartaModule -->\n\nSpartaComponent->SpartaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/sparta/sparta.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SpartaComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SpartaComponent } from './sparta.component';\nimport {MatCardModule} from '@angular/material/card';\n\n\n@NgModule({\n  declarations: [\n    SpartaComponent\n  ],\n  imports: [\n    CommonModule,\n    MatCardModule\n  ]\n})\nexport class SpartaModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SpartaRoutingModule.html":{"url":"modules/SpartaRoutingModule.html","title":"module - SpartaRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    SpartaRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/content/sparta/sparta-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {CommonModule} from '@angular/common';\nimport {SpartaComponent} from '@module/content/sparta/sparta.component';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'sparta/:slug/:id',\n\t\tcomponent: SpartaComponent\n\t}\n];\n\n@NgModule({\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class SpartaRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SplitIntegratedAddressOut.html":{"url":"interfaces/SplitIntegratedAddressOut.html","title":"interface - SplitIntegratedAddressOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SplitIntegratedAddressOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/splitIntegratedAddressOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            standard_address\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        standard_address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        standard_address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Address} from 'src/app/modules/wallet/interfaces/types/address';\n\nexport interface SplitIntegratedAddressOut {\n\tstandard_address: Address;\n\tpayment_id: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/StatusComponent.html":{"url":"components/StatusComponent.html","title":"component - StatusComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  StatusComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/status/status.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-status\n            \n\n            \n                styleUrls\n                ./status.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./status.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                chainInfo\n                            \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                status_annon\n                            \n                            \n                                status_daemon\n                            \n                            \n                                status_private\n                            \n                            \n                                status_secure\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog, chain: BlockchainService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/status/status.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                        MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        chain\n                                                  \n                                                        \n                                                                        BlockchainService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/status/status.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        chainInfo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ChainGetInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_annon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_daemon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_private\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status_secure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/status/status.component.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\nimport {MatDialog} from '@angular/material/dialog';\nimport {ChainGetInfo} from '@module/chain/interfaces/props/get_info';\nimport {BlockchainService} from '@module/chain/blockchain.service';\n\n@Component({\n\tselector: 'lthn-app-status',\n\ttemplateUrl: './status.component.html',\n\tstyleUrls: ['./status.component.scss']\n})\nexport class StatusComponent implements OnInit {\n\tstatus_daemon: any;\n\tstatus_secure: any;\n\tstatus_private: any;\n\tstatus_annon: any;\n\tprivate chainInfo: ChainGetInfo;\n\n\tconstructor(public dialog: MatDialog, private chain: BlockchainService) {}\n\n\tpublic async ngOnInit() {\n\t\tthis.chainInfo = await this.chain.getInfo()\n\n\t\tif (this.chainInfo) {\n\t\t\t// we have chain data, and it talks to us set to amber\n\t\t\tthis.status_daemon = 1\n\t\t\t//console.log(data)\n\t\t\t// if chain height + 4 to give 2~ blocks to be considered healthy\n\t\t\tif (this.chainInfo.height + 4 > this.chainInfo.target_height) {\n\t\t\t\tthis.status_daemon = 2\n\t\t\t}\n\t\t} else {\n\t\t\tthis.status_daemon = 0\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                cloud\n            \n            \n                cloud_off\n            \n            \n                visibility_off\n            \n            \n                visibility_off\n            \n            \n                verified_user\n            \n            \n                verified_user\n            \n        \n    \n\n\n    \n\n    \n                \n                    ./status.component.scss\n                \n                .mat-icon {\n  font-size: 48px;\n  height: 48px;\n  width: 48px;\n}\n\n.status-wrapper {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n}\n\n.mat-card{\n  padding-left: 0;\n  padding-right: 0;\n  background: inherit;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        cloud                                        cloud_off                                        visibility_off                                        visibility_off                                        verified_user                                        verified_user                        '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'StatusComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/StatusModule.html":{"url":"modules/StatusModule.html","title":"module - StatusModule","body":"\n                   \n\n\n\n\n    Modules\n    StatusModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_StatusModule_declarations\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\n\n\nStatusModule\n\nStatusModule\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/status/status.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            NoDaemonRunningDialog\n                        \n                        \n                            StatusComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            StatusComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {StatusComponent} from './status.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {NoDaemonRunningDialog} from './dialog/no-daemon-running.component';\n\n@NgModule({\n\tdeclarations: [StatusComponent, NoDaemonRunningDialog],\n\texports: [StatusComponent],\n\timports: [\n\t\tCommonModule,\n\t\tMatDialogModule,\n\t\tMatIconModule,\n\t\tMatCardModule,\n\t\tMatButtonModule,\n\t\tMatTooltipModule\n\t]\n})\nexport class StatusModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/StoreOut.html":{"url":"interfaces/StoreOut.html","title":"interface - StoreOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  StoreOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/storeOut.ts\n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export interface StoreOut {\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllIn.html":{"url":"interfaces/SweepAllIn.html","title":"interface - SweepAllIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/sweepAllIn.ts\n        \n\n\n            \n                Description\n            \n            \n                SweepAll request payload\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            address\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            below_amount\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            do_not_relay\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_keys\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            priority\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        address:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Destination public address\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        below_amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        below_amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        do_not_relay\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        do_not_relay:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_hex:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) return the transactions as hex encoded string.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_keys\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_keys:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Return the transaction keys after sending.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Number of outpouts from the blockchain to mix with (0 means no mixing).\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        priority\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        priority:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    (Optional)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllIn {\n\n\t/** Destination public address */\n\taddress: string;\n\n\t/** (Optional) */\n\tpriority?: number;\n\n\t/** Number of outpouts from the blockchain to mix with (0 means no mixing). */\n\tmixin: number;\n\n\t/** unsigned int; Number of blocks before the monero can be spent (0 to not add a lock). */\n\tunlock_time: number;\n\n\t/** (Optional) Random 32-byte/64-character hex string to identify a transaction. */\n\tpayment_id?: string;\n\n\t/** (Optional) Return the transaction keys after sending. */\n\tget_tx_keys?: boolean;\n\n\t/** (Optional) */\n\tbelow_amount?: number;\n\n\t/** (Optional)  */\n\tdo_not_relay?: boolean;\n\n\t/** (Optional) return the transactions as hex encoded string. */\n\tget_tx_hex?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepAllOut.html":{"url":"interfaces/SweepAllOut.html","title":"interface - SweepAllOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepAllOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/sweepAllOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_blob_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                                \n                                        \n                                            tx_key_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_blob_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_blob_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepAllOut {\n\ttx_hash_list: string[];\n\ttx_key_list: string[];\n\ttx_blob_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SweepDustOut.html":{"url":"interfaces/SweepDustOut.html","title":"interface - SweepDustOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SweepDustOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/sweepDustOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface SweepDustOut {\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Task.html":{"url":"interfaces/Task.html","title":"interface - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/user.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            completed\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        completed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        completed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.key`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.pub`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.rev`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(privateKey, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TerminalComponent.html":{"url":"components/TerminalComponent.html","title":"component - TerminalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TerminalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/console/terminal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-terminal\n            \n\n            \n                styleUrls\n                ./terminal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./terminal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/console/terminal.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/console/terminal.component.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lthn-app-terminal',\n  templateUrl: './terminal.component.html',\n  styleUrls: ['./terminal.component.scss']\n})\nexport class TerminalComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n    \n\n\n    \n\n    \n                \n                    ./terminal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TerminalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/TimeAgoPipe.html":{"url":"pipes/TimeAgoPipe.html","title":"pipe - TimeAgoPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  TimeAgoPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/date/timeAgo.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        timeAgo\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(value: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/date/timeAgo.pipe.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        translations\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/pipes/date/timeAgo.pipe.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\nimport {TranslateService} from '@ngx-translate/core';\n\n@Pipe({\n\tname: 'timeAgo',\n\tpure: false\n})\nexport class TimeAgoPipe implements PipeTransform {\n\tprivate static translations: any;\n\n\tconstructor(private translate: TranslateService) {\n\t\tthis.translate.getStreamOnTranslationChange([\n\t\t\t'words.time.past.seconds',\n\t\t\t'words.time.past.minute',\n\t\t\t'words.time.past.minutes',\n\t\t\t'words.time.past.hour',\n\t\t\t'words.time.past.hours',\n\t\t\t'words.time.past.day',\n\t\t\t'words.time.past.days',\n\t\t\t'words.time.past.month',\n\t\t\t'words.time.past.months',\n\t\t\t'words.time.past.year',\n\t\t\t'words.time.past.years',\n\t\t]).subscribe((data) => TimeAgoPipe.translations = data)\n\n\t}\n\n\ttransform(value: number) {\n\t\tconst d = new Date(value * 1000);\n\t\tconst now = new Date();\n\t\tconst seconds = Math.round(\n\t\t\tMath.abs((now.getTime() - d.getTime()) / 1000)\n\t\t);\n\t\tconst minutes = Math.round(Math.abs(seconds / 60));\n\t\tconst hours = Math.round(Math.abs(minutes / 60));\n\t\tconst days = Math.round(Math.abs(hours / 24));\n\t\tconst months = Math.round(Math.abs(days / 30.416));\n\t\tconst years = Math.round(Math.abs(days / 365));\n\n\t\t\tif (Number.isNaN(seconds)) {\n\t\t\t\treturn '';\n\t\t\t} else if (seconds  545)\n\t\t\t\treturn `${years} ${TimeAgoPipe.translations['words.time.past.years']}`;\n\t\t\t}\n\t\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/ToCoinPipe.html":{"url":"pipes/ToCoinPipe.html","title":"pipe - ToCoinPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  ToCoinPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/pipes/crypto/toCoin.pipe.ts\n        \n\n\n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        toCoin\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        transform\n                        \n                    \n                \n            \n            \n                \ntransform(content: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/pipes/crypto/toCoin.pipe.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    content\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Pipe, PipeTransform} from '@angular/core';\n\n@Pipe({ name: 'toCoin', pure: false })\nexport class ToCoinPipe implements PipeTransform {\n\n\n  transform (content: number) {\n    return (content / 100000000).toFixed((8))\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transactions.html":{"url":"interfaces/Transactions.html","title":"interface - Transactions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transactions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/chain/interfaces/props/transactions.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            missed_tx\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txs_as_hex\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            txs_as_json\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        missed_tx\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        missed_tx:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txs_as_hex\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txs_as_hex:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txs_as_json\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txs_as_json:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transactions {\n\tstatus: string,\n\ttxs_as_hex?: string,\n\ttxs_as_json?: any,\n\tmissed_tx?: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransactionsComponent.html":{"url":"components/TransactionsComponent.html","title":"component - TransactionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransactionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/transactions.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transactions\n            \n\n\n\n\n            \n                templateUrl\n                ./transactions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                ColumnMode\n                            \n                            \n                                columns\n                            \n                            \n                                filename\n                            \n                            \n                                password\n                            \n                            \n                                rows\n                            \n                            \n                                    Private\n                                subs$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                loadTransactions\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                opts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletRpcService, store: Store, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:38\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                        ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/transactions.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        opts\n                    \n                \n                \n                    \n                        Type :         GetTransfersIn\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t}\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/wallet/components/transactions.component.ts:18\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        loadTransactions\n                        \n                    \n                \n            \n            \n                \n                    \n                    loadTransactions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transactions.component.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transactions.component.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        ColumnMode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ColumnMode\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        columns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rows\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GetTransfersOut[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subs$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transactions.component.ts:38\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Subscription} from 'rxjs';\nimport {GetTransfersIn, GetTransfersOut} from '@module/wallet/interfaces';\nimport {ColumnMode} from '@swimlane/ngx-datatable';\nimport {select, Store} from '@ngrx/store';\nimport {selectWalletTransactions} from '@module/wallet/data';\nimport {ActivatedRoute} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-wallet-transactions',\n\ttemplateUrl: './transactions.component.html'\n})\nexport class TransactionsComponent implements OnInit {\n\t@Input() name?: string = '';\n\t@Input() opts: GetTransfersIn = {\n\t\tin: true,\n\t\tout: true,\n\t\tpending: true,\n\t\tfailed: true,\n\t\tpool: true,\n\t};\n\n\tfilename = new FormControl('');\n\tpassword = new FormControl('');\n\n\trows: GetTransfersOut[] = [];\n\n\n\n\tcolumns = [\n\t\t{name: 'Amount'}, {name: 'Fee'}, {name: 'Height'}, {name: 'Note'}, {name: 'Payment ID'},\n\t\t{name: 'Timestamp'}, {name: 'txid'}, {name: 'Type'}, {name: 'Unlock Time'}];\n\n\tColumnMode = ColumnMode;\n\tprivate subs$: Subscription[] = []\n\tconstructor(private wallet: WalletRpcService, private store: Store, private route: ActivatedRoute) {\n\t\tthis.name = this.route.snapshot.paramMap.get('id')\n\t}\n\n\tngOnInit(): void {\n\t\tthis.subs$['txn'] = this.store.pipe(select(selectWalletTransactions)).subscribe((data) => {\n\t\t\tif(data) {\n\t\t\t\tthis.rows = [...data['in'], ...data['out']]\n\t\t\t}\n\t\t})\n\t\tthis.loadTransactions().catch((err) => console.error(err));\n\t}\n\n\tasync loadTransactions() {\n\n\t\tthis.rows = await this.wallet.getTransfers(this.opts).then((data) => Object.values(data).flat());\n\t\tconsole.log(this.rows);\n\n\t}\n}\n\n    \n\n    \n        \n     0\">\n        \n            \n            \n                \n                    \n                \n            \n            \n                \n                    {{ value | toCoin | number:'1.0-8'}}\n                \n            \n            \n                \n                    {{ value | timeAgo }}\n                \n            \n        \n    \n    \n        You have no transactions, you need to send LTHN to your wallet\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '     0\">                                                                                                                                                {{ value | toCoin | number:\\'1.0-8\\'}}                                                                            {{ value | timeAgo }}                                                    You have no transactions, you need to send LTHN to your wallet    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransactionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Transfer.html":{"url":"interfaces/Transfer.html","title":"interface - Transfer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Transfer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/transfer.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            amount\n                                        \n                                \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            height\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            timestamp\n                                        \n                                \n                                \n                                        \n                                            txid\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        amount\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        amount:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        height\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        height:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        timestamp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        timestamp:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        txid\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        txid:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Transfer {\n\tamount: number;\n\tfee: number;\n\theight: number;\n\tnote: string;\n\tpayment_id: string;\n\ttimestamp: number;\n\ttxid: string;\n\ttype: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TransferComponent.html":{"url":"components/TransferComponent.html","title":"component - TransferComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TransferComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/transfer/transfer.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-transfer\n            \n\n\n\n\n            \n                templateUrl\n                ./transfer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                transfer\n                            \n                            \n                                    Public\n                                wallet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                sendTransfer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendTransfer\n                        \n                    \n                \n            \n            \n                \nsendTransfer()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TransferIn\n\n                    \n                \n                \n                    \n                        Default value : {\n    destinations: [\n      {\n        address: '',\n        amount: 0\n      }\n    ],\n    mixin: 5,\n    unlock_time:0,\n    get_tx_key: true,\n    payment_id: undefined\n  }\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WalletService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/transfer/transfer.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport {TransferIn, TransferOut} from '@module/wallet/interfaces';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {AlertService, AlertStyles} from '@swimlane/ngx-ui';\n\n@Component({\n  selector: 'lthn-wallet-transfer',\n  templateUrl: './transfer.component.html',\n})\nexport class TransferComponent implements OnInit {\n\n  transfer: TransferIn = {\n    destinations: [\n      {\n        address: '',\n        amount: 0\n      }\n    ],\n    mixin: 5,\n    unlock_time:0,\n    get_tx_key: true,\n    payment_id: undefined\n  }\n\n  constructor(public wallet: WalletService, public alertService: AlertService) { }\n\n  ngOnInit(): void {\n  }\n\n  sendTransfer(){\n    this.transfer.destinations.map((dest) => dest.amount = dest.amount * 100000000)\n    this.wallet.sendTransfer(this.transfer).catch((err) => console.error(err)).then((data: TransferOut) => {\n      if(data.fee){\n        this.alertService.alert({title: \"Transfer Sent\", style: AlertStyles.Info, content: `Fee: ${data.fee} Tx: ${data.tx_hash} View Key: ${data.tx_key}`})\n        this.transfer = {\n          destinations: [\n            {\n              address: '',\n              amount: 0\n            }\n          ],\n          mixin: 5,\n          unlock_time:0,\n          get_tx_key: true,\n          payment_id: undefined\n        }\n      }else{\n        console.log(data)\n        this.alertService.alert({title: \"ERROR\", style: AlertStyles.Danger, content: `${data['error']['message']}`})\n\n      }\n\n    })\n  }\n\n}\n\n    \n\n    \n        \n    \n    \n\n    \n    \n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    \n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n        \n    \n\n    \n    \nPress and hold to send the transaction\n    \n\n\n\n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                                                                                                                Press and hold to send the transaction    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'TransferComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferIn.html":{"url":"interfaces/TransferIn.html","title":"interface - TransferIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/transferIn.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\n\nexport interface TransferIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin?: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time?: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. Outputs:\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferOut.html":{"url":"interfaces/TransferOut.html","title":"interface - TransferOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/transferOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee\n                                        \n                                \n                                \n                                        \n                                            tx_hash\n                                        \n                                \n                                \n                                        \n                                            tx_key\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_key:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferOut {\n\tfee: number; // - Integer value of the fee charged for the txn.\n\ttx_hash: string; // - String for the publically searchable transaction hash\n\ttx_key: string; // - String for the transaction key if get_tx_key is true, otherwise, blank string.\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitIn.html":{"url":"interfaces/TransferSplitIn.html","title":"interface - TransferSplitIn","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitIn\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/wallet.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            destinations\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            fee\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            get_tx_key\n                                        \n                                \n                                \n                                        \n                                            mixin\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            new_algorithm\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            payment_id\n                                        \n                                \n                                \n                                        \n                                            unlock_time\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        destinations\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        destinations:         Destination[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Destination[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fee\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        get_tx_key\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        get_tx_key:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mixin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mixin:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        new_algorithm\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        new_algorithm:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        payment_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        payment_id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unlock_time\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unlock_time:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Destination} from 'src/app/modules/wallet/interfaces/types/destination';\nimport {MakeUriIn} from 'src/app/modules/wallet/interfaces/dto/makeUriIn';\nimport Random from 'random-js';\n\nexport const generatePaymentId = (length: 16 | 64) =>\n\tRandom.hex(false)(Random.nativeMath, length);\n\n\n\nexport interface TransferSplitIn {\n\tdestinations: Destination[];\n\tfee?: number; // - unsigned int; Ignored, will be automatically calculated.\n\tmixin: number; // - unsigned int; Number of outpouts from the blockchain to mix with (0 means no mixing).\n\tunlock_time: number; // - unsigned int; Number of blocks before the monero can be spent (0 to not add a lock).\n\tpayment_id?: string; // - string; (Optional) Random 32-byte/64-character hex string to identify a transaction.\n\tget_tx_key?: boolean; // - boolean; (Optional) Return the transaction key after sending. – Ignored\n\tnew_algorithm?: boolean; // - boolean; True to use the new transaction construction algorithm, defaults to false.\n}\n\nexport interface ParseUri {\n\turi: MakeUriIn;\n}\n\nexport interface OpenWallet {\n\tfilename: string;\n\tpassword: string;\n}\n\nexport interface CreateWallet {\n\tfilename: string;\n\tpassword: string;\n\tlanguage: string; // Language for your wallets' seed.\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/TransferSplitOut.html":{"url":"interfaces/TransferSplitOut.html","title":"interface - TransferSplitOut","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  TransferSplitOut\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/dto/transferSplitOut.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fee_list\n                                        \n                                \n                                \n                                        \n                                            tx_hash_list\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fee_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fee_list:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        tx_hash_list\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        tx_hash_list:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface TransferSplitOut {\n\tfee_list: number[];\n\ttx_hash_list: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TranslateModule.html":{"url":"modules/TranslateModule.html","title":"module - TranslateModule","body":"\n                   \n\n\n\n\n    Modules\n    TranslateModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/services/i18n/translate/translate.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {BrowserModule} from '@angular/platform-browser';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    BrowserModule,\n  ]\n})\nexport class TranslateModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Uri.html":{"url":"interfaces/Uri.html","title":"interface - Uri","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Uri\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/interfaces/types/uri.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            uri\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        uri\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        uri:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Uri {\n\turi: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserComponent.html":{"url":"components/UserComponent.html","title":"component - UserComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/user.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-user\n            \n\n            \n                styleUrls\n                ./user.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                passwordRepeat\n                            \n                            \n                                processingForm\n                            \n                            \n                                task\n                            \n                            \n                                userForm\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cryptService: CryptService, fileSystem: FileSystemService, router: Router, authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/user.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cryptService\n                                                  \n                                                        \n                                                                        CryptService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileSystem\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    addUser()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/user/user.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordRepeat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processingForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Task\n\n                    \n                \n                \n                    \n                        Default value : {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userForm\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t})\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormControl('')\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/user.component.ts:32\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\nimport {CryptService} from '@service/crypt.service';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../auth/auth.service';\n\nexport interface Task {\n\tname: string;\n\tcompleted: boolean;\n\tstatus: string;\n}\n\n@Component({\n\tselector: 'lthn-user',\n\ttemplateUrl: './user.component.html',\n\tstyleUrls: ['./user.component.scss']\n})\nexport class UserComponent {\n\ttask: Task = {\n\t\tname: 'Sync Blockchain',\n\t\tcompleted: false,\n\t\tstatus: 'on'\n\t};\n\n\tuserForm = new FormGroup({\n\t\tusername: new FormControl(''),\n\t\tpassword: new FormControl(''),\n\t\tpasswordRepeat: new FormControl('')\n\t});\n\n\tusername = new FormControl('');\n\tpassword = new FormControl('');\n\tpasswordRepeat = new FormControl('');\n\tprocessingForm = false;\n\n\tconstructor(\n\t\tprivate cryptService: CryptService,\n\t\tprivate fileSystem: FileSystemService,\n\t\tprivate router: Router,\n\t\tprivate authService: AuthService\n\t) {\n\t}\n\n\tasync addUser() {\n\t\tthis.processingForm = true;\n\t\tconst username = this.username.value;\n\t\tconst password = this.password.value;\n\t\tconst passwordRepeat = this.passwordRepeat.value;\n\n\t\tconst usernameHash = this.cryptService.sha256Salty(username);\n\n\t\tif (password === passwordRepeat) {\n\t\t\tconsole.log('Creating OpenPGP Keys.');\n\t\t\tconst {privateKey, publicKey, revocationCertificate} =\n\t\t\t\tawait this.cryptService.createOpenPGP(usernameHash, password);\n\t\t\tconsole.log('Keys created');\n\n\t\t\tconsole.log('Saving keys to local filesystem');\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.key`,\n\t\t\t\tprivateKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.pub`,\n\t\t\t\tpublicKey\n\t\t\t);\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn.rev`,\n\t\t\t\trevocationCertificate\n\t\t\t);\n\n\t\t\tconsole.log('Creating User profile data file');\n\n\t\t\tawait this.fileSystem.writeFile(\n\t\t\t\t`users/${usernameHash}.lthn`,\n\t\t\t\tawait this.cryptService.encryptPGPSingle(\n\t\t\t\t\tusernameHash,\n\t\t\t\t\tJSON.stringify({\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tid: usernameHash,\n\t\t\t\t\t\tkey: this.cryptService.generateKey(\n\t\t\t\t\t\t\tusername +\n\t\t\t\t\t\t\tthis.cryptService\n\t\t\t\t\t\t\t\t.createSalt(username)\n\t\t\t\t\t\t\t\t.toString()\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t);\n\t\t\tawait this.authService.login(privateKey, password);\n\t\t\tconsole.log('cleaning up');\n\t\t\tconsole.log('Done, and away we go!');\n\t\t\tawait this.router.navigateByUrl(`/`);\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                    Lethean Desktop\n                \n            \n        \n        \n        \n            \n                \n                    Please Login\n                    \n                        \n                    \n\n                \n                \n                    New User\n                    \n                        \n                            \n                                Username\n                                \n                            \n                            \n                                Password\n                                \n                            \n                            \n                                Password (Confirm)\n                                \n                            \n\n                        \n                        Create User\n                    \n                \n\n\n            \n\n        \n        \n            \n                Building Your Encryption Keys\n                \n                    You will be redirected to the profile creation page soon.\n                    \n                \n            \n        \n    \n\n\n\n    \n\n    \n                \n                    ./user.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            Lethean Desktop                                                                                                    Please Login                                                                                                                    New User                                                                                                        Username                                                                                                                        Password                                                                                                                        Password (Confirm)                                                                                                            Create User                                                                                            Building Your Encryption Keys                                    You will be redirected to the profile creation page soon.                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'UserComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserMeta.html":{"url":"interfaces/UserMeta.html","title":"interface - UserMeta","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserMeta\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            decryptionKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        decryptionKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        decryptionKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nUserComponent\n\nUserComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            UserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatOptionModule} from '@angular/material/core';\nimport {UserComponent} from './user.component';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatInputModule} from '@angular/material/input';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {AuthModule} from '@module/auth/auth.module';\nimport {SectionModule, ToolbarModule} from '@swimlane/ngx-ui';\n\nconst routes: Routes = [\n\t{\n\t\tpath: '',\n\t\tcomponent: UserComponent,\n\t\tdata: {\n\t\t\ttitle: 'New User - Lethean (LTHN)',\n\t\t\theading: 'New User Wizard',\n\t\t\tdescription: 'Lethean (LTHN) New User Panel',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [UserComponent],\n\timports: [\n\t\tCommonModule,\n\t\tRouterModule.forChild(routes),\n\t\tMatFormFieldModule,\n\t\tMatSelectModule,\n\t\tMatOptionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatButtonModule,\n\t\tMatDividerModule,\n\t\tMatCardModule,\n\t\tMatInputModule,\n\t\tFlexModule,\n\t\tMatCheckboxModule,\n\t\tReactiveFormsModule,\n\t\tMatProgressBarModule,\n\t\tAuthModule,\n\t\tToolbarModule,\n\t\tSectionModule\n\t]\n})\nexport class UserModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOptions.html":{"url":"interfaces/UserOptions.html","title":"interface - UserOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/interfaces/user.options.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            loginMethod\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loginMethod\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loginMethod:         LoginMethods\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoginMethods\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserOptions {\n\tloginMethod: LoginMethods;\n}\n\nexport enum LoginMethods {\n\tPASSWORD = 1,\n\tSSH_PEM\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'user',\n\t\tloadChildren: () =>\n\t\t\t\"import('./user.module').then((m) => m.UserModule)\"\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\texports: [RouterModule]\n})\nexport class UserRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserState.html":{"url":"interfaces/UserState.html","title":"interface - UserState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            meta\n                                        \n                                \n                                \n                                        \n                                            options\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        meta\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        meta:         UserMeta\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserMeta\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        options:         UserOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UsersState.html":{"url":"interfaces/UsersState.html","title":"interface - UsersState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UsersState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/data/user/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            users\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        users\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        users:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {UserOptions} from './interfaces/user.options';\n\nexport interface UsersState {\n\tusers: { [id: string]: UserState };\n}\n\nexport interface UserState {\n\tid: string;\n\tusername: string;\n\toptions: UserOptions;\n\tmeta: UserMeta;\n}\n\nexport interface UserMeta {\n\tdecryptionKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/VpnComponent.html":{"url":"components/VpnComponent.html","title":"component - VpnComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  VpnComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/vpn/vpn.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-vpn\n            \n\n            \n                styleUrls\n                ./vpn.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./vpn.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/vpn/vpn.component.ts:8\n                            \n                        \n\n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/vpn/vpn.component.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\n@Component({\n\tselector: 'lthn-vpn',\n\ttemplateUrl: './vpn.component.html',\n\tstyleUrls: ['./vpn.component.scss']\n})\nexport class VpnComponent implements OnInit {\n\tconstructor() {}\n\n\tngOnInit(): void {}\n}\n\n    \n\n    \n        \n  \n    \n      VPN Marketplace\n      All nodes are community run, browse and keep track of your favourites here.\n      \n        New Provider\n        List Services\n        Deploy ExitNode\n\n      \n    \n    \n      \n        \n          local Blockchain\n          This helps the community the most, and makes you a member of the network. Exactly the same\n            as Torrents, but just our blockchain.\n          \n          \n            \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n              \n                Region\n                Provider\n                Service\n                Cost\n              \n              \n              \n            \n\n          \n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./vpn.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            VPN Marketplace      All nodes are community run, browse and keep track of your favourites here.              New Provider        List Services        Deploy ExitNode                                      local Blockchain          This helps the community the most, and makes you a member of the network. Exactly the same            as Torrents, but just our blockchain.                                                                            Region                Provider                Service                Cost                                                                        Region                Provider                Service                Cost                                                                                    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'VpnComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnModule.html":{"url":"modules/VpnModule.html","title":"module - VpnModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/vpn/vpn.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            VpnComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {VpnComponent} from 'src/app/modules/vpn/vpn.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatButtonModule} from '@angular/material/button';\n\n@NgModule({\n\tdeclarations: [VpnComponent],\n\timports: [CommonModule, MatCardModule, FlexModule, MatButtonModule]\n})\nexport class VpnModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/VpnRoutingModule.html":{"url":"modules/VpnRoutingModule.html","title":"module - VpnRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    VpnRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/vpn/vpn-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {VpnComponent} from 'src/app/modules/vpn/vpn.component';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'vpn',\n\t\tcomponent: VpnComponent,\n\t\tcanActivate: [AuthGuard]\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class VpnRoutingModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletComponent.html":{"url":"components/WalletComponent.html","title":"component - WalletComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/wallet.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-app-wallet\n            \n\n            \n                styleUrls\n                ./wallet.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./wallet.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                alertService\n                            \n                            \n                                name\n                            \n                            \n                                    Public\n                                wallet\n                            \n                            \n                                    Public\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngAfterViewInit\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                openWallet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(wallet: WalletService, notificationService: NotificationService, alertService: AlertService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/wallet.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        alertService\n                                                  \n                                                        \n                                                                    AlertService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngAfterViewInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngAfterViewInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        openWallet\n                        \n                    \n                \n            \n            \n                \n                    \n                    openWallet(name: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        alertService\n                        \n                    \n                \n            \n                \n                    \n                        Type :     AlertService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         WalletService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {AfterViewInit, Component, OnInit} from '@angular/core';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {AlertService, NotificationService, NotificationStyleType, NotificationType} from '@swimlane/ngx-ui';\n\n@Component({\n\tselector: 'lthn-app-wallet',\n\ttemplateUrl: './wallet.component.html',\n\tstyleUrls: ['./wallet.component.scss']\n})\nexport class WalletComponent implements OnInit, AfterViewInit {\n\n\tpublic wallets: string[] = [];\n\tname: string = ''\n\tconstructor(public wallet: WalletService, private notificationService: NotificationService, public alertService: AlertService) {}\n\n\n\tpublic ngAfterViewInit() {\n\t\tthis.wallet.startWalletService()\n\t}\n\n\tpublic ngOnInit(): void {\n\t\tthis.wallets = this.wallet.walletList()\n\t\tthis.wallet.getActiveAddress()\n\t}\n\n\tpublic openWallet(name: string){\n\t\tconsole.log(name)\n\t\tconst subject = this.alertService.prompt({\n\t\t\ttitle: 'Wallet Password',\n\t\t\tcontent: 'Please enter the wallet password.'\n\t\t});\n\n\t\tsubject.subscribe({\n\t\t\tnext: (v) => {\n\t\t\t\tthis.wallet.openWallet({filename: name, password: v.data}).then(async (data) => {\n\t\t\t\t\tconsole.log(data)\n\t\t\t\t\tthis.name = name;\n\t\t\t\t}).catch((err) => console.error(err)).then(() => this.notificationService.create({\n\t\t\t\t\ttype: NotificationType.html,\n\t\t\t\t\tstyleType: NotificationStyleType.success,\n\t\t\t\t\ttitle: 'Loaded Wallet!',\n\t\t\t\t\tbody: name\n\t\t\t\t}));\n\t\t\t},\n\t\t\terror: (err) => console.log('Prompt err', err)\n\t\t});\n\n\n\t\t//this.router.navigate(['/','wallet','details', name]).catch((err) => console.log(err))\n\t}\n\n}\n\n    \n\n    \n        \n        \n            \n                \n                    Wallet:  {{ wallet.address |hashLink }}\n-->\nclose-->\n-->\n-->\n\n\n\n-->\n-->\n                    \n-->\naccount_balance_wallet-->\n-->\n-->\ncloud_download-->\n-->\n-->\ncloud_upload-->\n-->\n                    \n                        close\n                    \n                \n            \n            \n                \n                    Lethean Wallet Manager\n\n                    Please select a previous wallet using the dropdown above or use the forms below to get started\n\n                    \n\n                \n                \n                Make or Add Wallet\n                \n\n            \n            \n\n            \n                \n                    \n                        \n                            \n                        \n                    \n                    \n                        \n                            \n                        \n                    \n                    \n                        \n                            Balance: {{ wallet.balance.unlocked_balance | toCoin}}\n                            Locked Balance: {{wallet.balance.balance-wallet.balance.unlocked_balance|toCoin}}\n                            \n                        \n                    \n                    \n                        \n                    \n                \n            \n        \n\n\n\n    \n\n    \n                \n                    ./wallet.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        Wallet:  {{ wallet.address |hashLink }}-->close-->-->-->-->-->                    -->account_balance_wallet-->-->-->cloud_download-->-->-->cloud_upload-->-->                                            close                                                                                                Lethean Wallet Manager                    Please select a previous wallet using the dropdown above or use the forms below to get started                                                                    Make or Add Wallet                                                                                                                                                                                                                                                                                                                                                                                    Balance: {{ wallet.balance.unlocked_balance | toCoin}}                            Locked Balance: {{wallet.balance.balance-wallet.balance.unlocked_balance|toCoin}}                                                                                                                                                                            '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletEffects.html":{"url":"injectables/WalletEffects.html","title":"injectable - WalletEffects","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/data/effects.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                isPollingActiveStats\n                            \n                            \n                                openWallet\n                            \n                            \n                                StartPollingWallet$\n                            \n                            \n                                StopPollingWallet$\n                            \n                            \n                                WalletLoadData$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, http: HttpClient, store: Store, wallet: WalletService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/data/effects.ts:102\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isPollingActiveStats\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:102\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StartPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:85\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        StopPollingWallet$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t))\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:93\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        WalletLoadData$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t//@ts-ignore\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\tconsole.log(payload)\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t)\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/effects.ts:30\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Actions, createEffect, ofType} from '@ngrx/effects';\nimport {catchError, map, switchMap, takeWhile, withLatestFrom} from 'rxjs/operators';\nimport {WalletService} from '@module/wallet/wallet.service';\nimport {select, Store} from '@ngrx/store';\nimport * as WalletActions from 'src/app/modules/wallet/data/actions';\nimport * as WalletSelectors from 'src/app/modules/wallet/data/selectors';\nimport {merge, of, timer} from 'rxjs';\nimport {HttpClient} from '@angular/common/http';\nimport {rpcBody} from '@service/json-rpc';\nimport {Balance, GetTransfersIn, GetTransfersOut} from '@module/wallet/interfaces';\n\n@Injectable()\nexport class WalletEffects {\n\topenWallet = createEffect(\n\t\t() =>\n\t\t\tthis.actions$.pipe(\n\t\t\t\tofType('[Wallet] Open Wallet'),\n\t\t\t\tswitchMap((req: { address: string; password: string }) => {\n\t\t\t\t\treturn this.wallet.openWallet({\n\t\t\t\t\t\tfilename: req.address,\n\t\t\t\t\t\tpassword: req.password\n\t\t\t\t\t});\n\t\t\t\t})\n\t\t\t),\n\t\t{dispatch: false}\n\t);\n\n\n\tWalletLoadData$ =\n\t\tcreateEffect(() => this.actions$.pipe(\n\t\t\t\t// Filter action type\n\t\t\t\tofType(WalletActions.WalletLoadData),\n\t\t\t\t// Get the polling interval\n\t\t\t\twithLatestFrom(this.store.pipe(select(WalletSelectors.selectOpenedWalletData))),\n\t\t\t//@ts-ignore\n\t\t\t\tswitchMap(([action, wallet]) => merge(\n\t\t\t\t\t\t\ttimer(0, wallet.options.pollingInterval).pipe(\n\t\t\t\t\t\t\t\ttakeWhile(() => this.isPollingActiveStats),\n\t\t\t\t\t\t\t\tswitchMap(() =>\n\t\t\t\t\t\t\t\t\tmerge(\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('getbalance')('')))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletBalance({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbalance: res['result'] as Balance\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t\tthis.http.post(`http://127.0.0.1:36911/daemon/wallet/json_rpc`,\n\t\t\t\t\t\t\t\t\t\t\tJSON.stringify(rpcBody('get_transfers')({in: true, out: true, failed: true, pending: true } as GetTransfersIn)))\n\t\t\t\t\t\t\t\t\t\t\t.pipe(\n\t\t\t\t\t\t\t\t\t\t\t\tmap((res: any) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.store.dispatch( WalletActions.WalletTransfers({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress: wallet.name,\n\t\t\t\t\t\t\t\t\t\t\t\t\t \ttransfers: res['result'] as GetTransfersOut[]\n\t\t\t\t\t\t\t\t\t\t\t\t\t}))\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t).pipe(\n\t\t\t\t\t\t\tmap((payload) => {\n\t\t\t\t\t\t\t\tconsole.log(payload)\n\t\t\t\t\t\t\t\t\treturn WalletActions.WalletLoaded();\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tcatchError((error) => {\n\t\t\t\t\t\t\t\t\t\tconsole.error(error);\n\t\t\t\t\t\t\t\t\t\treturn of(WalletActions.WalletFailure({error}));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\n\t\t\t\t)\n\t\t\t)\n\t\t);\n\n\tStartPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStartPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = true;\n\t\t\t\treturn WalletActions.WalletLoadData();\n\t\t\t})\n\t\t));\n\tStopPollingWallet$ = createEffect(() =>\n\t\tthis.actions$.pipe(\n\t\t\tofType(WalletActions.WalletStopPolling),\n\t\t\tmap(() => {\n\t\t\t\tthis.isPollingActiveStats = false;\n\t\t\t\treturn WalletActions.WalletStoppedPolling();\n\t\t\t})\n\t\t));\n\n\tprivate isPollingActiveStats = false;\n\n\tconstructor(private actions$: Actions, private http: HttpClient, private store: Store, private wallet: WalletService) {\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletModule.html":{"url":"modules/WalletModule.html","title":"module - WalletModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_imports\n\n\n\ncluster_WalletModule_declarations\n\n\n\n\nAddComponent\n\nAddComponent\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nWalletModule -->\n\nDetailsComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nWalletModule -->\n\nSettingsComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nTransferComponent\n\nTransferComponent\n\nWalletModule -->\n\nTransferComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nWalletNewComponent\n\nWalletNewComponent\n\nWalletModule -->\n\nWalletNewComponent->WalletModule\n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/wallet/wallet.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AddComponent\n                        \n                        \n                            DetailsComponent\n                        \n                        \n                            OpenComponent\n                        \n                        \n                            RestoreComponent\n                        \n                        \n                            SettingsComponent\n                        \n                        \n                            TransactionsComponent\n                        \n                        \n                            TransferComponent\n                        \n                        \n                            WalletComponent\n                        \n                        \n                            WalletNewComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TranslateModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {WalletComponent} from 'src/app/modules/wallet/wallet.component';\nimport {MatCardModule} from '@angular/material/card';\nimport {FlexModule} from '@angular/flex-layout';\nimport {MatListModule} from '@angular/material/list';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatInputModule} from '@angular/material/input';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {TranslateModule} from '@ngx-translate/core';\nimport {NgxDatatableModule} from '@swimlane/ngx-datatable';\nimport {MatSelectModule} from '@angular/material/select';\nimport {PipesModule} from '@pipe/pipes.module';\nimport {RouterModule} from '@angular/router';\nimport {WalletNewComponent} from '@module/wallet/components/wallet-new.component';\nimport {TransactionsComponent} from '@module/wallet/components/transactions.component';\nimport {SettingsComponent} from '@module/wallet/components/settings.component';\nimport {RestoreComponent} from '@module/wallet/components/restore.component';\nimport {CardModule, NgxUIModule, SectionModule, SelectModule, TabsModule} from '@swimlane/ngx-ui';\nimport {DetailsComponent} from '@module/wallet/components/details.component';\nimport {AddComponent} from '@module/wallet/components/add.component';\nimport {OpenComponent} from '@module/wallet/components/open.component';\nimport { TransferComponent } from './components/transfer/transfer.component';\n\n\n\n@NgModule({\n\tdeclarations: [\n\t\tWalletComponent,\n\t\tDetailsComponent,\n\t\tWalletNewComponent,\n\t\tTransactionsComponent,\n\t\tSettingsComponent,\n\t\tRestoreComponent,\n\t\tAddComponent,\n\t\tOpenComponent,\n  TransferComponent\n\t],\n\texports: [\n\t],\n\timports: [\n\t\tCommonModule,\n\t\tMatCardModule,\n\t\tFlexModule,\n\t\tReactiveFormsModule,\n\t\tMatListModule,\n\t\tMatButtonModule,\n\t\tMatCheckboxModule,\n\t\tMatExpansionModule,\n\t\tMatToolbarModule,\n\t\tMatIconModule,\n\t\tMatTooltipModule,\n\t\tMatInputModule,\n\t\tTranslateModule,\n\t\tNgxDatatableModule,\n\t\tMatSelectModule,\n\t\tMatTabsModule,\n\t\tPipesModule,\n\t\tRouterModule,\n\t\tSelectModule,\n\t\tTabsModule,\n\t\tSectionModule,\n\t\tCardModule,\n\t\tNgxUIModule\n\t]\n})\nexport class WalletModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WalletNewComponent.html":{"url":"components/WalletNewComponent.html","title":"component - WalletNewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WalletNewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/wallet/components/wallet-new.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                lthn-wallet-new\n            \n\n\n\n\n            \n                templateUrl\n                ./wallet-new.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                password_confirm\n                            \n                            \n                                wallet_name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createWallet\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(walletRpc: WalletRpcService, wallet: WalletService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        walletRpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        wallet\n                                                  \n                                                        \n                                                                        WalletService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                        Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/wallet-new.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/components/wallet-new.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password_confirm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallet_name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormControl\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/components/wallet-new.component.ts:15\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\nimport {FormControl} from '@angular/forms';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\n\nimport {nameNotTakenValidator} from 'src/app/modules/wallet/validators';\nimport {WalletService} from 'src/app/modules/wallet/wallet.service';\nimport {Router} from '@angular/router';\n\n@Component({\n\tselector: 'lthn-wallet-new',\n\ttemplateUrl: './wallet-new.component.html'\n})\nexport class WalletNewComponent implements OnInit {\n\twallet_name: FormControl;\n\tpassword: FormControl;\n\tpassword_confirm: FormControl;\n\tconstructor(private walletRpc: WalletRpcService, private wallet: WalletService, private router: Router) {}\n\n\tngOnInit(): void {\n\t\tthis.wallet_name = new FormControl('', [nameNotTakenValidator(this.wallet.walletList())]);\n\t\tthis.password = new FormControl('')\n\t\tthis.password_confirm = new FormControl('')\n\t}\n\n\tcreateWallet() {\n\t\tif (this.password.value === this.password_confirm.value) {\n\n\t\t\t\tthis.walletRpc.createWallet({\n\t\t\t\t\tfilename: this.wallet_name.value,\n\t\t\t\t\tpassword: this.password.value,\n\t\t\t\t\tlanguage: 'English'\n\t\t\t\t}).then((data) => {\n\t\t\t\t\tif(data.status === 200){\n\t\t\t\t\t\tthis.router.navigate(['/', 'wallet', this.wallet_name.value]).catch(console.error)\n\t\t\t\t\t}\n\t\t\t\t})\n\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n    {{ 'app.lthn.wallet.titles.new-wallet' | translate }}\n    \n\n        \n            {{ 'app.lthn.wallet.label.filename' | translate }}\n            \n\t\t\tWallet already exists\n        \n        \n            {{ 'app.lthn.wallet.label.wallet-password' | translate }}\n            \n        \n        \n            {{ 'app.lthn.wallet.label.wallet-password-confirm' | translate }}\n            \n        \n        {{ 'app.lthn.wallet.button.create-wallet' | translate }}\n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{ \\'app.lthn.wallet.titles.new-wallet\\' | translate }}                        {{ \\'app.lthn.wallet.label.filename\\' | translate }}            \t\t\tWallet already exists                            {{ \\'app.lthn.wallet.label.wallet-password\\' | translate }}                                        {{ \\'app.lthn.wallet.label.wallet-password-confirm\\' | translate }}                            {{ \\'app.lthn.wallet.button.create-wallet\\' | translate }}    '\n    var COMPONENTS = [{'name': 'AddComponent', 'selector': 'lthn-wallet-add'},{'name': 'AppComponent', 'selector': 'lthn-app'},{'name': 'BlockchainComponent', 'selector': 'lthn-chain'},{'name': 'BlockchainConfigComponent', 'selector': 'lthn-chain-config'},{'name': 'BlockchainStatsComponent', 'selector': 'lthn-chain-stats'},{'name': 'BlockDetailsComponent', 'selector': 'lthn-chain-block-details'},{'name': 'BlockLedgerComponent', 'selector': 'lthn-chain-ledger'},{'name': 'ConsoleComponent', 'selector': 'lthn-app-console'},{'name': 'DetailsComponent', 'selector': 'lthn-wallet-details'},{'name': 'LoginComponent', 'selector': 'lthn-login'},{'name': 'LogsComponent', 'selector': 'lthn-app-logs'},{'name': 'ModalComponent', 'selector': 'modal'},{'name': 'NoDaemonRunningDialog', 'selector': 'lthn-app-status-no-daemon'},{'name': 'OpenComponent', 'selector': 'lthn-wallet-open'},{'name': 'PostComponent', 'selector': 'lthn-app-post'},{'name': 'ProfileComponent', 'selector': 'lthn-user-profile'},{'name': 'RestoreComponent', 'selector': 'lthn-wallet-restore'},{'name': 'RootComponent', 'selector': 'lthn-root'},{'name': 'SettingsComponent', 'selector': 'lthn-settings'},{'name': 'SettingsComponent', 'selector': 'lthn-app-settings'},{'name': 'SpartaComponent', 'selector': 'lthn-app-sparta'},{'name': 'StatusComponent', 'selector': 'lthn-app-status'},{'name': 'TerminalComponent', 'selector': 'lthn-app-terminal'},{'name': 'TransactionsComponent', 'selector': 'lthn-wallet-transactions'},{'name': 'TransferComponent', 'selector': 'lthn-wallet-transfer'},{'name': 'UserComponent', 'selector': 'lthn-user'},{'name': 'VpnComponent', 'selector': 'lthn-vpn'},{'name': 'WalletComponent', 'selector': 'lthn-app-wallet'},{'name': 'WalletNewComponent', 'selector': 'lthn-wallet-new'}];\n    var DIRECTIVES = [{'name': 'ChartDirective', 'selector': '[lthnChart]'}];\n    var ACTUAL_COMPONENT = {'name': 'WalletNewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/WalletRoutingModule.html":{"url":"modules/WalletRoutingModule.html","title":"module - WalletRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    WalletRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/wallet/wallet-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {WalletComponent} from '@module/wallet/wallet.component';\nimport {WalletNewComponent} from '@module/wallet/components/wallet-new.component';\nimport {RestoreComponent} from '@module/wallet/components/restore.component';\nimport {SettingsComponent} from '@module/wallet/components/settings.component';\nimport {AuthGuard} from '@module/auth/route.guard';\n\nconst routes: Routes = [\n\t{\n\t\tpath: 'wallet',\n\t\tcomponent: WalletComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.title',\n\t\t\theading: 'view.wallets.heading',\n\t\t\tdescription: 'view.wallets.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/new',\n\t\tcomponent: WalletNewComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.new.title',\n\t\t\theading: 'view.wallets.new.heading',\n\t\t\tdescription: 'view.wallets.new.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/backup',\n\t\tcomponent: RestoreComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.backup.title',\n\t\t\theading: 'view.wallets.backup.heading',\n\t\t\tdescription: 'view.wallets.backup.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/restore',\n\t\tcomponent: RestoreComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.restore.title',\n\t\t\theading: 'view.wallets.restore.heading',\n\t\t\tdescription: 'view.wallets.restore.description',\n\t\t\trobots: false\n\t\t}\n\t},\n\t{\n\t\tpath: 'wallet/settings',\n\t\tcomponent: SettingsComponent,\n\t\tcanActivate: [AuthGuard],\n\t\tdata: {\n\t\t\ttitle: 'view.wallets.settings.title',\n\t\t\theading: 'view.wallets.settings.heading',\n\t\t\tdescription: 'view.wallets.settings.description',\n\t\t\trobots: false\n\t\t}\n\t}\n];\n\n@NgModule({\n\tdeclarations: [],\n\timports: [CommonModule, RouterModule.forChild(routes)],\n\tproviders: [AuthGuard],\n\texports: [RouterModule]\n})\nexport class WalletRoutingModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletRpcService.html":{"url":"injectables/WalletRpcService.html","title":"injectable - WalletRpcService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletRpcService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/wallet.rpc.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addAddressBook\n                            \n                            \n                                createWallet\n                            \n                            \n                                deleteAddressBook\n                            \n                            \n                                getAddress\n                            \n                            \n                                getAddressBook\n                            \n                            \n                                getBalance\n                            \n                            \n                                getBulkPayments\n                            \n                            \n                                getHeight\n                            \n                            \n                                getPayments\n                            \n                            \n                                getTransferByTxid\n                            \n                            \n                                getTransfers\n                            \n                            \n                                incomingTransfers\n                            \n                            \n                                makeIntegratedAddress\n                            \n                            \n                                makeUri\n                            \n                            \n                                openWallet\n                            \n                            \n                                other\n                            \n                            \n                                parseUri\n                            \n                            \n                                queryKey\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                splitIntegratedAddress\n                            \n                            \n                                startWalletService\n                            \n                            \n                                stopWallet\n                            \n                            \n                                store\n                            \n                            \n                                sweepAll\n                            \n                            \n                                sweepDust\n                            \n                            \n                                transfer\n                            \n                            \n                                transferSplit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/wallet.rpc.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addAddressBook\n                        \n                    \n                \n            \n            \n                \naddAddressBook(x: AddAddressBook)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:228\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                AddAddressBook\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createWallet\n                        \n                    \n                \n            \n            \n                \ncreateWallet(x: CreateWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:255\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                CreateWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteAddressBook\n                        \n                    \n                \n            \n            \n                \ndeleteAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:237\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddress\n                        \n                    \n                \n            \n            \n                \ngetAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:52\n                \n            \n\n\n            \n                \n                    Get the address of the opened wallet\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAddressBook\n                        \n                    \n                \n            \n            \n                \ngetAddressBook(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:219\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:43\n                \n            \n\n\n            \n                \n                    Get openned wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBulkPayments\n                        \n                    \n                \n            \n            \n                \ngetBulkPayments(x: GetBulkPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:123\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetBulkPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHeight\n                        \n                    \n                \n            \n            \n                \ngetHeight()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:61\n                \n            \n\n\n            \n                \n                    Get chain height\n\n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPayments\n                        \n                    \n                \n            \n            \n                \ngetPayments(x: GetPaymentsIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:114\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetPaymentsIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransferByTxid\n                        \n                    \n                \n            \n            \n                \ngetTransferByTxid(x: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:142\n                \n            \n\n\n            \n                \n                    Get transfer by Transactin ID\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTransfers\n                        \n                    \n                \n            \n            \n                \ngetTransfers(x: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:132\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incomingTransfers\n                        \n                    \n                \n            \n            \n                \nincomingTransfers(x: IncomingTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IncomingTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nmakeIntegratedAddress(x: MakeIntegratedAddressIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:171\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeIntegratedAddressIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        makeUri\n                        \n                    \n                \n            \n            \n                \nmakeUri(x: MakeUriIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:201\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                MakeUriIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(x: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:246\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        other\n                        \n                    \n                \n            \n            \n                \nother(method: string, arg?: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:274\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    method\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    arg\n                                    \n                                                any\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        parseUri\n                        \n                    \n                \n            \n            \n                \nparseUri(x: Uri)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:210\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                Uri\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        queryKey\n                        \n                    \n                \n            \n            \n                \nqueryKey(x: QueryKeyIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:162\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                QueryKeyIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(x: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:264\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        splitIntegratedAddress\n                        \n                    \n                \n            \n            \n                \nsplitIntegratedAddress(x: IntegratedAddress)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:182\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                IntegratedAddress\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWalletService\n                        \n                    \n                \n            \n            \n                \nstartWalletService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:21\n                \n            \n\n\n            \n                \n                    Send Wallet Service start POST req\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stopWallet\n                        \n                    \n                \n            \n            \n                \nstopWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:192\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        store\n                        \n                    \n                \n            \n            \n                \nstore()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepAll\n                        \n                    \n                \n            \n            \n                \nsweepAll(x: SweepAllIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:97\n                \n            \n\n\n            \n                \n                    Send all funds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                SweepAllIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sweepDust\n                        \n                    \n                \n            \n            \n                \nsweepDust()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transfer\n                        \n                    \n                \n            \n            \n                \ntransfer(x: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:71\n                \n            \n\n\n            \n                \n                    Send a transaction\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transferSplit\n                        \n                    \n                \n            \n            \n                \ntransferSplit(x: TransferSplitIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/wallet.rpc.service.ts:80\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    x\n                                    \n                                                TransferSplitIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911') + '/daemon/wallet/json_rpc'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/wallet.rpc.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {request} from '@service/json-rpc';\nimport {AddAddressBook, Address, Balance, CreateWallet, GetAddressBookOut, GetBulkPaymentsIn, GetBulkPaymentsOut, GetPaymentsIn, GetPaymentsOut, GetTransfersIn, GetTransfersOut, Height, IncomingTransfersIn, IncomingTransfersOut, IntegratedAddress, MakeIntegratedAddressIn, MakeUriIn, OpenWallet, QueryKeyIn, QueryKeyOut, SplitIntegratedAddressOut, StoreOut, SweepAllIn, SweepAllOut, Transfer, TransferIn, TransferOut, TransferSplitIn, TransferSplitOut, Uri} from '@plugin/../modules/wallet/interfaces';\nimport {RestoreWallet} from '@module/wallet/interfaces/requests/restoreWallet';\nimport {AppConfigService} from '@service/app-config.service';\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WalletRpcService {\n\tprivate url = AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911') + '/daemon/wallet/json_rpc'\n\n\tconstructor(private http: HttpClient) {}\n\n\t/**\n\t * Send Wallet Service start POST req\n\t *\n\t */\n\tstartWalletService() {\n\t\tconst options = {\n\t\t\theaders: new HttpHeaders({\n\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t}),\n\t\t\tresponseType: 'text' as 'json'\n\t\t};\n\n\t\tconst request = {rpcBindPort: '36963', disableRpcLogin: false};\n\t\treturn this.http\n\t\t\t.post(\n\t\t\t\t`${AppConfigService.config.get('lethean-server', 'api_url', 'http://127.0.0.1:36911')}/daemon/wallet/rpc`,\n\t\t\t\trequest,\n\t\t\t\toptions\n\t\t\t);\n\t}\n\n\t/**\n\t * Get openned wallet balance\n\t *\n\t * @returns {Promise}\n\t */\n\tgetBalance(): Promise {\n\t\treturn request(this.url)('getbalance');\n\t}\n\n\t/**\n\t * Get the address of the opened wallet\n\t *\n\t * @returns {Promise}\n\t */\n\tgetAddress(): Promise {\n\t\treturn request(this.url)('getaddress');\n\t}\n\n\t/**\n\t * Get chain height\n\t *\n\t * @returns {Promise}\n\t */\n\tgetHeight(): Promise {\n\t\treturn request(this.url)('getheight');\n\t}\n\n\t/**\n\t * Send a transaction\n\t *\n\t * @param {TransferIn} x\n\t * @returns {Promise}\n\t */\n\ttransfer(x: TransferIn): Promise {\n\t\treturn request(this.url)('transfer', x);\n\t}\n\n\t/**\n\t *\n\t * @param {TransferSplitIn} x\n\t * @returns {Promise}\n\t */\n\ttransferSplit(x: TransferSplitIn): Promise {\n\t\treturn request(this.url)('transfer_split', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tsweepDust() {\n\t\treturn request(this.url)('sweep_dust');\n\t}\n\n\t/**\n\t * Send all funds\n\t * @param {SweepAllIn} x\n\t * @returns {Promise}\n\t */\n\tsweepAll(x: SweepAllIn): Promise {\n\t\treturn request(this.url)('sweep_all', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise}\n\t */\n\tstore(): Promise {\n\t\treturn request(this.url)('store');\n\t}\n\n\t/**\n\t *\n\t * @param {GetPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetPayments(x: GetPaymentsIn): Promise {\n\t\treturn request(this.url)('get_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetBulkPaymentsIn} x\n\t * @returns {Promise}\n\t */\n\tgetBulkPayments(x: GetBulkPaymentsIn): Promise {\n\t\treturn request(this.url)('get_bulk_payments', x);\n\t}\n\n\t/**\n\t *\n\t * @param {GetTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tgetTransfers(x: GetTransfersIn): Promise {\n\t\treturn request(this.url)('get_transfers', x);\n\t}\n\n\t/**\n\t * Get transfer by Transactin ID\n\t *\n\t * @param {{txid: string}} x\n\t * @returns {Promise}\n\t */\n\tgetTransferByTxid(x: { txid: string }): Promise {\n\t\treturn request(this.url)('get_transfer_by_txid', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IncomingTransfersIn} x\n\t * @returns {Promise}\n\t */\n\tincomingTransfers(\n\t\tx: IncomingTransfersIn\n\t): Promise {\n\t\treturn request(this.url)('incoming_transfers', x);\n\t}\n\n\t/**\n\t *\n\t * @param {QueryKeyIn} x\n\t * @returns {Promise}\n\t */\n\tqueryKey(x: QueryKeyIn): Promise {\n\t\treturn request(this.url)('query_key', x);\n\t}\n\n\t/**\n\t *\n\t * @param {MakeIntegratedAddressIn} x\n\t * @returns {Promise}\n\t */\n\tmakeIntegratedAddress(\n\t\tx: MakeIntegratedAddressIn\n\t): Promise {\n\t\treturn request(this.url)('make_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @param {IntegratedAddress} x\n\t * @returns {Promise}\n\t */\n\tsplitIntegratedAddress(\n\t\tx: IntegratedAddress\n\t): Promise {\n\t\treturn request(this.url)('split_integrated_address', x);\n\t}\n\n\t/**\n\t *\n\t * @returns {Promise>}\n\t */\n\tstopWallet() {\n\t\treturn request(this.url)('stop_wallet');\n\t}\n\n\t/**\n\t *\n\t * @param {MakeUriIn} x\n\t * @returns {Promise}\n\t */\n\tmakeUri(x: MakeUriIn): Promise {\n\t\treturn request(this.url)('make_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {Uri} x\n\t * @returns {Promise}\n\t */\n\tparseUri(x: Uri): Promise {\n\t\treturn request(this.url)('parse_uri', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{entries: number[]}} x\n\t * @returns {Promise}\n\t */\n\tgetAddressBook(x: { entries: number[] }): Promise {\n\t\treturn request(this.url)('get_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {AddAddressBook} x\n\t * @returns {Promise}\n\t */\n\taddAddressBook(x: AddAddressBook): Promise {\n\t\treturn request(this.url)('add_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {{index: number}} x\n\t * @returns {Promise>}\n\t */\n\tdeleteAddressBook(x: { index: number }) {\n\t\treturn request(this.url)('delete_address_book', x);\n\t}\n\n\t/**\n\t *\n\t * @param {OpenWallet} x\n\t * @returns {Promise>}\n\t */\n\topenWallet(x: OpenWallet) {\n\t\treturn request(this.url)('open_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {CreateWallet} x\n\t * @returns {Promise>}\n\t */\n\tcreateWallet(x: CreateWallet) {\n\t\treturn request(this.url)('create_wallet', x);\n\t}\n\n\t/**\n\t *\n\t * @param {RestoreWallet} x\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(x: RestoreWallet) {\n\t\treturn request(this.url)('generate_from_keys', x);\n\t}\n\n\t/**\n\t *\n\t * @param {string} method\n\t * @param arg\n\t * @returns {Promise}\n\t */\n\tother(method: string, arg?: any): Promise {\n\t\treturn request(this.url)(method, arg);\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WalletService.html":{"url":"injectables/WalletService.html","title":"injectable - WalletService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WalletService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/wallet.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                address\n                            \n                            \n                                balance\n                            \n                            \n                                    Public\n                                openedWallet\n                            \n                            \n                                    Private\n                                wallets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeWallet\n                            \n                            \n                                getActiveAddress\n                            \n                            \n                                getBalance\n                            \n                            \n                                getWalletList\n                            \n                            \n                                loadTransfers\n                            \n                            \n                                openWallet\n                            \n                            \n                                restoreWallet\n                            \n                            \n                                sendTransfer\n                            \n                            \n                                startWalletService\n                            \n                            \n                                walletList\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(fs: FileSystemService, rpc: WalletRpcService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/wallet/wallet.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fs\n                                                  \n                                                        \n                                                                        FileSystemService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        rpc\n                                                  \n                                                        \n                                                                        WalletRpcService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeWallet\n                        \n                    \n                \n            \n            \n                \ncloseWallet()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getActiveAddress\n                        \n                    \n                \n            \n            \n                \ngetActiveAddress()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:70\n                \n            \n\n\n            \n                \n                    Get the address of the wallet logged in.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalance\n                        \n                    \n                \n            \n            \n                \ngetBalance()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:63\n                \n            \n\n\n            \n                \n                    Get wallet balance\n\n\n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWalletList\n                        \n                    \n                \n            \n            \n                \ngetWalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:76\n                \n            \n\n\n            \n                \n                    Gets the list of known wallets from the file system\n\n\n                    \n                        Returns :     {}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadTransfers\n                        \n                    \n                \n            \n            \n                \nloadTransfers(opts: GetTransfersIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:101\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                GetTransfersIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openWallet\n                        \n                    \n                \n            \n            \n                \nopenWallet(req: OpenWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:49\n                \n            \n\n\n            \n                \n                    Open a known wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                OpenWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        restoreWallet\n                        \n                    \n                \n            \n            \n                \nrestoreWallet(req: RestoreWallet)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:39\n                \n            \n\n\n            \n                \n                    Restore wallet\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                                RestoreWallet\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendTransfer\n                        \n                    \n                \n            \n            \n                \nsendTransfer(opts: TransferIn)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    opts\n                                    \n                                                TransferIn\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startWalletService\n                        \n                    \n                \n            \n            \n                \nstartWalletService()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:27\n                \n            \n\n\n            \n                \n                    Start wallet service\n\n\n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        walletList\n                        \n                    \n                \n            \n            \n                \nwalletList()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/wallet/wallet.service.ts:94\n                \n            \n\n\n            \n                \n                    Returns the wallets we know about\n\n\n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        balance\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Balance\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        openedWallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/wallet.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {WalletRpcService} from '@service/wallet.rpc.service';\nimport {Balance, GetTransfersIn, OpenWallet, RestoreWallet, TransferIn} from '@module/wallet/interfaces';\nimport {FileSystemService} from '@service/filesystem/file-system.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n/**\n * Orchestrates dealing with wallets, to add a new wallet type, implement this class\n */\nexport class WalletService {\n\tprivate wallets: string[] = [];\n\n\tpublic openedWallet: string = null\n\tbalance: Balance;\n\taddress: string = null;\n\n\n\tconstructor(private fs: FileSystemService, private rpc: WalletRpcService) {}\n\n\t/**\n\t * Start wallet service\n\t *\n\t * @returns {Promise}\n\t */\n\tstartWalletService() {\n\t\treturn this.rpc.startWalletService().subscribe((data) => {\n\t\t\tconsole.log(data)\n\t\t});\n\t}\n\n\t/**\n\t * Restore wallet\n\t *\n\t * @param {RestoreWallet} req\n\t * @returns {Promise>}\n\t */\n\trestoreWallet(req: RestoreWallet) {\n\t\treturn this.rpc.restoreWallet(req);\n\t}\n\n\t/**\n\t * Open a known wallet\n\t *\n\t * @param {OpenWallet} req\n\t * @returns {Promise>}\n\t */\n\topenWallet(req: OpenWallet) {\n\t\treturn this.rpc.openWallet(req).then(async () => {\n\t\t\tthis.openedWallet = req.filename\n\t\t\tawait this.getBalance()\n\t\t\tawait this.getActiveAddress()\n\t\t});\n\t}\n\n\t/**\n\t * Get wallet balance\n\t *\n\t * @param {Balance} req\n\t * @returns {Promise}\n\t */\n\tgetBalance() {\n\t\tthis.rpc.getBalance().then((data) => this.balance = data).catch((err) => console.error(err))\n\t}\n\n\t/**\n\t * Get the address of the wallet logged in.\n\t */\n\tgetActiveAddress(){\n\t\tthis.rpc.getAddress().then((data) => this.address = data.address)\n\t}\n\t/**\n\t * Gets the list of known wallets from the file system\n\t */\n\tgetWalletList() {\n\t\tthis.fs.listFiles('/wallets').then((data) => {\n\t\t\tif (data.length > 0) {\n\t\t\t\tfor (let dat of data) {\n\t\t\t\t\tif (!this.wallets.includes(dat) && !dat.endsWith('.keys') && !dat.endsWith('.txt')) {\n\t\t\t\t\t\tthis.wallets.push(dat);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\treturn this.wallets\n\t}\n\n\t/**\n\t * Returns the wallets we know about\n\t *\n\t * @returns {string[]}\n\t */\n\twalletList() {\n\t\tif (this.wallets.length === 0) {\n\t\t\tthis.getWalletList();\n\t\t}\n\t\treturn this.wallets;\n\t}\n\n\tloadTransfers(opts: GetTransfersIn){\n\t\treturn this.rpc.getTransfers(opts).then((data) => Object.values(data).flat());\n\t}\n\n\tcloseWallet(){\n\t\tthis.address = null\n\t\tthis.balance = null\n\t\treturn this.rpc.stopWallet()\n\t}\n\n\tsendTransfer(opts: TransferIn){\n\t\treturn this.rpc.transfer(opts)\n\t}\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/WalletState.html":{"url":"classes/WalletState.html","title":"class - WalletState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  WalletState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/data/state.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            WalletsState\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                known_wallets\n                            \n                            \n                                loaded_wallet\n                            \n                            \n                                wallets\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        known_wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/state.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded_wallet\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/state.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        wallets\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/wallet/data/state.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut} from '@module/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WalletsState.html":{"url":"interfaces/WalletsState.html","title":"interface - WalletsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  WalletsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/wallet/data/state.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            known_wallets\n                                        \n                                \n                                \n                                        \n                                            loaded_wallet\n                                        \n                                \n                                \n                                        \n                                            wallets\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        known_wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        known_wallets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loaded_wallet\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        loaded_wallet:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        wallets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        wallets:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {PaginatorOptions} from '@data/interface/pagination';\nimport {GetTransfersOut} from '@module/wallet/interfaces';\n\nexport interface WalletsState {\n\tloaded_wallet: string;\n\tknown_wallets: string[];\n\twallets: { [key: string]: Wallet; }\n\n}\n\nexport class WalletState implements WalletsState{\n\tloaded_wallet = ''\n\tknown_wallets = []\n\twallets = {}\n}\n\nexport interface Wallet {\n\t/**\n\t * Wallet height\n\t */\n\theight: number;\n\tname: string;\n\ttransfers: GetTransfersOut[];\n\toptions: {\n\t\tinactivityThreshold: number;\n\t\tpollingInterval: number;\n\t\tpagination: PaginatorOptions\n\t}\n\terror: string | undefined\n}\n\nexport class Wallet implements Wallet {\n\toptions = {\n\t\tinactivityThreshold: 10,\n\t\tpollingInterval: 10000,\n\t\tpagination: new PaginatorOptions\n\t}\n\n\tconstructor(name: string) {\n\t\tthis.name = name\n\t}\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebStorageService.html":{"url":"injectables/WebStorageService.html","title":"injectable - WebStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/web-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                apiUrl\n                            \n                            \n                                    Private\n                                count\n                            \n                            \n                                    Private\n                                items\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                backend\n                            \n                            \n                                clear\n                            \n                            \n                                getItem\n                            \n                            \n                                key\n                            \n                            \n                                removeItem\n                            \n                            \n                                setItem\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    length\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        backend\n                        \n                    \n                \n            \n            \n                \n                    \n                    backend(cmd: string, payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:63\n                \n            \n\n\n            \n                \n                    Performs call to backend object store\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    cmd\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getItem\n                        \n                    \n                \n            \n            \n                \ngetItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n            \n                \nkey(key: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     string | null\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeItem\n                        \n                    \n                \n            \n            \n                \nremoveItem(key)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setItem\n                        \n                    \n                \n            \n            \n                \nsetItem(key: string, value: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/web-storage.service.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    value\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://127.0.0.1:36911/object'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        count\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        items\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/services/web-storage.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        length\n                    \n                \n\n                \n                    \n                        getlength()\n                    \n                \n                            \n                                \n                                    Defined in src/app/services/web-storage.service.ts:12\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebStorageService implements Storage {\n\n\tprivate items = {};\n\tprivate count = 0\n\tprivate apiUrl = 'http://127.0.0.1:36911/object';\n\n\tget length() {\n\t\treturn this.count;\n\t}\n\n\tkey(key:number): string | null {\n\t\treturn this.items[key]\n\t}\n\n\tgetItem(key): string | null {\n\t\ttry {\n\t\t\tconst ret = this.backend('get', {object: key});\n\t\t\tif(ret){\n\t\t\t\treturn JSON.parse(ret)\n\t\t\t}\n\t\t}catch (e){\n\t\t\tconsole.log('getItem Error')\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetItem(key: string, value: string) {\n\t\ttry {\n\t\t\tthis.count++\n\t\t\treturn this.backend('set', {object: key, data: value});\n\t\t}catch (e){\n\t\t\tconsole.log('setItem Error')\n\t\t}\n\t\treturn null;\n\n\t}\n\n\tremoveItem(key) {\n\t\tdelete this.items[key]\n\t\tthis.count--\n\t\tthis.backend('remove', {object: key});\n\t}\n\n\tclear() {\n\t\tthis.items ={}\n\t\tthis.count = 0\n\t\tthis.backend('clear', {});\n\t}\n\n\t/**\n\t * Performs call to backend object store\n\t *\n\t * @param {string} cmd\n\t * @param payload\n\t * @returns {string | null}\n\t * @private\n\t */\n\tprivate backend(cmd:string, payload: any):string|null {\n\t\tconst axios = require('axios').default;\n\t\ttry {\n\t\t\tconst ret = axios.post(`${this.apiUrl}/${cmd}`, {group: 'lthn-app', ...payload}).then((data) => data.data)\n\t\t\treturn ret.data;\n\t\t}catch (NetworkError) {\n\t\t\tconsole.log('HTTP Error')\n\t\t}\n\t\treturn null\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WebsocketService.html":{"url":"injectables/WebsocketService.html","title":"injectable - WebsocketService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  WebsocketService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/websocket.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                socket$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeConnection\n                            \n                            \n                                    Public\n                                connect\n                            \n                            \n                                    Public\n                                dataUpdates$\n                            \n                            \n                                sendMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/websocket.service.ts:11\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeConnection\n                        \n                    \n                \n            \n            \n                \ncloseConnection()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        connect\n                        \n                    \n                \n            \n            \n                \n                    \n                    connect()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     WebSocketSubject\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        dataUpdates$\n                        \n                    \n                \n            \n            \n                \n                    \n                    dataUpdates$()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sendMessage\n                        \n                    \n                \n            \n            \n                \nsendMessage(msg: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/websocket.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    msg\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        socket$\n                        \n                    \n                \n            \n                \n                    \n                        Type :     WebSocketSubject\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/websocket.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {webSocket, WebSocketSubject} from 'rxjs/webSocket';\n\nexport const WS_ENDPOINT = 'ws://127.0.0.1:36909';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class WebsocketService {\n\n\tprivate socket$: WebSocketSubject;\n\n\tconstructor() {}\n\n\tpublic connect(): WebSocketSubject {\n\t\tif (!this.socket$ || this.socket$.closed) {\n\t\t\tthis.socket$ = webSocket(WS_ENDPOINT);\n\t\t}\n\t\treturn this.socket$;\n\t}\n\n\tpublic dataUpdates$() {\n\t\treturn this.connect().asObservable();\n\t}\n\n\tcloseConnection() {\n\t\tthis.connect().complete();\n\t}\n\n\tsendMessage(msg: string) {\n\t\tthis.socket$.next(msg);\n\t}\n\n\n\t/**\n\timport { webSocket } from \"rxjs/webSocket\";\nconst subject = webSocket(\"ws://127.0.0.1:8081\");\n\nsubject.subscribe(\n   msg => console.log('message received: ' + msg), // Called whenever there is a message from the server.\n   err => console.log(err), // Called if at any point WebSocket API signals some kind of error.\n   () => console.log('complete') // Called when connection is closed (for whatever reason).\n );\n\t */\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : v12-lts\n        \n            @angular/cdk : v12-lts\n        \n            @angular/common : v12-lts\n        \n            @angular/compiler : v12-lts\n        \n            @angular/core : v12-lts\n        \n            @angular/flex-layout : 12.0.0-beta.35\n        \n            @angular/forms : v12-lts\n        \n            @angular/material : v12-lts\n        \n            @angular/platform-browser : v12-lts\n        \n            @angular/router : v12-lts\n        \n            @auth0/angular-jwt : ^5.0.2\n        \n            @kurkle/color : ^0.1.9\n        \n            @ngrx/component : ^12.5.1\n        \n            @ngrx/component-store : ^12.5.1\n        \n            @ngrx/data : ^12.5.1\n        \n            @ngrx/effects : ^12.5.1\n        \n            @ngrx/entity : ^12.5.1\n        \n            @ngrx/router-store : ^12.5.1\n        \n            @ngrx/store : ^12.5.1\n        \n            @ngx-translate/core : ^14.0.0\n        \n            @ngx-translate/http-loader : ^7.0.0\n        \n            @swimlane/ngx-datatable : ^20.0.0\n        \n            @swimlane/ngx-ui : ^39.2.0\n        \n            @xmldom/xmldom : ^0.8.0\n        \n            axios : ^0.24.0\n        \n            big.js : ^6.1.1\n        \n            chart.js : ^3.6.0\n        \n            chartjs-adapter-moment : ^1.0.0\n        \n            codemirror : 5.58.2\n        \n            config-ini-parser : ^1.5.9\n        \n            crypto-js : ^4.1.1\n        \n            jest : ^27.5.1\n        \n            jest-preset-angular : ^11.1.1\n        \n            jszmq : ^0.1.2\n        \n            localstorage-polyfill : ^1.0.1\n        \n            moment : ^2.29.2\n        \n            moment-timezone : ^0.5.33\n        \n            mousetrap : ^1.6.5\n        \n            ng-in-viewport : ^6.1.5\n        \n            ng-terminal : ^5.0.0-beta.2\n        \n            ngrx-store-localstorage : ^12.0.1\n        \n            ngx-moment : ^6.0.2\n        \n            normalize.css : ^8.0.0\n        \n            openpgp : ^5.0.0\n        \n            prismjs : ^1.25.0\n        \n            random-js : ^2.1.0\n        \n            rxjs : ~6.5.5\n        \n            tslib : ^2.3.0\n        \n            url-polyfill : ^1.1.12\n        \n            web-animations-js : ^2.3.2\n        \n            zone.js : ~0.11.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoginMethods   (src/.../user.options.ts)\n                        \n                        \n                            PluginStatus   (src/.../state.ts)\n                        \n                        \n                            RxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/user/data/user/interfaces/user.options.ts\n    \n        \n            \n                \n                    \n                        \n                        LoginMethods\n                    \n                \n                        \n                            \n                                 PASSWORD\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 SSH_PEM\n                            \n                        \n            \n        \n\n    src/app/data/plugins/state.ts\n    \n        \n            \n                \n                    \n                        \n                        PluginStatus\n                    \n                \n                        \n                            \n                                 DISABLED\n                            \n                        \n                        \n                            \n                                 ACTIVE\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n                        \n                            \n                                 TIMED\n                            \n                        \n                        \n                            \n                                Value : 2\n                            \n                        \n                        \n                            \n                                 OUTDATED\n                            \n                        \n                        \n                            \n                                Value : 3\n                            \n                        \n            \n        \n\n    src/app/data/debug.rxjs.ts\n    \n        \n            \n                \n                    \n                        \n                        RxJsLoggingLevel\n                    \n                \n                    \n                        \n                            Observable logging levels\n\n                        \n                    \n                        \n                            \n                                 TRACE\n                            \n                        \n                        \n                            \n                                 DEBUG\n                            \n                        \n                        \n                            \n                                 INFO\n                            \n                        \n                        \n                            \n                                 ERROR\n                            \n                        \n                        \n                            \n                                 NONE\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            HttpLoaderFactory   (src/.../app.module.ts)\n                        \n                        \n                            localStorageSyncReducer   (src/.../index.ts)\n                        \n                        \n                            nameNotTakenValidator   (src/.../validators.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../settings.reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            reducer   (src/.../reducer.ts)\n                        \n                        \n                            setRxJsLoggingLevel   (src/.../debug.rxjs.ts)\n                        \n                        \n                            tokenGetter   (src/.../app.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/app/app.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        HttpLoaderFactory\n                        \n                    \n                \n            \n            \n                \nHttpLoaderFactory(http: HttpClient)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    http\n                                    \n                                                HttpClient\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tokenGetter\n                        \n                    \n                \n            \n            \n                \ntokenGetter()\n                \n            \n\n\n\n\n        \n    \n    src/app/data/reducers/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        localStorageSyncReducer\n                        \n                    \n                \n            \n            \n                \nlocalStorageSyncReducer(reducer: ActionReducer)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reducer\n                                    \n                                            ActionReducer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ActionReducer\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/modules/wallet/validators.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        nameNotTakenValidator\n                        \n                    \n                \n            \n            \n                \nnameNotTakenValidator(nameList)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    nameList\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         ValidatorFn\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/app/data/logs/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/plugins/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chain/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/chart/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/settings/data/settings.reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/wallet/data/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/profile/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state: ProfileState, action: Action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n                                    \n                                                ProfileState\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n                                    \n                                            Action\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/modules/user/data/user/reducer.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reducer\n                        \n                    \n                \n            \n            \n                \nreducer(state, action)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    state\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    action\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/app/data/debug.rxjs.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setRxJsLoggingLevel\n                        \n                    \n                \n            \n            \n                \nsetRxJsLoggingLevel(level: RxJsLoggingLevel)\n                \n            \n\n\n\n\n            \n                \n                    Adjust the logging level during runtime\nsetRxJsLoggingLevel(4) = off\nsetRxJsLoggingLevel(0) - tmi\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    level\n                                    \n                                                RxJsLoggingLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nPWA Desktop Interface\n\nHow Wails Interacts with WebView2\nGoLang to Browser Integration\nCLI Reference\nCLI Remote Templates\nCLI: Install Check\nCLI: Build\nCLI: Dev\nCLI: Update\nWindow Options\nMenu Options\nProject Config\n\nAbout Wails\n\nAbout Wails.io\nWails GitHub\nSponsor WailsDevelopment Build\n\n\nnpm install --legacy-peer-deps\nnpm run dev:setup\nnpm run devProduction Build\nnpm install --legacy-peer-deps\nnpm run buildDocumentation\nnpm install --legacy-peer-deps\nnpm run doc\nnpm run doc:serve\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BlockchainRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ChartModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConsoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LogsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ModalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PipesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RootRoutingModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SettingsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpartaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SpartaRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        StatusModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TranslateModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        VpnRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        WalletRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppRoutingModule\n\n\n\ncluster_AppRoutingModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_BlockchainModule\n\n\n\ncluster_BlockchainModule_declarations\n\n\n\ncluster_BlockchainModule_imports\n\n\n\ncluster_BlockchainModule_exports\n\n\n\ncluster_ChartModule\n\n\n\ncluster_ChartModule_declarations\n\n\n\ncluster_ChartModule_ChartDirective_providers\n\n\n\ncluster_ChartModule_exports\n\n\n\ncluster_ConsoleModule\n\n\n\ncluster_ConsoleModule_declarations\n\n\n\ncluster_ConsoleModule_exports\n\n\n\ncluster_LogsModule\n\n\n\ncluster_LogsModule_declarations\n\n\n\ncluster_LogsModule_exports\n\n\n\ncluster_ModalModule\n\n\n\ncluster_ModalModule_declarations\n\n\n\ncluster_ModalModule_exports\n\n\n\ncluster_PipesModule\n\n\n\ncluster_PipesModule_declarations\n\n\n\ncluster_PipesModule_exports\n\n\n\ncluster_PostModule\n\n\n\ncluster_PostModule_declarations\n\n\n\ncluster_PostModule_exports\n\n\n\ncluster_RootModule\n\n\n\ncluster_RootModule_declarations\n\n\n\ncluster_RootModule_imports\n\n\n\ncluster_SettingsModule\n\n\n\ncluster_SettingsModule_declarations\n\n\n\ncluster_SpartaModule\n\n\n\ncluster_SpartaModule_declarations\n\n\n\ncluster_StatusModule\n\n\n\ncluster_StatusModule_declarations\n\n\n\ncluster_StatusModule_exports\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_VpnModule\n\n\n\ncluster_VpnModule_declarations\n\n\n\ncluster_WalletModule\n\n\n\ncluster_WalletModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nConsoleModule\n\nConsoleModule\n\nAppModule -->\n\nConsoleModule->AppModule\n\n\n\n\n\nConsoleComponent \n\nConsoleComponent \n\nConsoleComponent  -->\n\nConsoleModule->ConsoleComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nAppModule -->\n\nDataModule->AppModule\n\n\n\n\n\nStatusModule\n\nStatusModule\n\nAppModule -->\n\nStatusModule->AppModule\n\n\n\n\n\nStatusComponent \n\nStatusComponent \n\nStatusComponent  -->\n\nStatusModule->StatusComponent \n\n\n\n\n\nTranslateModule\n\nTranslateModule\n\nAppModule -->\n\nTranslateModule->AppModule\n\n\n\nAuthModule -->\n\nTranslateModule->AuthModule\n\n\n\n\n\nBlockchainModule\n\nBlockchainModule\n\nBlockchainModule -->\n\nTranslateModule->BlockchainModule\n\n\n\n\n\nRootModule\n\nRootModule\n\nRootModule -->\n\nTranslateModule->RootModule\n\n\n\n\n\nWalletModule\n\nWalletModule\n\nWalletModule -->\n\nTranslateModule->WalletModule\n\n\n\n\n\nHeaderInterceptor\n\nHeaderInterceptor\n\nAppModule -->\n\nHeaderInterceptor->AppModule\n\n\n\n\n\nBlockchainRoutingModule\n\nBlockchainRoutingModule\n\nAppRoutingModule -->\n\nBlockchainRoutingModule->AppRoutingModule\n\n\n\n\n\nRootRoutingModule\n\nRootRoutingModule\n\nAppRoutingModule -->\n\nRootRoutingModule->AppRoutingModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nAppRoutingModule -->\n\nUserRoutingModule->AppRoutingModule\n\n\n\n\n\nWalletRoutingModule\n\nWalletRoutingModule\n\nAppRoutingModule -->\n\nWalletRoutingModule->AppRoutingModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nBlockDetailsComponent\n\nBlockDetailsComponent\n\nBlockchainModule -->\n\nBlockDetailsComponent->BlockchainModule\n\n\n\n\n\nBlockLedgerComponent\n\nBlockLedgerComponent\n\nBlockchainModule -->\n\nBlockLedgerComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent\n\nBlockchainComponent\n\nBlockchainModule -->\n\nBlockchainComponent->BlockchainModule\n\n\n\n\n\nBlockchainConfigComponent\n\nBlockchainConfigComponent\n\nBlockchainModule -->\n\nBlockchainConfigComponent->BlockchainModule\n\n\n\n\n\nBlockchainStatsComponent\n\nBlockchainStatsComponent\n\nBlockchainModule -->\n\nBlockchainStatsComponent->BlockchainModule\n\n\n\n\n\nBlockchainComponent \n\nBlockchainComponent \n\nBlockchainComponent  -->\n\nBlockchainModule->BlockchainComponent \n\n\n\nRootModule -->\n\nBlockchainModule->RootModule\n\n\n\n\n\nChartModule\n\nChartModule\n\nBlockchainModule -->\n\nChartModule->BlockchainModule\n\n\n\n\n\nChartDirective \n\nChartDirective \n\nChartDirective  -->\n\nChartModule->ChartDirective \n\n\n\n\n\nChartDirective\n\nChartDirective\n\nChartModule -->\n\nChartDirective->ChartModule\n\n\n\n\n\nChartService\n\nChartService\n\nChartModule -->\n\nChartService->ChartModule\n\n\n\nChartDirective -->\n\nChartService->ChartDirective\n\n\n\n\n\nConsoleComponent\n\nConsoleComponent\n\nConsoleModule -->\n\nConsoleComponent->ConsoleModule\n\n\n\n\n\nTerminalComponent\n\nTerminalComponent\n\nConsoleModule -->\n\nTerminalComponent->ConsoleModule\n\n\n\n\n\nLogsComponent\n\nLogsComponent\n\n\n\nLogsModule\n\nLogsModule\n\nLogsModule -->\n\nLogsComponent->LogsModule\n\n\n\n\n\nLogsComponent \n\nLogsComponent \n\nLogsComponent  -->\n\nLogsModule->LogsComponent \n\n\n\n\n\nSettingsModule\n\nSettingsModule\n\nSettingsModule -->\n\nLogsModule->SettingsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nModalModule\n\nModalModule\n\nModalModule -->\n\nModalComponent->ModalModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nModalModule->ModalComponent \n\n\n\n\n\nEffortPipe\n\nEffortPipe\n\n\n\nPipesModule\n\nPipesModule\n\nPipesModule -->\n\nEffortPipe->PipesModule\n\n\n\n\n\nEscapeHtmlPipe\n\nEscapeHtmlPipe\n\nPipesModule -->\n\nEscapeHtmlPipe->PipesModule\n\n\n\n\n\nFromCoinPipe\n\nFromCoinPipe\n\nPipesModule -->\n\nFromCoinPipe->PipesModule\n\n\n\n\n\nHashLinkPipe\n\nHashLinkPipe\n\nPipesModule -->\n\nHashLinkPipe->PipesModule\n\n\n\n\n\nHashRatePipe\n\nHashRatePipe\n\nPipesModule -->\n\nHashRatePipe->PipesModule\n\n\n\n\n\nRemoveTrailingZerosPipe\n\nRemoveTrailingZerosPipe\n\nPipesModule -->\n\nRemoveTrailingZerosPipe->PipesModule\n\n\n\n\n\nShruggiePipe\n\nShruggiePipe\n\nPipesModule -->\n\nShruggiePipe->PipesModule\n\n\n\n\n\nTimeAgoPipe\n\nTimeAgoPipe\n\nPipesModule -->\n\nTimeAgoPipe->PipesModule\n\n\n\n\n\nToCoinPipe\n\nToCoinPipe\n\nPipesModule -->\n\nToCoinPipe->PipesModule\n\n\n\n\n\nEffortPipe \n\nEffortPipe \n\nEffortPipe  -->\n\nPipesModule->EffortPipe \n\n\n\n\n\nEscapeHtmlPipe \n\nEscapeHtmlPipe \n\nEscapeHtmlPipe  -->\n\nPipesModule->EscapeHtmlPipe \n\n\n\n\n\nFromCoinPipe \n\nFromCoinPipe \n\nFromCoinPipe  -->\n\nPipesModule->FromCoinPipe \n\n\n\n\n\nHashLinkPipe \n\nHashLinkPipe \n\nHashLinkPipe  -->\n\nPipesModule->HashLinkPipe \n\n\n\n\n\nHashRatePipe \n\nHashRatePipe \n\nHashRatePipe  -->\n\nPipesModule->HashRatePipe \n\n\n\n\n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe \n\nRemoveTrailingZerosPipe  -->\n\nPipesModule->RemoveTrailingZerosPipe \n\n\n\n\n\nShruggiePipe \n\nShruggiePipe \n\nShruggiePipe  -->\n\nPipesModule->ShruggiePipe \n\n\n\n\n\nTimeAgoPipe \n\nTimeAgoPipe \n\nTimeAgoPipe  -->\n\nPipesModule->TimeAgoPipe \n\n\n\n\n\nToCoinPipe \n\nToCoinPipe \n\nToCoinPipe  -->\n\nPipesModule->ToCoinPipe \n\n\n\n\n\nPostComponent\n\nPostComponent\n\n\n\nPostModule\n\nPostModule\n\nPostModule -->\n\nPostComponent->PostModule\n\n\n\n\n\nPostComponent \n\nPostComponent \n\nPostComponent  -->\n\nPostModule->PostComponent \n\n\n\nRootModule -->\n\nPostModule->RootModule\n\n\n\n\n\nRootComponent\n\nRootComponent\n\nRootModule -->\n\nRootComponent->RootModule\n\n\n\nRootRoutingModule -->\n\nRootModule->RootRoutingModule\n\n\n\n\n\nSpartaModule\n\nSpartaModule\n\nRootModule -->\n\nSpartaModule->RootModule\n\n\n\nRootModule -->\n\nWalletModule->RootModule\n\n\n\n\n\nSettingsComponent\n\nSettingsComponent\n\nWalletModule -->\n\nSettingsComponent->WalletModule\n\n\n\nSettingsModule -->\n\nSettingsComponent->SettingsModule\n\n\n\n\n\nSpartaComponent\n\nSpartaComponent\n\nSpartaModule -->\n\nSpartaComponent->SpartaModule\n\n\n\n\n\nNoDaemonRunningDialog\n\nNoDaemonRunningDialog\n\nStatusModule -->\n\nNoDaemonRunningDialog->StatusModule\n\n\n\n\n\nStatusComponent\n\nStatusComponent\n\nStatusModule -->\n\nStatusComponent->StatusModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nVpnComponent\n\nVpnComponent\n\n\n\nVpnModule\n\nVpnModule\n\nVpnModule -->\n\nVpnComponent->VpnModule\n\n\n\n\n\nAddComponent\n\nAddComponent\n\nWalletModule -->\n\nAddComponent->WalletModule\n\n\n\n\n\nDetailsComponent\n\nDetailsComponent\n\nWalletModule -->\n\nDetailsComponent->WalletModule\n\n\n\n\n\nOpenComponent\n\nOpenComponent\n\nWalletModule -->\n\nOpenComponent->WalletModule\n\n\n\n\n\nRestoreComponent\n\nRestoreComponent\n\nWalletModule -->\n\nRestoreComponent->WalletModule\n\n\n\n\n\nTransactionsComponent\n\nTransactionsComponent\n\nWalletModule -->\n\nTransactionsComponent->WalletModule\n\n\n\n\n\nTransferComponent\n\nTransferComponent\n\nWalletModule -->\n\nTransferComponent->WalletModule\n\n\n\n\n\nWalletComponent\n\nWalletComponent\n\nWalletModule -->\n\nWalletComponent->WalletModule\n\n\n\n\n\nWalletNewComponent\n\nWalletNewComponent\n\nWalletModule -->\n\nWalletNewComponent->WalletModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        27 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    29 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Directive\n                \n            \n        \n        \n            \n                \n                    \n                    19 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    9 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    3 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    57 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.2\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CompilerOptions   (test-config.helper.ts)\n                        \n                        \n                            ConfigureFn   (test-config.helper.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    test-config.helper.ts\n    \n    \n        \n            \n                \n                    \n                    CompilerOptions\n                \n            \n            \n                \n                        Partial\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    ConfigureFn\n                \n            \n            \n                \n                            function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
